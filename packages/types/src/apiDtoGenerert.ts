// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};

export type EksternArbeidsforholdDto = {
    arbeidsgiverId: string;
    arbeidsgiverIdType: string;
    arbeidsgiverNavn: string;
    stillingsprosent: number;
    from: string;
    to?: string;
};

export type MorArbeidRequest = {
    annenPartFødselsnummer: string;
    barnFødselsnummer?: string;
    familiehendelse?: string;
    perioder?: PeriodeRequest[];
};

export type PeriodeMedAktivitetskravType = 'UTTAK' | 'UTSETTELSE';

export type PeriodeRequest = {
    fom: string;
    tom: string;
    periodeType?: PeriodeMedAktivitetskravType;
};

export type DokumentDto = {
    tittel?: string;
    type: JournalpostType;
    saksnummer?: string;
    journalpostId?: string;
    dokumentId?: string;
    mottatt: string;
};

export type JournalpostType = 'INNGÅENDE_DOKUMENT' | 'UTGÅENDE_DOKUMENT';

export type ProsessTaskDataDto = {
    id: number;
    taskType: string;
    nesteKjøringEtter?: string;
    gruppe: string;
    sekvens: string;
    status: string;
    sistKjørt?: string;
    sisteFeilKode?: string;
    taskParametre?: {
        [key: string]: string;
    };
};

export type ProsessTaskOpprettInputDto = {
    taskType: string;
    taskParametre: {
        [key: string]: string;
    };
};

export type FeiletProsessTaskDataDto = {
    id: number;
    taskType: string;
    nesteKjøringEtter?: string;
    gruppe: string;
    sekvens: string;
    status: string;
    sistKjørt?: string;
    sisteFeilKode?: string;
    taskParametre?: {
        [key: string]: string;
    };
    sisteKjøringServerProsess?: string;
    sisteFeilTekst?: string;
    feiledeForsøk?: number;
};

export type IkkeFerdigProsessTaskStatusEnum = 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT' | 'VETO' | 'KLAR';

/**
 * Resultatet av asynkron-restart av en eksisterende prosesstask
 */
export type ProsessTaskRestartResultatDto = {
    prosessTaskId: number;
    /**
     * Nåværende status (KLAR)
     */
    prosessTaskStatus: string;
    /**
     * Kjøretidspunkt for restart av prosessen
     */
    nesteKjoeretidspunkt: string;
};

export type FeiletProsessTaskStatusEnum = 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT';

/**
 * Resultatet av asynkron-restart av feilede prosesstasks
 */
export type ProsessTaskRetryAllResultatDto = {
    /**
     * Prosesstasks som restartes
     */
    prosessTaskIds?: number[];
};

export type SokeFilterDto = {
    tekst: string;
    sisteKjoeretidspunktFraOgMed?: string;
    sisteKjoeretidspunktTilOgMed?: string;
};

export type BortfaltNaturalytelse = {
    fomDato?: string;
    tomDato?: string;
    beløpPerMnd?: number;
    type?: NaturalytelseType;
};

export type FpOversiktInntektsmeldingDto = {
    versjon?: number;
    erAktiv?: boolean;
    stillingsprosent?: number;
    inntektPrMnd?: number;
    refusjonPrMnd?: number;
    arbeidsgiverNavn?: string;
    arbeidsgiverIdent?: string;
    journalpostId?: string;
    mottattTidspunkt?: string;
    startDatoPermisjon?: string;
    bortfalteNaturalytelser?: BortfaltNaturalytelse[];
    refusjonsperioder?: Refusjon[];
};

export type NaturalytelseType =
    | 'ELEKTRISK_KOMMUNIKASJON'
    | 'AKSJER_GRUNNFONDSBEVIS_TIL_UNDERKURS'
    | 'LOSJI'
    | 'KOST_DØGN'
    | 'BESØKSREISER_HJEMMET_ANNET'
    | 'KOSTBESPARELSE_I_HJEMMET'
    | 'RENTEFORDEL_LÅN'
    | 'BIL'
    | 'KOST_DAGER'
    | 'BOLIG'
    | 'SKATTEPLIKTIG_DEL_FORSIKRINGER'
    | 'FRI_TRANSPORT'
    | 'OPSJONER'
    | 'TILSKUDD_BARNEHAGEPLASS'
    | 'ANNET'
    | 'BEDRIFTSBARNEHAGEPLASS'
    | 'YRKEBIL_TJENESTLIGBEHOV_KILOMETER'
    | 'YRKEBIL_TJENESTLIGBEHOV_LISTEPRIS'
    | 'INNBETALING_TIL_UTENLANDSK_PENSJONSORDNING';

export type Refusjon = {
    refusjonsbeløpMnd?: number;
    fomDato?: string;
};

export type DokumentType =
    | 'I000001'
    | 'I000002'
    | 'I000003'
    | 'I000004'
    | 'I000005'
    | 'I000006'
    | 'I000050'
    | 'I000027'
    | 'I500027'
    | 'I000114'
    | 'I000119'
    | 'I000067'
    | 'I000007'
    | 'I000023'
    | 'I000026'
    | 'I000032'
    | 'I000036'
    | 'I000037'
    | 'I000038'
    | 'I000039'
    | 'I000041'
    | 'I000042'
    | 'I000043'
    | 'I000044'
    | 'I000045'
    | 'I000047'
    | 'I000049'
    | 'I000051'
    | 'I000060'
    | 'I000061'
    | 'I000062'
    | 'I000063'
    | 'I000064'
    | 'I000065'
    | 'I000066'
    | 'I000107'
    | 'I000108'
    | 'I000109'
    | 'I000110'
    | 'I000111'
    | 'I000112'
    | 'I000116'
    | 'I000117'
    | 'I000118'
    | 'I000120'
    | 'I000121'
    | 'I000122'
    | 'I000123'
    | 'I000124'
    | 'I000130'
    | 'I000131'
    | 'I000132'
    | 'I000133'
    | 'I000140'
    | 'I000141'
    | 'I000143'
    | 'I000144'
    | 'I000145'
    | 'I000146'
    | 'I500001'
    | 'I500002'
    | 'I500003'
    | 'I500004'
    | 'I500005'
    | 'I500006'
    | 'I500050';

export type TilbakekrevingUttalelseOppgave = {
    saksnummer: string;
    opprettet: string;
    frist?: string;
};

export type AnnenForelderDto = {
    fnr: string;
    navn: Navn;
    fødselsdato?: string;
};

export type Bankkonto = {
    kontonummer?: string;
    banknavn?: string;
};

export type BarnDto = {
    fnr: string;
    fødselsdato: string;
    dødsdato?: string;
    navn: Navn;
    kjønn: Kjønn;
    annenPart?: AnnenForelderDto;
};

export type Kjønn = 'M' | 'K' | 'U';

export type Målform = 'NB' | 'NN' | 'EN' | 'E';

export type Navn = {
    fornavn?: string;
    mellomnavn?: string;
    etternavn?: string;
};

export type PersonDto = {
    aktørid?: string;
    fnr: string;
    fødselsdato: string;
    navn: Navn;
    kjønn: Kjønn;
    målform?: Målform;
    bankkonto?: Bankkonto;
    sivilstand?: Sivilstand;
    barn: BarnDto[];
};

export type Sivilstand = {
    type?: SivilstandType;
};

export type SivilstandType =
    | 'UOPPGITT'
    | 'UGIFT'
    | 'GIFT'
    | 'ENKE_ELLER_ENKEMANN'
    | 'SKILT'
    | 'SEPARERT'
    | 'REGISTRERT_PARTNER'
    | 'SEPARERT_PARTNER'
    | 'SKILT_PARTNER'
    | 'GJENLEVENDE_PARTNER';

export type PersonMedArbeidsforholdDto = {
    person: PersonDto;
    arbeidsforhold: EksternArbeidsforholdDto[];
};

export type AnnenPartRequest = {
    annenPartFødselsnummer: string;
    barnFødselsnummer?: string;
    familiehendelse?: string;
};

export type Aktivitet = {
    type: AktivitetType;
    arbeidsgiver?: Arbeidsgiver;
    arbeidsgiverNavn?: string;
};

export type AktivitetType = 'FRILANS' | 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'ANNET';

export type AnnenPartSak = {
    perioder: UttakPeriode[];
    termindato?: string;
    dekningsgrad: DekningsgradSak;
    antallBarn: number;
};

export type Arbeidsgiver = {
    id?: string;
    type?: ArbeidsgiverType;
};

export type ArbeidsgiverType = 'PRIVAT' | 'ORGANISASJON';

export type BrukerRolleSak = 'MOR' | 'FAR_MEDMOR';

export type DekningsgradSak = 'ÅTTI' | 'HUNDRE';

export type Gradering = {
    arbeidstidprosent: number;
    aktivitet: Aktivitet;
};

export type KontoType = 'MØDREKVOTE' | 'FEDREKVOTE' | 'FELLESPERIODE' | 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL';

export type MorsAktivitet =
    | 'ARBEID'
    | 'UTDANNING'
    | 'KVALPROG'
    | 'INTROPROG'
    | 'TRENGER_HJELP'
    | 'INNLAGT'
    | 'ARBEID_OG_UTDANNING'
    | 'UFØRE'
    | 'IKKE_OPPGITT';

export type UttakOppholdÅrsak =
    | 'MØDREKVOTE_ANNEN_FORELDER'
    | 'FEDREKVOTE_ANNEN_FORELDER'
    | 'FELLESPERIODE_ANNEN_FORELDER'
    | 'FORELDREPENGER_ANNEN_FORELDER';

export type UttakOverføringÅrsak =
    | 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER'
    | 'SYKDOM_ANNEN_FORELDER'
    | 'IKKE_RETT_ANNEN_FORELDER'
    | 'ALENEOMSORG';

export type UttakPeriode = {
    fom: string;
    tom: string;
    kontoType?: KontoType;
    resultat?: UttakPeriodeResultat;
    utsettelseÅrsak?: UttakUtsettelseÅrsak;
    oppholdÅrsak?: UttakOppholdÅrsak;
    overføringÅrsak?: UttakOverføringÅrsak;
    gradering?: Gradering;
    morsAktivitet?: MorsAktivitet;
    samtidigUttak?: number;
    flerbarnsdager?: boolean;
    forelder?: BrukerRolleSak;
};

export type UttakPeriodeResultat = {
    innvilget?: boolean;
    trekkerMinsterett?: boolean;
    trekkerDager?: boolean;
    årsak?: UttakPeriodeResultatÅrsak;
};

export type UttakPeriodeResultatÅrsak =
    | 'ANNET'
    | 'AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER'
    | 'AVSLAG_FRATREKK_PLEIEPENGER'
    | 'AVSLAG_UTSETTELSE_TILBAKE_I_TID'
    | 'INNVILGET_UTTAK_AVSLÅTT_GRADERING_TILBAKE_I_TID';

export type UttakUtsettelseÅrsak =
    | 'HV_ØVELSE'
    | 'ARBEID'
    | 'LOVBESTEMT_FERIE'
    | 'SØKER_SYKDOM'
    | 'SØKER_INNLAGT'
    | 'BARN_INNLAGT'
    | 'NAV_TILTAK'
    | 'FRI';

export type AvslagÅrsak =
    | 'ARBEIDSGIVER_KAN_TILRETTELEGGE'
    | 'SØKER_ER_INNVILGET_SYKEPENGER'
    | 'MANGLENDE_DOKUMENTASJON'
    | 'ANNET';

export type AvslutningÅrsak =
    | 'NORMAL'
    | 'TILBAKE_I_HEL_STILLING'
    | 'AVSLAG_OVERGANG_FORELDREPENGER'
    | 'AVSLAG_FØDSEL'
    | 'AVSLAG_TIDSPERIODE_FØR_TERMIN'
    | 'AVSLAG_ANNET'
    | 'AVSLAG_INNGANGSVILKÅR';

export type BehandlingTilstand =
    | 'UNDER_BEHANDLING'
    | 'VENT_TIDLIG_SØKNAD'
    | 'VENT_MELDEKORT'
    | 'VENT_DOKUMENTASJON'
    | 'VENT_INNTEKTSMELDING'
    | 'PROSESSERER';

export type EsSak = {
    saksnummer: string;
    familiehendelse: Familiehendelse;
    sakAvsluttet?: boolean;
    åpenBehandling?: EsÅpenBehandling;
    gjelderAdopsjon?: boolean;
    oppdatertTidspunkt: string;
};

export type EsÅpenBehandling = {
    tilstand: BehandlingTilstand;
};

export type Familiehendelse = {
    fødselsdato?: string;
    termindato?: string;
    antallBarn: number;
    omsorgsovertakelse?: string;
};

export type FpSak = {
    saksnummer: string;
    sakAvsluttet: boolean;
    kanSøkeOmEndring: boolean;
    sakTilhørerMor: boolean;
    gjelderAdopsjon: boolean;
    morUføretrygd: boolean;
    harAnnenForelderTilsvarendeRettEØS?: boolean;
    ønskerJustertUttakVedFødsel?: boolean;
    rettighetType: RettighetType;
    annenPart?: Person;
    familiehendelse: Familiehendelse;
    gjeldendeVedtak?: FpVedtak;
    åpenBehandling?: FpÅpenBehandling;
    barn?: Person[];
    dekningsgrad?: DekningsgradSak;
    oppdatertTidspunkt: string;
    forelder?: BrukerRolleSak;
};

export type FpVedtak = {
    perioder: UttakPeriode[];
    perioderAnnenpartEøs?: UttakPeriodeAnnenpartEøs[];
};

export type FpÅpenBehandling = {
    tilstand: BehandlingTilstand;
    søknadsperioder: UttakPeriode[];
};

export type OppholdKilde = 'SAKSBEHANDLER' | 'INNTEKTSMELDING' | 'SØKNAD';

export type OppholdPeriode = {
    fom: string;
    tom: string;
    årsak: OppholdÅrsak;
    oppholdKilde: OppholdKilde;
};

export type OppholdÅrsak = 'SYKEPENGER' | 'FERIE';

export type PeriodeResultat = {
    resultatType?: ResultatType;
    utbetalingsgrad?: number;
};

export type Person = {
    fnr?: string;
    aktørId?: string;
};

export type ResultatType = 'INNVILGET' | 'AVSLAG_SØKNADSFRIST' | 'AVSLAG_ANNET';

export type RettighetType = 'ALENEOMSORG' | 'BEGGE_RETT' | 'BARE_SØKER_RETT';

export type Saker = {
    foreldrepenger: FpSak[];
    engangsstønad: EsSak[];
    svangerskapspenger: SvpSak[];
};

export type SvpArbeidsforhold = {
    aktivitet: Aktivitet;
    behovFrom?: string;
    risikofaktorer?: string;
    tiltak?: string;
    tilrettelegginger: Tilrettelegging[];
    oppholdsperioder: OppholdPeriode[];
    avslutningÅrsak?: AvslutningÅrsak;
};

export type SvpSak = {
    saksnummer: string;
    familiehendelse: Familiehendelse;
    sakAvsluttet: boolean;
    åpenBehandling?: SvpÅpenBehandling;
    gjeldendeVedtak?: Vedtak;
    oppdatertTidspunkt: string;
};

export type SvpÅpenBehandling = {
    tilstand: BehandlingTilstand;
    søknad: Søknad;
};

export type Søknad = {
    arbeidsforhold: SvpArbeidsforhold[];
};

export type Tilrettelegging = {
    fom: string;
    tom: string;
    type?: TilretteleggingType;
    arbeidstidprosent?: number;
    resultat?: PeriodeResultat;
};

export type TilretteleggingType = 'HEL' | 'DELVIS' | 'INGEN';

export type UttakPeriodeAnnenpartEøs = {
    fom: string;
    tom: string;
    trekkonto: KontoType;
    kontoType: KontoType;
    trekkdager: number;
};

export type Vedtak = {
    arbeidsforhold: SvpArbeidsforhold[];
    avslagÅrsak?: AvslagÅrsak;
};

export type AktørType = 'BRUKER' | 'NAV' | 'ARBEIDSGIVER';

export type Dokument = {
    journalpostId: string;
    dokumentId?: string;
    tittel: string;
};

export type TidslinjeHendelseDto = {
    opprettet: string;
    aktørType: AktørType;
    tidslinjeHendelseType: TidslinjeHendelseType;
    dokumenter: Dokument[];
};

export type TidslinjeHendelseType =
    | 'FØRSTEGANGSSØKNAD'
    | 'FØRSTEGANGSSØKNAD_NY'
    | 'ETTERSENDING'
    | 'ENDRINGSSØKNAD'
    | 'INNTEKTSMELDING'
    | 'VEDTAK'
    | 'UTGÅENDE_INNHENT_OPPLYSNINGER'
    | 'UTGÅENDE_ETTERLYS_INNTEKTSMELDING'
    | 'FORELDREPENGER_FEIL_PRAKSIS_UTSETTELSE_INFOBREV'
    | 'UTGÅENDE_VARSEL_TILBAKEBETALING';

export type HentMineFrilansoppdragData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/arbeid/mineFrilansoppdrag';
};

export type HentMineFrilansoppdragResponses = {
    /**
     * default response
     */
    default: EksternArbeidsforholdDto[];
};

export type HentMineFrilansoppdragResponse = HentMineFrilansoppdragResponses[keyof HentMineFrilansoppdragResponses];

export type HentMittArbeidData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/arbeid/mineArbeidsforhold';
};

export type HentMittArbeidResponses = {
    /**
     * default response
     */
    default: EksternArbeidsforholdDto[];
};

export type HentMittArbeidResponse = HentMittArbeidResponses[keyof HentMittArbeidResponses];

export type TrengerDokumentereMorsArbeidData = {
    body: MorArbeidRequest;
    path?: never;
    query?: never;
    url: '/api/arbeid/morDokumentasjon';
};

export type TrengerDokumentereMorsArbeidResponses = {
    /**
     * default response
     */
    default: boolean;
};

export type TrengerDokumentereMorsArbeidResponse =
    TrengerDokumentereMorsArbeidResponses[keyof TrengerDokumentereMorsArbeidResponses];

export type AlleDokumenterPåSakData = {
    body?: never;
    path?: never;
    query: {
        saksnummer: string;
    };
    url: '/api/dokument/alle';
};

export type AlleDokumenterPåSakResponses = {
    /**
     * default response
     */
    default: DokumentDto[];
};

export type AlleDokumenterPåSakResponse = AlleDokumenterPåSakResponses[keyof AlleDokumenterPåSakResponses];

export type DokumentData = {
    body?: never;
    path?: never;
    query: {
        journalpostId: string;
        dokumentId: string;
    };
    url: '/api/dokument';
};

export type DokumentResponses = {
    /**
     * default response
     */
    default: string;
};

export type DokumentResponse = DokumentResponses[keyof DokumentResponses];

export type OppdaterOppgaverData = {
    /**
     * Liste med saksnummre som skal oppdateres
     */
    body: string[];
    path?: never;
    query?: never;
    url: '/api/forvaltningSaker/oppdaterOppgaver';
};

export type OppdaterOppgaverResponses = {
    /**
     * Task for å oppdatere oppgaver er opprettet per sak
     */
    200: unknown;
};

export type OpprettHentSakTaskForSaksnummreData = {
    /**
     * Liste med saksnummre som skal oppdateres
     */
    body: string[];
    path?: never;
    query?: never;
    url: '/api/forvaltningSaker/oppdater';
};

export type OpprettHentSakTaskForSaksnummreErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type OpprettHentSakTaskForSaksnummreResponses = {
    /**
     * HentSakTask opprettet for alle saknsummre
     */
    200: unknown;
};

export type CreateProsessTaskData = {
    /**
     * Informasjon for restart en eksisterende prosesstask
     */
    body?: ProsessTaskOpprettInputDto;
    path?: never;
    query?: never;
    url: '/api/prosesstask/create';
};

export type CreateProsessTaskErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type CreateProsessTaskResponses = {
    /**
     * Prosesstaskens oppdatert informasjon
     */
    202: ProsessTaskDataDto;
};

export type CreateProsessTaskResponse = CreateProsessTaskResponses[keyof CreateProsessTaskResponses];

export type FinnFeiletProsessTaskData = {
    body?: never;
    path: {
        prosessTaskId: number;
    };
    query?: never;
    url: '/api/prosesstask/feil/{prosessTaskId}';
};

export type FinnFeiletProsessTaskErrors = {
    /**
     * Feil input
     */
    400: unknown;
    /**
     * Tom respons når angitt prosesstask-id ikke finnes
     */
    404: unknown;
};

export type FinnFeiletProsessTaskResponses = {
    /**
     * Angitt prosesstask-id finnes
     */
    200: FeiletProsessTaskDataDto;
};

export type FinnFeiletProsessTaskResponse = FinnFeiletProsessTaskResponses[keyof FinnFeiletProsessTaskResponses];

export type FinnProsessTasksData = {
    body?: never;
    path: {
        /**
         * Task status som skal hentes.
         */
        prosessTaskStatus: IkkeFerdigProsessTaskStatusEnum;
    };
    query?: never;
    url: '/api/prosesstask/list/{prosessTaskStatus}';
};

export type FinnProsessTasksResponses = {
    /**
     * Liste over prosesstasker, eller tom liste når angitt/default søkefilter ikke finner noen prosesstasker
     */
    200: ProsessTaskDataDto;
};

export type FinnProsessTasksResponse = FinnProsessTasksResponses[keyof FinnProsessTasksResponses];

export type RestartProsessTaskData = {
    body?: never;
    path: {
        prosessTaskId: number;
        prosessTaskStatus: FeiletProsessTaskStatusEnum;
    };
    query?: never;
    url: '/api/prosesstask/launch/{prosessTaskId}/{prosessTaskStatus}';
};

export type RestartProsessTaskErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type RestartProsessTaskResponses = {
    /**
     * Prosesstaskens oppdatert informasjon
     */
    200: ProsessTaskRestartResultatDto;
};

export type RestartProsessTaskResponse = RestartProsessTaskResponses[keyof RestartProsessTaskResponses];

export type RetryAllProsessTaskData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/prosesstask/retryall';
};

export type RetryAllProsessTaskErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type RetryAllProsessTaskResponses = {
    /**
     * Response med liste av prosesstasks som restartes
     */
    200: ProsessTaskRetryAllResultatDto;
};

export type RetryAllProsessTaskResponse = RetryAllProsessTaskResponses[keyof RetryAllProsessTaskResponses];

export type SearchProsessTasksData = {
    /**
     * Søkefilter for å begrense resultatet av returnerte prosesstask.
     */
    body?: SokeFilterDto;
    path?: never;
    query?: never;
    url: '/api/prosesstask/search';
};

export type SearchProsessTasksResponses = {
    /**
     * Liste over prosesstasker, eller tom liste når angitt/default søkefilter ikke finner noen prosesstasker
     */
    200: ProsessTaskDataDto;
};

export type SearchProsessTasksResponse = SearchProsessTasksResponses[keyof SearchProsessTasksResponses];

export type SetFeiletProsessTaskFerdigData = {
    body?: never;
    path: {
        prosessTaskId: number;
        prosessTaskStatus: IkkeFerdigProsessTaskStatusEnum;
    };
    query?: never;
    url: '/api/prosesstask/setferdig/{prosessTaskId}/{prosessTaskStatus}';
};

export type SetFeiletProsessTaskFerdigErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type SetFeiletProsessTaskFerdigResponses = {
    /**
     * Angitt prosesstask-id satt til status FERDIG
     */
    200: unknown;
};

export type AlleInntektsmeldingerData = {
    body?: never;
    path?: never;
    query: {
        saksnummer: string;
    };
    url: '/api/inntektsmeldinger';
};

export type AlleInntektsmeldingerResponses = {
    /**
     * default response
     */
    default: FpOversiktInntektsmeldingDto[];
};

export type AlleInntektsmeldingerResponse = AlleInntektsmeldingerResponses[keyof AlleInntektsmeldingerResponses];

export type ManglendeVedleggData = {
    body?: never;
    path?: never;
    query: {
        saksnummer: string;
    };
    url: '/api/oppgaver/manglendevedlegg';
};

export type ManglendeVedleggResponses = {
    /**
     * default response
     */
    default: DokumentType[];
};

export type ManglendeVedleggResponse = ManglendeVedleggResponses[keyof ManglendeVedleggResponses];

export type TilbakekrevingsuttalelserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/oppgaver/tilbakekrevingsuttalelse';
};

export type TilbakekrevingsuttalelserResponses = {
    /**
     * default response
     */
    default: TilbakekrevingUttalelseOppgave[];
};

export type TilbakekrevingsuttalelserResponse =
    TilbakekrevingsuttalelserResponses[keyof TilbakekrevingsuttalelserResponses];

export type PersoninfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/person/info';
};

export type PersoninfoResponses = {
    /**
     * default response
     */
    default: PersonDto;
};

export type PersoninfoResponse = PersoninfoResponses[keyof PersoninfoResponses];

export type SøkerinfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/person/info-med-arbeidsforhold';
};

export type SøkerinfoResponses = {
    /**
     * default response
     */
    default: PersonMedArbeidsforholdDto;
};

export type SøkerinfoResponse = SøkerinfoResponses[keyof SøkerinfoResponses];

export type AktøridForPersonData = {
    body: AnnenPartRequest;
    path?: never;
    query?: never;
    url: '/api/annenPart/aktorid';
};

export type AktøridForPersonResponses = {
    /**
     * default response
     */
    default: string;
};

export type AktøridForPersonResponse = AktøridForPersonResponses[keyof AktøridForPersonResponses];

export type HentData = {
    body: AnnenPartRequest;
    path?: never;
    query?: never;
    url: '/api/annenPart/v2';
};

export type HentResponses = {
    /**
     * default response
     */
    default: AnnenPartSak;
};

export type HentResponse = HentResponses[keyof HentResponses];

export type HentVedtakData = {
    body: AnnenPartRequest;
    path?: never;
    query?: never;
    url: '/api/annenPart';
};

export type HentVedtakResponses = {
    /**
     * default response
     */
    default: AnnenPartSak;
};

export type HentVedtakResponse = HentVedtakResponses[keyof HentVedtakResponses];

export type ErSakOppdatertEtterMottattSøknadData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/saker/erOppdatert';
};

export type ErSakOppdatertEtterMottattSøknadResponses = {
    /**
     * default response
     */
    default: boolean;
};

export type ErSakOppdatertEtterMottattSøknadResponse =
    ErSakOppdatertEtterMottattSøknadResponses[keyof ErSakOppdatertEtterMottattSøknadResponses];

export type Hent1Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/saker';
};

export type Hent1Responses = {
    /**
     * default response
     */
    default: Saker;
};

export type Hent1Response = Hent1Responses[keyof Hent1Responses];

export type HentTidslinjeData = {
    body?: never;
    path?: never;
    query: {
        saksnummer: string;
    };
    url: '/api/tidslinje';
};

export type HentTidslinjeResponses = {
    /**
     * default response
     */
    default: TidslinjeHendelseDto[];
};

export type HentTidslinjeResponse = HentTidslinjeResponses[keyof HentTidslinjeResponses];
