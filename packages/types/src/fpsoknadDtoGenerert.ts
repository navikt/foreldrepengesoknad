// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}/fpsoknad` | (string & {});
};

export type AdopsjonDto = {
    adopsjonAvEktefellesBarn: boolean;
    adopsjonsdato: string;
    ankomstdato?: string;
    antallBarn?: number;
    fødselsdatoer?: string[];
    søkerAdopsjonAlene?: boolean;
};

export type AnnenForelderDto = (
    | ({
          type: 'norsk';
      } & NorskForelderDto)
    | ({
          type: 'utenlandsk';
      } & UtenlandskForelderDto)
) & {
    type: string;
};

export type Arbeidsforhold = {
    fom?: string;
    navn?: string;
    orgnummer?: string;
    stillingsprosent?: number;
    tom?: string;
};

export type ArbeidsforholdDto = (
    | ({
          type: 'frilanser';
      } & FrilanserDto)
    | ({
          type: 'privat';
      } & PrivatArbeidsgiverDto)
    | ({
          type: 'selvstendig';
      } & SelvstendigNæringsdrivendeDto)
    | ({
          type: 'virksomhet';
      } & VirksomhetDto)
) & {
    type: string;
};

export type BarnDto = (
    | ({
          type: 'adopsjon';
      } & AdopsjonDto)
    | ({
          type: 'fødsel';
      } & FødselDto)
    | ({
          type: 'omsorgsovertakelse';
      } & OmsorgsovertakelseDto)
    | ({
          type: 'termin';
      } & TerminDto)
) & {
    type: string;
};

export type BrukerRolle = 'MOR' | 'FAR' | 'MEDMOR';

export type CountryCode =
    | 'UNDEFINED'
    | 'AC'
    | 'AD'
    | 'AE'
    | 'AF'
    | 'AG'
    | 'AI'
    | 'AL'
    | 'AM'
    | 'AN'
    | 'AO'
    | 'AQ'
    | 'AR'
    | 'AS'
    | 'AT'
    | 'AU'
    | 'AW'
    | 'AX'
    | 'AZ'
    | 'BA'
    | 'BB'
    | 'BD'
    | 'BE'
    | 'BF'
    | 'BG'
    | 'BH'
    | 'BI'
    | 'BJ'
    | 'BL'
    | 'BM'
    | 'BN'
    | 'BO'
    | 'BQ'
    | 'BR'
    | 'BS'
    | 'BT'
    | 'BU'
    | 'BV'
    | 'BW'
    | 'BY'
    | 'BZ'
    | 'CA'
    | 'CC'
    | 'CD'
    | 'CF'
    | 'CG'
    | 'CH'
    | 'CI'
    | 'CK'
    | 'CL'
    | 'CM'
    | 'CN'
    | 'CO'
    | 'CP'
    | 'CR'
    | 'CS'
    | 'CU'
    | 'CV'
    | 'CW'
    | 'CX'
    | 'CY'
    | 'CZ'
    | 'DE'
    | 'DG'
    | 'DJ'
    | 'DK'
    | 'DM'
    | 'DO'
    | 'DZ'
    | 'EA'
    | 'EC'
    | 'EE'
    | 'EG'
    | 'EH'
    | 'ER'
    | 'ES'
    | 'ET'
    | 'EU'
    | 'EZ'
    | 'FI'
    | 'FJ'
    | 'FK'
    | 'FM'
    | 'FO'
    | 'FR'
    | 'FX'
    | 'GA'
    | 'GB'
    | 'GD'
    | 'GE'
    | 'GF'
    | 'GG'
    | 'GH'
    | 'GI'
    | 'GL'
    | 'GM'
    | 'GN'
    | 'GP'
    | 'GQ'
    | 'GR'
    | 'GS'
    | 'GT'
    | 'GU'
    | 'GW'
    | 'GY'
    | 'HK'
    | 'HM'
    | 'HN'
    | 'HR'
    | 'HT'
    | 'HU'
    | 'IC'
    | 'ID'
    | 'IE'
    | 'IL'
    | 'IM'
    | 'IN'
    | 'IO'
    | 'IQ'
    | 'IR'
    | 'IS'
    | 'IT'
    | 'JE'
    | 'JM'
    | 'JO'
    | 'JP'
    | 'KE'
    | 'KG'
    | 'KH'
    | 'KI'
    | 'KM'
    | 'KN'
    | 'KP'
    | 'KR'
    | 'KW'
    | 'KY'
    | 'KZ'
    | 'LA'
    | 'LB'
    | 'LC'
    | 'LI'
    | 'LK'
    | 'LR'
    | 'LS'
    | 'LT'
    | 'LU'
    | 'LV'
    | 'LY'
    | 'MA'
    | 'MC'
    | 'MD'
    | 'ME'
    | 'MF'
    | 'MG'
    | 'MH'
    | 'MK'
    | 'ML'
    | 'MM'
    | 'MN'
    | 'MO'
    | 'MP'
    | 'MQ'
    | 'MR'
    | 'MS'
    | 'MT'
    | 'MU'
    | 'MV'
    | 'MW'
    | 'MX'
    | 'MY'
    | 'MZ'
    | 'NA'
    | 'NC'
    | 'NE'
    | 'NF'
    | 'NG'
    | 'NI'
    | 'NL'
    | 'NO'
    | 'NP'
    | 'NR'
    | 'NT'
    | 'NU'
    | 'NZ'
    | 'OM'
    | 'PA'
    | 'PE'
    | 'PF'
    | 'PG'
    | 'PH'
    | 'PK'
    | 'PL'
    | 'PM'
    | 'PN'
    | 'PR'
    | 'PS'
    | 'PT'
    | 'PW'
    | 'PY'
    | 'QA'
    | 'RE'
    | 'RO'
    | 'RS'
    | 'RU'
    | 'RW'
    | 'SA'
    | 'SB'
    | 'SC'
    | 'SD'
    | 'SE'
    | 'SF'
    | 'SG'
    | 'SH'
    | 'SI'
    | 'SJ'
    | 'SK'
    | 'SL'
    | 'SM'
    | 'SN'
    | 'SO'
    | 'SR'
    | 'SS'
    | 'ST'
    | 'SU'
    | 'SV'
    | 'SX'
    | 'SY'
    | 'SZ'
    | 'TA'
    | 'TC'
    | 'TD'
    | 'TF'
    | 'TG'
    | 'TH'
    | 'TJ'
    | 'TK'
    | 'TL'
    | 'TM'
    | 'TN'
    | 'TO'
    | 'TP'
    | 'TR'
    | 'TT'
    | 'TV'
    | 'TW'
    | 'TZ'
    | 'UA'
    | 'UG'
    | 'UK'
    | 'UM'
    | 'US'
    | 'UY'
    | 'UZ'
    | 'VA'
    | 'VC'
    | 'VE'
    | 'VG'
    | 'VI'
    | 'VN'
    | 'VU'
    | 'WF'
    | 'WS'
    | 'XI'
    | 'XU'
    | 'XK'
    | 'YE'
    | 'YT'
    | 'YU'
    | 'ZA'
    | 'ZM'
    | 'ZR'
    | 'ZW';

export type DokumentTypeId =
    | 'I000001'
    | 'I000002'
    | 'I000003'
    | 'I000004'
    | 'I000005'
    | 'I000050'
    | 'I000007'
    | 'I000023'
    | 'I000032'
    | 'I000036'
    | 'I000037'
    | 'I000038'
    | 'I000039'
    | 'I000042'
    | 'I000044'
    | 'I000051'
    | 'I000061'
    | 'I000062'
    | 'I000063'
    | 'I000066'
    | 'I000065'
    | 'I000109'
    | 'I000110'
    | 'I000111'
    | 'I000112'
    | 'I000114'
    | 'I000116'
    | 'I000117'
    | 'I000118'
    | 'I000119'
    | 'I000120'
    | 'I000121'
    | 'I000122'
    | 'I000123'
    | 'I000124'
    | 'I000130'
    | 'I000131'
    | 'I000132'
    | 'I000133'
    | 'I000140'
    | 'I000141'
    | 'I000143'
    | 'I000144'
    | 'I000145'
    | 'I000146'
    | 'I000060';

export type Dokumenterer = {
    arbeidsforhold?: ArbeidsforholdDto;
    perioder?: ÅpenPeriodeDto[];
    type: DokumentererType;
};

export type DokumentererType = 'BARN' | 'OPPTJENING' | 'UTTAK' | 'TILRETTELEGGING';

export type EndringssøknadForeldrepengerDto = {
    annenForelder?: AnnenForelderDto;
    barn: BarnDto;
    mottattdato?: string;
    rolle?: BrukerRolle;
    saksnummer: string;
    språkkode?: Målform;
    søkerinfo: SøkerDto;
    uttaksplan: UttaksplanDto;
    vedlegg?: VedleggDto[];
};

export type FrilanserDto = {
    [key: string]: unknown;
};

export type FødselDto = {
    antallBarn?: number;
    fødselsdato: string;
    termindato?: string;
};

export type GraderingDto = {
    erArbeidstaker?: boolean;
    erFrilanser?: boolean;
    erSelvstendig?: boolean;
    orgnumre?: string[];
    stillingsprosent: number;
};

export type InnsendingType = 'LASTET_OPP' | 'SEND_SENERE' | 'AUTOMATISK';

export type KontoType = 'FELLESPERIODE' | 'MØDREKVOTE' | 'FEDREKVOTE' | 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL';

export type MorsAktivitet =
    | 'ARBEID'
    | 'UTDANNING'
    | 'KVALPROG'
    | 'INTROPROG'
    | 'TRENGER_HJELP'
    | 'INNLAGT'
    | 'ARBEID_OG_UTDANNING'
    | 'UFØRE'
    | 'IKKE_OPPGITT';

export type Målform = 'NB' | 'NN' | 'EN' | 'E';

export type Navn = {
    etternavn: string;
    fornavn: string;
    mellomnavn?: string;
};

export type NorskForelderDto = {
    etternavn: string;
    fnr: string;
    fornavn: string;
    rettigheter: Rettigheter;
};

export type OmsorgsovertakelseDto = {
    antallBarn?: number;
    foreldreansvarsdato: string;
    fødselsdatoer?: string[];
};

export type OppholdsPeriodeDto = {
    fom: string;
    tom: string;
    årsak: Oppholdsårsak;
};

export type Oppholdsårsak =
    | 'INGEN'
    | 'UTTAK_MØDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FEDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FORELDREPENGER_ANNEN_FORELDER'
    | 'UTTAK_FELLESP_ANNEN_FORELDER';

export type OverføringsPeriodeDto = {
    fom: string;
    tom: string;
    konto: KontoType;
    årsak: Overføringsårsak;
};

export type Overføringsårsak =
    | 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER'
    | 'SYKDOM_ANNEN_FORELDER'
    | 'ALENEOMSORG'
    | 'IKKE_RETT_ANNEN_FORELDER';

export type PrivatArbeidsgiverDto = {
    id: string;
};

export type Rettigheter = {
    erAleneOmOmsorg?: boolean;
    erInformertOmSøknaden?: boolean;
    harAnnenForelderOppholdtSegIEØS?: boolean;
    harAnnenForelderTilsvarendeRettEØS?: boolean;
    harMorUføretrygd?: boolean;
    harRettPåForeldrepenger: boolean;
};

export type SelvstendigNæringsdrivendeDto = {
    [key: string]: unknown;
};

export type SøkerDto = {
    arbeidsforhold?: Arbeidsforhold[];
    fnr: string;
    navn: Navn;
};

export type TerminDto = {
    antallBarn?: number;
    terminbekreftelseDato?: string;
    termindato: string;
};

export type UtenlandskForelderDto = {
    bostedsland: CountryCode;
    etternavn: string;
    fnr: string;
    fornavn: string;
    rettigheter: Rettigheter;
};

export type UtsettelsesPeriodeDto = {
    fom: string;
    tom: string;
    erArbeidstaker?: boolean;
    morsAktivitetIPerioden?: MorsAktivitet;
    årsak: UtsettelsesÅrsak;
};

export type UtsettelsesÅrsak =
    | 'ARBEID'
    | 'LOVBESTEMT_FERIE'
    | 'SYKDOM'
    | 'FRI'
    | 'INSTITUSJONSOPPHOLD_SØKER'
    | 'INSTITUSJONSOPPHOLD_BARNET'
    | 'HV_OVELSE'
    | 'NAV_TILTAK';

export type UttaksPeriodeDto = {
    fom: string;
    tom: string;
    gradering?: GraderingDto;
    konto: KontoType;
    morsAktivitetIPerioden?: MorsAktivitet;
    samtidigUttakProsent?: number;
    ønskerFlerbarnsdager?: boolean;
    ønskerGradering?: boolean;
    ønskerSamtidigUttak?: boolean;
};

export type UttaksplanDto = {
    uttaksperioder: Uttaksplanperiode[];
    ønskerJustertUttakVedFødsel?: boolean;
};

export type Uttaksplanperiode = (
    | ({
          type: 'opphold';
      } & OppholdsPeriodeDto)
    | ({
          type: 'overføring';
      } & OverføringsPeriodeDto)
    | ({
          type: 'utsettelse';
      } & UtsettelsesPeriodeDto)
    | ({
          type: 'uttak';
      } & UttaksPeriodeDto)
) & {
    type: string;
};

export type VedleggDto = {
    beskrivelse?: string;
    dokumenterer?: Dokumenterer;
    innsendingsType: InnsendingType;
    skjemanummer: DokumentTypeId;
    uuid?: string;
};

export type VirksomhetDto = {
    id: string;
};

export type ÅpenPeriodeDto = {
    fom: string;
    tom?: string;
};

export type EngangsstønadDto = {
    barn: BarnDto;
    mottattdato?: string;
    språkkode: Målform;
    søkerinfo: SøkerDto;
    utenlandsopphold?: UtenlandsoppholdsperiodeDto[];
    vedlegg?: VedleggDto[];
};

export type UtenlandsoppholdsperiodeDto = {
    fom: string;
    landkode: CountryCode;
    tom: string;
    fomAfterTom?: boolean;
};

export type AnnenInntektDto = {
    arbeidsgiverNavn?: string;
    fom: string;
    land?: CountryCode;
    tom?: string;
    type: AnnenOpptjeningType;
};

export type AnnenOpptjeningType =
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'ETTERLØNN_ARBEIDSGIVER'
    | 'JOBB_I_UTLANDET'
    | 'LØNN_UNDER_UTDANNING'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'SLUTTPAKKE'
    | 'VENTELØNN_VARTPENGER'
    | 'VENTELØNN'
    | 'VARTPENGER';

export type Dekningsgrad = '80' | '100';

export type ForeldrepengesøknadDto = {
    andreInntekterSiste10Mnd?: AnnenInntektDto[];
    annenForelder?: AnnenForelderDto;
    barn: BarnDto;
    dekningsgrad: Dekningsgrad;
    egenNæring?: NæringDto;
    frilans?: FrilansDto;
    mottattdato?: string;
    rolle?: BrukerRolle;
    språkkode?: Målform;
    søkerinfo: SøkerDto;
    utenlandsopphold?: UtenlandsoppholdsperiodeDto[];
    uttaksplan: UttaksplanDto;
    vedlegg?: VedleggDto[];
};

export type FrilansDto = {
    jobberFremdelesSomFrilans?: boolean;
    oppstart: string;
};

export type NæringDto = {
    fom: string;
    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene?: boolean;
    hattVarigEndringAvNæringsinntektSiste4Kalenderår?: boolean;
    navnPåNæringen?: string;
    næringsinntekt?: number;
    næringstype: Virksomhetstype;
    oppstartsdato?: string;
    organisasjonsnummer?: string;
    registrertILand?: CountryCode;
    registrertINorge: boolean;
    tom?: string;
    varigEndringBeskrivelse?: string;
    varigEndringDato?: string;
    varigEndringInntektEtterEndring?: number;
    varigEndringGyldig?: boolean;
};

export type Virksomhetstype = 'ANNEN' | 'JORDBRUK_SKOGBRUK' | 'FISKE' | 'DAGMAMMA';

export type AvtaltFerieDto = {
    arbeidsforhold: ArbeidsforholdDto;
    fom: string;
    tom: string;
    arbeidsforholdVirksomhet?: boolean;
};

export type BarnSvpDto = {
    fødselsdato?: string;
    termindato: string;
};

export type Del = {
    fom: string;
    stillingsprosent: number;
};

export type Hel = {
    fom: string;
};

export type Ingen = {
    fom: string;
};

export type SvangerskapspengesøknadDto = {
    andreInntekterSiste10Mnd?: AnnenInntektDto[];
    avtaltFerie: AvtaltFerieDto[];
    barn: BarnSvpDto;
    egenNæring?: NæringDto;
    frilans?: FrilansDto;
    mottattdato?: string;
    språkkode: Målform;
    søkerinfo: SøkerDto;
    tilretteleggingsbehov: TilretteleggingbehovDto[];
    utenlandsopphold?: UtenlandsoppholdsperiodeDto[];
    vedlegg: VedleggDto[];
};

export type TilretteleggingDto = (
    | ({
          type: 'delvis';
      } & Del)
    | ({
          type: 'hel';
      } & Hel)
    | ({
          type: 'ingen';
      } & Ingen)
) & {
    type: string;
};

export type TilretteleggingbehovDto = {
    arbeidsforhold: ArbeidsforholdDto;
    behovForTilretteleggingFom: string;
    risikofaktorer?: string;
    tilrettelegginger?: TilretteleggingDto[];
    tilretteleggingstiltak?: string;
    risikofaktorerOgTilretteleggingtiltakSattForNæringFrilans?: boolean;
};

export type BrukerTekstDto = {
    dokumentType: DokumentTypeId;
    tekst: string;
};

export type EttersendelseDto = {
    brukerTekst?: BrukerTekstDto;
    fnr: string;
    mottattdato?: string;
    saksnummer: string;
    type: YtelseType;
    vedlegg: VedleggDto[];
};

export type YtelseType = 'FORELDREPENGER' | 'SVANGERSKAPSPENGER' | 'ENGANGSSTØNAD';

export type ForsendelseStatus = {
    saksnummer?: string;
    status?: Status;
};

export type Status = 'PENDING' | 'MIDLERTIDIG' | 'ENDELIG';

export type YtelseMellomlagringType = 'FORELDREPENGER' | 'SVANGERSKAPSPENGER' | 'ENGANGSSTONAD';

export type FormDataContentDisposition = {
    creationDate?: string;
    fileName?: string;
    modificationDate?: string;
    name?: string;
    parameters?: {
        [key: string]: string;
    };
    readDate?: string;
    size?: number;
    type?: string;
};

export type ProsessTaskDataDto = {
    gruppe: string;
    id: number;
    nesteKjøringEtter?: string;
    sekvens: string;
    sistKjørt?: string;
    sisteFeilKode?: string;
    status: string;
    taskParametre?: {
        [key: string]: string;
    };
    taskType: string;
};

export type ProsessTaskOpprettInputDto = {
    taskParametre: {
        [key: string]: string;
    };
    taskType: string;
};

export type FeiletProsessTaskDataDto = {
    feiledeForsøk?: number;
    gruppe: string;
    id: number;
    nesteKjøringEtter?: string;
    sekvens: string;
    sistKjørt?: string;
    sisteFeilKode?: string;
    status: string;
    taskParametre?: {
        [key: string]: string;
    };
    taskType: string;
    sisteFeilTekst?: string;
    sisteKjøringServerProsess?: string;
};

export type IkkeFerdigProsessTaskStatusEnum = 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT' | 'VETO' | 'KLAR';

/**
 * Resultatet av asynkron-restart av en eksisterende prosesstask
 */
export type ProsessTaskRestartResultatDto = {
    /**
     * Kjøretidspunkt for restart av prosessen
     */
    nesteKjoeretidspunkt: string;
    prosessTaskId: number;
    /**
     * Nåværende status (KLAR)
     */
    prosessTaskStatus: string;
};

export type FeiletProsessTaskStatusEnum = 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT';

/**
 * Resultatet av asynkron-restart av feilede prosesstasks
 */
export type ProsessTaskRetryAllResultatDto = {
    /**
     * Prosesstasks som restartes
     */
    prosessTaskIds?: number[];
};

export type SokeFilterDto = {
    sisteKjoeretidspunktFraOgMed?: string;
    sisteKjoeretidspunktTilOgMed?: string;
    tekst: string;
};

export type SendData = {
    body: EndringssøknadForeldrepengerDto;
    path?: never;
    query?: never;
    url: '/api/soknad/foreldrepenger/endre';
};

export type SendResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type Send1Data = {
    body: EngangsstønadDto;
    path?: never;
    query?: never;
    url: '/api/soknad/engangsstonad';
};

export type Send1Responses = {
    /**
     * default response
     */
    default: unknown;
};

export type Send2Data = {
    body: ForeldrepengesøknadDto;
    path?: never;
    query?: never;
    url: '/api/soknad/foreldrepenger';
};

export type Send2Responses = {
    /**
     * default response
     */
    default: unknown;
};

export type Send3Data = {
    body: SvangerskapspengesøknadDto;
    path?: never;
    query?: never;
    url: '/api/soknad/svangerskapspenger';
};

export type Send3Responses = {
    /**
     * default response
     */
    default: unknown;
};

export type Send4Data = {
    body: EttersendelseDto;
    path?: never;
    query?: never;
    url: '/api/soknad/ettersend';
};

export type Send4Responses = {
    /**
     * default response
     */
    default: unknown;
};

export type StatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/soknad/status';
};

export type StatusResponses = {
    200: ForsendelseStatus;
};

export type StatusResponse = StatusResponses[keyof StatusResponses];

export type FinnesDetAktivMellomlagringData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/storage/aktive';
};

export type FinnesDetAktivMellomlagringResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type SlettMellomlagringData = {
    body?: never;
    path: {
        ytelse: YtelseMellomlagringType;
    };
    query?: never;
    url: '/api/storage/{ytelse}';
};

export type SlettMellomlagringResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type LesSøknadData = {
    body?: never;
    path: {
        ytelse: YtelseMellomlagringType;
    };
    query?: never;
    url: '/api/storage/{ytelse}';
};

export type LesSøknadResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type LagreSøknadYtelseData = {
    body?: string;
    path: {
        ytelse: YtelseMellomlagringType;
    };
    query?: never;
    url: '/api/storage/{ytelse}';
};

export type LagreSøknadYtelseResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type LagreVedleggData = {
    body?: {
        vedlegg?: FormDataContentDisposition;
    };
    path: {
        ytelse: YtelseMellomlagringType;
    };
    query?: {
        uuid?: string;
    };
    url: '/api/storage/{ytelse}/vedlegg';
};

export type LagreVedleggResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type SlettVedleggData = {
    body?: never;
    path: {
        ytelse: YtelseMellomlagringType;
        key: string;
    };
    query?: never;
    url: '/api/storage/{ytelse}/vedlegg/{key}';
};

export type SlettVedleggResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type LesVedleggData = {
    body?: never;
    path: {
        ytelse: YtelseMellomlagringType;
        key: string;
    };
    query?: never;
    url: '/api/storage/{ytelse}/vedlegg/{key}';
};

export type LesVedleggResponses = {
    /**
     * default response
     */
    default: Blob | File;
};

export type LesVedleggResponse = LesVedleggResponses[keyof LesVedleggResponses];

export type CreateProsessTaskData = {
    /**
     * Informasjon for restart en eksisterende prosesstask
     */
    body?: ProsessTaskOpprettInputDto;
    path?: never;
    query?: never;
    url: '/api/prosesstask/create';
};

export type CreateProsessTaskErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type CreateProsessTaskResponses = {
    /**
     * Prosesstaskens oppdatert informasjon
     */
    202: ProsessTaskDataDto;
};

export type CreateProsessTaskResponse = CreateProsessTaskResponses[keyof CreateProsessTaskResponses];

export type FinnFeiletProsessTaskData = {
    body?: never;
    path: {
        prosessTaskId: number;
    };
    query?: never;
    url: '/api/prosesstask/feil/{prosessTaskId}';
};

export type FinnFeiletProsessTaskErrors = {
    /**
     * Feil input
     */
    400: unknown;
    /**
     * Tom respons når angitt prosesstask-id ikke finnes
     */
    404: unknown;
};

export type FinnFeiletProsessTaskResponses = {
    /**
     * Angitt prosesstask-id finnes
     */
    200: FeiletProsessTaskDataDto;
};

export type FinnFeiletProsessTaskResponse = FinnFeiletProsessTaskResponses[keyof FinnFeiletProsessTaskResponses];

export type FinnProsessTasksData = {
    body?: never;
    path: {
        /**
         * Liste av statuser som skal hentes.
         */
        prosessTaskStatus: IkkeFerdigProsessTaskStatusEnum;
    };
    query?: never;
    url: '/api/prosesstask/list/{prosessTaskStatus}';
};

export type FinnProsessTasksResponses = {
    /**
     * Liste over prosesstasker, eller tom liste når angitt/default søkefilter ikke finner noen prosesstasker
     */
    200: ProsessTaskDataDto;
};

export type FinnProsessTasksResponse = FinnProsessTasksResponses[keyof FinnProsessTasksResponses];

export type RestartProsessTaskData = {
    body?: never;
    path: {
        prosessTaskId: number;
        prosessTaskStatus: FeiletProsessTaskStatusEnum;
    };
    query?: never;
    url: '/api/prosesstask/launch/{prosessTaskId}/{prosessTaskStatus}';
};

export type RestartProsessTaskErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type RestartProsessTaskResponses = {
    /**
     * Prosesstaskens oppdatert informasjon
     */
    200: ProsessTaskRestartResultatDto;
};

export type RestartProsessTaskResponse = RestartProsessTaskResponses[keyof RestartProsessTaskResponses];

export type RetryAllProsessTaskData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/prosesstask/retryall';
};

export type RetryAllProsessTaskErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type RetryAllProsessTaskResponses = {
    /**
     * Response med liste av prosesstasks som restartes
     */
    200: ProsessTaskRetryAllResultatDto;
};

export type RetryAllProsessTaskResponse = RetryAllProsessTaskResponses[keyof RetryAllProsessTaskResponses];

export type SearchProsessTasksData = {
    /**
     * Søkefilter for å begrense resultatet av returnerte prosesstask.
     */
    body?: SokeFilterDto;
    path?: never;
    query?: never;
    url: '/api/prosesstask/search';
};

export type SearchProsessTasksResponses = {
    /**
     * Liste over prosesstasker, eller tom liste når angitt/default søkefilter ikke finner noen prosesstasker
     */
    200: ProsessTaskDataDto;
};

export type SearchProsessTasksResponse = SearchProsessTasksResponses[keyof SearchProsessTasksResponses];

export type SetFeiletProsessTaskFerdigData = {
    body?: never;
    path: {
        prosessTaskId: number;
        prosessTaskStatus: IkkeFerdigProsessTaskStatusEnum;
    };
    query?: never;
    url: '/api/prosesstask/setferdig/{prosessTaskId}/{prosessTaskStatus}';
};

export type SetFeiletProsessTaskFerdigErrors = {
    /**
     * Feilet pga ukjent feil eller tekniske/funksjonelle feil
     */
    500: unknown;
};

export type SetFeiletProsessTaskFerdigResponses = {
    /**
     * Angitt prosesstask-id satt til status FERDIG
     */
    200: unknown;
};
