import{j as s}from"./jsx-runtime-69eee039.js";import{w as u}from"./withIntl-38d35964.js";import{w as O}from"./withRouter-15cc08d4.js";import{w as R,F as S}from"./ForeldrepengerStateMock-2ca64e3f.js";import{A as N}from"./AxiosMock-9c813813.js";import{F as U,U as T}from"./UttaksplanInfo-1e87ebb3.js";import{R as A}from"./api-02a26928.js";import"./index-7c191284.js";import"./IntlProvider-b5f77251.js";import"./validationUtils-3e3f35a1.js";import"./index-b3a39e30.js";import"./Link-b834ea2b.js";import"./index-e13aeee6.js";import"./_createSet-32a27317.js";import"./_baseToString-4b695375.js";import"./v4-a960c1f4.js";import"./useSøknad-67949f34.js";import"./mapSøkerinfoDTO-c2e267b6.js";import"./AttachmentType-f6ad37cf.js";import"./useSaveLoadedRoute-ccd0af0e.js";import"./amplitude-bdf1e125.js";import"./submitUtils-3190d349.js";import"./Periodene-52ff0d39.js";import"./apiInterceptor-c6c2844c.js";import"./leggTilPeriode-6be5dfc1.js";import"./Uttaksplan-063eebcd.js";import"./FormikFileUploader-a3627c10.js";import"./AttachmentList-ca8f0ac5.js";import"./Attachment-f47bbeea.js";import"./links-b36d21ab.js";import"./arbeidsforholdUtils-ee247546.js";import"./_baseIteratee-9b4fb880.js";import"./_baseUniq-e5198354.js";import"./formUtils-628645da.js";import"./useSøkerinfo-7098b049.js";import"./LenkeKnapp-a5650a66.js";import"./InfoOmSøknaden-50e7887d.js";import"./useOnValidSubmit-9255204e.js";import"./dateUtils-5eafd83c.js";import"./eksisterendeSakUtils-39804c4a.js";import"./velkommenUtils-8cac9cb6.js";const I={søker:{fnr:"1212121313",fornavn:"Espen",etternavn:"Utvikler",kjønn:"M",fødselsdato:"1978-04-12",barn:[{fnr:"19047815714",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"TALENTFULL",etternavn:"MYGG"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},E=4,x="/soknad/uttaksplan-info",D={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-07-01"],antallBarn:"1",termindato:"2021-07-01"},annenForelder:{etternavn:"dfg",fornavn:"dsgdfg",fnr:"123123123",utenlandskFnr:!1,erUfør:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!1,harRettPåForeldrepengerIEØS:!1},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1,uttaksplan:[]},version:E,currentRoute:x,søknadGjelderEtNyttBarn:!0},L={FORELDREPENGER:250},P={farRundtFødsel:0,generellMinsterett:0,toTette:0},m={kontoer:L,minsteretter:P},_={FORELDREPENGER:200},v={farRundtFødsel:0,generellMinsterett:0,toTette:0},f={kontoer:_,minsteretter:v},y="/innsyn/v2/annenPartVedtak",a="/konto",o=D,M=I,Ne={title:"steps/uttaksplan-info/FarMedmorFødselOgMorHarIkkeRett",component:U,decorators:[O,u,R]},g=t=>{const F=n=>{n.onPost(y).replyOnce(200,void 0,A.FINISHED),n.onGet(a).replyOnce(200,t.stønadskonto100),n.onGet(a).replyOnce(200,t.stønadskonto80)};return s.jsx(N,{mock:F,children:s.jsx(S,{søknad:t.context,søkerinfo:t.søkerinfo,children:s.jsx(T,{})})})},e=g.bind({});e.args={stønadskonto100:f,stønadskonto80:m,context:o,søkerinfo:M};const r=g.bind({});r.args={stønadskonto100:f,stønadskonto80:m,context:{...o,søknad:{...o.søknad,annenForelder:{...o.søknad.annenForelder,erUfør:!0}}},søkerinfo:M};var k,p,i;e.parameters={...e.parameters,docs:{...(k=e.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(i=(p=e.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};var d,c,l;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(l=(c=r.parameters)==null?void 0:c.docs)==null?void 0:l.source}}};const Ue=["UttaksplanDerMorIkkeHarRettPåForeldrepenger","UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør"];export{e as UttaksplanDerMorIkkeHarRettPåForeldrepenger,r as UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør,Ue as __namedExportsOrder,Ne as default};
//# sourceMappingURL=FarMedmorFodselOgMorHarIkkeRett.stories-6b46ef99.js.map
