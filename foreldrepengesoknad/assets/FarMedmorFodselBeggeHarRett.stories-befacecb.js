import{j as s}from"./jsx-runtime-69eee039.js";import{w as F}from"./withIntl-327f3ef0.js";import{w as O}from"./withRouter-c6412e9a.js";import{w as A,F as N}from"./ForeldrepengerStateMock-6f40a059.js";import{A as U}from"./AxiosMock-1baf8c71.js";import{R}from"./api-dee1c3e5.js";import{s as l,a as f}from"./stønadskontoDeltUttak100-ce558aaf.js";import{U as g}from"./UttaksplanInfo-10b3a54e.js";import"./index-7c191284.js";import"./IntlProvider-361e6eea.js";import"./validationUtils-7f8e3dc4.js";import"./index-b3a39e30.js";import"./Link-00530630.js";import"./clsx.m-266f4de0.js";import"./index-e13aeee6.js";import"./extends-2a43ab49.js";import"./index-ecbee218.js";import"./Label-2ad8abda.js";import"./v4-a960c1f4.js";import"./useSøknad-fd4f0430.js";import"./dateUtils-ec18dffd.js";import"./Environment-07523402.js";import"./mapSøkerinfoDTO-e6f23460.js";import"./useSaveLoadedRoute-84122a1f.js";import"./amplitude-bdf1e125.js";import"./globalUtil-c820f73d.js";import"./submitUtils-f8f37997.js";import"./AnnenForelder-5c5d4f7f.js";import"./vedleggUtils-649ffe6b.js";import"./Attachment-a8e5b8d1.js";import"./periodeUtils-2fc4c766.js";import"./Periodene-64603459.js";import"./apiInterceptor-dfae0758.js";import"./personUtils-0e8c72a9.js";import"./Personkort-ba3a57a8.js";import"./Dekningsgrad-fced8842.js";import"./useSøkerinfo-5c46a0df.js";import"./index-47edccfa.js";import"./annenForelderUtils-9320a23b.js";import"./constants-c4bc2eb8.js";import"./LenkeKnapp-2a36bcd6.js";import"./InfoOmSøknaden-efb2c227.js";import"./Sirkelmaske-2e2e112e.js";import"./Foreldrepar-4ad54e41.js";import"./InnholdMedIllustrasjon-88e86639.js";import"./links-b36d21ab.js";import"./useOnValidSubmit-1806d937.js";import"./eksisterendeSakUtils-d45cff1d.js";import"./velkommenUtils-587f1845.js";import"./Fieldset-2a6c6c1b.js";import"./formUtils-d0f40c5a.js";const T={søker:{fnr:"19047815714",fornavn:"TALENTFULL",etternavn:"MYGG",kjønn:"M",fødselsdato:"1978-04-19",barn:[{fnr:"21091981146",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"LEALAUS",etternavn:"BÆREPOSE"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},x=4,I="/soknad/uttaksplan-info",L={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-06-14"],antallBarn:"1",datoForAleneomsorg:"",dokumentasjonAvAleneomsorg:[]},annenForelder:{etternavn:"dfg",fornavn:"dfg",fnr:"02068629902",utenlandskFnr:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!0,erInformertOmSøknaden:!0},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1},version:x,currentRoute:I,søknadGjelderEtNyttBarn:!0},E="/innsyn/v2/annenPartVedtak",a="/uttak-url/konto",u=T,r=L,It={title:"steps/uttaksplan-info/FarMedmorFødselBeggeHarRett",component:g,decorators:[O,F,A]},M=o=>{const S=n=>{n.onPost(E).replyOnce(200,void 0,R.FINISHED),n.onGet(a).replyOnce(200,o.stønadskonto100),n.onGet(a).replyOnce(200,o.stønadskonto80)};return s.jsx(U,{mock:S,children:s.jsx(N,{søknad:o.context,søkerinfo:o.søkerinfo,children:s.jsx(g,{})})})},t=M.bind({});t.args={stønadskonto100:l,stønadskonto80:f,context:r,søkerinfo:u};const e=M.bind({});e.args={stønadskonto100:l,stønadskonto80:f,context:{...r,søknad:{...r.søknad,barn:{...r.søknad.barn,fødselsdatoer:["2022-08-02"]}}},søkerinfo:u};var p,i,d;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(d=(i=t.parameters)==null?void 0:i.docs)==null?void 0:d.source}}};var k,m,c;e.parameters={...e.parameters,docs:{...(k=e.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(c=(m=e.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const Lt=["UttaksplanInfoFarMedmorFødselBeggeHarRett","UttaksplanInfoFarMedmorFødselBeggeHarRettFødselEtterWLB"];export{t as UttaksplanInfoFarMedmorFødselBeggeHarRett,e as UttaksplanInfoFarMedmorFødselBeggeHarRettFødselEtterWLB,Lt as __namedExportsOrder,It as default};
//# sourceMappingURL=FarMedmorFodselBeggeHarRett.stories-befacecb.js.map
