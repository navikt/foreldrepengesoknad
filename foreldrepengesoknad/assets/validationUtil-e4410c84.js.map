{"version":3,"file":"validationUtil-e4410c84.js","sources":["../../../../node_modules/.pnpm/@navikt+fnrvalidator@1.3.0/node_modules/@navikt/fnrvalidator/dist/validator.js","../../src/app/utils/validation/fødselsnummer.ts","../../src/app/utils/validationUtil.ts"],"sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar elevenDigits = new RegExp('^\\\\d{11}$');\n\nvar fnr = function fnr(digits) {\n  return idnr(digits);\n};\n\nvar dnr = function dnr(digits) {\n  return idnr(digits);\n};\n\nvar hnr = function hnr(digits) {\n  return idnr(digits);\n};\n\nvar tnr = function tnr(digits) {\n  return idnr(digits);\n};\n\nvar getType = function getType(digits) {\n  if (digits.substring(0, 1) >= 4) {\n    return 'dnr';\n  } else if (digits.substring(2, 3) >= 8) {\n    return \"tnr\";\n  } else if (digits.substring(2, 3) >= 4) {\n    return 'hnr';\n  }\n\n  return 'fnr';\n};\n\nvar idnr = function idnr(digits) {\n  var type = getType(digits);\n  return validate(digits, type);\n};\n\nvar validate = function validate(digits, type) {\n  if (!elevenDigits.test(digits)) {\n    return {\n      status: \"invalid\",\n      reasons: [\"fnr, dnr or hnr must consist of 11 digits\"]\n    };\n  }\n\n  var errMsgs = [].concat(_toConsumableArray(checksums(digits)), _toConsumableArray(birthdate(digits, type)));\n  return errMsgs.length == 0 ? {\n    status: \"valid\",\n    type: type\n  } : {\n    status: \"invalid\",\n    reasons: errMsgs\n  };\n};\n\nvar checksums = function checksums(digits) {\n  var k1 = 11 - (3 * digits[0] + 7 * digits[1] + 6 * digits[2] + 1 * digits[3] + 8 * digits[4] + 9 * digits[5] + 4 * digits[6] + 5 * digits[7] + 2 * digits[8]) % 11;\n  var k2 = 11 - (5 * digits[0] + 4 * digits[1] + 3 * digits[2] + 2 * digits[3] + 7 * digits[4] + 6 * digits[5] + 5 * digits[6] + 4 * digits[7] + 3 * digits[8] + 2 * k1) % 11;\n  if (k1 === 11) k1 = 0;\n  if (k2 === 11) k2 = 0;\n  return k1 < 10 && k2 < 10 && k1 == digits[9] && k2 == digits[10] ? [] : [\"checksums don't match\"];\n}; // copied from https://stackoverflow.com/questions/5812220/how-to-validate-a-date\n\n\nvar birthdate = function birthdate(digits, type) {\n  if (type === 'dnr') {\n    digits = digits.substring(0, 1) - 4 + digits.substring(1);\n  } else if (type === 'hnr') {\n    digits = digits.substring(0, 2) + (digits.substring(2, 3) - 4) + digits.substring(3);\n  } else if (type === 'tnr') {\n    digits = digits.substring(0, 2) + (digits.substring(2, 3) - 8) + digits.substring(3);\n  }\n\n  var day = digits.substring(0, 2);\n  var month = digits.substring(2, 4);\n  var year = digits.substring(4, 6); // set year 00 default to 2000 instead of 1900\n\n  var date = new Date(year === '00' ? '2000' : year, month - 1, day);\n  return date && date.getMonth() + 1 == month && date.getDate() == day ? [] : [\"invalid date\"];\n};\n\nexports.fnr = fnr;\nexports.dnr = dnr;\nexports.hnr = hnr;\nexports.tnr = tnr;\nexports.idnr = idnr;","import dayjs from 'dayjs';\nimport validator from '@navikt/fnrvalidator';\n\ntype FødselsnummerValidationResult = false | 'fnr' | 'dnr' | 'hnr';\nexport const isFødselsnummerFormatValid = (fnr: string): FødselsnummerValidationResult => {\n    const result = validator.idnr(fnr);\n\n    if (result.status !== 'valid') {\n        return false;\n    }\n\n    return result.type;\n};\n\nexport const isSixteenOrOlder = (fnr: string, isFødselsnummerValid: FødselsnummerValidationResult): boolean => {\n    const dato =\n        isFødselsnummerValid === 'dnr' ? `${Number(fnr.substr(0, 1)) - 4}${fnr.substr(1, 1)}` : fnr.substr(0, 2);\n    const mnd = fnr.substr(2, 2);\n    const år = fnr.substr(4, 2);\n\n    let fødselsdato = dayjs(`${dato}-${mnd}-${år}`, 'DD-MM-YY');\n\n    if (fødselsdato.get('year') > dayjs().get('year')) {\n        fødselsdato = fødselsdato.subtract(100, 'year');\n    }\n\n    if (!fødselsdato.isValid()) {\n        return false;\n    }\n\n    return fødselsdato.isBefore(dayjs().subtract(16, 'year'), 'day');\n};\n","import { hasValue, intlUtils, validateTextInputField } from '@navikt/fp-common';\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\nimport { IntlShape } from 'react-intl';\nimport { isFødselsnummerFormatValid, isSixteenOrOlder } from './validation/fødselsnummer';\n\nexport const validateFødselsnummer =\n    (intl: IntlShape, søkersFødselsnummer: string, label: string, erUtenlandskFnr?: boolean) =>\n    (fnr: string): string | undefined => {\n        if (erUtenlandskFnr) {\n            if (fnr === undefined || fnr.trim() === '') {\n                return intlUtils(intl, 'valideringsfeil.fødselsnummer.required');\n            }\n\n            if (fnr.length > 50) {\n                return intlUtils(intl, 'valideringsfeil.fødselsnummer.fødselsnummerForLangt');\n            }\n\n            return validateTextInputField(fnr, label, intl);\n        }\n\n        if (fnr === søkersFødselsnummer) {\n            return intlUtils(intl, 'valideringsfeil.fødselsnummer.ugyldigEgetFødselsnummer');\n        }\n\n        const validFnrResult = isFødselsnummerFormatValid(fnr);\n\n        if (!erUtenlandskFnr && !isSixteenOrOlder(fnr, validFnrResult) && validFnrResult === 'fnr') {\n            return intlUtils(intl, 'valideringsfeil.fødselsnummer.underSeksten');\n        }\n\n        return validFnrResult === 'fnr' || validFnrResult === 'dnr' || validFnrResult === 'hnr'\n            ? undefined\n            : intlUtils(intl, 'valideringsfeil.fødselsnummer.ugyldigFødselsnummer');\n    };\n\nexport const validateRequiredField = (value: any, label: string, intl: IntlShape): SkjemaelementFeil => {\n    if (!hasValue(value) || (typeof value === 'string' && value.trim() === '')) {\n        return intlUtils(intl, 'valideringsfeil.inputfelt.required', { inputFeltLabel: label });\n    }\n    return undefined;\n};\n\nexport const validateRequiredTextInputField =\n    (feltNavn: string, intl: IntlShape) =>\n    (value: string): SkjemaelementFeil => {\n        const requiredFieldIsEmptyError = validateRequiredField(value, feltNavn, intl);\n        if (requiredFieldIsEmptyError) {\n            return requiredFieldIsEmptyError;\n        }\n\n        return validateTextInputField(value, feltNavn, intl);\n    };\n"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","iter","len","i","arr2","elevenDigits","fnr","digits","idnr","dnr","hnr","tnr","getType","type","validate","errMsgs","checksums","birthdate","k1","k2","day","month","year","date","validator","isFødselsnummerFormatValid","result","isSixteenOrOlder","isFødselsnummerValid","dato","mnd","år","fødselsdato","dayjs","validateFødselsnummer","intl","søkersFødselsnummer","label","erUtenlandskFnr","intlUtils","validateTextInputField","validFnrResult","validateRequiredField","value","hasValue","validateRequiredTextInputField","feltNavn","requiredFieldIsEmptyError"],"mappings":"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","x_google_ignoreList":[0]}