{"version":3,"file":"IntlProvider-9d12be6d.js","sources":["../../../../packages/ui/src/contentWrapper/ContentWrapper.tsx","../../../../packages/constants/src/links.ts","../../../../packages/ui/src/i18n/ui/UiIntlProvider.tsx","../../../../packages/ui/src/error/ErrorPage.tsx","../../../../packages/ui/src/error/ErrorBoundary.tsx","../../../../packages/ui/src/error/ErrorSummaryFp.tsx","../../../../packages/ui/src/fileUploader/input/FileInput.tsx","../../../../packages/ui/src/i18n/useCustomI18n.ts","../../../../packages/ui/src/fileUploader/fileUtils.ts","../../../../packages/ui/src/fileUploader/liste/AttachmentInfo.tsx","../../../../packages/ui/src/fileUploader/liste/AttachmentList.tsx","../../../../packages/ui/src/fileUploader/typer/FileUploadError.ts","../../../../packages/ui/src/fileUploader/liste/FailedAttachment.tsx","../../../../packages/ui/src/fileUploader/liste/FailedAttachmentList.tsx","../../../../packages/ui/src/fileUploader/FileUploader.tsx","../../../../packages/ui/src/step/StepButtons.tsx","../../../../packages/ui/src/i18n/ui/useUiIntl.ts","../../../../packages/metrics/src/amplitude.ts","../../../../packages/ui/src/umyndig/Umyndig.tsx","../../../../packages/ui/src/i18n/IntlProvider.tsx"],"sourcesContent":["import { bemUtils } from '@navikt/fp-common';\n\nimport './contentWrapper.less';\n\ninterface Props {\n    children: React.ReactElement | React.ReactElement[];\n}\n\nconst ContentWrapper: React.FunctionComponent<Props> = ({ children }) => {\n    const bem = bemUtils('content');\n    return <div className={bem.block}>{children}</div>;\n};\n\nexport default ContentWrapper;\n","export const links = {\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    brukerstøtte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    kontaktOss: 'https://www.nav.no/person/kontakt-oss/nb/tilbakemeldinger/feil-og-mangler',\n    dittNav: 'https://tjenester.nav.no/dittnav/oversikt',\n    foreldrepenger: 'https://foreldrepenger.nav.no',\n    nav: 'https://www.nav.no',\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    personvernerklæring:\n        'https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten',\n    plikter: 'https://nav.no/rettOgPlikt',\n    søknadsveileder: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    veiviser: 'https://familie.nav.no/veiviser',\n    innsyn: 'https://foreldrepenger.nav.no',\n    engangsstonad: 'https://www.nav.no/engangsstonad',\n    farMedmor: 'https://www.nav.no/engangsstonad#far_medmor',\n    barn: 'https://www.nav.no/barn',\n    foreldrepengerUtland: 'https://www.nav.no/foreldrepenger#utland',\n    engangsstonadHvem: 'https://www.nav.no/engangsstonad#hvem',\n    scanneDokument: 'https://www.nav.no/brukerstotte#bilde-vedlegg',\n};\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UiIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UiIntlProvider;\n","import { FunctionComponent } from 'react';\nimport { links } from '@navikt/fp-constants';\nimport { Alert, BodyShort, Button, HStack, Heading, Label, Link, VStack } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appName: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    errorMessage: string;\n    retryCallback: () => void;\n}\n\nconst ErrorPage: FunctionComponent<Props> = ({ appName, errorMessage, retryCallback }) => {\n    //TODO Bytt ut div under med Box frå ds-react når oppdatert til siste versjon\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"20\">\n                    <Heading size=\"large\">\n                        {appName === 'Engangsstønad' && <FormattedMessage id=\"ErrorPage.Engangsstønad\" />}\n                        {appName === 'Foreldrepenger' && <FormattedMessage id=\"ErrorPage.Foreldrepenger\" />}\n                        {appName === 'Svangerskapspenger' && <FormattedMessage id=\"ErrorPage.Svangerskapspenger\" />}\n                    </Heading>\n                    <VStack gap=\"10\">\n                        <Alert variant=\"warning\">\n                            <VStack gap=\"4\">\n                                <Heading size=\"small\">\n                                    <FormattedMessage id=\"ErrorPage.Heading\" />\n                                </Heading>\n                                <BodyShort>\n                                    <FormattedMessage id=\"ErrorPage.Message\" />\n                                </BodyShort>\n                            </VStack>\n                        </Alert>\n                        <HStack gap=\"4\" justify=\"center\">\n                            <Link href={links.kontaktOss} target=\"_blank\">\n                                <Button type=\"button\" variant=\"secondary\">\n                                    <FormattedMessage id=\"ErrorPage.Contact\" />\n                                </Button>\n                            </Link>\n                            <Button type=\"button\" variant=\"primary\" onClick={retryCallback}>\n                                <FormattedMessage id=\"ErrorPage.TryAgain\" />\n                            </Button>\n                        </HStack>\n                        <div style={{ backgroundColor: 'var(--a-gray-200)', padding: '16px', borderRadius: '4px' }}>\n                            <VStack gap=\"2\">\n                                <Label>\n                                    <FormattedMessage id=\"ErrorPage.ErrorMessage\" />\n                                </Label>\n                                <BodyShort>Error: {errorMessage}</BodyShort>\n                            </VStack>\n                        </div>\n                    </VStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorPage;\n","import * as Sentry from '@sentry/browser';\nimport { Component } from 'react';\nimport ErrorPage from './ErrorPage';\n\ninterface Props {\n    appName: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    children: React.ReactNode;\n    retryCallback: () => void;\n}\n\ninterface State {\n    eventId: string | null;\n    hasError: boolean;\n    errorInfo: any;\n    errorMessage: string | undefined;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = { eventId: null, hasError: false, errorInfo: null, errorMessage: undefined };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any) {\n        Sentry.withScope((scope: any) => {\n            scope.setExtras(errorInfo);\n            const eventId = Sentry.captureException(error);\n            this.setState({ eventId, errorInfo });\n        });\n        this.setState({ hasError: true, errorMessage: error?.message });\n    }\n\n    render() {\n        const { appName, retryCallback } = this.props;\n        const { errorMessage, errorInfo } = this.state;\n\n        if (this.state.hasError) {\n            return errorMessage ? (\n                <ErrorPage appName={appName} errorMessage={errorMessage} retryCallback={retryCallback} />\n            ) : (\n                <div>{errorMessage || errorInfo}</div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { FunctionComponent } from 'react';\nimport { ErrorSummary } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nexport type ErrorSummaryError = {\n    message?: string;\n    focus?: () => void;\n};\n\ninterface Props {\n    errorRef: React.RefObject<HTMLDivElement>;\n    errors: ErrorSummaryError[];\n}\n\n//TODO Fjern FP postfix. Er litt misvisande da det kan sjå ut som denne er spesifikk for FP-appen\n\nconst ErrorSummaryFp: FunctionComponent<Props> = ({ errorRef, errors }) => {\n    return (\n        <UiIntlProvider>\n            <ErrorSummary size=\"small\" ref={errorRef} heading={<FormattedMessage id={'ErrorSummaryFp.Tittel'} />}>\n                {Object.values(errors).map((error) => (\n                    <ErrorSummary.Item\n                        key={error.message}\n                        onClick={() => {\n                            if (error.focus) {\n                                error.focus();\n                            }\n                        }}\n                    >\n                        {error.message}\n                    </ErrorSummary.Item>\n                ))}\n            </ErrorSummary>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorSummaryFp;\n","import React, { useCallback, useRef } from 'react';\nimport { Button } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport { UploadIcon } from '@navikt/aksel-icons';\n\nimport './fileInput.less';\nimport { bemUtils } from '@navikt/fp-common';\n\ninterface Props {\n    onFilesSelect: (files: File[]) => void;\n    multiple: boolean;\n    accept: string;\n    hasUplodedAttachements: boolean;\n}\n\nconst FileInput: React.FunctionComponent<Props> = ({ multiple, accept, onFilesSelect, hasUplodedAttachements }) => {\n    const bem = bemUtils('fileInput');\n    const onFileSelect = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.files) {\n                const files = Array.from(e.target.files) as File[];\n                onFilesSelect(files);\n                e.target.value = '';\n            }\n        },\n        [onFilesSelect],\n    );\n\n    const inputElement = useRef<HTMLInputElement>(null);\n\n    const openFileDialog = useCallback(() => {\n        if (inputElement.current) {\n            inputElement.current.click();\n        }\n    }, []);\n\n    return (\n        <>\n            <input\n                ref={inputElement}\n                className={bem.element('input')}\n                type=\"file\"\n                accept={accept}\n                onChange={(e) => onFileSelect(e)}\n                multiple={multiple === true}\n                data-testid=\"file-upload\"\n            />\n            <Button\n                className={bem.element('upload_button')}\n                variant={hasUplodedAttachements ? 'secondary' : 'primary'}\n                type=\"button\"\n                onClick={openFileDialog}\n                icon={<UploadIcon />}\n                iconPosition=\"right\"\n            >\n                {hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp.Flere\" />}\n                {!hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp\" />}\n            </Button>\n        </>\n    );\n};\n\nexport default FileInput;\n","import { PrimitiveType, useIntl } from 'react-intl';\nimport { FormatXMLElementFn } from 'intl-messageformat';\n\nexport type I18nFn = (\n    i18nId: string,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>,\n) => string;\n\nexport type CustomIntlShape = {\n    i18n: I18nFn;\n};\n\nexport const useCustomIntl = (): CustomIntlShape => {\n    const intl = useIntl();\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n","import Bytes from 'bytes';\nimport { Attachment } from '@navikt/fp-types';\nimport { Skjemanummer, AttachmentType } from '@navikt/fp-constants';\n\nconst s4 = (): string =>\n    Math.floor((1 + Math.random()) * 0x10000)\n        .toString()\n        .substring(1);\n\n//TODO Denne ligg sikkert ein annan stad (evt flytt ut)\nconst guid = (): string => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const getTotalFileSize = (files: File[]): number => {\n    return files.reduce(\n        (a, b) =>\n            ({\n                size: a.size + b.size,\n            }) as any,\n        { size: 0 },\n    ).size;\n};\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\n    return {\n        id: generateAttachmentId(),\n        file,\n        filename: file.name,\n        filesize: file.size,\n        uploaded: false,\n        pending: false,\n        type,\n        skjemanummer,\n    };\n};\n","import { VStack, Link, Loader, HStack, Spacer } from '@navikt/ds-react';\nimport { XMarkIcon, FileCheckmarkIcon } from '@navikt/aksel-icons';\n\nimport { useCustomIntl } from '../../i18n/useCustomI18n';\nimport { Attachment } from '@navikt/fp-types';\nimport { bytesString } from '../fileUtils';\n\nimport './attachmentInfo.less';\n\ninterface OwnProps {\n    attachment: Attachment;\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\ntype Props = OwnProps;\n\nconst AttachmentInfo: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const { i18n } = useCustomIntl();\n\n    return (\n        <div className=\"attachmentPanel\">\n            <HStack gap=\"4\">\n                {attachment.pending && <Loader type=\"S\" />}\n                {!attachment.pending && <FileCheckmarkIcon width={24} height={24} />}\n                <VStack gap=\"1\">\n                    {attachment.url ? (\n                        <Link href={attachment.url} target=\"_blank\">\n                            {attachment.filename}\n                        </Link>\n                    ) : (\n                        <span>{attachment.filename}</span>\n                    )}\n                    {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n                </VStack>\n                {onDelete && (\n                    <>\n                        <Spacer />\n                        <XMarkIcon\n                            onClick={() => onDelete(attachment)}\n                            height={24}\n                            width={24}\n                            cursor=\"pointer\"\n                            aria-label={i18n('Attachment.Vedlegg.Slett', { navn: attachment.filename })}\n                        />\n                    </>\n                )}\n            </HStack>\n        </div>\n    );\n};\n\nexport default AttachmentInfo;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport AttachmentInfo from './AttachmentInfo';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    attachments: Attachment[];\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { attachments, showFileSize, onDelete } = props;\n\n    return (\n        <>\n            {attachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {attachments.map((attachment) => (\n                        <Fragment key={guid()}>\n                            <AttachmentInfo attachment={attachment} onDelete={onDelete} showFileSize={showFileSize} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default AttachmentList;\n","export enum FileUploadError {\n    GENERAL = 'GENERAL',\n    TIMEOUT = 'TIMEOUT',\n    VALID_EXTENSION = 'VALID_EXTENSION',\n    MAX_SIZE = 'MAX_SIZE',\n}\n","import { Alert } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Attachment } from '@navikt/fp-types';\nimport { FileUploadError } from '../typer/FileUploadError';\n\nconst MAX_FIL_STØRRELSE_KB = 16777;\n\ninterface OwnProps {\n    failedAttachment: Attachment;\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachment: React.FunctionComponent<OwnProps> = ({ failedAttachment, onDelete }) => {\n    return (\n        <Alert variant=\"warning\" closeButton onClose={() => onDelete(failedAttachment)}>\n            {failedAttachment.error === FileUploadError.GENERAL && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Opplasting.Feilet\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.TIMEOUT && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Timeout\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.MAX_SIZE && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Størrelse\"\n                    values={{ filename: failedAttachment.filename, maxStørrelse: MAX_FIL_STØRRELSE_KB }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.VALID_EXTENSION && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Type\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n        </Alert>\n    );\n};\n\nexport default FailedAttachment;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport FailedAttachment from './FailedAttachment';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    failedAttachments: Attachment[];\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { failedAttachments, onDelete } = props;\n    return (\n        <>\n            {failedAttachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {failedAttachments.map((failedAttachment) => (\n                        <Fragment key={guid()}>\n                            <FailedAttachment failedAttachment={failedAttachment} onDelete={onDelete} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default FailedAttachmentList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { AttachmentType, Skjemanummer } from '@navikt/fp-constants';\n\nimport FileInput from './input/FileInput';\nimport AttachmentList from './liste/AttachmentList';\nimport { Attachment } from '@navikt/fp-types';\nimport { mapFileToAttachment } from './fileUtils';\nimport FailedAttachmentList from './liste/FailedAttachmentList';\nimport { FileUploadError } from './typer/FileUploadError';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_STØRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\n// TODO Fjern any her utan å måtte dra inn axios i denne pakka\ntype SaveAttachment = (attachment: Attachment) => Promise<any>;\n\nconst getPendingAttachmentFromFile = (\n    file: File,\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer,\n): Attachment => {\n    const newAttachment = mapFileToAttachment(file, attachmentType, skjemanummer);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return ext ? VALID_EXTENSIONS.includes(`.${ext.toLowerCase()}`) : false;\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_STØRRELSE_KB;\n};\n\nconst uploadAttachment = async (attachment: Attachment, saveAttachment: SaveAttachment): Promise<void> => {\n    if (!fileExtensionIsValid(attachment.file.name)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.VALID_EXTENSION;\n        return;\n    }\n    if (!fileSizeIsValid(attachment.filesize)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.MAX_SIZE;\n        return;\n    }\n\n    try {\n        const response = await saveAttachment(attachment);\n        attachment.pending = false;\n        attachment.url = response.headers.location;\n        attachment.uploaded = true;\n        attachment.uuid = response.data;\n    } catch (error) {\n        // TODO Burde få ut feilmelding frå backend og vise denne\n        attachment.pending = false;\n\n        // @ts-ignore TODO Fix typing her (Mogleg  mykje av logikken her bør ligga inne i saveAttachment, så slepp ein da inn Axios her)\n        if (error?.response?.status === 408) {\n            attachment.error = FileUploadError.TIMEOUT;\n        } else {\n            attachment.error = FileUploadError.GENERAL;\n        }\n    }\n};\n\nconst EMPTY_ATTACHMENT_LIST = [] as Attachment[];\n\nexport interface Props {\n    updateAttachments: (attachments: Attachment[]) => void;\n    attachmentType: AttachmentType;\n    skjemanummer: Skjemanummer;\n    existingAttachments?: Attachment[];\n    saveAttachment: SaveAttachment;\n    multiple?: boolean;\n}\n\nconst FileUploader: React.FunctionComponent<Props> = ({\n    existingAttachments = EMPTY_ATTACHMENT_LIST,\n    updateAttachments,\n    attachmentType,\n    skjemanummer,\n    saveAttachment,\n    multiple = true,\n}) => {\n    const [attachments, setAttachments] = useState(existingAttachments);\n\n    useEffect(() => {\n        updateAttachments(attachments.filter((a) => !a.error && a.pending === false));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [attachments]);\n\n    const saveFiles = useCallback(\n        (files: File[]) => {\n            const uploadAttachments = async (allPendingAttachments: Attachment[]) => {\n                for (const pendingAttachment of allPendingAttachments) {\n                    await uploadAttachment(pendingAttachment, saveAttachment);\n                    setAttachments((currentAttachments) =>\n                        currentAttachments.map((a) =>\n                            a.filename === pendingAttachment.filename ? pendingAttachment : a,\n                        ),\n                    );\n                }\n            };\n\n            const allPendingAttachments = files.map((file) =>\n                getPendingAttachmentFromFile(file, attachmentType, skjemanummer),\n            );\n            setAttachments((currentAttachments) => {\n                const otherAttachments = currentAttachments.filter(\n                    (ca) => !allPendingAttachments.some((pa) => pa.filename === ca.filename),\n                );\n                return otherAttachments.concat(allPendingAttachments);\n            });\n            uploadAttachments(allPendingAttachments);\n        },\n        [attachmentType, skjemanummer, saveAttachment],\n    );\n\n    const deleteAttachment = useCallback((file: Attachment) => {\n        setAttachments((currentAttachments) => currentAttachments.filter((a) => a.filename !== file.filename));\n    }, []);\n\n    const uploadedAttachments = useMemo(() => attachments.filter((a) => !a.error), [attachments]);\n    const failedAttachments = useMemo(() => attachments.filter((a) => !!a.error), [attachments]);\n\n    return (\n        <UiIntlProvider>\n            <VStack gap=\"6\">\n                <AttachmentList attachments={uploadedAttachments} showFileSize={true} onDelete={deleteAttachment} />\n                <FileInput\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={saveFiles}\n                    hasUplodedAttachements={uploadedAttachments.length > 0}\n                    multiple={multiple}\n                />\n                <FailedAttachmentList failedAttachments={failedAttachments} onDelete={deleteAttachment} />\n            </VStack>\n        </UiIntlProvider>\n    );\n};\n\nexport default FileUploader;\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\ninterface Props {\n    goToPreviousStep: () => void;\n    nextButtonText?: string;\n    nextButtonOnClick?: (setButtonsDisabled: (isDisabled: boolean) => void) => void;\n    isSubmitting: boolean;\n}\n\nconst StepButtons: FunctionComponent<Props> = ({\n    goToPreviousStep,\n    nextButtonText,\n    nextButtonOnClick,\n    isSubmitting,\n}) => {\n    const [disabled, setDisabled] = useState(false);\n\n    const onClickNextButton = useCallback(() => {\n        if (nextButtonOnClick) {\n            nextButtonOnClick((d: boolean) => setDisabled(d));\n        }\n    }, [nextButtonOnClick]);\n\n    return (\n        <UiIntlProvider>\n            <StepButtonWrapper>\n                <Button type=\"button\" variant=\"secondary\" onClick={goToPreviousStep}>\n                    <FormattedMessage id=\"StepButtons.Forrige\" />\n                </Button>\n                <Button\n                    type={nextButtonOnClick ? 'button' : 'submit'}\n                    onClick={onClickNextButton}\n                    disabled={disabled}\n                    loading={isSubmitting}\n                >\n                    {nextButtonText !== undefined && nextButtonText}\n                    {!nextButtonText && <FormattedMessage id={'StepButtons.Neste'} />}\n                </Button>\n            </StepButtonWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default StepButtons;\n","import { useMemo } from 'react';\nimport { useIntl, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUiIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return intl;\n};\n\nexport default useUiIntl;\n","import amplitude from 'amplitude-js';\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = false) => {\n    if (logToConsoleOnly) {\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            // tslint:disable-next-line\n            console.error(error);\n        }\n    });\n};\n","import { FormattedMessage, IntlShape } from 'react-intl';\nimport { useDocumentTitle } from '@navikt/fp-common';\nimport { logAmplitudeEvent } from '@navikt/fp-metrics';\nimport { Button, GuidePanel, Heading, VStack, HStack } from '@navikt/ds-react';\nimport { ArrowRightIcon } from '@navikt/aksel-icons';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n}\n\nconst getTitleText = (appnavn: Props['appnavn'], intl: IntlShape): string => {\n    switch (appnavn) {\n        case 'Engangsstønad':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Engangsstonad' });\n        case 'Foreldrepenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Foreldrepenger' });\n        case 'Svangerskapspenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Svangerskapspenger' });\n    }\n};\n\nconst Umyndig: React.FunctionComponent<Props> = ({ appnavn }) => {\n    const intl = useUiIntl();\n\n    const titleText = getTitleText(appnavn, intl);\n    useDocumentTitle(titleText);\n\n    logAmplitudeEvent('sidevisning', {\n        app: appnavn,\n        team: 'foreldrepenger',\n        pageKey: 'umyndig',\n    });\n\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"10\">\n                    <Heading level=\"1\" size=\"xlarge\">\n                        {titleText}\n                    </Heading>\n                    <GuidePanel poster>\n                        <VStack gap=\"8\">\n                            <Heading level=\"2\" size=\"small\">\n                                <FormattedMessage id=\"Umyndig.Tittel\" />\n                            </Heading>\n                            <FormattedMessage id=\"Umyndig.Tekst\" />\n                        </VStack>\n                    </GuidePanel>\n                    <HStack justify=\"center\">\n                        <Button as=\"a\" icon={<ArrowRightIcon />} iconPosition=\"right\" href={links.papirsøknad}>\n                            <FormattedMessage id=\"Umyndig.Knapp.Papirsøknad\" />\n                        </Button>\n                    </HStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default Umyndig;\n","import { IntlProvider as Provider } from 'react-intl';\nimport { LocaleAll } from '@navikt/fp-types';\n\ninterface Props<T extends LocaleAll> {\n    locale: T;\n    messagesGroupedByLocale: Record<T, Record<string, string>>;\n    children: React.ReactNode;\n}\n\nconst IntlProvider = <T extends LocaleAll>({ locale, messagesGroupedByLocale, children }: Props<T>) => {\n    const messages = messagesGroupedByLocale[locale];\n    return (\n        <Provider locale={locale} messages={messages || {}}>\n            {children}\n        </Provider>\n    );\n};\n\nexport default IntlProvider;\n"],"names":["ContentWrapper","children","bem","bemUtils","jsx","links","getLanguageMessages","locale","nbMessages","nnMessages","enMessages","UiIntlProvider","useIntl","messages","useMemo","Provider","ErrorPage","appName","errorMessage","retryCallback","jsxs","VStack","Heading","FormattedMessage","Alert","BodyShort","HStack","Link","Button","Label","ErrorBoundary","Component","props","error","errorInfo","Sentry.withScope","scope","eventId","Sentry.captureException","ErrorSummaryFp","errorRef","errors","ErrorSummary","FileInput","multiple","accept","onFilesSelect","hasUplodedAttachements","onFileSelect","useCallback","e","files","inputElement","useRef","openFileDialog","Fragment","UploadIcon","useCustomIntl","intl","i18nId","values","s4","guid","bytesString","bytes","Bytes","generateAttachmentId","mapFileToAttachment","file","type","skjemanummer","AttachmentInfo","attachment","showFileSize","onDelete","i18n","Loader","FileCheckmarkIcon","Spacer","XMarkIcon","AttachmentList","attachments","Fragment2","FileUploadError","MAX_FIL_STØRRELSE_KB","FailedAttachment","failedAttachment","FailedAttachmentList","failedAttachments","VALID_EXTENSIONS","KILOBYTES_IN_BYTE","getPendingAttachmentFromFile","attachmentType","newAttachment","fileExtensionIsValid","filename","ext","fileSizeIsValid","filesizeInB","uploadAttachment","saveAttachment","response","_a","EMPTY_ATTACHMENT_LIST","FileUploader","existingAttachments","updateAttachments","setAttachments","useState","useEffect","a","saveFiles","uploadAttachments","allPendingAttachments2","pendingAttachment","currentAttachments","allPendingAttachments","ca","pa","deleteAttachment","uploadedAttachments","StepButtons","goToPreviousStep","nextButtonText","nextButtonOnClick","isSubmitting","disabled","setDisabled","onClickNextButton","d","StepButtonWrapper","cache","createIntlCache","createIntl","createReactIntl","useUiIntl","logAmplitudeEvent","eventName","eventData","logToConsoleOnly","amplitude","getTitleText","appnavn","Umyndig","titleText","useDocumentTitle","GuidePanel","ArrowRightIcon","IntlProvider","messagesGroupedByLocale"],"mappings":"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"}