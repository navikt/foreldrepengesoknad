{"version":3,"file":"AnnenForelder-d9e39785.js","sources":["../../../../packages/fp-common/src/common/types/SivilstandType.ts","../../src/app/steps/annen-forelder/annenforelderFormConfig.ts","../../src/app/steps/annen-forelder/annenForelderFormUtils.ts","../../src/app/steps/annen-forelder/annenForelderQuestionsConfig.ts","../../src/app/steps/annen-forelder/components/AvtaleAtFarTarUtForeldrepengerVeileder.tsx","../../src/app/steps/annen-forelder/components/FarDokumentasjonAleneomsorgVeileder.tsx","../../src/app/steps/annen-forelder/components/MåOrientereAnnenForelderVeileder.tsx","../../src/app/steps/annen-forelder/validation/annenForelderValidering.ts","../../src/app/steps/annen-forelder/components/OppgiPersonalia.tsx","../../src/app/steps/annen-forelder/AnnenForelder.tsx"],"sourcesContent":["export enum SivilstandType {\n    UOPPGITT = 'UOPPGITT',\n    UGIFT = 'UGIFT',\n    GIFT = 'GIFT',\n    ENKE_ELLER_ENKEMANN = 'ENKE_ELLER_ENKEMANN',\n    SKILT = 'SKILT',\n    SEPARERT = 'SEPARERT',\n    REGISTRERT_PARTNER = 'REGISTRERT_PARTNER',\n    SEPARERT_PARTNER = 'SEPARERT_PARTNER',\n    SKILT_PARTNER = 'SKILT_PARTNER',\n    GJENLEVENDE_PARTNER = 'GJENLEVENDE_PARTNER',\n}\n","import { Attachment } from '@navikt/fp-common';\nimport { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum AnnenForelderFormField {\n    kanIkkeOppgis = 'kanIkkeOppgis',\n    harRettPåForeldrepengerINorge = 'harRettPåForeldrepengerINorge',\n    harOppholdtSegIEØS = 'harOppholdtSegIEØS',\n    harRettPåForeldrepengerIEØS = 'harRettPåForeldrepengerIEØS',\n    erInformertOmSøknaden = 'erInformertOmSøknaden',\n    fornavn = 'fornavn',\n    etternavn = 'etternavn',\n    fnr = 'fnr',\n    utenlandskFnr = 'utenlandskFnr',\n    aleneOmOmsorg = 'aleneOmOmsorg',\n    erMorUfør = 'erMorUfør',\n    datoForAleneomsorg = 'datoForAleneomsorg',\n    bostedsland = 'bostedsland',\n    dokumentasjonAvAleneomsorg = 'dokumentasjonAvAleneomsorg',\n}\n\nexport interface AnnenForelderFormData {\n    [AnnenForelderFormField.kanIkkeOppgis]: boolean;\n    [AnnenForelderFormField.harRettPåForeldrepengerINorge]: YesOrNo;\n    [AnnenForelderFormField.harOppholdtSegIEØS]: YesOrNo;\n    [AnnenForelderFormField.harRettPåForeldrepengerIEØS]: YesOrNo;\n    [AnnenForelderFormField.erInformertOmSøknaden]: YesOrNo;\n    [AnnenForelderFormField.fornavn]: string;\n    [AnnenForelderFormField.etternavn]: string;\n    [AnnenForelderFormField.fnr]: string;\n    [AnnenForelderFormField.utenlandskFnr]: boolean;\n    [AnnenForelderFormField.aleneOmOmsorg]: YesOrNo;\n    [AnnenForelderFormField.erMorUfør]: YesOrNo;\n    [AnnenForelderFormField.datoForAleneomsorg]: string;\n    [AnnenForelderFormField.bostedsland]: string;\n    [AnnenForelderFormField.dokumentasjonAvAleneomsorg]: Attachment[];\n}\n\nexport const AnnenForelderFormComponents = getTypedFormComponents<\n    AnnenForelderFormField,\n    AnnenForelderFormData,\n    string\n>();\n","import {\n    AnnenForelder,\n    AttachmentType,\n    Barn,\n    RegistrertAnnenForelder,\n    Skjemanummer,\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n    hasValue,\n    intlUtils,\n    isAnnenForelderIkkeOppgitt,\n    isAnnenForelderOppgitt,\n    lagSendSenereDokumentNårIngenAndreFinnes,\n} from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport Søker from 'app/context/types/Søker';\nimport { IntlShape } from 'react-intl';\nimport { AnnenForelderFormData, AnnenForelderFormField } from './annenforelderFormConfig';\nimport { YesOrNo, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { replaceInvisibleCharsWithSpace } from '@navikt/fp-common/src/common/utils/stringUtils';\n\nexport const initialAnnenForelderValues: AnnenForelderFormData = {\n    [AnnenForelderFormField.kanIkkeOppgis]: false,\n    [AnnenForelderFormField.harRettPåForeldrepengerINorge]: YesOrNo.UNANSWERED,\n    [AnnenForelderFormField.harOppholdtSegIEØS]: YesOrNo.UNANSWERED,\n    [AnnenForelderFormField.harRettPåForeldrepengerIEØS]: YesOrNo.UNANSWERED,\n    [AnnenForelderFormField.erInformertOmSøknaden]: YesOrNo.UNANSWERED,\n    [AnnenForelderFormField.fornavn]: '',\n    [AnnenForelderFormField.etternavn]: '',\n    [AnnenForelderFormField.fnr]: '',\n    [AnnenForelderFormField.utenlandskFnr]: false,\n    [AnnenForelderFormField.aleneOmOmsorg]: YesOrNo.UNANSWERED,\n    [AnnenForelderFormField.erMorUfør]: YesOrNo.UNANSWERED,\n    [AnnenForelderFormField.datoForAleneomsorg]: '',\n    [AnnenForelderFormField.bostedsland]: '',\n    [AnnenForelderFormField.dokumentasjonAvAleneomsorg]: [],\n};\n\nexport const cleanAnnenForelderFormData = (\n    values: AnnenForelderFormData,\n    visibility: QuestionVisibility<AnnenForelderFormField, undefined>,\n    annenForelderFraRegistrertBarn: RegistrertAnnenForelder | undefined,\n): AnnenForelderFormData => {\n    const cleanedData: AnnenForelderFormData = {\n        aleneOmOmsorg: visibility.isVisible(AnnenForelderFormField.aleneOmOmsorg)\n            ? values.aleneOmOmsorg\n            : YesOrNo.UNANSWERED,\n        bostedsland: visibility.isVisible(AnnenForelderFormField.bostedsland) ? values.bostedsland : '',\n        datoForAleneomsorg: visibility.isVisible(AnnenForelderFormField.datoForAleneomsorg)\n            ? values.datoForAleneomsorg\n            : '',\n        dokumentasjonAvAleneomsorg: visibility.isVisible(AnnenForelderFormField.dokumentasjonAvAleneomsorg)\n            ? lagSendSenereDokumentNårIngenAndreFinnes(\n                  values.dokumentasjonAvAleneomsorg,\n                  AttachmentType.ALENEOMSORG,\n                  Skjemanummer.DOK_AV_ALENEOMSORG,\n              )\n            : [],\n        erInformertOmSøknaden: visibility.isVisible(AnnenForelderFormField.erInformertOmSøknaden)\n            ? values.erInformertOmSøknaden\n            : YesOrNo.UNANSWERED,\n        erMorUfør: visibility.isVisible(AnnenForelderFormField.erMorUfør) ? values.erMorUfør : YesOrNo.UNANSWERED,\n        etternavn: visibility.isVisible(AnnenForelderFormField.etternavn) ? values.etternavn : '',\n        fnr: visibility.isVisible(AnnenForelderFormField.fnr) ? values.fnr : '',\n        fornavn: visibility.isVisible(AnnenForelderFormField.fornavn) ? values.fornavn : '',\n        harRettPåForeldrepengerINorge: visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepengerINorge)\n            ? values.harRettPåForeldrepengerINorge\n            : YesOrNo.UNANSWERED,\n        harOppholdtSegIEØS: visibility.isVisible(AnnenForelderFormField.harOppholdtSegIEØS)\n            ? values.harOppholdtSegIEØS\n            : YesOrNo.UNANSWERED,\n        harRettPåForeldrepengerIEØS: visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepengerIEØS)\n            ? values.harRettPåForeldrepengerIEØS\n            : YesOrNo.UNANSWERED,\n        kanIkkeOppgis: visibility.isVisible(AnnenForelderFormField.kanIkkeOppgis) ? values.kanIkkeOppgis : false,\n        utenlandskFnr: visibility.isVisible(AnnenForelderFormField.utenlandskFnr) ? values.utenlandskFnr : false,\n    };\n\n    if (annenForelderFraRegistrertBarn !== undefined) {\n        return {\n            ...cleanedData,\n            fornavn: annenForelderFraRegistrertBarn.fornavn,\n            etternavn: annenForelderFraRegistrertBarn.etternavn,\n            fnr: annenForelderFraRegistrertBarn.fnr,\n        };\n    }\n\n    return cleanedData;\n};\n\nexport const mapAnnenForelderFormToState = (values: Partial<AnnenForelderFormData>): AnnenForelder => {\n    if (values.kanIkkeOppgis === false) {\n        const harOppholdtSegIEØS = convertYesOrNoOrUndefinedToBoolean(values.harOppholdtSegIEØS);\n        const harRettPåForeldrepengerIEØS = harOppholdtSegIEØS\n            ? convertYesOrNoOrUndefinedToBoolean(values.harRettPåForeldrepengerIEØS)\n            : false;\n        return {\n            etternavn: hasValue(values.etternavn) ? replaceInvisibleCharsWithSpace(values.etternavn!) : undefined,\n            fornavn: hasValue(values.fornavn) ? replaceInvisibleCharsWithSpace(values.fornavn!) : undefined,\n            fnr:\n                hasValue(values.fnr) && values.fnr !== undefined\n                    ? replaceInvisibleCharsWithSpace(values.fnr.trim())\n                    : undefined,\n            bostedsland: hasValue(values.bostedsland) ? values.bostedsland : undefined,\n            utenlandskFnr: hasValue(values.utenlandskFnr) ? values.utenlandskFnr : undefined,\n            erUfør: convertYesOrNoOrUndefinedToBoolean(values.erMorUfør),\n            kanIkkeOppgis: values.kanIkkeOppgis,\n            harRettPåForeldrepengerINorge: convertYesOrNoOrUndefinedToBoolean(values.harRettPåForeldrepengerINorge),\n            harOppholdtSegIEØS,\n            harRettPåForeldrepengerIEØS,\n            erInformertOmSøknaden: convertYesOrNoOrUndefinedToBoolean(values.erInformertOmSøknaden),\n        };\n    }\n\n    return {\n        kanIkkeOppgis: true,\n    };\n};\n\nexport const getAnnenForelderFormInitialValues = (\n    annenForelder: AnnenForelder,\n    barn: Barn,\n    annenForelderFraRegistrertBarn: RegistrertAnnenForelder | undefined,\n    intl: IntlShape,\n    søker?: Søker,\n): AnnenForelderFormData => {\n    if (isAnnenForelderOppgitt(annenForelder) && hasValue(annenForelder.fornavn)) {\n        return {\n            ...initialAnnenForelderValues,\n            harRettPåForeldrepengerINorge: convertBooleanOrUndefinedToYesOrNo(\n                annenForelder.harRettPåForeldrepengerINorge,\n            ),\n            harOppholdtSegIEØS: convertBooleanOrUndefinedToYesOrNo(annenForelder.harOppholdtSegIEØS),\n            harRettPåForeldrepengerIEØS: convertBooleanOrUndefinedToYesOrNo(annenForelder.harRettPåForeldrepengerIEØS),\n            bostedsland: annenForelder.bostedsland || '',\n            erInformertOmSøknaden: convertBooleanOrUndefinedToYesOrNo(annenForelder.erInformertOmSøknaden),\n            erMorUfør: convertBooleanOrUndefinedToYesOrNo(annenForelder.erUfør),\n            dokumentasjonAvAleneomsorg: barn.dokumentasjonAvAleneomsorg || [],\n            etternavn: annenForelder.etternavn,\n            fornavn: annenForelder.fornavn === intlUtils(intl, 'annen.forelder') ? '' : annenForelder.fornavn,\n            kanIkkeOppgis: annenForelder.kanIkkeOppgis,\n            fnr: annenForelder.fnr,\n            aleneOmOmsorg: convertBooleanOrUndefinedToYesOrNo(søker?.erAleneOmOmsorg),\n            datoForAleneomsorg: dateToISOString(barn.datoForAleneomsorg) || '',\n            utenlandskFnr: annenForelder.utenlandskFnr || false,\n        };\n    }\n\n    if (annenForelderFraRegistrertBarn !== undefined) {\n        return {\n            ...initialAnnenForelderValues,\n            fornavn: annenForelderFraRegistrertBarn.fornavn,\n            etternavn: annenForelderFraRegistrertBarn.etternavn,\n            fnr: annenForelderFraRegistrertBarn.fnr,\n        };\n    }\n\n    if (isAnnenForelderIkkeOppgitt(annenForelder)) {\n        return {\n            ...initialAnnenForelderValues,\n            kanIkkeOppgis: annenForelder.kanIkkeOppgis,\n        };\n    }\n\n    return {\n        ...initialAnnenForelderValues,\n    };\n};\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\nimport { AnnenForelderFormData, AnnenForelderFormField } from './annenforelderFormConfig';\nimport { Søkerrolle, hasValue, isFarEllerMedmor } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport interface AnnenForelderQuestionsPayload extends AnnenForelderFormData {\n    skalOppgiPersonalia: boolean;\n    søkerRolle: Søkerrolle;\n    gjelderStebarnsadopsjon: boolean;\n}\n\nconst isAnnenForelderKanIkkeOppgisIncluded = (søkerRolle: Søkerrolle, gjelderStebarnsadopsjon: boolean): boolean => {\n    if (gjelderStebarnsadopsjon) {\n        return false;\n    }\n\n    if (søkerRolle === 'medmor') {\n        return false;\n    }\n\n    return true;\n};\n\nconst AnnenForelderFormConfig: QuestionConfig<AnnenForelderQuestionsPayload, AnnenForelderFormField> = {\n    [AnnenForelderFormField.fornavn]: {\n        isAnswered: ({ fornavn }) => hasValue(fornavn),\n        isIncluded: ({ skalOppgiPersonalia }) => skalOppgiPersonalia,\n        isOptional: ({ kanIkkeOppgis }) => kanIkkeOppgis === true,\n    },\n    [AnnenForelderFormField.etternavn]: {\n        isAnswered: ({ etternavn }) => hasValue(etternavn),\n        isIncluded: ({ skalOppgiPersonalia }) => skalOppgiPersonalia,\n        isOptional: ({ kanIkkeOppgis }) => kanIkkeOppgis === true,\n    },\n    [AnnenForelderFormField.kanIkkeOppgis]: {\n        isAnswered: ({ kanIkkeOppgis }) => hasValue(kanIkkeOppgis),\n        isOptional: () => true,\n        isIncluded: ({ skalOppgiPersonalia, søkerRolle, gjelderStebarnsadopsjon }) =>\n            skalOppgiPersonalia && isAnnenForelderKanIkkeOppgisIncluded(søkerRolle, gjelderStebarnsadopsjon),\n    },\n    [AnnenForelderFormField.fnr]: {\n        isAnswered: ({ fnr, utenlandskFnr }) => hasValue(fnr) || (utenlandskFnr === true && hasValue(fnr)),\n        isIncluded: ({ skalOppgiPersonalia, kanIkkeOppgis }) => skalOppgiPersonalia && kanIkkeOppgis !== true,\n        visibilityFilter: ({ fornavn, etternavn }) => hasValue(fornavn) && hasValue(etternavn),\n    },\n    [AnnenForelderFormField.utenlandskFnr]: {\n        isAnswered: ({ utenlandskFnr }) => hasValue(utenlandskFnr),\n        visibilityFilter: ({ kanIkkeOppgis, fornavn, etternavn }) =>\n            kanIkkeOppgis !== true && hasValue(fornavn) && hasValue(etternavn),\n        isIncluded: ({ skalOppgiPersonalia }) => skalOppgiPersonalia,\n        isOptional: () => true,\n    },\n    [AnnenForelderFormField.aleneOmOmsorg]: {\n        isAnswered: ({ aleneOmOmsorg }) => aleneOmOmsorg !== YesOrNo.UNANSWERED,\n        isIncluded: ({ kanIkkeOppgis }) => kanIkkeOppgis === false,\n        visibilityFilter: ({ skalOppgiPersonalia, fnr, utenlandskFnr, bostedsland }) =>\n            !skalOppgiPersonalia ||\n            (skalOppgiPersonalia && hasValue(fnr) && utenlandskFnr === false) ||\n            (skalOppgiPersonalia && hasValue(bostedsland) && utenlandskFnr === true),\n    },\n    [AnnenForelderFormField.dokumentasjonAvAleneomsorg]: {\n        isAnswered: () => true,\n        isIncluded: ({ aleneOmOmsorg, søkerRolle }) => aleneOmOmsorg === YesOrNo.YES && søkerRolle !== 'mor',\n        visibilityFilter: ({ aleneOmOmsorg, datoForAleneomsorg }) =>\n            aleneOmOmsorg === YesOrNo.YES || hasValue(datoForAleneomsorg),\n    },\n    [AnnenForelderFormField.harRettPåForeldrepengerINorge]: {\n        parentQuestion: AnnenForelderFormField.aleneOmOmsorg,\n        isAnswered: ({ harRettPåForeldrepengerINorge }) => harRettPåForeldrepengerINorge !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ aleneOmOmsorg }) => aleneOmOmsorg === YesOrNo.NO,\n    },\n    [AnnenForelderFormField.harOppholdtSegIEØS]: {\n        parentQuestion: AnnenForelderFormField.harRettPåForeldrepengerINorge,\n        isAnswered: ({ harOppholdtSegIEØS }) => harOppholdtSegIEØS !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ aleneOmOmsorg }) => aleneOmOmsorg === YesOrNo.NO,\n        isIncluded: ({ harRettPåForeldrepengerINorge }) => harRettPåForeldrepengerINorge === YesOrNo.NO,\n    },\n    [AnnenForelderFormField.harRettPåForeldrepengerIEØS]: {\n        parentQuestion: AnnenForelderFormField.harOppholdtSegIEØS,\n        isAnswered: ({ harRettPåForeldrepengerIEØS }) => harRettPåForeldrepengerIEØS !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ aleneOmOmsorg }) => aleneOmOmsorg === YesOrNo.NO,\n        isIncluded: ({ harOppholdtSegIEØS }) => harOppholdtSegIEØS === YesOrNo.YES,\n    },\n    [AnnenForelderFormField.erInformertOmSøknaden]: {\n        parentQuestion: AnnenForelderFormField.harRettPåForeldrepengerINorge,\n        isAnswered: ({ erInformertOmSøknaden }) => erInformertOmSøknaden !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ aleneOmOmsorg, harRettPåForeldrepengerINorge }) =>\n            aleneOmOmsorg === YesOrNo.NO && harRettPåForeldrepengerINorge === YesOrNo.YES,\n    },\n    [AnnenForelderFormField.erMorUfør]: {\n        parentQuestion: AnnenForelderFormField.harRettPåForeldrepengerINorge,\n        isAnswered: ({ erMorUfør }) => erMorUfør !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({\n            aleneOmOmsorg,\n            harRettPåForeldrepengerINorge,\n            harRettPåForeldrepengerIEØS,\n            harOppholdtSegIEØS,\n            søkerRolle,\n        }) =>\n            aleneOmOmsorg === YesOrNo.NO &&\n            harRettPåForeldrepengerINorge === YesOrNo.NO &&\n            (harOppholdtSegIEØS === YesOrNo.NO || harRettPåForeldrepengerIEØS === YesOrNo.NO) &&\n            isFarEllerMedmor(søkerRolle),\n    },\n    [AnnenForelderFormField.datoForAleneomsorg]: {\n        isAnswered: ({ datoForAleneomsorg }) => hasValue(datoForAleneomsorg),\n        isIncluded: ({ aleneOmOmsorg, søkerRolle }) => aleneOmOmsorg === YesOrNo.YES && isFarEllerMedmor(søkerRolle),\n    },\n    [AnnenForelderFormField.bostedsland]: {\n        isAnswered: ({ bostedsland }) => hasValue(bostedsland),\n        isIncluded: ({ utenlandskFnr }) => utenlandskFnr === true,\n        visibilityFilter: ({ fnr }) => hasValue(fnr),\n    },\n};\n\nexport const annenForelderQuestionsConfig = Questions<AnnenForelderQuestionsPayload, AnnenForelderFormField>(\n    AnnenForelderFormConfig,\n);\n","import { FormattedMessage } from 'react-intl';\nimport { GuidePanel } from '@navikt/ds-react';\n\nimport './annenForelderVeileder.less';\n\ninterface Props {\n    visible: boolean;\n    annenForelderNavn: string;\n}\n\nconst AvtaleAtFarTarUtForeldrepengerVeileder: React.FunctionComponent<Props> = ({ visible, annenForelderNavn }) => {\n    if (!visible) {\n        return null;\n    }\n\n    return (\n        <div className=\"annenForelderVeileder\">\n            <GuidePanel>\n                <FormattedMessage\n                    id=\"annenForelder.veileder.aleneOmsorg.forBarnet\"\n                    values={{ navn: annenForelderNavn }}\n                />\n            </GuidePanel>\n        </div>\n    );\n};\n\nexport default AvtaleAtFarTarUtForeldrepengerVeileder;\n","import { FormattedMessage } from 'react-intl';\nimport { GuidePanel } from '@navikt/ds-react';\n\nimport './annenForelderVeileder.less';\n\nconst FarDokumentasjonAleneomsorgVeileder: React.FunctionComponent = () => {\n    return (\n        <div className=\"annenForelderVeileder\">\n            <GuidePanel>\n                <FormattedMessage id=\"annenForelder.farMedmor.dokumentasjonAvAleneomsorg.veileder\" />\n            </GuidePanel>\n        </div>\n    );\n};\n\nexport default FarDokumentasjonAleneomsorgVeileder;\n","import { FormattedMessage } from 'react-intl';\nimport { Alert } from '@navikt/ds-react';\n\nimport './annenForelderVeileder.less';\n\ninterface Props {\n    visible: boolean;\n    annenForelderNavn: string;\n}\n\nconst MåOrientereAnnenForelderVeileder: React.FunctionComponent<Props> = ({ visible, annenForelderNavn }) => {\n    if (!visible) {\n        return null;\n    }\n\n    return (\n        <div className=\"annenForelderVeileder\">\n            <Alert variant=\"warning\">\n                <FormattedMessage\n                    id=\"annenForelder.erAnnenForelderInformert.veileder\"\n                    values={{ navn: annenForelderNavn }}\n                />\n            </Alert>\n        </div>\n    );\n};\n\nexport default MåOrientereAnnenForelderVeileder;\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { formatDate, hasValue, intlUtils, validateTextInputField } from '@navikt/fp-common';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validateDatoForAleneomsorg =\n    (intl: IntlShape, familiehendelsedato: dayjs.Dayjs) => (datoForAleneomsorg: string) => {\n        if (!hasValue(datoForAleneomsorg)) {\n            return intlUtils(intl, 'valideringsfeil.annenForelder.datoForAleneomsorg.duMåOppgi');\n        }\n\n        if (!isISODateString(datoForAleneomsorg)) {\n            return intlUtils(intl, 'valideringsfeil.annenForelder.datoForAleneomsorg.ugyldigDatoFormat');\n        }\n\n        if (dayjs(datoForAleneomsorg).isBefore(familiehendelsedato, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.annenForelder.datoForAleneomsorg.førFamiliehendelsedato', {\n                dato: formatDate(familiehendelsedato.toDate()),\n            });\n        }\n\n        return undefined;\n    };\n\nexport const validateFornavn = (intl: IntlShape, label: string, kanIkkeOppgis?: boolean) => (fornavn: string) => {\n    if (!kanIkkeOppgis && (!hasValue(fornavn) || fornavn.trim() === '')) {\n        return intlUtils(intl, 'valideringsfeil.annenForelder.fornavnPåkrevd');\n    }\n\n    return validateTextInputField(fornavn, label, intl);\n};\n\nexport const validateEtternavn = (intl: IntlShape, label: string, kanIkkeOppgis?: boolean) => (etternavn: string) => {\n    if (!kanIkkeOppgis && (!hasValue(etternavn) || etternavn.trim() === '')) {\n        return intlUtils(intl, 'valideringsfeil.annenForelder.etternavnPåkrevd');\n    }\n    return validateTextInputField(etternavn, label, intl);\n};\n","import { useIntl } from 'react-intl';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { AnnenForelderFormComponents, AnnenForelderFormField } from '../annenforelderFormConfig';\nimport { bemUtils, Block, intlUtils } from '@navikt/fp-common';\nimport { validateEtternavn, validateFornavn } from '../validation/annenForelderValidering';\nimport { validateFødselsnummer } from 'app/utils/validationUtil';\nimport { Label } from '@navikt/ds-react';\n\nimport './oppgiPersonalia.less';\n\ninterface Props {\n    fornavn: string | undefined;\n    kanIkkeOppgis: boolean | undefined;\n    erUtenlandskFnr: boolean | undefined;\n    visibility: QuestionVisibility<AnnenForelderFormField, undefined>;\n    gjelderAdopsjon: boolean;\n    søkersFødselsnummer: string;\n}\n\nconst OppgiPersonalia: React.FunctionComponent<Props> = ({\n    fornavn,\n    erUtenlandskFnr,\n    kanIkkeOppgis,\n    visibility,\n    gjelderAdopsjon,\n    søkersFødselsnummer,\n}) => {\n    const intl = useIntl();\n    const bem = bemUtils('oppgiPersonalia');\n    const fornavnLabel = intlUtils(intl, 'annenForelder.spørsmål.fornavn');\n    const etternavnLabel = intlUtils(intl, 'annenForelder.spørsmål.etternavn');\n    const fnrLabel = intlUtils(intl, 'annenForelder.spørsmål.fnr', { navn: fornavn });\n    return (\n        <div className={bem.block}>\n            <Block padBottom=\"xl\">\n                <legend>\n                    <Label>{intlUtils(intl, 'annenForelder.spørsmål.navn')}</Label>\n                </legend>\n                <Block visible={visibility.isVisible(AnnenForelderFormField.fornavn)}>\n                    <div className={bem.element('nameInputsWrapper')}>\n                        <AnnenForelderFormComponents.TextField\n                            className={bem.element('nameInput')}\n                            name={AnnenForelderFormField.fornavn}\n                            label={fornavnLabel}\n                            disabled={kanIkkeOppgis}\n                            validate={validateFornavn(intl, fornavnLabel, kanIkkeOppgis)}\n                        />\n                        <AnnenForelderFormComponents.TextField\n                            className={bem.element('nameInput')}\n                            name={AnnenForelderFormField.etternavn}\n                            label={intlUtils(intl, 'annenForelder.spørsmål.etternavn')}\n                            disabled={kanIkkeOppgis}\n                            validate={validateEtternavn(intl, etternavnLabel, kanIkkeOppgis)}\n                        />\n                    </div>\n                </Block>\n                <Block visible={visibility.isVisible(AnnenForelderFormField.kanIkkeOppgis)}>\n                    <AnnenForelderFormComponents.Checkbox\n                        name={AnnenForelderFormField.kanIkkeOppgis}\n                        label={\n                            gjelderAdopsjon\n                                ? intlUtils(intl, 'annenForelder.spørsmål.adoptererAlene')\n                                : intlUtils(intl, 'annenForelder.spørsmål.kanOppgis')\n                        }\n                    />\n                </Block>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.fnr)}>\n                <AnnenForelderFormComponents.TextField\n                    name={AnnenForelderFormField.fnr}\n                    label={fnrLabel}\n                    validate={validateFødselsnummer(intl, søkersFødselsnummer, fnrLabel, erUtenlandskFnr)}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.utenlandskFnr)}>\n                <AnnenForelderFormComponents.Checkbox\n                    name={AnnenForelderFormField.utenlandskFnr}\n                    label={intlUtils(intl, 'annenForelder.spørsmål.utenlandskFnr', { navn: fornavn })}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(AnnenForelderFormField.bostedsland)}>\n                <AnnenForelderFormComponents.CountrySelect\n                    name={AnnenForelderFormField.bostedsland}\n                    label={intlUtils(intl, 'annenForelder.bostedsland', { navn: fornavn })}\n                    useAlpha3Code={false}\n                />\n            </Block>\n        </div>\n    );\n};\n\nexport default OppgiPersonalia;\n","import { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { Alert, BodyLong, BodyShort, Button, ReadMore } from '@navikt/ds-react';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { notEmpty } from '@navikt/fp-validation';\nimport {\n    AttachmentType,\n    Barn,\n    Block,\n    convertYesOrNoOrUndefinedToBoolean,\n    getKjønnFromFnrString,\n    hasValue,\n    intlUtils,\n    isAdoptertStebarn,\n    isAnnenForelderOppgitt,\n    isFarEllerMedmor,\n    ISOStringToDate,\n    isUfødtBarn,\n    links,\n    SivilstandType,\n    Skjemanummer,\n    Step,\n    StepButtonWrapper,\n    Søkerinfo,\n} from '@navikt/fp-common';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport Søker from 'app/context/types/Søker';\nimport SøknadRoutes from 'app/routes/routes';\nimport { getFamiliehendelsedato, getRegistrerteBarnOmDeFinnes } from 'app/utils/barnUtils';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport { ContextDataType, useContextGetData, useContextSaveData } from 'app/context/FpDataContext';\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\nimport { AnnenForelderFormComponents, AnnenForelderFormData, AnnenForelderFormField } from './annenforelderFormConfig';\nimport {\n    cleanAnnenForelderFormData,\n    getAnnenForelderFormInitialValues,\n    mapAnnenForelderFormToState,\n} from './annenForelderFormUtils';\nimport { annenForelderQuestionsConfig, AnnenForelderQuestionsPayload } from './annenForelderQuestionsConfig';\nimport AvtaleAtFarTarUtForeldrepengerVeileder from './components/AvtaleAtFarTarUtForeldrepengerVeileder';\nimport FarDokumentasjonAleneomsorgVeileder from './components/FarDokumentasjonAleneomsorgVeileder';\nimport MåOrientereAnnenForelderVeileder from './components/MåOrientereAnnenForelderVeileder';\nimport OppgiPersonalia from './components/OppgiPersonalia';\nimport { validateDatoForAleneomsorg } from './validation/annenForelderValidering';\nimport RegistrertePersonalia from '../../components/registrerte-personalia/RegistrertePersonalia';\nimport BackButton from '../BackButton';\n\ntype Props = {\n    søkerInfo: Søkerinfo;\n    mellomlagreSøknadOgNaviger: () => Promise<void>;\n    avbrytSøknad: () => void;\n};\n\nconst AnnenForelder: React.FunctionComponent<Props> = ({ søkerInfo, mellomlagreSøknadOgNaviger, avbrytSøknad }) => {\n    const intl = useIntl();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const { rolle } = notEmpty(useContextGetData(ContextDataType.SØKERSITUASJON));\n    const barn = notEmpty(useContextGetData(ContextDataType.OM_BARNET));\n    const annenForelder = useContextGetData(ContextDataType.ANNEN_FORELDER) || {\n        kanIkkeOppgis: false,\n    };\n    const søker = useContextGetData(ContextDataType.SØKER);\n\n    const oppdaterAppRoute = useContextSaveData(ContextDataType.APP_ROUTE);\n    const oppdaterOmBarnet = useContextSaveData(ContextDataType.OM_BARNET);\n    const oppdaterAnnenForeldre = useContextSaveData(ContextDataType.ANNEN_FORELDER);\n    const oppdaterSøker = useContextSaveData(ContextDataType.SØKER);\n\n    const familiehendelsedato = dayjs(getFamiliehendelsedato(barn));\n    const registrerteBarn = getRegistrerteBarnOmDeFinnes(barn, søkerInfo.registrerteBarn);\n    const registrertBarnMedAnnenForelder =\n        registrerteBarn === undefined || registrerteBarn.length === 0\n            ? undefined\n            : registrerteBarn.find((barn) => barn.annenForelder !== undefined);\n    const annenForelderFraRegistrertBarn =\n        registrertBarnMedAnnenForelder !== undefined ? registrertBarnMedAnnenForelder.annenForelder : undefined;\n\n    const skalOppgiPersonalia =\n        annenForelderFraRegistrertBarn === undefined ||\n        (annenForelder !== undefined &&\n            isAnnenForelderOppgitt(annenForelder) &&\n            annenForelder.fnr !== annenForelderFraRegistrertBarn.fnr);\n    const søkerErFar = rolle === 'far';\n    const søkerErMor = rolle === 'mor';\n    const søkerErIkkeGift =\n        søkerInfo.person.sivilstand === undefined || søkerInfo.person.sivilstand.type !== SivilstandType.GIFT;\n    const barnetErIkkeFødt = isUfødtBarn(barn);\n    let tekstOmFarskapsportalId = '';\n    if (søkerErFar && barnetErIkkeFødt) {\n        tekstOmFarskapsportalId = 'annenForelder.tekstOmFarskapsportal.far.del1';\n    }\n    if (søkerErMor && barnetErIkkeFødt) {\n        tekstOmFarskapsportalId = 'annenForelder.tekstOmFarskapsportal.mor.del1';\n    }\n\n    const onSubmit = (values: Partial<AnnenForelderFormData>) => {\n        setIsSubmitting(true);\n\n        // @ts-ignore TODO (TOR) Søker er dårleg typa. Her skal den kunne innehalda kun erAleneOmsorg, og så blir den utvida seinare\n        const newSøker: Søker = {\n            ...(søker || {}),\n            erAleneOmOmsorg: values.kanIkkeOppgis ? true : !!convertYesOrNoOrUndefinedToBoolean(values.aleneOmOmsorg),\n        };\n        const newBarn: Barn = {\n            ...barn,\n            datoForAleneomsorg: hasValue(values.datoForAleneomsorg)\n                ? ISOStringToDate(values.datoForAleneomsorg)\n                : undefined,\n            dokumentasjonAvAleneomsorg:\n                values.dokumentasjonAvAleneomsorg && values.dokumentasjonAvAleneomsorg.length > 0\n                    ? values.dokumentasjonAvAleneomsorg\n                    : undefined,\n        };\n\n        oppdaterOmBarnet(newBarn);\n        oppdaterSøker(newSøker);\n        oppdaterAnnenForeldre(mapAnnenForelderFormToState(values));\n\n        oppdaterAppRoute(SøknadRoutes.UTTAKSPLAN_INFO);\n\n        mellomlagreSøknadOgNaviger();\n    };\n\n    return (\n        <AnnenForelderFormComponents.FormikWrapper\n            initialValues={getAnnenForelderFormInitialValues(\n                annenForelder,\n                barn,\n                annenForelderFraRegistrertBarn,\n                intl,\n                søker,\n            )}\n            onSubmit={onSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = annenForelderQuestionsConfig.getVisbility({\n                    ...formValues,\n                    skalOppgiPersonalia,\n                    søkerRolle: rolle,\n                    gjelderStebarnsadopsjon: isAdoptertStebarn(barn) ? true : false,\n                } as AnnenForelderQuestionsPayload);\n\n                const annenForelderHarRett = formValues.harRettPåForeldrepengerINorge === YesOrNo.YES;\n                const fnrFraAnnenForelder = isAnnenForelderOppgitt(annenForelder) ? annenForelder.fnr : undefined;\n                const oppgittFnr = formValues.fnr;\n                const annenForelderFnr = fnrFraAnnenForelder || oppgittFnr;\n                const annenForelderErFarEllerUtenlandsk =\n                    (annenForelderFnr !== undefined && getKjønnFromFnrString(annenForelderFnr) === 'M') ||\n                    formValues.utenlandskFnr;\n                const annenForelderHarRettErBesvart = formValues.harRettPåForeldrepengerINorge !== YesOrNo.UNANSWERED;\n                const farErInformert =\n                    convertYesOrNoOrUndefinedToBoolean(formValues.aleneOmOmsorg) ||\n                    !convertYesOrNoOrUndefinedToBoolean(formValues.harRettPåForeldrepengerINorge) ||\n                    (convertYesOrNoOrUndefinedToBoolean(formValues.harRettPåForeldrepengerINorge) &&\n                        convertYesOrNoOrUndefinedToBoolean(formValues.erInformertOmSøknaden));\n\n                const kanGåVidereMedSøknaden = visibility.areAllQuestionsAnswered() && farErInformert;\n                const visInfoboksOmFarskapsportal =\n                    ((søkerErFar && annenForelderHarRettErBesvart) ||\n                        (søkerErMor && annenForelderErFarEllerUtenlandsk && annenForelderHarRett)) &&\n                    barnetErIkkeFødt &&\n                    søkerErIkkeGift;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"annenForelder\"\n                        pageTitle={intlUtils(intl, 'søknad.annenForelder')}\n                        onCancel={avbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl, false)}\n                    >\n                        <AnnenForelderFormComponents.Form\n                            includeButtons={false}\n                            cleanup={(values) =>\n                                cleanAnnenForelderFormData(values, visibility, annenForelderFraRegistrertBarn)\n                            }\n                            includeValidationSummary={true}\n                        >\n                            {skalOppgiPersonalia && (\n                                <Block padBottom=\"xl\">\n                                    <OppgiPersonalia\n                                        fornavn={formValues.fornavn}\n                                        erUtenlandskFnr={formValues.utenlandskFnr}\n                                        kanIkkeOppgis={formValues.kanIkkeOppgis}\n                                        visibility={visibility}\n                                        gjelderAdopsjon={false}\n                                        søkersFødselsnummer={søkerInfo.person.fnr}\n                                    />\n                                </Block>\n                            )}\n                            {!skalOppgiPersonalia && (\n                                <Block padBottom=\"xl\">\n                                    <RegistrertePersonalia\n                                        person={annenForelderFraRegistrertBarn}\n                                        fødselsnummerForVisning={annenForelderFraRegistrertBarn.fnr}\n                                        visEtternavn={true}\n                                    />\n                                </Block>\n                            )}\n                            <Block\n                                visible={\n                                    visibility.isVisible(AnnenForelderFormField.aleneOmOmsorg) || !skalOppgiPersonalia\n                                }\n                                padBottom=\"xl\"\n                            >\n                                <AnnenForelderFormComponents.RadioGroup\n                                    name={AnnenForelderFormField.aleneOmOmsorg}\n                                    legend={intlUtils(intl, 'annenForelder.aleneOmOmsorg')}\n                                    radios={[\n                                        { label: 'Ja', value: YesOrNo.NO },\n                                        { label: 'Nei, jeg har aleneomsorg', value: YesOrNo.YES },\n                                    ]}\n                                />\n                                <ReadMore header={intlUtils(intl, 'annenForelder.aleneOmOmsorg.apneLabel')}>\n                                    <Block padBottom=\"xl\">\n                                        <BodyLong>{intlUtils(intl, 'annenForelder.aleneOmOmsorg.del1')}</BodyLong>\n                                    </Block>\n                                    <BodyShort>{intlUtils(intl, 'annenForelder.aleneOmOmsorg.del2')}</BodyShort>\n                                </ReadMore>\n                                <AvtaleAtFarTarUtForeldrepengerVeileder\n                                    visible={!isFarEllerMedmor(rolle) && formValues.aleneOmOmsorg === YesOrNo.YES}\n                                    annenForelderNavn={formValues.fornavn!}\n                                />\n                            </Block>\n\n                            {!formValues.kanIkkeOppgis && (\n                                <Block\n                                    padBottom=\"xl\"\n                                    visible={visibility.isVisible(AnnenForelderFormField.datoForAleneomsorg)}\n                                >\n                                    <Block>\n                                        <AnnenForelderFormComponents.DatePicker\n                                            name={AnnenForelderFormField.datoForAleneomsorg}\n                                            label={intlUtils(intl, 'annenForelder.datoForAleneomsorg')}\n                                            minDate={familiehendelsedato.toDate()}\n                                            validate={validateDatoForAleneomsorg(intl, familiehendelsedato)}\n                                            placeholder={'dd.mm.åååå'}\n                                        />\n                                    </Block>\n\n                                    <FarDokumentasjonAleneomsorgVeileder />\n\n                                    <FormikFileUploader\n                                        legend=\"Dokumentasjon for aleneomsorg\"\n                                        label={intlUtils(\n                                            intl,\n                                            'annenForelder.farMedmor.dokumentasjonAvAleneomsorg.lastOpp',\n                                        )}\n                                        name={AnnenForelderFormField.dokumentasjonAvAleneomsorg}\n                                        attachments={formValues.dokumentasjonAvAleneomsorg || []}\n                                        attachmentType={AttachmentType.ALENEOMSORG}\n                                        skjemanummer={Skjemanummer.DOK_AV_ALENEOMSORG}\n                                    />\n                                </Block>\n                            )}\n                            <Block\n                                padBottom=\"xl\"\n                                visible={visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepengerINorge)}\n                            >\n                                <AnnenForelderFormComponents.YesOrNoQuestion\n                                    name={AnnenForelderFormField.harRettPåForeldrepengerINorge}\n                                    legend={intlUtils(intl, 'annenForelder.harRettPåForeldrepengerINorge', {\n                                        navn: formValues.fornavn,\n                                    })}\n                                />\n                                <ReadMore\n                                    header={intlUtils(\n                                        intl,\n                                        'annenForelder.harRettPåForeldrepengerINorge.veileder.apneLabel',\n                                    )}\n                                >\n                                    <Block padBottom=\"m\">\n                                        <FormattedMessage id=\"annenForelder.harRettPåForeldrepengerINorge.veileder\"></FormattedMessage>\n                                    </Block>\n                                    <ul style={{ margin: '0', padding: '1rem 2rem 0' }}>\n                                        <li>\n                                            <FormattedMessage id=\"annenForelder.harRettPåForeldrepengerINorge.veileder.punkt1\" />\n                                        </li>\n                                        <li>\n                                            <FormattedMessage id=\"annenForelder.harRettPåForeldrepengerINorge.veileder.punkt2\" />\n                                        </li>\n                                        <li>\n                                            <FormattedMessage id=\"annenForelder.harRettPåForeldrepengerINorge.veileder.punkt3\" />\n                                        </li>\n                                    </ul>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"l\"\n                                visible={\n                                    visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepengerINorge) &&\n                                    visInfoboksOmFarskapsportal\n                                }\n                            >\n                                <Alert variant=\"info\">\n                                    <Block padBottom=\"l\">\n                                        <FormattedMessage\n                                            id={tekstOmFarskapsportalId}\n                                            values={{\n                                                a: (msg: any) => (\n                                                    <a\n                                                        href={links.farskapsportal}\n                                                        className=\"lenke\"\n                                                        rel=\"noreferrer\"\n                                                        target=\"_blank\"\n                                                    >\n                                                        {msg}\n                                                    </a>\n                                                ),\n                                            }}\n                                        />\n                                    </Block>\n                                    <Block>\n                                        <FormattedMessage id=\"annenForelder.tekstOmFarskapsportal.mor.far.del2\" />\n                                    </Block>\n                                </Alert>\n                            </Block>\n                            <Block\n                                padBottom=\"l\"\n                                visible={visibility.isVisible(AnnenForelderFormField.harOppholdtSegIEØS)}\n                            >\n                                <AnnenForelderFormComponents.YesOrNoQuestion\n                                    name={AnnenForelderFormField.harOppholdtSegIEØS}\n                                    legend={intlUtils(intl, 'annenForelder.harOppholdtSegIEØS', {\n                                        navn: formValues.fornavn,\n                                    })}\n                                />\n                                <ReadMore\n                                    header={intlUtils(intl, 'annenForelder.harOppholdtSegIEØS.veileder.apneLabel')}\n                                >\n                                    <FormattedMessage\n                                        id=\"annenForelder.harOppholdtSegIEØS.veileder\"\n                                        values={{ navn: formValues.fornavn }}\n                                    ></FormattedMessage>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"xl\"\n                                visible={visibility.isVisible(AnnenForelderFormField.harRettPåForeldrepengerIEØS)}\n                            >\n                                <AnnenForelderFormComponents.YesOrNoQuestion\n                                    name={AnnenForelderFormField.harRettPåForeldrepengerIEØS}\n                                    legend={intlUtils(intl, 'annenForelder.harRettPåForeldrepengerIEØS', {\n                                        navn: formValues.fornavn,\n                                    })}\n                                />\n                                <ReadMore\n                                    header={intlUtils(\n                                        intl,\n                                        'annenForelder.harRettPåForeldrepengerIEØS.veileder.apneLabel',\n                                    )}\n                                >\n                                    <Block padBottom=\"l\">\n                                        <FormattedMessage\n                                            id=\"annenForelder.harRettPåForeldrepengerIEØS.veileder.del1\"\n                                            values={{ navn: formValues.fornavn }}\n                                        ></FormattedMessage>\n                                    </Block>\n\n                                    <Block padBottom=\"l\">\n                                        <FormattedMessage\n                                            id=\"annenForelder.harRettPåForeldrepengerIEØS.veileder.del2\"\n                                            values={{ navn: formValues.fornavn }}\n                                        ></FormattedMessage>\n                                    </Block>\n\n                                    <Block>\n                                        <Link to=\"https://www.nav.no/foreldrepenger#utland\" target=\"_blank\">\n                                            <FormattedMessage\n                                                id=\"annenForelder.harRettPåForeldrepengerIEØS.veileder.link\"\n                                                values={{ navn: formValues.fornavn }}\n                                            />\n                                        </Link>\n                                    </Block>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"xl\"\n                                visible={visibility.isVisible(AnnenForelderFormField.erInformertOmSøknaden)}\n                            >\n                                <AnnenForelderFormComponents.YesOrNoQuestion\n                                    name={AnnenForelderFormField.erInformertOmSøknaden}\n                                    legend={intlUtils(intl, 'annenForelder.spørsmål.erAnnenForelderInformert', {\n                                        navn: formValues.fornavn,\n                                    })}\n                                />\n                                <MåOrientereAnnenForelderVeileder\n                                    visible={formValues.erInformertOmSøknaden === YesOrNo.NO}\n                                    annenForelderNavn={formValues.fornavn!}\n                                />\n                            </Block>\n\n                            <Block padBottom=\"xl\" visible={visibility.isVisible(AnnenForelderFormField.erMorUfør)}>\n                                <AnnenForelderFormComponents.YesOrNoQuestion\n                                    name={AnnenForelderFormField.erMorUfør}\n                                    legend={intlUtils(intl, 'annenForelder.erMorUfør', {\n                                        navn: formValues.fornavn,\n                                    })}\n                                />\n                                <ReadMore header={intlUtils(intl, 'annenForelder.erMorUfør.veileder.apneLabel')}>\n                                    <Block>\n                                        <FormattedMessage\n                                            id=\"annenForelder.erMorUfør.veileder\"\n                                            values={{ navnAnnenForelder: formValues.fornavn }}\n                                        />\n                                    </Block>\n                                </ReadMore>\n                            </Block>\n                            <Block margin=\"l\">\n                                <StepButtonWrapper>\n                                    <BackButton\n                                        mellomlagreSøknadOgNaviger={mellomlagreSøknadOgNaviger}\n                                        route={getPreviousStepHref('annenForelder')}\n                                    />\n                                    {kanGåVidereMedSøknaden && (\n                                        <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                            {intlUtils(intl, 'søknad.gåVidere')}\n                                        </Button>\n                                    )}\n                                </StepButtonWrapper>\n                            </Block>\n                        </AnnenForelderFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default AnnenForelder;\n"],"names":["SivilstandType","AnnenForelderFormField","AnnenForelderFormComponents","getTypedFormComponents","initialAnnenForelderValues","YesOrNo","cleanAnnenForelderFormData","values","visibility","annenForelderFraRegistrertBarn","cleanedData","lagSendSenereDokumentNårIngenAndreFinnes","AttachmentType","Skjemanummer","mapAnnenForelderFormToState","harOppholdtSegIEØS","convertYesOrNoOrUndefinedToBoolean","harRettPåForeldrepengerIEØS","hasValue","replaceInvisibleCharsWithSpace","getAnnenForelderFormInitialValues","annenForelder","barn","intl","søker","isAnnenForelderOppgitt","convertBooleanOrUndefinedToYesOrNo","intlUtils","dateToISOString","isAnnenForelderIkkeOppgitt","isAnnenForelderKanIkkeOppgisIncluded","søkerRolle","gjelderStebarnsadopsjon","AnnenForelderFormConfig","fornavn","skalOppgiPersonalia","kanIkkeOppgis","etternavn","fnr","utenlandskFnr","aleneOmOmsorg","bostedsland","datoForAleneomsorg","harRettPåForeldrepengerINorge","erInformertOmSøknaden","erMorUfør","isFarEllerMedmor","annenForelderQuestionsConfig","Questions","AvtaleAtFarTarUtForeldrepengerVeileder","visible","annenForelderNavn","jsx","GuidePanel","FormattedMessage","FarDokumentasjonAleneomsorgVeileder","MåOrientereAnnenForelderVeileder","Alert","validateDatoForAleneomsorg","familiehendelsedato","isISODateString","dayjs","formatDate","validateFornavn","label","validateTextInputField","validateEtternavn","OppgiPersonalia","erUtenlandskFnr","gjelderAdopsjon","søkersFødselsnummer","useIntl","bem","bemUtils","fornavnLabel","etternavnLabel","fnrLabel","jsxs","Block","Label","validateFødselsnummer","AnnenForelder","søkerInfo","mellomlagreSøknadOgNaviger","avbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","isSubmitting","setIsSubmitting","useState","rolle","notEmpty","useContextGetData","ContextDataType","oppdaterAppRoute","useContextSaveData","oppdaterOmBarnet","oppdaterAnnenForeldre","oppdaterSøker","getFamiliehendelsedato","registrerteBarn","getRegistrerteBarnOmDeFinnes","registrertBarnMedAnnenForelder","barn2","søkerErFar","søkerErMor","søkerErIkkeGift","barnetErIkkeFødt","isUfødtBarn","tekstOmFarskapsportalId","onSubmit","newSøker","newBarn","ISOStringToDate","SøknadRoutes","formValues","isAdoptertStebarn","annenForelderHarRett","fnrFraAnnenForelder","oppgittFnr","annenForelderFnr","annenForelderErFarEllerUtenlandsk","getKjønnFromFnrString","annenForelderHarRettErBesvart","farErInformert","kanGåVidereMedSøknaden","visInfoboksOmFarskapsportal","Step","stepConfig","RegistrertePersonalia","ReadMore","BodyLong","BodyShort","FormikFileUploader","msg","links","Link","StepButtonWrapper","BackButton","getPreviousStepHref","Button","AnnenForelder$1"],"mappings":"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"}