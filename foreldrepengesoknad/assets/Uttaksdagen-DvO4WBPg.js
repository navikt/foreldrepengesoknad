import{c as j,g as V}from"./index-CTjT7uj6.js";function pe(e,a){for(var r=0;r<a.length;r++){const s=a[r];if(typeof s!="string"&&!Array.isArray(s)){for(const A in s)if(A!=="default"&&!(A in e)){const f=Object.getOwnPropertyDescriptor(s,A);f&&Object.defineProperty(e,A,f.get?f:{enumerable:!0,get:()=>s[A]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}var he={exports:{}};(function(e,a){(function(r,s){e.exports=s()})(j,function(){var r=1e3,s=6e4,A=36e5,f="millisecond",m="second",d="minute",D="hour",F="day",T="week",y="month",p="quarter",N="year",v="date",E="Invalid Date",R=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,P=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,Y={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(l){var i=["th","st","nd","rd"],t=l%100;return"["+l+(i[(t-20)%10]||i[t]||i[0])+"]"}},U=function(l,i,t){var S=String(l);return!S||S.length>=i?l:""+Array(i+1-S.length).join(t)+l},W={s:U,z:function(l){var i=-l.utcOffset(),t=Math.abs(i),S=Math.floor(t/60),n=t%60;return(i<=0?"+":"-")+U(S,2,"0")+":"+U(n,2,"0")},m:function l(i,t){if(i.date()<t.date())return-l(t,i);var S=12*(t.year()-i.year())+(t.month()-i.month()),n=i.clone().add(S,y),O=t-n<0,h=i.clone().add(S+(O?-1:1),y);return+(-(S+(t-n)/(O?n-h:h-n))||0)},a:function(l){return l<0?Math.ceil(l)||0:Math.floor(l)},p:function(l){return{M:y,y:N,w:T,d:F,D:v,h:D,m:d,s:m,ms:f,Q:p}[l]||String(l||"").toLowerCase().replace(/s$/,"")},u:function(l){return l===void 0}},u="en",c={};c[u]=Y;var B="$isDayjsObject",G=function(l){return l instanceof ae||!(!l||!l[B])},M=function l(i,t,S){var n;if(!i)return u;if(typeof i=="string"){var O=i.toLowerCase();c[O]&&(n=O),t&&(c[O]=t,n=O);var h=i.split("-");if(!n&&h.length>1)return l(h[0])}else{var g=i.name;c[g]=i,n=g}return!S&&n&&(u=n),n||!S&&u},I=function(l,i){if(G(l))return l.clone();var t=typeof i=="object"?i:{};return t.date=l,t.args=arguments,new ae(t)},C=W;C.l=M,C.i=G,C.w=function(l,i){return I(l,{locale:i.$L,utc:i.$u,x:i.$x,$offset:i.$offset})};var ae=function(){function l(t){this.$L=M(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[B]=!0}var i=l.prototype;return i.parse=function(t){this.$d=function(S){var n=S.date,O=S.utc;if(n===null)return new Date(NaN);if(C.u(n))return new Date;if(n instanceof Date)return new Date(n);if(typeof n=="string"&&!/Z$/i.test(n)){var h=n.match(R);if(h){var g=h[2]-1||0,b=(h[7]||"0").substring(0,3);return O?new Date(Date.UTC(h[1],g,h[3]||1,h[4]||0,h[5]||0,h[6]||0,b)):new Date(h[1],g,h[3]||1,h[4]||0,h[5]||0,h[6]||0,b)}}return new Date(n)}(t),this.init()},i.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},i.$utils=function(){return C},i.isValid=function(){return this.$d.toString()!==E},i.isSame=function(t,S){var n=I(t);return this.startOf(S)<=n&&n<=this.endOf(S)},i.isAfter=function(t,S){return I(t)<this.startOf(S)},i.isBefore=function(t,S){return this.endOf(S)<I(t)},i.$g=function(t,S,n){return C.u(t)?this[S]:this.set(n,t)},i.unix=function(){return Math.floor(this.valueOf()/1e3)},i.valueOf=function(){return this.$d.getTime()},i.startOf=function(t,S){var n=this,O=!!C.u(S)||S,h=C.p(t),g=function(_,K){var w=C.w(n.$u?Date.UTC(n.$y,K,_):new Date(n.$y,K,_),n);return O?w:w.endOf(F)},b=function(_,K){return C.w(n.toDate()[_].apply(n.toDate("s"),(O?[0,0,0,0]:[23,59,59,999]).slice(K)),n)},k=this.$W,L=this.$M,$=this.$D,J="set"+(this.$u?"UTC":"");switch(h){case N:return O?g(1,0):g(31,11);case y:return O?g(1,L):g(0,L+1);case T:var Z=this.$locale().weekStart||0,Q=(k<Z?k+7:k)-Z;return g(O?$-Q:$+(6-Q),L);case F:case v:return b(J+"Hours",0);case D:return b(J+"Minutes",1);case d:return b(J+"Seconds",2);case m:return b(J+"Milliseconds",3);default:return this.clone()}},i.endOf=function(t){return this.startOf(t,!1)},i.$set=function(t,S){var n,O=C.p(t),h="set"+(this.$u?"UTC":""),g=(n={},n[F]=h+"Date",n[v]=h+"Date",n[y]=h+"Month",n[N]=h+"FullYear",n[D]=h+"Hours",n[d]=h+"Minutes",n[m]=h+"Seconds",n[f]=h+"Milliseconds",n)[O],b=O===F?this.$D+(S-this.$W):S;if(O===y||O===N){var k=this.clone().set(v,1);k.$d[g](b),k.init(),this.$d=k.set(v,Math.min(this.$D,k.daysInMonth())).$d}else g&&this.$d[g](b);return this.init(),this},i.set=function(t,S){return this.clone().$set(t,S)},i.get=function(t){return this[C.p(t)]()},i.add=function(t,S){var n,O=this;t=Number(t);var h=C.p(S),g=function(L){var $=I(O);return C.w($.date($.date()+Math.round(L*t)),O)};if(h===y)return this.set(y,this.$M+t);if(h===N)return this.set(N,this.$y+t);if(h===F)return g(1);if(h===T)return g(7);var b=(n={},n[d]=s,n[D]=A,n[m]=r,n)[h]||1,k=this.$d.getTime()+t*b;return C.w(k,this)},i.subtract=function(t,S){return this.add(-1*t,S)},i.format=function(t){var S=this,n=this.$locale();if(!this.isValid())return n.invalidDate||E;var O=t||"YYYY-MM-DDTHH:mm:ssZ",h=C.z(this),g=this.$H,b=this.$m,k=this.$M,L=n.weekdays,$=n.months,J=n.meridiem,Z=function(K,w,z,ue){return K&&(K[w]||K(S,O))||z[w].slice(0,ue)},Q=function(K){return C.s(g%12||12,K,"0")},_=J||function(K,w,z){var ue=K<12?"AM":"PM";return z?ue.toLowerCase():ue};return O.replace(P,function(K,w){return w||function(z){switch(z){case"YY":return String(S.$y).slice(-2);case"YYYY":return C.s(S.$y,4,"0");case"M":return k+1;case"MM":return C.s(k+1,2,"0");case"MMM":return Z(n.monthsShort,k,$,3);case"MMMM":return Z($,k);case"D":return S.$D;case"DD":return C.s(S.$D,2,"0");case"d":return String(S.$W);case"dd":return Z(n.weekdaysMin,S.$W,L,2);case"ddd":return Z(n.weekdaysShort,S.$W,L,3);case"dddd":return L[S.$W];case"H":return String(g);case"HH":return C.s(g,2,"0");case"h":return Q(1);case"hh":return Q(2);case"a":return _(g,b,!0);case"A":return _(g,b,!1);case"m":return String(b);case"mm":return C.s(b,2,"0");case"s":return String(S.$s);case"ss":return C.s(S.$s,2,"0");case"SSS":return C.s(S.$ms,3,"0");case"Z":return h}return null}(K)||h.replace(":","")})},i.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},i.diff=function(t,S,n){var O,h=this,g=C.p(S),b=I(t),k=(b.utcOffset()-this.utcOffset())*s,L=this-b,$=function(){return C.m(h,b)};switch(g){case N:O=$()/12;break;case y:O=$();break;case p:O=$()/3;break;case T:O=(L-k)/6048e5;break;case F:O=(L-k)/864e5;break;case D:O=L/A;break;case d:O=L/s;break;case m:O=L/r;break;default:O=L}return n?O:C.a(O)},i.daysInMonth=function(){return this.endOf(y).$D},i.$locale=function(){return c[this.$L]},i.locale=function(t,S){if(!t)return this.$L;var n=this.clone(),O=M(t,S,!0);return O&&(n.$L=O),n},i.clone=function(){return C.w(this.$d,this)},i.toDate=function(){return new Date(this.valueOf())},i.toJSON=function(){return this.isValid()?this.toISOString():null},i.toISOString=function(){return this.$d.toISOString()},i.toString=function(){return this.$d.toUTCString()},l}(),fe=ae.prototype;return I.prototype=fe,[["$ms",f],["$s",m],["$m",d],["$H",D],["$W",F],["$M",y],["$y",N],["$D",v]].forEach(function(l){fe[l[1]]=function(i){return this.$g(i,l[0],l[1])}}),I.extend=function(l,i){return l.$i||(l(i,ae,I),l.$i=!0),I},I.locale=M,I.isDayjs=G,I.unix=function(l){return I(1e3*l)},I.en=c[u],I.Ls=c,I.p={},I})})(he);var Le=he.exports;const o=V(Le),ve=/(19|20)\d{2}-(0?[1-9]|1[0-2])-(0?[1-9]|1\d|2\d|3[01])$/,Re="YYYY-MM-DD",Ue="DD.MM.YYYY",Ke="DD.MM.YY",$e="DD. MMMM YYYY",Pe="dddd DD. MMMM YYYY",Ye="dddd DD.MM.YY",He="D. MMMM YYYY",Ga=o("1000-01-01").toDate(),Na=o("9999-31-12").toDate(),ce=o().toDate();o().subtract(6,"month").startOf("day").toDate();const ka=o().add(1,"years").toDate(),pa=o().subtract(1,"years").toDate();o().startOf("days").subtract(3,"years").startOf("day");const La=o().subtract(4,"year").startOf("day"),va=o().subtract(5,"month").startOf("day").toDate(),Ra=o().subtract(20,"years").startOf("day").toDate();var ee={};const we=[["AF","AFG","004","ISO 3166-2:AF"],["AL","ALB","008","ISO 3166-2:AL"],["DZ","DZA","012","ISO 3166-2:DZ"],["AS","ASM","016","ISO 3166-2:AS"],["AD","AND","020","ISO 3166-2:AD"],["AO","AGO","024","ISO 3166-2:AO"],["AI","AIA","660","ISO 3166-2:AI"],["AQ","ATA","010","ISO 3166-2:AQ"],["AG","ATG","028","ISO 3166-2:AG"],["AR","ARG","032","ISO 3166-2:AR"],["AM","ARM","051","ISO 3166-2:AM"],["AW","ABW","533","ISO 3166-2:AW"],["AU","AUS","036","ISO 3166-2:AU"],["AT","AUT","040","ISO 3166-2:AT"],["AZ","AZE","031","ISO 3166-2:AZ"],["BS","BHS","044","ISO 3166-2:BS"],["BH","BHR","048","ISO 3166-2:BH"],["BD","BGD","050","ISO 3166-2:BD"],["BB","BRB","052","ISO 3166-2:BB"],["BY","BLR","112","ISO 3166-2:BY"],["BE","BEL","056","ISO 3166-2:BE"],["BZ","BLZ","084","ISO 3166-2:BZ"],["BJ","BEN","204","ISO 3166-2:BJ"],["BM","BMU","060","ISO 3166-2:BM"],["BT","BTN","064","ISO 3166-2:BT"],["BO","BOL","068","ISO 3166-2:BO"],["BA","BIH","070","ISO 3166-2:BA"],["BW","BWA","072","ISO 3166-2:BW"],["BV","BVT","074","ISO 3166-2:BV"],["BR","BRA","076","ISO 3166-2:BR"],["IO","IOT","086","ISO 3166-2:IO"],["BN","BRN","096","ISO 3166-2:BN"],["BG","BGR","100","ISO 3166-2:BG"],["BF","BFA","854","ISO 3166-2:BF"],["BI","BDI","108","ISO 3166-2:BI"],["KH","KHM","116","ISO 3166-2:KH"],["CM","CMR","120","ISO 3166-2:CM"],["CA","CAN","124","ISO 3166-2:CA"],["CV","CPV","132","ISO 3166-2:CV"],["KY","CYM","136","ISO 3166-2:KY"],["CF","CAF","140","ISO 3166-2:CF"],["TD","TCD","148","ISO 3166-2:TD"],["CL","CHL","152","ISO 3166-2:CL"],["CN","CHN","156","ISO 3166-2:CN"],["CX","CXR","162","ISO 3166-2:CX"],["CC","CCK","166","ISO 3166-2:CC"],["CO","COL","170","ISO 3166-2:CO"],["KM","COM","174","ISO 3166-2:KM"],["CG","COG","178","ISO 3166-2:CG"],["CD","COD","180","ISO 3166-2:CD"],["CK","COK","184","ISO 3166-2:CK"],["CR","CRI","188","ISO 3166-2:CR"],["CI","CIV","384","ISO 3166-2:CI"],["HR","HRV","191","ISO 3166-2:HR"],["CU","CUB","192","ISO 3166-2:CU"],["CY","CYP","196","ISO 3166-2:CY"],["CZ","CZE","203","ISO 3166-2:CZ"],["DK","DNK","208","ISO 3166-2:DK"],["DJ","DJI","262","ISO 3166-2:DJ"],["DM","DMA","212","ISO 3166-2:DM"],["DO","DOM","214","ISO 3166-2:DO"],["EC","ECU","218","ISO 3166-2:EC"],["EG","EGY","818","ISO 3166-2:EG"],["SV","SLV","222","ISO 3166-2:SV"],["GQ","GNQ","226","ISO 3166-2:GQ"],["ER","ERI","232","ISO 3166-2:ER"],["EE","EST","233","ISO 3166-2:EE"],["ET","ETH","231","ISO 3166-2:ET"],["FK","FLK","238","ISO 3166-2:FK"],["FO","FRO","234","ISO 3166-2:FO"],["FJ","FJI","242","ISO 3166-2:FJ"],["FI","FIN","246","ISO 3166-2:FI"],["FR","FRA","250","ISO 3166-2:FR"],["GF","GUF","254","ISO 3166-2:GF"],["PF","PYF","258","ISO 3166-2:PF"],["TF","ATF","260","ISO 3166-2:TF"],["GA","GAB","266","ISO 3166-2:GA"],["GM","GMB","270","ISO 3166-2:GM"],["GE","GEO","268","ISO 3166-2:GE"],["DE","DEU","276","ISO 3166-2:DE"],["GH","GHA","288","ISO 3166-2:GH"],["GI","GIB","292","ISO 3166-2:GI"],["GR","GRC","300","ISO 3166-2:GR"],["GL","GRL","304","ISO 3166-2:GL"],["GD","GRD","308","ISO 3166-2:GD"],["GP","GLP","312","ISO 3166-2:GP"],["GU","GUM","316","ISO 3166-2:GU"],["GT","GTM","320","ISO 3166-2:GT"],["GN","GIN","324","ISO 3166-2:GN"],["GW","GNB","624","ISO 3166-2:GW"],["GY","GUY","328","ISO 3166-2:GY"],["HT","HTI","332","ISO 3166-2:HT"],["HM","HMD","334","ISO 3166-2:HM"],["VA","VAT","336","ISO 3166-2:VA"],["HN","HND","340","ISO 3166-2:HN"],["HK","HKG","344","ISO 3166-2:HK"],["HU","HUN","348","ISO 3166-2:HU"],["IS","ISL","352","ISO 3166-2:IS"],["IN","IND","356","ISO 3166-2:IN"],["ID","IDN","360","ISO 3166-2:ID"],["IR","IRN","364","ISO 3166-2:IR"],["IQ","IRQ","368","ISO 3166-2:IQ"],["IE","IRL","372","ISO 3166-2:IE"],["IL","ISR","376","ISO 3166-2:IL"],["IT","ITA","380","ISO 3166-2:IT"],["JM","JAM","388","ISO 3166-2:JM"],["JP","JPN","392","ISO 3166-2:JP"],["JO","JOR","400","ISO 3166-2:JO"],["KZ","KAZ","398","ISO 3166-2:KZ"],["KE","KEN","404","ISO 3166-2:KE"],["KI","KIR","296","ISO 3166-2:KI"],["KP","PRK","408","ISO 3166-2:KP"],["KR","KOR","410","ISO 3166-2:KR"],["KW","KWT","414","ISO 3166-2:KW"],["KG","KGZ","417","ISO 3166-2:KG"],["LA","LAO","418","ISO 3166-2:LA"],["LV","LVA","428","ISO 3166-2:LV"],["LB","LBN","422","ISO 3166-2:LB"],["LS","LSO","426","ISO 3166-2:LS"],["LR","LBR","430","ISO 3166-2:LR"],["LY","LBY","434","ISO 3166-2:LY"],["LI","LIE","438","ISO 3166-2:LI"],["LT","LTU","440","ISO 3166-2:LT"],["LU","LUX","442","ISO 3166-2:LU"],["MO","MAC","446","ISO 3166-2:MO"],["MG","MDG","450","ISO 3166-2:MG"],["MW","MWI","454","ISO 3166-2:MW"],["MY","MYS","458","ISO 3166-2:MY"],["MV","MDV","462","ISO 3166-2:MV"],["ML","MLI","466","ISO 3166-2:ML"],["MT","MLT","470","ISO 3166-2:MT"],["MH","MHL","584","ISO 3166-2:MH"],["MQ","MTQ","474","ISO 3166-2:MQ"],["MR","MRT","478","ISO 3166-2:MR"],["MU","MUS","480","ISO 3166-2:MU"],["YT","MYT","175","ISO 3166-2:YT"],["MX","MEX","484","ISO 3166-2:MX"],["FM","FSM","583","ISO 3166-2:FM"],["MD","MDA","498","ISO 3166-2:MD"],["MC","MCO","492","ISO 3166-2:MC"],["MN","MNG","496","ISO 3166-2:MN"],["MS","MSR","500","ISO 3166-2:MS"],["MA","MAR","504","ISO 3166-2:MA"],["MZ","MOZ","508","ISO 3166-2:MZ"],["MM","MMR","104","ISO 3166-2:MM"],["NA","NAM","516","ISO 3166-2:NA"],["NR","NRU","520","ISO 3166-2:NR"],["NP","NPL","524","ISO 3166-2:NP"],["NL","NLD","528","ISO 3166-2:NL"],["NC","NCL","540","ISO 3166-2:NC"],["NZ","NZL","554","ISO 3166-2:NZ"],["NI","NIC","558","ISO 3166-2:NI"],["NE","NER","562","ISO 3166-2:NE"],["NG","NGA","566","ISO 3166-2:NG"],["NU","NIU","570","ISO 3166-2:NU"],["NF","NFK","574","ISO 3166-2:NF"],["MP","MNP","580","ISO 3166-2:MP"],["MK","MKD","807","ISO 3166-2:MK"],["NO","NOR","578","ISO 3166-2:NO"],["OM","OMN","512","ISO 3166-2:OM"],["PK","PAK","586","ISO 3166-2:PK"],["PW","PLW","585","ISO 3166-2:PW"],["PS","PSE","275","ISO 3166-2:PS"],["PA","PAN","591","ISO 3166-2:PA"],["PG","PNG","598","ISO 3166-2:PG"],["PY","PRY","600","ISO 3166-2:PY"],["PE","PER","604","ISO 3166-2:PE"],["PH","PHL","608","ISO 3166-2:PH"],["PN","PCN","612","ISO 3166-2:PN"],["PL","POL","616","ISO 3166-2:PL"],["PT","PRT","620","ISO 3166-2:PT"],["PR","PRI","630","ISO 3166-2:PR"],["QA","QAT","634","ISO 3166-2:QA"],["RE","REU","638","ISO 3166-2:RE"],["RO","ROU","642","ISO 3166-2:RO"],["RU","RUS","643","ISO 3166-2:RU"],["RW","RWA","646","ISO 3166-2:RW"],["SH","SHN","654","ISO 3166-2:SH"],["KN","KNA","659","ISO 3166-2:KN"],["LC","LCA","662","ISO 3166-2:LC"],["PM","SPM","666","ISO 3166-2:PM"],["VC","VCT","670","ISO 3166-2:VC"],["WS","WSM","882","ISO 3166-2:WS"],["SM","SMR","674","ISO 3166-2:SM"],["ST","STP","678","ISO 3166-2:ST"],["SA","SAU","682","ISO 3166-2:SA"],["SN","SEN","686","ISO 3166-2:SN"],["SC","SYC","690","ISO 3166-2:SC"],["SL","SLE","694","ISO 3166-2:SL"],["SG","SGP","702","ISO 3166-2:SG"],["SK","SVK","703","ISO 3166-2:SK"],["SI","SVN","705","ISO 3166-2:SI"],["SB","SLB","090","ISO 3166-2:SB"],["SO","SOM","706","ISO 3166-2:SO"],["ZA","ZAF","710","ISO 3166-2:ZA"],["GS","SGS","239","ISO 3166-2:GS"],["ES","ESP","724","ISO 3166-2:ES"],["LK","LKA","144","ISO 3166-2:LK"],["SD","SDN","729","ISO 3166-2:SD"],["SR","SUR","740","ISO 3166-2:SR"],["SJ","SJM","744","ISO 3166-2:SJ"],["SZ","SWZ","748","ISO 3166-2:SZ"],["SE","SWE","752","ISO 3166-2:SE"],["CH","CHE","756","ISO 3166-2:CH"],["SY","SYR","760","ISO 3166-2:SY"],["TW","TWN","158","ISO 3166-2:TW"],["TJ","TJK","762","ISO 3166-2:TJ"],["TZ","TZA","834","ISO 3166-2:TZ"],["TH","THA","764","ISO 3166-2:TH"],["TL","TLS","626","ISO 3166-2:TL"],["TG","TGO","768","ISO 3166-2:TG"],["TK","TKL","772","ISO 3166-2:TK"],["TO","TON","776","ISO 3166-2:TO"],["TT","TTO","780","ISO 3166-2:TT"],["TN","TUN","788","ISO 3166-2:TN"],["TR","TUR","792","ISO 3166-2:TR"],["TM","TKM","795","ISO 3166-2:TM"],["TC","TCA","796","ISO 3166-2:TC"],["TV","TUV","798","ISO 3166-2:TV"],["UG","UGA","800","ISO 3166-2:UG"],["UA","UKR","804","ISO 3166-2:UA"],["AE","ARE","784","ISO 3166-2:AE"],["GB","GBR","826","ISO 3166-2:GB"],["US","USA","840","ISO 3166-2:US"],["UM","UMI","581","ISO 3166-2:UM"],["UY","URY","858","ISO 3166-2:UY"],["UZ","UZB","860","ISO 3166-2:UZ"],["VU","VUT","548","ISO 3166-2:VU"],["VE","VEN","862","ISO 3166-2:VE"],["VN","VNM","704","ISO 3166-2:VN"],["VG","VGB","092","ISO 3166-2:VG"],["VI","VIR","850","ISO 3166-2:VI"],["WF","WLF","876","ISO 3166-2:WF"],["EH","ESH","732","ISO 3166-2:EH"],["YE","YEM","887","ISO 3166-2:YE"],["ZM","ZMB","894","ISO 3166-2:ZM"],["ZW","ZWE","716","ISO 3166-2:ZW"],["AX","ALA","248","ISO 3166-2:AX"],["BQ","BES","535","ISO 3166-2:BQ"],["CW","CUW","531","ISO 3166-2:CW"],["GG","GGY","831","ISO 3166-2:GG"],["IM","IMN","833","ISO 3166-2:IM"],["JE","JEY","832","ISO 3166-2:JE"],["ME","MNE","499","ISO 3166-2:ME"],["BL","BLM","652","ISO 3166-2:BL"],["MF","MAF","663","ISO 3166-2:MF"],["RS","SRB","688","ISO 3166-2:RS"],["SX","SXM","534","ISO 3166-2:SX"],["SS","SSD","728","ISO 3166-2:SS"],["XK","XKK","983","ISO 3166-2:XK"]],Ve=["br","cy","dv","sw","eu","af","am","ha","ku","ml","mt","no","ps","sd","so","sq","ta","tg","tt","ug","ur","vi","ar","az","be","bg","bn","bs","ca","cs","da","de","el","en","es","et","fa","fi","fr","ga","gl","he","hi","hr","hu","hy","id","is","it","ja","ka","kk","km","ko","ky","lt","lv","mk","mn","mr","ms","nb","nl","nn","pl","pt","ro","ru","sk","sl","sr","sv","th","tk","tr","uk","uz","zh"];var se={};se.remove=We;var re=[{base:" ",chars:" "},{base:"0",chars:"߀"},{base:"A",chars:"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",chars:"Ꜳ"},{base:"AE",chars:"ÆǼǢ"},{base:"AO",chars:"Ꜵ"},{base:"AU",chars:"Ꜷ"},{base:"AV",chars:"ꜸꜺ"},{base:"AY",chars:"Ꜽ"},{base:"B",chars:"ⒷＢḂḄḆɃƁ"},{base:"C",chars:"ⒸＣꜾḈĆCĈĊČÇƇȻ"},{base:"D",chars:"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ"},{base:"Dh",chars:"Ð"},{base:"DZ",chars:"ǱǄ"},{base:"Dz",chars:"ǲǅ"},{base:"E",chars:"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ"},{base:"F",chars:"ꝼⒻＦḞƑꝻ"},{base:"G",chars:"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ"},{base:"H",chars:"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",chars:"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",chars:"ⒿＪĴɈȷ"},{base:"K",chars:"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",chars:"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",chars:"Ǉ"},{base:"Lj",chars:"ǈ"},{base:"M",chars:"ⓂＭḾṀṂⱮƜϻ"},{base:"N",chars:"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ"},{base:"NJ",chars:"Ǌ"},{base:"Nj",chars:"ǋ"},{base:"O",chars:"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OE",chars:"Œ"},{base:"OI",chars:"Ƣ"},{base:"OO",chars:"Ꝏ"},{base:"OU",chars:"Ȣ"},{base:"P",chars:"ⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",chars:"ⓆＱꝖꝘɊ"},{base:"R",chars:"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",chars:"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",chars:"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"Th",chars:"Þ"},{base:"TZ",chars:"Ꜩ"},{base:"U",chars:"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",chars:"ⓋＶṼṾƲꝞɅ"},{base:"VY",chars:"Ꝡ"},{base:"W",chars:"ⓌＷẀẂŴẆẄẈⱲ"},{base:"X",chars:"ⓍＸẊẌ"},{base:"Y",chars:"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",chars:"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",chars:"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ"},{base:"aa",chars:"ꜳ"},{base:"ae",chars:"æǽǣ"},{base:"ao",chars:"ꜵ"},{base:"au",chars:"ꜷ"},{base:"av",chars:"ꜹꜻ"},{base:"ay",chars:"ꜽ"},{base:"b",chars:"ⓑｂḃḅḇƀƃɓƂ"},{base:"c",chars:"ｃⓒćĉċčçḉƈȼꜿↄ"},{base:"d",chars:"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ"},{base:"dh",chars:"ð"},{base:"dz",chars:"ǳǆ"},{base:"e",chars:"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ"},{base:"f",chars:"ⓕｆḟƒ"},{base:"ff",chars:"ﬀ"},{base:"fi",chars:"ﬁ"},{base:"fl",chars:"ﬂ"},{base:"ffi",chars:"ﬃ"},{base:"ffl",chars:"ﬄ"},{base:"g",chars:"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ"},{base:"h",chars:"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",chars:"ƕ"},{base:"i",chars:"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",chars:"ⓙｊĵǰɉ"},{base:"k",chars:"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",chars:"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ"},{base:"lj",chars:"ǉ"},{base:"m",chars:"ⓜｍḿṁṃɱɯ"},{base:"n",chars:"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ"},{base:"nj",chars:"ǌ"},{base:"o",chars:"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ"},{base:"oe",chars:"œ"},{base:"oi",chars:"ƣ"},{base:"oo",chars:"ꝏ"},{base:"ou",chars:"ȣ"},{base:"p",chars:"ⓟｐṕṗƥᵽꝑꝓꝕρ"},{base:"q",chars:"ⓠｑɋꝗꝙ"},{base:"r",chars:"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",chars:"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ"},{base:"ss",chars:"ß"},{base:"t",chars:"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"th",chars:"þ"},{base:"tz",chars:"ꜩ"},{base:"u",chars:"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",chars:"ⓥｖṽṿʋꝟʌ"},{base:"vy",chars:"ꝡ"},{base:"w",chars:"ⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",chars:"ⓧｘẋẍ"},{base:"y",chars:"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",chars:"ⓩｚźẑżžẓẕƶȥɀⱬꝣ"}],Se={};for(var te=0;te<re.length;te+=1)for(var Ee=re[te].chars,ie=0;ie<Ee.length;ie+=1)Se[Ee[ie]]=re[te].base;function We(e){return e.replace(/[^\u0000-\u007e]/g,function(a){return Se[a]||a})}se.replacementList=re;se.diacriticsMap=Se;(function(e){const a=we,r=Ve,s=se.remove,A={},f={},m={},d={},D={};a.forEach(function(u){const c=u;f[c[0]]=c[1],m[c[1]]=c[0],d[c[2]]=c[0],D[c[0]]=c[2]});function F(u){return("000"+(u||"")).slice(-3)}function T(u,c){return Object.prototype.hasOwnProperty.call(u,c)}function y(u,c){return Object.keys(u).reduce(function(B,G){const M=u[G];return B[G]=c(M,G),B},{})}function p(u,c){switch(u){case"official":return Array.isArray(c)?c[0]:c;case"all":return typeof c=="string"?[c]:c;case"alias":return Array.isArray(c)?c[1]||c[0]:c;default:throw new TypeError("LocaleNameType must be one of these: all, official, alias!")}}e.registerLocale=function(u){if(!u.locale)throw new TypeError("Missing localeData.locale");if(!u.countries)throw new TypeError("Missing localeData.countries");A[u.locale]=u.countries};function N(u){return m[u]}e.alpha3ToAlpha2=N;function v(u){return f[u]}e.alpha2ToAlpha3=v;function E(u){return D[N(u)]}e.alpha3ToNumeric=E;function R(u){return D[u]}e.alpha2ToNumeric=R;function P(u){const c=F(u);return v(d[c])}e.numericToAlpha3=P;function Y(u){const c=F(u);return d[c]}e.numericToAlpha2=Y;function U(u){if(typeof u=="string"){if(/^[0-9]*$/.test(u))return P(u);if(u.length===2)return v(u.toUpperCase());if(u.length===3)return u.toUpperCase()}if(typeof u=="number")return P(u)}e.toAlpha3=U;function W(u){if(typeof u=="string"){if(/^[0-9]*$/.test(u))return Y(u);if(u.length===2)return u.toUpperCase();if(u.length===3)return N(u.toUpperCase())}if(typeof u=="number")return Y(u)}e.toAlpha2=W,e.getName=function(u,c,B={}){"select"in B||(B.select="official");try{const M=A[c.toLowerCase()][W(u)];return p(B.select,M)}catch{return}},e.getNames=function(u,c={}){"select"in c||(c.select="official");const B=A[u.toLowerCase()];return B===void 0?{}:y(B,function(G){return p(c.select,G)})},e.getAlpha2Code=function(u,c){const B=M=>M.toLowerCase(),G=(M,I)=>B(M)===B(I);try{const M=A[c.toLowerCase()];for(const I in M)if(T(M,I)){if(typeof M[I]=="string"&&G(M[I],u))return I;if(Array.isArray(M[I])){for(const C of M[I])if(G(C,u))return I}}return}catch{return}},e.getSimpleAlpha2Code=function(u,c){const B=M=>s(M.toLowerCase()),G=(M,I)=>B(M)===B(I);try{const M=A[c.toLowerCase()];for(const I in M)if(T(M,I)){if(typeof M[I]=="string"&&G(M[I],u))return I;if(Array.isArray(M[I])){for(const C of M[I])if(G(C,u))return I}}return}catch{return}},e.getAlpha2Codes=function(){return f},e.getAlpha3Code=function(u,c){const B=e.getAlpha2Code(u,c);if(B)return e.toAlpha3(B)},e.getSimpleAlpha3Code=function(u,c){const B=e.getSimpleAlpha2Code(u,c);if(B)return e.toAlpha3(B)},e.getAlpha3Codes=function(){return m},e.getNumericCodes=function(){return d},e.langs=function(){return Object.keys(A)},e.getSupportedLanguages=function(){return r},e.isValid=function(u){if(!u)return!1;const c=u.toString().toUpperCase();return T(m,c)||T(f,c)||T(d,c)}})(ee);const Ze=V(ee),_e=pe({__proto__:null,default:Ze},[ee]),de="nb",Ie={AD:"Andorra",AE:"De forente arabiske emirater",AF:"Afghanistan",AG:"Antigua og Barbuda",AI:"Anguilla",AL:"Albania",AM:"Armenia",AO:"Angola",AQ:"Antarktis",AR:"Argentina",AS:"Amerikansk Samoa",AT:"Østerrike",AU:"Australia",AW:"Aruba",AX:"Åland",AZ:"Aserbajdsjan",BA:"Bosnia-Hercegovina",BB:"Barbados",BD:"Bangladesh",BE:"Belgia",BF:"Burkina Faso",BG:"Bulgaria",BH:"Bahrain",BI:"Burundi",BJ:"Benin",BL:"Saint-Barthélemy",BM:"Bermuda",BN:"Brunei",BO:"Bolivia",BQ:"Karibisk Nederland",BR:"Brasil",BS:"Bahamas",BT:"Bhutan",BV:"Bouvetøya",BW:"Botswana",BY:"Hviterussland",BZ:"Belize",CA:"Canada",CC:"Kokosøyene",CD:"Kongo",CF:"Den sentralafrikanske republikk",CG:"Kongo-Brazzaville",CH:"Sveits",CI:"Elfenbenskysten",CK:"Cookøyene",CL:"Chile",CM:"Kamerun",CN:"Kina",CO:"Colombia",CR:"Costa Rica",CU:"Cuba",CV:"Kapp Verde",CW:"Curaçao",CX:"Christmasøya",CY:"Kypros",CZ:"Tsjekkia",DE:"Tyskland",DJ:"Djibouti",DK:"Danmark",DM:"Dominica",DO:"Den dominikanske republikk",DZ:"Algerie",EC:"Ecuador",EE:"Estland",EG:"Egypt",EH:"Vest-Sahara",ER:"Eritrea",ES:"Spania",ET:"Etiopia",FI:"Finland",FJ:"Fiji",FK:"Falklandsøyene",FM:"Mikronesiaføderasjonen",FO:"Færøyene",FR:"Frankrike",GA:"Gabon",GB:"Storbritannia",GD:"Grenada",GE:"Georgia",GF:"Fransk Guyana",GG:"Guernsey",GH:"Ghana",GI:"Gibraltar",GL:"Grønland",GM:"Gambia",GN:"Guinea",GP:"Guadeloupe",GQ:"Ekvatorial-Guinea",GR:"Hellas",GS:"Sør-Georgia og de søre Sandwichøyene",GT:"Guatemala",GU:"Guam",GW:"Guinea-Bissau",GY:"Guyana",HK:"Hongkong",HM:"Heard- og McDonald-øyene",HN:"Honduras",HR:"Kroatia",HT:"Haiti",HU:"Ungarn",ID:"Indonesia",IE:"Irland",IL:"Israel",IM:"Man",IN:"India",IO:"Britisk territorium i Indiahavet",IQ:"Irak",IR:"Iran",IS:"Island",IT:"Italia",JE:"Jersey",JM:"Jamaica",JO:"Jordan",JP:"Japan",KE:"Kenya",KG:"Kirgisistan",KH:"Kambodsja",KI:"Kiribati",KM:"Komorene",KN:"Saint Kitts og Nevis",KP:"Nord-Korea",KR:"Sør-Korea",KW:"Kuwait",KY:"Caymanøyene",KZ:"Kasakhstan",LA:"Laos",LB:"Libanon",LC:"Saint Lucia",LI:"Liechtenstein",LK:"Sri Lanka",LR:"Liberia",LS:"Lesotho",LT:"Litauen",LU:"Luxembourg",LV:"Latvia",LY:"Libya",MA:"Marokko",MC:"Monaco",MD:"Moldova",ME:"Montenegro",MF:"Saint-Martin",MG:"Madagaskar",MH:"Marshalløyene",MK:"Nord-Makedonia",ML:"Mali",MM:"Myanmar (Burma)",MN:"Mongolia",MO:"Macao",MP:"Nord-Marianene",MQ:"Martinique",MR:"Mauritania",MS:"Montserrat",MT:"Malta",MU:"Mauritius",MV:"Maldivene",MW:"Malawi",MX:"Mexico",MY:"Malaysia",MZ:"Mosambik",NA:"Namibia",NC:"Ny-Caledonia",NE:"Niger",NF:"Norfolk Island",NG:"Nigeria",NI:"Nicaragua",NL:"Nederland",NO:"Norge",NP:"Nepal",NR:"Nauru",NU:"Niue",NZ:"New Zealand",OM:"Oman",PA:"Panama",PE:"Peru",PF:"Fransk Polynesia",PG:"Papua Ny-Guinea",PH:"Filippinene",PK:"Pakistan",PL:"Polen",PM:"Saint-Pierre-et-Miquelon",PN:"Pitcairn",PR:"Puerto Rico",PS:"De okkuperte palestinske områdene",PT:"Portugal",PW:"Palau",PY:"Paraguay",QA:"Qatar",RE:"Réunion",RO:"Romania",RS:"Serbia",RU:"Russland",RW:"Rwanda",SA:"Saudi-Arabia",SB:"Salomonøyene",SC:"Seychellene",SD:"Sudan",SE:"Sverige",SG:"Singapore",SH:"St. Helena",SI:"Slovenia",SJ:"Svalbard og Jan Mayen",SK:"Slovakia",SL:"Sierra Leone",SM:"San Marino",SN:"Senegal",SO:"Somalia",SR:"Surinam",SS:"Sør-Sudan",ST:"São Tomé og Príncipe",SV:"El Salvador",SX:"Sint Maarten (Nederlandsk del)",SY:"Syria",SZ:"Eswatini",TC:"Turks- og Caicosøyene",TD:"Tsjad",TF:"Søre franske territorier",TG:"Togo",TH:"Thailand",TJ:"Tadsjikistan",TK:"Tokelau",TL:"Øst-Timor",TM:"Turkmenistan",TN:"Tunisia",TO:"Tonga",TR:"Tyrkia",TT:"Trinidad og Tobago",TV:"Tuvalu",TW:"Taiwan",TZ:"Tanzania",UA:"Ukraina",UG:"Uganda",UM:"USA, mindre, utenforliggende øyer",US:"USA",UY:"Uruguay",UZ:"Usbekistan",VA:"Vatikanstaten",VC:"Saint Vincent og Grenadinene",VE:"Venezuela",VG:"Jomfruøyene (Britisk)",VI:"Jomfruøyene (USA)",VN:"Vietnam",VU:"Vanuatu",WF:"Wallis- og Futunaøyene",WS:"Samoa",YE:"Jemen",YT:"Mayotte",ZA:"Sør-Afrika",ZM:"Zambia",ZW:"Zimbabwe",XK:"Kosovo"},Je={locale:de,countries:Ie},xe=Object.freeze(Object.defineProperty({__proto__:null,countries:Ie,default:Je,locale:de},Symbol.toStringTag,{value:"Module"})),Me="nn",De={AD:"Andorra",AE:"Dei sameinte arabiske emirata",AF:"Afghanistan",AG:"Antigua og Barbuda",AI:"Anguilla",AL:"Albania",AM:"Armenia",AO:"Angola",AQ:"Antarktis",AR:"Argentina",AS:"Amerikansk Samoa",AT:"Austerrike",AU:"Australia",AW:"Aruba",AX:"Åland",AZ:"Aserbajdsjan",BA:"Bosnia-Hercegovina",BB:"Barbados",BD:"Bangladesh",BE:"Belgia",BF:"Burkina Faso",BG:"Bulgaria",BH:"Bahrain",BI:"Burundi",BJ:"Benin",BL:"Saint-Barthélemy",BM:"Bermuda",BN:"Brunei",BO:"Bolivia",BQ:"Karibisk Nederland",BR:"Brasil",BS:"Bahamas",BT:"Bhutan",BV:"Bouvetøya",BW:"Botswana",BY:"Kviterussland",BZ:"Belize",CA:"Canada",CC:"Kokosøyane",CD:"Kongo",CF:"Den sentralafrikanske republikken",CG:"Kongo-Brazzaville",CH:"Sveits",CI:"Elfenbeinskysten",CK:"Cookøyane",CL:"Chile",CM:"Kamerun",CN:"Kina",CO:"Colombia",CR:"Costa Rica",CU:"Cuba",CV:"Kapp Verde",CW:"Curaçao",CX:"Christmasøya",CY:"Kypros",CZ:"Tsjekkia",DE:"Tyskland",DJ:"Djibouti",DK:"Danmark",DM:"Dominica",DO:"Den dominikanske republikken",DZ:"Algerie",EC:"Ecuador",EE:"Estland",EG:"Egypt",EH:"Vest-Sahara",ER:"Eritrea",ES:"Spania",ET:"Etiopia",FI:"Finland",FJ:"Fiji",FK:"Falklandsøyane",FM:"Mikronesiaføderasjonen",FO:"Færøyane",FR:"Frankrike",GA:"Gabon",GB:"Storbritannia",GD:"Grenada",GE:"Georgia",GF:"Fransk Guyana",GG:"Guernsey",GH:"Ghana",GI:"Gibraltar",GL:"Grønland",GM:"Gambia",GN:"Guinea",GP:"Guadeloupe",GQ:"Ekvatorial-Guinea",GR:"Hellas",GS:"Sør-Georgia og de søre Sandwichøyane",GT:"Guatemala",GU:"Guam",GW:"Guinea-Bissau",GY:"Guyana",HK:"Hongkong",HM:"Heard- og McDonald-øyane",HN:"Honduras",HR:"Kroatia",HT:"Haiti",HU:"Ungarn",ID:"Indonesia",IE:"Irland",IL:"Israel",IM:"Man",IN:"India",IO:"Britisk territorium i Indiahavet",IQ:"Irak",IR:"Iran",IS:"Island",IT:"Italia",JE:"Jersey",JM:"Jamaica",JO:"Jordan",JP:"Japan",KE:"Kenya",KG:"Kirgisistan",KH:"Kambodsja",KI:"Kiribati",KM:"Komorane",KN:"Saint Kitts og Nevis",KP:"Nord-Korea",KR:"Sør-Korea",KW:"Kuwait",KY:"Caymanøyane",KZ:"Kasakhstan",LA:"Laos",LB:"Libanon",LC:"Saint Lucia",LI:"Liechtenstein",LK:"Sri Lanka",LR:"Liberia",LS:"Lesotho",LT:"Litauen",LU:"Luxembourg",LV:"Latvia",LY:"Libya",MA:"Marokko",MC:"Monaco",MD:"Moldova",ME:"Montenegro",MF:"Saint-Martin",MG:"Madagaskar",MH:"Marshalløyane",MK:"Nord-Makedonia",ML:"Mali",MM:"Myanmar (Burma)",MN:"Mongolia",MO:"Macao",MP:"Nord-Marianane",MQ:"Martinique",MR:"Mauritania",MS:"Montserrat",MT:"Malta",MU:"Mauritius",MV:"Maldivane",MW:"Malawi",MX:"Mexico",MY:"Malaysia",MZ:"Mosambik",NA:"Namibia",NC:"Ny-Caledonia",NE:"Niger",NF:"Norfolk Island",NG:"Nigeria",NI:"Nicaragua",NL:"Nederland",NO:"Noreg",NP:"Nepal",NR:"Nauru",NU:"Niue",NZ:"New Zealand",OM:"Oman",PA:"Panama",PE:"Peru",PF:"Fransk Polynesia",PG:"Papua Ny-Guinea",PH:"Filippinane",PK:"Pakistan",PL:"Polen",PM:"Saint-Pierre-et-Miquelon",PN:"Pitcairn",PR:"Puerto Rico",PS:"Dei okkuperte palestinske områda",PT:"Portugal",PW:"Palau",PY:"Paraguay",QA:"Qatar",RE:"Réunion",RO:"Romania",RS:"Serbia",RU:"Russland",RW:"Rwanda",SA:"Saudi-Arabia",SB:"Salomonøyane",SC:"Seychellane",SD:"Sudan",SE:"Sverige",SG:"Singapore",SH:"St. Helena",SI:"Slovenia",SJ:"Svalbard og Jan Mayen",SK:"Slovakia",SL:"Sierra Leone",SM:"San Marino",SN:"Senegal",SO:"Somalia",SR:"Surinam",SS:"Sør-Sudan",ST:"São Tomé og Príncipe",SV:"El Salvador",SX:"Sint Maarten (Nederlandsk del)",SY:"Syria",SZ:"Eswatini",TC:"Turks- og Caicosøyane",TD:"Tsjad",TF:"Søre franske territorier",TG:"Togo",TH:"Thailand",TJ:"Tadsjikistan",TK:"Tokelau",TL:"Aust-Timor",TM:"Turkmenistan",TN:"Tunisia",TO:"Tonga",TR:"Tyrkia",TT:"Trinidad og Tobago",TV:"Tuvalu",TW:"Taiwan",TZ:"Tanzania",UA:"Ukraina",UG:"Uganda",UM:"USA, mindre, utanforliggande øyar",US:"USA",UY:"Uruguay",UZ:"Usbekistan",VA:"Vatikanstaten",VC:"Saint Vincent og Grenadinane",VE:"Venezuela",VG:"Jomfruøyane (Britisk)",VI:"Jomfruøyane (USA)",VN:"Vietnam",VU:"Vanuatu",WF:"Wallis- og Futunaøyane",WS:"Samoa",YE:"Jemen",YT:"Mayotte",ZA:"Sør-Afrika",ZM:"Zambia",ZW:"Zimbabwe",XK:"Kosovo"},je={locale:Me,countries:De},Qe=Object.freeze(Object.defineProperty({__proto__:null,countries:De,default:je,locale:Me},Symbol.toStringTag,{value:"Module"}));ee.registerLocale(xe);ee.registerLocale(Qe);const ze=(e,a)=>e!=="AQ",Xe=()=>_e,Ua=()=>{const e="nb",a=Xe();return Object.entries(a.getNames(e)).sort((s,A)=>s[1].localeCompare(A[1],e)).filter(s=>ze(s[0]))};var Ce={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(e){(function(){var a={}.hasOwnProperty;function r(){for(var f="",m=0;m<arguments.length;m++){var d=arguments[m];d&&(f=A(f,s(d)))}return f}function s(f){if(typeof f=="string"||typeof f=="number")return f;if(typeof f!="object")return"";if(Array.isArray(f))return r.apply(null,f);if(f.toString!==Object.prototype.toString&&!f.toString.toString().includes("[native code]"))return f.toString();var m="";for(var d in f)a.call(f,d)&&f[d]&&(m=A(m,d));return m}function A(f,m){return m?f?f+" "+m:f+m:f}e.exports?(r.default=r,e.exports=r):window.classNames=r})()})(Ce);var qe=Ce.exports;const ea=V(qe),le=e=>({block:e,element:(a,r)=>`${e}__${a}${r?` ${e}__${a}--${r}`:""}`,modifier:a=>`${e}--${a}`,modifierConditional:(a,r)=>r===!0&&a!==void 0?`${e}--${a}`:void 0,child:a=>le(le(e).element(a)),classNames:ea});var me={exports:{}};(function(e,a){(function(r,s){e.exports=s()})(j,function(){return function(r,s,A){s.prototype.isBetween=function(f,m,d,D){var F=A(f),T=A(m),y=(D=D||"()")[0]==="(",p=D[1]===")";return(y?this.isAfter(F,d):!this.isBefore(F,d))&&(p?this.isBefore(T,d):!this.isAfter(T,d))||(y?this.isBefore(F,d):!this.isAfter(F,d))&&(p?this.isAfter(T,d):!this.isBefore(T,d))}}})})(me);var aa=me.exports;const ua=V(aa);var Fe={exports:{}};(function(e,a){(function(r,s){e.exports=s()})(j,function(){return function(r,s){s.prototype.isSameOrAfter=function(A,f){return this.isSame(A,f)||this.isAfter(A,f)}}})})(Fe);var ta=Fe.exports;const ra=V(ta);var Be={exports:{}};(function(e,a){(function(r,s){e.exports=s()})(j,function(){return function(r,s){s.prototype.isSameOrBefore=function(A,f){return this.isSame(A,f)||this.isBefore(A,f)}}})})(Be);var na=Be.exports;const sa=V(na);var ge={exports:{}};(function(e,a){(function(r,s){e.exports=s()})(j,function(){var r="minute",s=/[+-]\d\d(?::?\d\d)?/g,A=/([+-]|\d\d)/g;return function(f,m,d){var D=m.prototype;d.utc=function(E){var R={date:E,utc:!0,args:arguments};return new m(R)},D.utc=function(E){var R=d(this.toDate(),{locale:this.$L,utc:!0});return E?R.add(this.utcOffset(),r):R},D.local=function(){return d(this.toDate(),{locale:this.$L,utc:!1})};var F=D.parse;D.parse=function(E){E.utc&&(this.$u=!0),this.$utils().u(E.$offset)||(this.$offset=E.$offset),F.call(this,E)};var T=D.init;D.init=function(){if(this.$u){var E=this.$d;this.$y=E.getUTCFullYear(),this.$M=E.getUTCMonth(),this.$D=E.getUTCDate(),this.$W=E.getUTCDay(),this.$H=E.getUTCHours(),this.$m=E.getUTCMinutes(),this.$s=E.getUTCSeconds(),this.$ms=E.getUTCMilliseconds()}else T.call(this)};var y=D.utcOffset;D.utcOffset=function(E,R){var P=this.$utils().u;if(P(E))return this.$u?0:P(this.$offset)?y.call(this):this.$offset;if(typeof E=="string"&&(E=function(u){u===void 0&&(u="");var c=u.match(s);if(!c)return null;var B=(""+c[0]).match(A)||["-",0,0],G=B[0],M=60*+B[1]+ +B[2];return M===0?0:G==="+"?M:-M}(E),E===null))return this;var Y=Math.abs(E)<=16?60*E:E,U=this;if(R)return U.$offset=Y,U.$u=E===0,U;if(E!==0){var W=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(U=this.local().add(Y+W,r)).$offset=Y,U.$x.$localOffset=W}else U=this.utc();return U};var p=D.format;D.format=function(E){var R=E||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return p.call(this,R)},D.valueOf=function(){var E=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*E},D.isUTC=function(){return!!this.$u},D.toISOString=function(){return this.toDate().toISOString()},D.toString=function(){return this.toDate().toUTCString()};var N=D.toDate;D.toDate=function(E){return E==="s"&&this.$offset?d(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():N.call(this)};var v=D.diff;D.diff=function(E,R,P){if(E&&this.$u===E.$u)return v.call(this,E,R,P);var Y=this.local(),U=d(E).local();return v.call(Y,U,R,P)}}})})(ge);var ia=ge.exports;const oa=V(ia);o.extend(ua);o.extend(sa);o.extend(ra);o.extend(oa);const Te=e=>o(e).format(Ue),Ka=e=>o(e).format(Re),$a=e=>o(e).format(Ke),Pa=e=>o(e).format($e),Ya=e=>o(e).format(Pe),Ha=e=>o(e).format(Ye),x=e=>o(e).format(He),wa=()=>o().startOf("day").subtract(5,"month"),Va=e=>!!e&&o(e).isValid()&&ve.test(e),Wa=e=>o(e).isSame(ce,"day"),Za=e=>o(e).isBefore(ce,"day"),_a=e=>o(e).isSameOrAfter(ce,"day"),Ja=(e,a)=>o(e).isAfter(a,"day"),xa=(e,a,r)=>o(e).isBetween(a,r,"day","[]"),ca=(e,a)=>o(e.from).isSameOrBefore(a.from)?-1:1,ja=e=>{if(e.length>0){const a=[...e].sort(ca);return a.find((s,A)=>A<a.length-1?o(s.to).isSameOrAfter(a[A+1].from):!1)!==void 0}return!1},Qa=e=>{if(e&&typeof e=="string"){const a=/^\d{4}-\d{2}-\d{2}$/;return e.match(a)!==null}else return!1},za=e=>{const a=o.utc(),r=o.utc(e);return a.diff(r,"years")>=18},Sa=(e,a)=>e&&a?o(e).isSameOrBefore(a,"day"):!1,fa=(e,a)=>e&&a?o(e).isSameOrAfter(a,"day"):!1;var ye={exports:{}};(function(e,a){(function(r,s){e.exports=s()})(j,function(){var r="day";return function(s,A,f){var m=function(F){return F.add(4-F.isoWeekday(),r)},d=A.prototype;d.isoWeekYear=function(){return m(this).year()},d.isoWeek=function(F){if(!this.$utils().u(F))return this.add(7*(F-this.isoWeek()),r);var T,y,p,N,v=m(this),E=(T=this.isoWeekYear(),y=this.$u,p=(y?f.utc:f)().year(T).startOf("year"),N=4-p.isoWeekday(),p.isoWeekday()>4&&(N+=7),p.add(N,r));return v.diff(E,"week")+1},d.isoWeekday=function(F){return this.$utils().u(F)?this.day()||7:this.day(this.day()%7?F:F-7)};var D=d.startOf;d.startOf=function(F,T){var y=this.$utils(),p=!!y.u(T)||T;return y.p(F)==="isoweek"?p?this.date(this.date()-(this.isoWeekday()-1)).startOf("day"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf("day"):D.bind(this)(F,T)}}})})(ye);var Ea=ye.exports;const la=V(Ea),Aa=30,Ae=e=>({erLik:a=>Ma(e,a),overlapper:a=>Oa(e,a),erOmsluttetAv:a=>Da(e,a),erUtenfor:a=>Ca(e,a),getAntallUttaksdager:()=>Ge(e),setStartdato:a=>H(e)?Ia(e,a):e,setUttaksdager:a=>e.fom?be(e.fom,a):e,formaterString:a=>ma(e,a),formaterStringKort:a=>Fa(e,a),erFomEllerEtterDato:a=>oe(e,a),erFørDato:a=>oe(e,a)===!1,inneholderDato:a=>da(e,a),erInnenforFørsteSeksUker:a=>ha(e,a)}),Oa=(e,a)=>o(e.fom).isBetween(a.fom,a.tom,"day","[]")||o(e.tom).isBetween(a.fom,a.tom,"day","[]")||o(a.fom).isBetween(e.fom,e.tom,"day","[]")||o(a.tom).isBetween(e.fom,e.tom,"day","[]"),ha=(e,a)=>{const r=X(a).denneEllerNeste(),s=X(r).leggTil(Aa);return oe(e,s)===!1};function da(e,a){return!e.fom||!e.tom?!1:o(a).isBetween(e.fom,e.tom,"days","[]")}function H(e){return e.fom!==void 0&&e.tom!==void 0&&o(e.fom).isSameOrBefore(e.tom,"day")}function Xa(e){if(e!==void 0&&H(e))return e}function be(e,a){if(!X(e).erUttaksdag())throw new Error("FOM er ikke en uttaksdag");return{fom:e,tom:X(e).leggTil(a-1)}}function qa(e,a){const{fom:r,tom:s}=a;return!r||!s?!1:o(e).isBetween(r,s,"days","[]")}function Ge(e){if(!H(e))return 0;let a=o(e.fom);const r=o(e.tom);let s=0;for(;a.isSameOrBefore(r,"day");)X(a.toDate()).erUttaksdag()&&s++,a=a.add(24,"hours");return s}function Ia(e,a){const r=Ge(e);return be(a,r)}function Ma(e,a){return H(e)&&H(a)?o(e.fom).isSame(a.fom,"day")&&o(e.tom).isSame(a.tom,"day"):JSON.stringify(e)===JSON.stringify(a)}function Da(e,a){return H(e)&&H(a)?fa(e.fom,a.fom)&&Sa(e.tom,a.tom):!1}function Ca(e,a){return H(e)&&H(a)?o(e.fom).isAfter(a.tom,"day")||o(e.tom).isBefore(a.fom,"day"):!1}function ma(e,a){const{fom:r,tom:s}=e;return r&&s&&o(r).isSame(s,"day")?x(r??s):a.formatMessage({id:"tidsperiode"},{fom:r?x(r):"",tom:s?x(s):""})}function Fa(e,a){const{fom:r,tom:s}=e;return r&&s&&o(r).isSame(s,"day")?x(r??s):a.formatMessage({id:"tidsperiode.kort"},{fom:r?x(r):"",tom:s?x(s):""})}const oe=(e,a)=>e.fom!==void 0&&e.tom!==void 0&&o(e.fom).isSameOrAfter(a,"day")&&o(e.tom).isSameOrAfter(a,"day");o.extend(la);const X=e=>({erUttaksdag:()=>q(e),forrige:()=>Ba(e),neste:()=>ga(e),denneEllerNeste:()=>ke(e),denneEllerForrige:()=>Ne(e),getUttaksdagerFremTilDato:a=>ya(e,a),leggTil:a=>a<0?Oe(e,a):a>0?Ta(e,a):e,trekkFra:a=>Oe(e,a)});function ne(e){return o(e).isoWeekday()}function q(e){return ne(e)!==6&&ne(e)!==7}function Ba(e){return Ne(o.utc(e).subtract(24,"hours").toDate())}function Ne(e){const a=e&&new Date(e.getFullYear(),e.getMonth(),e.getDate(),12);switch(ne(e)){case 6:return o.utc(a).subtract(24,"hours").startOf("day").toDate();case 7:return o.utc(a).subtract(48,"hours").startOf("day").toDate();default:return e}}function ga(e){return ke(o.utc(e).add(24,"hours").toDate())}function ke(e){const a=e&&new Date(e.getFullYear(),e.getMonth(),e.getDate(),12);switch(ne(e)){case 6:return o.utc(a).add(48,"hours").startOf("day").toDate();case 7:return o.utc(a).add(24,"hours").startOf("day").toDate();default:return e}}function Ta(e,a){if(q(e)===!1)throw new Error(`leggUttaksdagerTilDato: Dato ${Te(e)} må være uttaksdag`);let r=e,s=0,A=0;for(;A<=a;){const f=o.utc(e).add(s++*24,"hours").toDate();q(f)&&(r=f,A++)}return r}function Oe(e,a){if(q(e)===!1)throw new Error(`trekkUttaksdagerFraDato: Dato ${Te(e)} må være uttaksdag`);let r=e,s=0,A=0;for(;A<Math.abs(a);){const f=o.utc(e).add(--s*24,"hours").toDate();q(f)&&(r=f,A++)}return r}function ya(e,a){return o(e).isSame(a,"day")?0:o(e).isBefore(a,"day")?Ae({fom:e,tom:a}).getAntallUttaksdager()-1:-1*(Ae({fom:a,tom:e}).getAntallUttaksdager()-1)}export{Ga as A,Na as B,Ha as C,ce as D,$a as E,ea as F,Xa as G,Pa as H,Re as I,Ya as J,be as K,za as L,la as M,ve as N,xa as O,ja as P,x as Q,Ka as R,xe as S,Ae as T,X as U,Qe as V,_e as W,qa as X,Ra as a,le as b,Ua as c,o as d,La as e,wa as f,va as g,$e as h,Va as i,Qa as j,ka as k,_a as l,Te as m,pa as n,Ja as o,Le as p,ra as q,sa as r,Za as s,H as t,oa as u,q as v,ee as w,Wa as x,ua as y,Ue as z};
