{"version":3,"file":"AppContainer.stories-b4532fca.js","sources":["../../../../packages/fp-common/src/common/utils/localeUtils.ts","../../../../packages/ui/src/contentWrapper/ContentWrapper.tsx","../../../../packages/constants/src/links.ts","../../../../packages/constants/src/dates.ts","../../../../packages/ui/src/i18n/ui/UiIntlProvider.tsx","../../../../packages/ui/src/error/ErrorPage.tsx","../../../../packages/ui/src/error/ErrorBoundary.tsx","../../../../packages/ui/src/error/ErrorSummaryFp.tsx","../../../../packages/ui/src/fileUploader/input/FileInput.tsx","../../../../packages/ui/src/i18n/useCustomI18n.ts","../../../../packages/ui/src/fileUploader/fileUtils.ts","../../../../packages/ui/src/fileUploader/liste/AttachmentInfo.tsx","../../../../packages/ui/src/fileUploader/liste/AttachmentList.tsx","../../../../packages/ui/src/fileUploader/typer/FileUploadError.ts","../../../../packages/ui/src/fileUploader/liste/FailedAttachment.tsx","../../../../packages/ui/src/fileUploader/liste/FailedAttachmentList.tsx","../../../../packages/ui/src/fileUploader/FileUploader.tsx","../../../../packages/ui/src/step/StepButtons.tsx","../../../../packages/metrics/src/amplitude.ts","../../../../packages/ui/src/i18n/ui/useUiIntl.ts","../../../../packages/ui/src/umyndig/Umyndig.tsx","../../../../packages/ui/src/i18n/IntlProvider.tsx","../../src/app/pages/ikkeMyndig/IkkeMyndig.tsx","../../src/app/utils/hooks/useDebounce.ts","../../src/app/steps/uttaksplan/components/vil-du-gå-tilbake-modal/VilDuGåTilbakeModal.tsx","../../src/app/steps/uttaksplan/UttaksplanFormConfig.ts","../../src/app/steps/uttaksplan/UttaksplanFormUtils.ts","../../src/app/steps/uttaksplan/automatisk-justering-form/automatiskJusteringUtils.ts","../../src/app/steps/uttaksplan/automatisk-justering-form/AutomatiskJusteringForm.tsx","../../src/app/steps/uttaksplan/uttaksplanQuestionConfig.ts","../../src/app/steps/uttaksplan/UttaksplanStep.tsx","../../src/app/routes/isAvailable.ts","../../src/app/routes/ForeldrepengesøknadRoutes.tsx","../../src/app/utils/mellomlagringUtils.ts","../../src/app/Foreldrepengesøknad.tsx","../../src/app/errorBoundary/ErrorBoundary.tsx","../../src/app/utils/browserUtils.ts","../../src/app/AppContainer.tsx"],"sourcesContent":["import { Locale } from '../types/Locale';\n\nconst LocaleSessionKey = 'selectedLocale';\n\nexport const getLocaleFromSessionStorage = (): Locale => {\n    return (sessionStorage.getItem(LocaleSessionKey) as Locale) || 'nb';\n};\n\nexport const setLocaleInSessionStorage = (locale: Locale): void => {\n    sessionStorage.setItem(LocaleSessionKey, locale);\n};\n\nexport const getNynorskLocale = () => {\n    if (Intl.NumberFormat.supportedLocalesOf('no-NN').length > 0) {\n        return 'no-NN';\n    }\n    return 'nn';\n};\n\nexport const getBokmålLocale = () => {\n    if (Intl.NumberFormat.supportedLocalesOf('no-NB').length > 0) {\n        return 'no-NB';\n    }\n    return 'nb';\n};\n\nexport const getLocaleForApi = (locale: string): Locale => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n","import { bemUtils } from '@navikt/fp-common';\n\nimport './contentWrapper.less';\n\ninterface Props {\n    children: React.ReactElement | React.ReactElement[];\n}\n\nconst ContentWrapper: React.FunctionComponent<Props> = ({ children }) => {\n    const bem = bemUtils('content');\n    return <div className={bem.block}>{children}</div>;\n};\n\nexport default ContentWrapper;\n","export const links = {\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    brukerstøtte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    kontaktOss: 'https://www.nav.no/person/kontakt-oss/nb/tilbakemeldinger/feil-og-mangler',\n    dittNav: 'https://tjenester.nav.no/dittnav/oversikt',\n    foreldrepenger: 'https://foreldrepenger.nav.no',\n    nav: 'https://www.nav.no',\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    personvernerklæring:\n        'https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten',\n    plikter: 'https://nav.no/rettOgPlikt',\n    søknadsveileder: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    veiviser: 'https://familie.nav.no/veiviser',\n    innsyn: 'https://foreldrepenger.nav.no',\n    engangsstonad: 'https://www.nav.no/engangsstonad',\n    farMedmor: 'https://www.nav.no/engangsstonad#far_medmor',\n    barn: 'https://www.nav.no/barn',\n    foreldrepengerUtland: 'https://www.nav.no/foreldrepenger#utland',\n    engangsstonadHvem: 'https://www.nav.no/engangsstonad#hvem',\n};\n","import dayjs from 'dayjs';\n\nexport const ISO_DATE_FORMAT = 'YYYY-MM-DD';\nexport const DDMMYYYY_DATE_FORMAT = 'DD.MM.YYYY';\nexport const TIME_FORMAT = 'HH:mm';\n\n// TODO Er dette greie datoar eller bør ein velga noko anna?\nexport const TIDENES_MORGEN = dayjs('1000-01-01').toDate();\nexport const TIDENES_ENDE = dayjs('9999-31-12').toDate();\n\nexport const DATE_TODAY = dayjs().toDate();\nexport const SIX_MONTHS_AGO = dayjs().subtract(6, 'month').startOf('day').toDate();\nexport const DATE_1_YEAR_FROM_NOW = dayjs().add(1, 'years').toDate();\nexport const DATE_1_YEAR_AGO = dayjs().subtract(1, 'years').toDate();\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UiIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UiIntlProvider;\n","import { FunctionComponent } from 'react';\nimport { links } from '@navikt/fp-constants';\nimport { Alert, BodyShort, Button, HStack, Heading, Label, Link, VStack } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    feilmelding: string;\n    søkPåNytt: () => void;\n}\n\nconst ErrorPage: FunctionComponent<Props> = ({ appnavn, feilmelding, søkPåNytt }) => {\n    //TODO Bytt ut div under med Box frå ds-react når oppdatert til siste versjon\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"20\">\n                    <Heading size=\"large\">\n                        {appnavn === 'Engangsstønad' && <FormattedMessage id=\"ErrorPage.Engangsstønad\" />}\n                        {appnavn === 'Foreldrepenger' && <FormattedMessage id=\"ErrorPage.Foreldrepenger\" />}\n                        {appnavn === 'Svangerskapspenger' && <FormattedMessage id=\"ErrorPage.Svangerskapspenger\" />}\n                    </Heading>\n                    <VStack gap=\"10\">\n                        <Alert variant=\"warning\">\n                            <VStack gap=\"4\">\n                                <Heading size=\"small\">\n                                    <FormattedMessage id=\"ErrorPage.Heading\" />\n                                </Heading>\n                                <BodyShort>\n                                    <FormattedMessage id=\"ErrorPage.Message\" />\n                                </BodyShort>\n                            </VStack>\n                        </Alert>\n                        <HStack gap=\"4\" justify=\"center\">\n                            <Link href={links.kontaktOss} target=\"_blank\">\n                                <Button type=\"button\" variant=\"secondary\">\n                                    <FormattedMessage id=\"ErrorPage.Contact\" />\n                                </Button>\n                            </Link>\n                            <Button type=\"button\" variant=\"primary\" onClick={søkPåNytt}>\n                                <FormattedMessage id=\"ErrorPage.TryAgain\" />\n                            </Button>\n                        </HStack>\n                        <div style={{ backgroundColor: 'var(--a-gray-200)', padding: '16px', borderRadius: '4px' }}>\n                            <VStack gap=\"2\">\n                                <Label>\n                                    <FormattedMessage id=\"ErrorPage.ErrorMessage\" />\n                                </Label>\n                                <BodyShort>Error: {feilmelding}</BodyShort>\n                            </VStack>\n                        </div>\n                    </VStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorPage;\n","import * as Sentry from '@sentry/browser';\nimport { Component } from 'react';\nimport ErrorPage from './ErrorPage';\n\ninterface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    children: React.ReactNode;\n}\n\ninterface State {\n    eventId: string | null;\n    hasError: boolean;\n    errorInfo: any;\n    errorMessage: string | undefined;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = { eventId: null, hasError: false, errorInfo: null, errorMessage: undefined };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any) {\n        Sentry.withScope((scope: any) => {\n            scope.setExtras(errorInfo);\n            const eventId = Sentry.captureException(error);\n            this.setState({ eventId, errorInfo });\n        });\n        this.setState({ hasError: true, errorMessage: error?.message });\n    }\n\n    render() {\n        const { appnavn } = this.props;\n        const { errorMessage, errorInfo } = this.state;\n\n        if (this.state.hasError) {\n            return errorMessage ? (\n                <ErrorPage appnavn={appnavn} feilmelding={errorMessage} søkPåNytt={() => location.reload()} />\n            ) : (\n                <div>{errorMessage || errorInfo}</div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { FunctionComponent } from 'react';\nimport { ErrorSummary } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nexport type ErrorSummaryError = {\n    message?: string;\n    focus?: () => void;\n};\n\ninterface Props {\n    errorRef: React.RefObject<HTMLDivElement>;\n    errors: ErrorSummaryError[];\n}\n\n//TODO Fjern FP postfix. Er litt misvisande da det kan sjå ut som denne er spesifikk for FP-appen\n\nconst ErrorSummaryFp: FunctionComponent<Props> = ({ errorRef, errors }) => {\n    return (\n        <UiIntlProvider>\n            <ErrorSummary size=\"small\" ref={errorRef} heading={<FormattedMessage id={'ErrorSummaryFp.Tittel'} />}>\n                {Object.values(errors).map((error) => (\n                    <ErrorSummary.Item\n                        key={error.message}\n                        onClick={() => {\n                            if (error.focus) {\n                                error.focus();\n                            }\n                        }}\n                    >\n                        {error.message}\n                    </ErrorSummary.Item>\n                ))}\n            </ErrorSummary>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorSummaryFp;\n","import React, { useCallback, useRef } from 'react';\nimport { Button } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport { UploadIcon } from '@navikt/aksel-icons';\n\nimport './fileInput.less';\n\ninterface Props {\n    onFilesSelect: (files: File[]) => void;\n    multiple: boolean;\n    accept: string;\n    hasUplodedAttachements: boolean;\n}\n\nconst FileInput: React.FunctionComponent<Props> = ({ multiple, accept, onFilesSelect, hasUplodedAttachements }) => {\n    const onFileSelect = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.files) {\n                const files = Array.from(e.target.files) as File[];\n                onFilesSelect(files);\n                e.target.value = '';\n            }\n        },\n        [onFilesSelect],\n    );\n\n    const inputElement = useRef<HTMLInputElement>(null);\n\n    const openFileDialog = useCallback(() => {\n        if (inputElement.current) {\n            inputElement.current.click();\n        }\n    }, [inputElement.current]);\n\n    return (\n        <>\n            <input\n                ref={inputElement}\n                className=\"fileInput\"\n                type=\"file\"\n                accept={accept}\n                onChange={(e) => onFileSelect(e)}\n                multiple={multiple === true}\n                data-testid=\"file-upload\"\n            />\n            <Button\n                className=\"upload_button\"\n                variant={hasUplodedAttachements ? 'secondary' : 'primary'}\n                type=\"button\"\n                onClick={openFileDialog}\n                icon={<UploadIcon />}\n                iconPosition=\"right\"\n            >\n                {hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp.Flere\" />}\n                {!hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp\" />}\n            </Button>\n        </>\n    );\n};\n\nexport default FileInput;\n","import { PrimitiveType, useIntl } from 'react-intl';\nimport { FormatXMLElementFn } from 'intl-messageformat';\n\nexport type I18nFn = (\n    i18nId: string,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>,\n) => string;\n\nexport type CustomIntlShape = {\n    i18n: I18nFn;\n};\n\nexport const useCustomIntl = (): CustomIntlShape => {\n    const intl = useIntl();\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n","import Bytes from 'bytes';\nimport { Attachment } from '@navikt/fp-types';\nimport { Skjemanummer, AttachmentType } from '@navikt/fp-constants';\n\nconst s4 = (): string =>\n    Math.floor((1 + Math.random()) * 0x10000)\n        .toString()\n        .substring(1);\n\n//TODO Denne ligg sikkert ein annan stad (evt flytt ut)\nconst guid = (): string => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const getTotalFileSize = (files: File[]): number => {\n    return files.reduce(\n        (a, b) =>\n            ({\n                size: a.size + b.size,\n            }) as any,\n        { size: 0 },\n    ).size;\n};\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\n    return {\n        id: generateAttachmentId(),\n        file,\n        filename: file.name,\n        filesize: file.size,\n        uploaded: false,\n        pending: false,\n        type,\n        skjemanummer,\n    };\n};\n","import { VStack, Link, Loader, HStack, Spacer } from '@navikt/ds-react';\nimport { XMarkIcon, FileCheckmarkIcon } from '@navikt/aksel-icons';\n\nimport { useCustomIntl } from '../../i18n/useCustomI18n';\nimport { Attachment } from '@navikt/fp-types';\nimport { bytesString } from '../fileUtils';\n\nimport './attachmentInfo.less';\n\ninterface OwnProps {\n    attachment: Attachment;\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\ntype Props = OwnProps;\n\nconst AttachmentInfo: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const { i18n } = useCustomIntl();\n\n    return (\n        <div className=\"attachmentPanel\">\n            <HStack gap=\"4\">\n                {attachment.pending && <Loader type=\"S\" />}\n                {!attachment.pending && <FileCheckmarkIcon width={24} height={24} />}\n                <VStack gap=\"1\">\n                    {attachment.url ? (\n                        <Link href={attachment.url} target=\"_blank\">\n                            {attachment.filename}\n                        </Link>\n                    ) : (\n                        <span>{attachment.filename}</span>\n                    )}\n                    {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n                </VStack>\n                {onDelete && (\n                    <>\n                        <Spacer />\n                        <XMarkIcon\n                            onClick={() => onDelete(attachment)}\n                            height={24}\n                            width={24}\n                            cursor=\"pointer\"\n                            aria-label={i18n('Attachment.Vedlegg.Slett', { navn: attachment.filename })}\n                        />\n                    </>\n                )}\n            </HStack>\n        </div>\n    );\n};\n\nexport default AttachmentInfo;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport AttachmentInfo from './AttachmentInfo';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    attachments: Attachment[];\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { attachments, showFileSize, onDelete } = props;\n\n    return (\n        <>\n            {attachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {attachments.map((attachment) => (\n                        <Fragment key={guid()}>\n                            <AttachmentInfo attachment={attachment} onDelete={onDelete} showFileSize={showFileSize} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default AttachmentList;\n","export enum FileUploadError {\n    GENERAL = 'GENERAL',\n    TIMEOUT = 'TIMEOUT',\n    VALID_EXTENSION = 'VALID_EXTENSION',\n    MAX_SIZE = 'MAX_SIZE',\n}\n","import { Alert } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Attachment } from '@navikt/fp-types';\nimport { FileUploadError } from '../typer/FileUploadError';\n\nconst MAX_FIL_STØRRELSE_KB = 16777;\n\ninterface OwnProps {\n    failedAttachment: Attachment;\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachment: React.FunctionComponent<OwnProps> = ({ failedAttachment, onDelete }) => {\n    return (\n        <Alert variant=\"warning\" closeButton onClose={() => onDelete(failedAttachment)}>\n            {failedAttachment.error === FileUploadError.GENERAL && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Opplasting.Feilet\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.TIMEOUT && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Timeout\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.MAX_SIZE && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Størrelse\"\n                    values={{ filename: failedAttachment.filename, maxStørrelse: MAX_FIL_STØRRELSE_KB }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.VALID_EXTENSION && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Type\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n        </Alert>\n    );\n};\n\nexport default FailedAttachment;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport FailedAttachment from './FailedAttachment';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    failedAttachments: Attachment[];\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { failedAttachments, onDelete } = props;\n    return (\n        <>\n            {failedAttachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {failedAttachments.map((failedAttachment) => (\n                        <Fragment key={guid()}>\n                            <FailedAttachment failedAttachment={failedAttachment} onDelete={onDelete} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default FailedAttachmentList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { AttachmentType, Skjemanummer } from '@navikt/fp-constants';\n\nimport FileInput from './input/FileInput';\nimport AttachmentList from './liste/AttachmentList';\nimport { Attachment } from '@navikt/fp-types';\nimport { mapFileToAttachment } from './fileUtils';\nimport FailedAttachmentList from './liste/FailedAttachmentList';\nimport { FileUploadError } from './typer/FileUploadError';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_STØRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\n// TODO Fjern any her utan å måtte dra inn axios i denne pakka\ntype SaveAttachment = (attachment: Attachment) => Promise<any>;\n\nconst getPendingAttachmentFromFile = (\n    file: File,\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer,\n): Attachment => {\n    const newAttachment = mapFileToAttachment(file, attachmentType, skjemanummer);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_STØRRELSE_KB;\n};\n\nconst uploadAttachment = async (attachment: Attachment, saveAttachment: SaveAttachment): Promise<void> => {\n    if (!fileExtensionIsValid(attachment.file.name)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.VALID_EXTENSION;\n        return;\n    }\n    if (!fileSizeIsValid(attachment.filesize)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.MAX_SIZE;\n        return;\n    }\n\n    try {\n        const response = await saveAttachment(attachment);\n        attachment.pending = false;\n        attachment.url = response.headers.location;\n        attachment.uploaded = true;\n        attachment.uuid = response.data;\n    } catch (error) {\n        // TODO Burde få ut feilmelding frå backend og vise denne\n        attachment.pending = false;\n\n        // @ts-ignore TODO Fix typing her (Mogleg  mykje av logikken her bør ligga inne i saveAttachment, så slepp ein da inn Axios her)\n        if (error?.response?.status === 408) {\n            attachment.error = FileUploadError.TIMEOUT;\n        } else {\n            attachment.error = FileUploadError.GENERAL;\n        }\n    }\n};\n\nconst EMPTY_ATTACHMENT_LIST = [] as Attachment[];\n\nexport interface Props {\n    updateAttachments: (attachments: Attachment[]) => void;\n    attachmentType: AttachmentType;\n    skjemanummer: Skjemanummer;\n    existingAttachments?: Attachment[];\n    saveAttachment: SaveAttachment;\n    multiple?: boolean;\n}\n\nconst FileUploader: React.FunctionComponent<Props> = ({\n    existingAttachments = EMPTY_ATTACHMENT_LIST,\n    updateAttachments,\n    attachmentType,\n    skjemanummer,\n    saveAttachment,\n    multiple = true,\n}) => {\n    const [attachments, setAttachments] = useState(existingAttachments);\n\n    useEffect(() => {\n        updateAttachments(attachments.filter((a) => !a.error && a.pending === false));\n    }, [attachments]);\n\n    const uploadAttachments = async (allPendingAttachments: Attachment[]) => {\n        for (const pendingAttachment of allPendingAttachments) {\n            await uploadAttachment(pendingAttachment, saveAttachment);\n            setAttachments((currentAttachments) =>\n                currentAttachments.map((a) => (a.filename === pendingAttachment.filename ? pendingAttachment : a)),\n            );\n        }\n    };\n\n    const saveFiles = useCallback((files: File[]) => {\n        const allPendingAttachments = files.map((file) =>\n            getPendingAttachmentFromFile(file, attachmentType, skjemanummer),\n        );\n        setAttachments((currentAttachments) => {\n            const otherAttachments = currentAttachments.filter(\n                (ca) => !allPendingAttachments.some((pa) => pa.filename === ca.filename),\n            );\n            return otherAttachments.concat(allPendingAttachments);\n        });\n        uploadAttachments(allPendingAttachments);\n    }, []);\n\n    const deleteAttachment = useCallback((file: Attachment) => {\n        setAttachments((currentAttachments) => currentAttachments.filter((a) => a.filename !== file.filename));\n    }, []);\n\n    const uploadedAttachments = useMemo(() => attachments.filter((a) => !a.error), [attachments]);\n    const failedAttachments = useMemo(() => attachments.filter((a) => !!a.error), [attachments]);\n\n    return (\n        <UiIntlProvider>\n            <VStack gap=\"6\">\n                <AttachmentList attachments={uploadedAttachments} showFileSize={true} onDelete={deleteAttachment} />\n                <FileInput\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={saveFiles}\n                    hasUplodedAttachements={uploadedAttachments.length > 0}\n                    multiple={multiple}\n                />\n                <FailedAttachmentList failedAttachments={failedAttachments} onDelete={deleteAttachment} />\n            </VStack>\n        </UiIntlProvider>\n    );\n};\n\nexport default FileUploader;\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\ninterface Props {\n    goToPreviousStep: () => void;\n    nextButtonText?: string;\n    nextButtonOnClick?: (setButtonsDisabled: (isDisabled: boolean) => void) => void;\n}\n\nconst StepButtons: FunctionComponent<Props> = ({ goToPreviousStep, nextButtonText, nextButtonOnClick }) => {\n    const [disabled, setDisabled] = useState(false);\n\n    const onClickNextButton = useCallback(() => {\n        if (nextButtonOnClick) {\n            nextButtonOnClick((d: boolean) => setDisabled(d));\n        }\n    }, [nextButtonOnClick]);\n\n    return (\n        <UiIntlProvider>\n            <StepButtonWrapper>\n                <Button type=\"button\" variant=\"secondary\" onClick={goToPreviousStep}>\n                    <FormattedMessage id=\"StepButtons.Forrige\" />\n                </Button>\n                <Button type=\"submit\" onClick={onClickNextButton} disabled={disabled}>\n                    {nextButtonText !== undefined && nextButtonText}\n                    {!nextButtonText && <FormattedMessage id={'StepButtons.Neste'} />}\n                </Button>\n            </StepButtonWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default StepButtons;\n","import amplitude from 'amplitude-js';\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = false) => {\n    if (logToConsoleOnly) {\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            // tslint:disable-next-line\n            console.error(error);\n        }\n    });\n};\n","import { useMemo } from 'react';\nimport { useIntl, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUiIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return intl;\n};\n\nexport default useUiIntl;\n","import { FormattedMessage, IntlShape } from 'react-intl';\nimport { useDocumentTitle } from '@navikt/fp-common';\nimport { logAmplitudeEvent } from '@navikt/fp-metrics';\nimport { Button, GuidePanel, Heading, VStack, HStack } from '@navikt/ds-react';\nimport { ArrowRightIcon } from '@navikt/aksel-icons';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n}\n\nconst getTitleText = (appnavn: Props['appnavn'], intl: IntlShape): string => {\n    switch (appnavn) {\n        case 'Engangsstønad':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Engangsstonad' });\n        case 'Foreldrepenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Foreldrepenger' });\n        case 'Svangerskapspenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Svangerskapspenger' });\n    }\n};\n\nconst Umyndig: React.FunctionComponent<Props> = ({ appnavn }) => {\n    const intl = useUiIntl();\n\n    const titleText = getTitleText(appnavn, intl);\n    useDocumentTitle(titleText);\n\n    logAmplitudeEvent('sidevisning', {\n        app: appnavn,\n        team: 'foreldrepenger',\n        pageKey: 'umyndig',\n    });\n\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"10\">\n                    <Heading level=\"1\" size=\"xlarge\">\n                        {titleText}\n                    </Heading>\n                    <GuidePanel poster>\n                        <VStack gap=\"8\">\n                            <Heading level=\"2\" size=\"small\">\n                                <FormattedMessage id=\"Umyndig.Tittel\" />\n                            </Heading>\n                            <FormattedMessage id=\"Umyndig.Tekst\" />\n                        </VStack>\n                    </GuidePanel>\n                    <HStack justify=\"center\">\n                        <Button as=\"a\" icon={<ArrowRightIcon />} iconPosition=\"right\" href={links.papirsøknad}>\n                            <FormattedMessage id=\"Umyndig.Knapp.Papirsøknad\" />\n                        </Button>\n                    </HStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default Umyndig;\n","import { IntlProvider as Provider } from 'react-intl';\nimport { Locale } from '@navikt/fp-types';\n\ninterface Props {\n    locale: Locale;\n    messagesGroupedByLocale: Record<Locale, Record<string, string>>;\n    children: React.ReactNode;\n}\n\nconst IntlProvider: React.FunctionComponent<Props> = ({ locale, messagesGroupedByLocale, children }) => {\n    const messages = messagesGroupedByLocale[locale];\n    return (\n        <Provider locale={locale} messages={messages || {}}>\n            {children}\n        </Provider>\n    );\n};\nexport default IntlProvider;\n","import { intlUtils, links } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport Feilside from '../feilside/Feilside';\n\ninterface Props {\n    fornavn: string;\n}\n\nconst IkkeMyndig: FunctionComponent<Props> = ({ fornavn }) => {\n    const intl = useIntl();\n\n    return (\n        <Feilside\n            dokumenttittel=\"NAV Foreldrepengesøknad\"\n            ingress={intlUtils(intl, 'velkommen.ingress')}\n            tittel={intlUtils(intl, 'velkommen.tittel')}\n            illustrasjon={{\n                tittel: intlUtils(intl, 'velkommen.ikkeMyndig.tittel', {\n                    navn: fornavn.toLowerCase(),\n                }),\n                tekst: intlUtils(intl, 'velkommen.ikkeMyndig.ingress'),\n                lenke: {\n                    tekst: intlUtils(intl, 'velkommen.ikkeMyndig.boblelenketekst'),\n                    url: links.papirsøknad,\n                },\n            }}\n            skalKunneGåTilbakeTilSøknad={false}\n        />\n    );\n};\n\nexport default IkkeMyndig;\n","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value: any, delay: number) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { bemUtils, Block, intlUtils } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Dispatch, FunctionComponent, SetStateAction } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport { BodyShort, Button, Heading, Modal } from '@navikt/ds-react';\n\nimport './vilDuGåTilbakeModal.less';\n\ninterface Props {\n    isOpen: boolean;\n    setIsOpen: Dispatch<SetStateAction<boolean>>;\n}\n\nconst VilDuGåTilbakeModal: FunctionComponent<Props> = ({ isOpen, setIsOpen }) => {\n    const intl = useIntl();\n    const bem = bemUtils('vilDuGåTilbakeModal');\n    const navigate = useNavigate();\n\n    return (\n        <Modal\n            className={bem.block}\n            aria-label={'Vil du gå tilbake'}\n            closeButton={false}\n            open={isOpen}\n            onClose={() => setIsOpen(false)}\n        >\n            <Block padBottom=\"l\">\n                <Heading size=\"small\" as=\"h1\">\n                    {intlUtils(intl, 'uttaksplan.vilDuGåTilbakeModal.tittel')}\n                </Heading>\n            </Block>\n            <Block padBottom=\"l\">\n                <BodyShort>{intlUtils(intl, 'uttaksplan.vilDuGåTilbakeModal.intro')}</BodyShort>\n            </Block>\n            <Block padBottom=\"l\">\n                <BodyShort>{intlUtils(intl, 'uttaksplan.vilDuGåTilbakeModal.spørsmål')}</BodyShort>\n            </Block>\n            <div className={bem.element('knapperad')}>\n                <Button\n                    onClick={() => {\n                        setIsOpen(false);\n                        navigate(SøknadRoutes.UTTAKSPLAN_INFO);\n                    }}\n                >\n                    <FormattedMessage id=\"uttaksplan.vilDuGåTilbakeModal.okLabel\" />\n                </Button>\n                <Button variant=\"secondary\" onClick={() => setIsOpen(false)}>\n                    <FormattedMessage id=\"uttaksplan.vilDuGåTilbakeModal.avbrytLabel\" />\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default VilDuGåTilbakeModal;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum UttaksplanFormField {\n    ønskerAutomatiskJustering = 'ønskerAutomatiskJustering',\n}\n\nexport interface UttaksplanFormData {\n    [UttaksplanFormField.ønskerAutomatiskJustering]: YesOrNo;\n}\n\nexport const UttaksplanFormComponents = getTypedFormComponents<UttaksplanFormField, UttaksplanFormData>();\n","import { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { UttaksplanFormData, UttaksplanFormField } from './UttaksplanFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from '@navikt/fp-common';\n\nexport const cleanUttaksplanFormData = (\n    values: UttaksplanFormData,\n    visibility: QuestionVisibility<UttaksplanFormField, undefined>,\n): UttaksplanFormData => {\n    const cleanedData: UttaksplanFormData = {\n        ønskerAutomatiskJustering: visibility.isVisible(UttaksplanFormField.ønskerAutomatiskJustering)\n            ? values.ønskerAutomatiskJustering\n            : YesOrNo.UNANSWERED,\n    };\n\n    return cleanedData;\n};\n\nexport const mapUttaksplanFormToState = (values: Partial<UttaksplanFormData>): boolean | undefined => {\n    return convertYesOrNoOrUndefinedToBoolean(values.ønskerAutomatiskJustering);\n};\n\nexport const mapUttaksplanFormValueToState = (value: YesOrNo): boolean | undefined => {\n    return convertYesOrNoOrUndefinedToBoolean(value);\n};\n\nexport const getUttaksplanFormInitialValues = (ønskerAutomatiskJustering: boolean | undefined): UttaksplanFormData => {\n    return {\n        ønskerAutomatiskJustering:\n            ønskerAutomatiskJustering !== undefined\n                ? convertBooleanOrUndefinedToYesOrNo(ønskerAutomatiskJustering)\n                : YesOrNo.UNANSWERED,\n    };\n};\n","import {\n    Barn,\n    BarnType,\n    Forelder,\n    Periode,\n    Situasjon,\n    StønadskontoType,\n    Uttaksdagen,\n    andreAugust2022ReglerGjelder,\n    isUfødtBarn,\n    isUttaksperiode,\n} from '@navikt/fp-common';\nimport dayjs from 'dayjs';\n\nexport const getKanPeriodenRundtFødselJusteres = (\n    periodeRundtFødsel: Periode,\n    termindato: Date | undefined,\n): boolean => {\n    return (\n        termindato !== undefined &&\n        isUttaksperiode(periodeRundtFødsel) &&\n        dayjs(periodeRundtFødsel.tidsperiode.fom).isSame(Uttaksdagen(termindato).denneEllerNeste(), 'day') &&\n        periodeRundtFødsel.forelder === Forelder.farMedmor &&\n        periodeRundtFødsel.konto === StønadskontoType.Fedrekvote &&\n        periodeRundtFødsel.ønskerSamtidigUttak === true &&\n        periodeRundtFødsel.ønskerFlerbarnsdager !== true\n    );\n};\n\nexport const getKanJustereAutomatiskVedFødsel = (\n    perioderMedUttakRundtFødsel: Periode[],\n    termindato: Date | undefined,\n    erFarEllerMedmor: boolean,\n    barn: Barn,\n): boolean => {\n    return (\n        barn.type === BarnType.UFØDT &&\n        erFarEllerMedmor &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        getKanPeriodenRundtFødselJusteres(perioderMedUttakRundtFødsel[0], termindato)\n    );\n};\n\nexport const getVisAutomatiskJusteringForm = (\n    erFarEllerMedmor: boolean,\n    familiehendelsesdato: Date,\n    situasjon: Situasjon,\n    perioderMedUttakRundtFødsel: Periode[],\n    barn: Barn,\n    termindato: Date | undefined,\n    bareFarHarRett: boolean,\n): boolean => {\n    return (\n        erFarEllerMedmor &&\n        andreAugust2022ReglerGjelder(familiehendelsesdato) &&\n        situasjon === 'fødsel' &&\n        perioderMedUttakRundtFødsel.length !== 0 &&\n        isUfødtBarn(barn) &&\n        termindato !== undefined &&\n        !bareFarHarRett\n    );\n};\n","import { Alert } from '@navikt/ds-react';\nimport { Block, Periode, StønadskontoType, intlUtils, isOverføringsperiode, isUttaksperiode } from '@navikt/fp-common';\nimport { Uttaksdagen } from '@navikt/fp-common/src/common/utils/Uttaksdagen';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { UttaksplanFormComponents, UttaksplanFormField } from 'app/steps/uttaksplan/UttaksplanFormConfig';\nimport { mapUttaksplanFormValueToState } from 'app/steps/uttaksplan/UttaksplanFormUtils';\nimport dayjs from 'dayjs';\nimport { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\ninterface Props {\n    termindato: Date;\n    perioderMedUttakRundtFødsel: Periode[];\n    antallBarn: number;\n    visibility: QuestionVisibility<UttaksplanFormField, undefined>;\n}\nconst AutomatiskJusteringForm: FunctionComponent<Props> = ({\n    termindato,\n    perioderMedUttakRundtFødsel,\n    antallBarn,\n    visibility,\n}) => {\n    const intl = useIntl();\n    const uttaksdagPåEllerEtterTermin = Uttaksdagen(termindato).denneEllerNeste();\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const svarteJaMenFlerePerioderInnen6Uker =\n        state.brukerSvarteJaPåAutoJustering && perioderMedUttakRundtFødsel.length > 1;\n    const svarteJaMenStarterIkkeLengerPåTermin =\n        state.brukerSvarteJaPåAutoJustering &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        !dayjs(perioderMedUttakRundtFødsel[0].tidsperiode.fom).isSame(uttaksdagPåEllerEtterTermin, 'day');\n    const svarteJaMenEndretPeriodenPåTermin =\n        state.brukerSvarteJaPåAutoJustering &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        dayjs(perioderMedUttakRundtFødsel[0].tidsperiode.fom).isSame(uttaksdagPåEllerEtterTermin, 'day') &&\n        ((isUttaksperiode(perioderMedUttakRundtFødsel[0]) &&\n            (perioderMedUttakRundtFødsel[0].konto !== StønadskontoType.Fedrekvote ||\n                !perioderMedUttakRundtFødsel[0].ønskerSamtidigUttak)) ||\n            isOverføringsperiode(perioderMedUttakRundtFødsel[0]));\n    const svarteJaMenEndretPeriodenTilØnskerFlerbarnsdager =\n        state.brukerSvarteJaPåAutoJustering &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        dayjs(perioderMedUttakRundtFødsel[0].tidsperiode.fom).isSame(uttaksdagPåEllerEtterTermin, 'day') &&\n        isUttaksperiode(perioderMedUttakRundtFødsel[0]) &&\n        perioderMedUttakRundtFødsel[0].konto === StønadskontoType.Fedrekvote &&\n        perioderMedUttakRundtFødsel[0].ønskerFlerbarnsdager === true;\n    let infoTekstId = '';\n    if (svarteJaMenFlerePerioderInnen6Uker) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisFlerePerioder';\n    }\n    if (svarteJaMenStarterIkkeLengerPåTermin) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisIkkeLengerStarterPåTermin';\n    }\n\n    if (svarteJaMenEndretPeriodenPåTermin) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisEndretPeriodePåTermin';\n    }\n    if (svarteJaMenEndretPeriodenTilØnskerFlerbarnsdager) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisEndretPeriodeTilØnskerFlerbarnsdager';\n    }\n\n    const handleOnChange = (value: string) => {\n        const ønskerJustertUttakVedFødsel = mapUttaksplanFormValueToState(value as YesOrNo);\n        dispatch(actionCreator.setØnskerJustertUttakVedFødsel(ønskerJustertUttakVedFødsel));\n        dispatch(actionCreator.setBrukerSvarteJaPåAutoJustering(ønskerJustertUttakVedFødsel));\n    };\n\n    return (\n        <UttaksplanFormComponents.Form includeButtons={false}>\n            <div style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\n                {infoTekstId !== '' && (\n                    <Block padBottom=\"l\">\n                        <Alert variant=\"info\">\n                            <FormattedMessage id={infoTekstId} />\n                        </Alert>\n                    </Block>\n                )}\n                <Block visible={visibility.isVisible(UttaksplanFormField.ønskerAutomatiskJustering)} padBottom=\"l\">\n                    <UttaksplanFormComponents.YesOrNoQuestion\n                        name={UttaksplanFormField.ønskerAutomatiskJustering}\n                        legend={intlUtils(intl, 'uttaksplan.automatiskJustering.spørsmål', {\n                            antallBarn,\n                        })}\n                        validate={(value: YesOrNo) => {\n                            if (value === YesOrNo.UNANSWERED) {\n                                return intlUtils(intl, 'uttaksplan.automatiskJustering.svar.påkrevd');\n                            }\n\n                            return undefined;\n                        }}\n                        afterOnChange={(value: string) => handleOnChange(value)}\n                    />\n                </Block>\n            </div>\n        </UttaksplanFormComponents.Form>\n    );\n};\n\nexport default AutomatiskJusteringForm;\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { UttaksplanFormData, UttaksplanFormField } from './UttaksplanFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Periode } from '@navikt/fp-common';\nimport { getKanPeriodenRundtFødselJusteres } from './automatisk-justering-form/automatiskJusteringUtils';\n\nexport interface UttaksplanQuestionPayload extends UttaksplanFormData {\n    termindato: Date | undefined;\n    perioderMedUttakRundtFødsel: Periode[];\n}\nconst includeAutomatiskJusteringSpørsmål = (\n    perioderMedUttakRundtFødsel: Periode[],\n    termindato: Date | undefined,\n): boolean => {\n    if (perioderMedUttakRundtFødsel.length !== 1 || termindato === undefined) {\n        return false;\n    }\n\n    return getKanPeriodenRundtFødselJusteres(perioderMedUttakRundtFødsel[0], termindato);\n};\n\nconst UttaksplanFormConfig: QuestionConfig<UttaksplanQuestionPayload, UttaksplanFormField> = {\n    [UttaksplanFormField.ønskerAutomatiskJustering]: {\n        isIncluded: ({ perioderMedUttakRundtFødsel, termindato }) =>\n            includeAutomatiskJusteringSpørsmål(perioderMedUttakRundtFødsel, termindato),\n        isAnswered: ({ ønskerAutomatiskJustering }) => ønskerAutomatiskJustering !== YesOrNo.UNANSWERED,\n    },\n};\n\nconst uttaksplanQuestionsConfig = Questions<UttaksplanQuestionPayload, UttaksplanFormField>(UttaksplanFormConfig);\n\nexport default uttaksplanQuestionsConfig;\n","import {\n    Block,\n    Dekningsgrad,\n    Forelder,\n    getAktiveArbeidsforhold,\n    getErMorUfør,\n    getFarMedmorErAleneOmOmsorg,\n    getForeldreparSituasjon,\n    getKjønnFromFnr,\n    getMorErAleneOmOmsorg,\n    getMorHarRettPåForeldrepengerINorgeEllerEØS,\n    getNavnPåForeldre,\n    getPerioderMedUttakRundtFødsel,\n    intlUtils,\n    isAnnenForelderOppgitt,\n    isFarEllerMedmor,\n    ISOStringToDate,\n    isUfødtBarn,\n    isUttakAnnenPart,\n    isUttakAvForeldrepengerFørFødsel,\n    isUttaksperiode,\n    Periode,\n    Periodene,\n    SenEndringÅrsak,\n    Step,\n    StepButtonWrapper,\n} from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport { getFamiliehendelsedato, getTermindato } from 'app/utils/barnUtils';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport Api from 'app/api/api';\nimport getStønadskontoParams, {\n    getAntallBarnSomSkalBrukesFraSaksgrunnlagBeggeParter,\n    getTermindatoSomSkalBrukesFraSaksgrunnlagBeggeParter,\n} from 'app/api/getStønadskontoParams';\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\nimport useDebounce from 'app/utils/hooks/useDebounce';\nimport { getPerioderSomSkalSendesInn, storeAppState } from 'app/utils/submitUtils';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport { getEndringstidspunkt, getMorsSisteDag } from 'app/utils/dateUtils';\nimport { cleanupInvisibleCharsFromTilleggsopplysninger } from 'app/utils/tilleggsopplysningerUtils';\nimport VilDuGåTilbakeModal from './components/vil-du-gå-tilbake-modal/VilDuGåTilbakeModal';\nimport { UttaksplanFormComponents, UttaksplanFormField } from 'app/steps/uttaksplan/UttaksplanFormConfig';\nimport { getUttaksplanFormInitialValues } from './UttaksplanFormUtils';\n\n// import {\n//     getVisAutomatiskJusteringForm,\n//     getKanJustereAutomatiskVedFødsel,\n// } from 'uttaksplan/components/automatisk-justering-form/automatiskJusteringUtils';\nimport { FormikValues } from 'formik';\nimport {\n    getStartdatoFørstePeriodeAnnenPart,\n    mapAnnenPartsEksisterendeSakFromDTO,\n} from 'app/utils/eksisterendeSakUtils';\nimport { RequestStatus } from 'app/types/RequestState';\nimport dayjs from 'dayjs';\nimport { getAntallUkerMinsterett } from '../uttaksplan-info/utils/stønadskontoer';\nimport { sendErrorMessageToSentry } from 'app/api/apiUtils';\nimport useSaveLoadedRoute from 'app/utils/hooks/useSaveLoadedRoute';\nimport { Alert, Button, Loader } from '@navikt/ds-react';\nimport { dateToISOString, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Link } from 'react-router-dom';\nimport InfoOmSøknaden from 'app/components/info-eksisterende-sak/InfoOmSøknaden';\nimport { getHarAktivitetskravIPeriodeUtenUttak, Uttaksplan } from '@navikt/uttaksplan';\nimport AttachmentApi from '../../api/attachmentApi';\nimport { finnOgSettInnHull, settInnAnnenPartsUttak } from '@navikt/uttaksplan/src/builder/uttaksplanbuilderUtils';\nimport {\n    getKanJustereAutomatiskVedFødsel,\n    getVisAutomatiskJusteringForm,\n} from './automatisk-justering-form/automatiskJusteringUtils';\nimport { getSamtidigUttaksprosent } from '../../utils/uttaksplanInfoUtils';\nimport AutomatiskJusteringForm from './automatisk-justering-form/AutomatiskJusteringForm';\nimport uttaksplanQuestionsConfig from './uttaksplanQuestionConfig';\n\nconst UttaksplanStep = () => {\n    const intl = useIntl();\n    const søkerinfo = useSøkerinfo();\n    const søknad = useSøknad();\n    const [gåTilbakeIsOpen, setGåTilbakeIsOpen] = useState(false);\n    const [uttaksplanErGyldig, setUttaksplanErGyldig] = useState(true);\n    const [submitIsClicked, setSubmitIsClicked] = useState(false);\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const [endringstidspunkt, setEndringstidspunkt] = useState(state.endringstidspunkt);\n    const [perioderSomSkalSendesInn, setPerioderSomSkalSendesInn] = useState(state.perioderSomSkalSendesInn);\n    const nextRoute = søknad.erEndringssøknad ? SøknadRoutes.OPPSUMMERING : SøknadRoutes.UTENLANDSOPPHOLD;\n    const { uttaksplanInfo, eksisterendeSak, harUttaksplanBlittSlettet, annenPartsUttakErLagtTilIPlan } = state;\n    const { person, arbeidsforhold } = søkerinfo;\n    const { annenForelder, søker, barn, søkersituasjon, dekningsgrad, erEndringssøknad, tilleggsopplysninger } = søknad;\n    const { erAleneOmOmsorg } = søker;\n    const { situasjon } = søkersituasjon;\n    const { rolle } = søkersituasjon;\n    const { barnFraNesteSak } = state;\n    const debouncedState = useDebounce(state, 3000);\n    const annenForelderKjønn = getKjønnFromFnr(annenForelder);\n    const erDeltUttak = isAnnenForelderOppgitt(annenForelder)\n        ? !!annenForelder.harRettPåForeldrepengerINorge || !!annenForelder.harRettPåForeldrepengerIEØS\n        : false;\n    const erFarEllerMedmor = isFarEllerMedmor(søknad.søkersituasjon.rolle);\n    const morErAleneOmOmsorg = getMorErAleneOmOmsorg(!erFarEllerMedmor, erAleneOmOmsorg, annenForelder);\n    const farMedmorErAleneOmOmsorg = getFarMedmorErAleneOmOmsorg(erFarEllerMedmor, erAleneOmOmsorg, annenForelder);\n    const søkerErAleneOmOmsorg = morErAleneOmOmsorg || farMedmorErAleneOmOmsorg;\n    const forelderVedAleneomsorg = erDeltUttak ? undefined : erFarEllerMedmor ? Forelder.farMedmor : Forelder.mor;\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\n    const familiehendelsesdatoDate = ISOStringToDate(familiehendelsesdato);\n    const erMorUfør = getErMorUfør(annenForelder, erFarEllerMedmor);\n    const navnPåForeldre = getNavnPåForeldre(person, annenForelder, erFarEllerMedmor, intl);\n    const antallBarn = barn.antallBarn;\n    const erFlerbarnssøknad = antallBarn > 1;\n    const morHarRett = getMorHarRettPåForeldrepengerINorgeEllerEØS(rolle, erFarEllerMedmor, annenForelder);\n    const opprinneligPlan = eksisterendeSak?.uttaksplan;\n    const harKomplettUttaksplan = eksisterendeSak ? eksisterendeSak.uttaksplan !== undefined : false;\n    const harMidlertidigOmsorg = false; //TODO søkerHarMidlertidigOmsorg\n    const morsSisteDag = getMorsSisteDag(uttaksplanInfo);\n    const termindato = getTermindato(barn);\n    const annenForelderFnr =\n        isAnnenForelderOppgitt(annenForelder) && !!annenForelder.utenlandskFnr === false\n            ? annenForelder.fnr\n            : undefined;\n    const erAdopsjon = situasjon === 'adopsjon';\n    const annenForelderFnrNesteSak = barnFraNesteSak !== undefined ? barnFraNesteSak.annenForelderFnr : undefined;\n    const førsteBarnFraNesteSakFnr =\n        barnFraNesteSak !== undefined && barnFraNesteSak.fnr !== undefined && barnFraNesteSak.fnr.length > 0\n            ? barnFraNesteSak.fnr[0]\n            : undefined;\n    const familieHendelseDatoNesteSak =\n        barnFraNesteSak !== undefined ? barnFraNesteSak.familiehendelsesdato : undefined;\n    const førsteUttaksdagNesteBarnsSak =\n        barnFraNesteSak !== undefined ? barnFraNesteSak.startdatoFørsteStønadsperiode : undefined;\n\n    const bareFarMedmorHarRett = !getMorHarRettPåForeldrepengerINorgeEllerEØS(\n        søkersituasjon.rolle,\n        erFarEllerMedmor,\n        annenForelder,\n    );\n\n    const barnFnr = !isUfødtBarn(barn) && barn.fnr !== undefined && barn.fnr.length > 0 ? barn.fnr[0] : undefined;\n    const eksisterendeSakAnnenPartRequestIsSuspended =\n        !søkerErAleneOmOmsorg &&\n        annenForelderFnr !== undefined &&\n        annenForelderFnr !== '' &&\n        (barnFnr !== undefined || familiehendelsesdato !== undefined)\n            ? false\n            : true;\n\n    useSaveLoadedRoute(SøknadRoutes.UTTAKSPLAN);\n\n    const { eksisterendeSakAnnenPartData, eksisterendeSakAnnenPartError, eksisterendeSakAnnenPartRequestStatus } =\n        Api.useGetAnnenPartsVedtak(\n            annenForelderFnr,\n            barnFnr,\n            familiehendelsesdato,\n            eksisterendeSakAnnenPartRequestIsSuspended,\n        );\n\n    const eksisterendeVedtakAnnenPart = useMemo(\n        () =>\n            mapAnnenPartsEksisterendeSakFromDTO(\n                eksisterendeSakAnnenPartData,\n                barn,\n                erFarEllerMedmor,\n                familiehendelsesdato,\n                førsteUttaksdagNesteBarnsSak,\n            ),\n        [eksisterendeSakAnnenPartData, barn, erFarEllerMedmor, familiehendelsesdato, førsteUttaksdagNesteBarnsSak],\n    );\n\n    const saksgrunnlagsTermindato = getTermindatoSomSkalBrukesFraSaksgrunnlagBeggeParter(\n        eksisterendeSak?.grunnlag.termindato,\n        eksisterendeVedtakAnnenPart?.grunnlag.termindato,\n    );\n    const saksgrunnlagsAntallBarn = getAntallBarnSomSkalBrukesFraSaksgrunnlagBeggeParter(\n        erFarEllerMedmor,\n        barn.antallBarn,\n        eksisterendeVedtakAnnenPart?.grunnlag.antallBarn,\n    );\n    useEffect(() => {\n        if (erFarEllerMedmor && søknad.barn.antallBarn !== saksgrunnlagsAntallBarn) {\n            const søknadMedOppdatertAntallBarn = {\n                ...søknad,\n                barn: { ...søknad.barn, antallBarn: saksgrunnlagsAntallBarn },\n            };\n            dispatch(actionCreator.setSøknad(søknadMedOppdatertAntallBarn));\n        }\n    }, [erFarEllerMedmor, saksgrunnlagsAntallBarn, dispatch, søknad]);\n\n    const nesteBarnsSakAnnenPartRequestIsSuspended =\n        annenForelderFnrNesteSak !== undefined &&\n        annenForelderFnrNesteSak !== '' &&\n        (førsteBarnFraNesteSakFnr !== undefined || familieHendelseDatoNesteSak !== undefined) &&\n        (eksisterendeSakAnnenPartRequestIsSuspended || eksisterendeSakAnnenPartRequestStatus === RequestStatus.FINISHED)\n            ? false\n            : true;\n\n    const {\n        eksisterendeSakAnnenPartData: nesteSakAnnenPartData,\n        eksisterendeSakAnnenPartError: nesteSakAnnenPartError,\n        eksisterendeSakAnnenPartRequestStatus: nesteSakAnnenPartRequestStatus,\n    } = Api.useGetAnnenPartsVedtak(\n        annenForelderFnrNesteSak,\n        førsteBarnFraNesteSakFnr,\n        dateToISOString(familieHendelseDatoNesteSak),\n        nesteBarnsSakAnnenPartRequestIsSuspended,\n    );\n\n    const førsteUttaksdagAnnenPart = getStartdatoFørstePeriodeAnnenPart(nesteSakAnnenPartData);\n\n    useEffect(() => {\n        if (\n            førsteUttaksdagAnnenPart !== undefined &&\n            state.barnFraNesteSak !== undefined &&\n            (dayjs(førsteUttaksdagAnnenPart).isBefore(state.barnFraNesteSak.startdatoFørsteStønadsperiode, 'd') ||\n                state.barnFraNesteSak.startdatoFørsteStønadsperiode === undefined)\n        ) {\n            const oppdatertBarnNesteSak = {\n                ...state.barnFraNesteSak,\n                startdatoFørsteStønadsperiode: førsteUttaksdagAnnenPart,\n            };\n            dispatch(actionCreator.setBarnFraNesteSak(oppdatertBarnNesteSak));\n        }\n    }, [førsteUttaksdagNesteBarnsSak, førsteUttaksdagAnnenPart, barnFraNesteSak, dispatch, state.barnFraNesteSak]);\n\n    const harAktivitetskravIPeriodeUtenUttak = getHarAktivitetskravIPeriodeUtenUttak({\n        erDeltUttak,\n        morHarRett,\n        søkerErAleneOmOmsorg,\n    });\n\n    //Legg til annen parts perioder i planen til bruker\n    useEffect(() => {\n        if (\n            eksisterendeSak !== undefined &&\n            opprinneligPlan !== undefined &&\n            eksisterendeVedtakAnnenPart !== undefined &&\n            !annenPartsUttakErLagtTilIPlan\n        ) {\n            //Sett samtidigUttak på søkerens perioder hvis de overlapper med annen parts samtidig uttak:\n            opprinneligPlan.forEach((p) => {\n                if (isUttaksperiode(p)) {\n                    const overlappendePerioderAnnenPart = Periodene(\n                        eksisterendeVedtakAnnenPart.uttaksplan,\n                    ).finnOverlappendePerioder(p);\n\n                    if (\n                        overlappendePerioderAnnenPart.length !== 0 &&\n                        overlappendePerioderAnnenPart.find(\n                            (periode) => isUttakAnnenPart(periode) && periode.ønskerSamtidigUttak === true,\n                        )\n                    ) {\n                        if (!p.ønskerSamtidigUttak) {\n                            p.ønskerSamtidigUttak = true;\n                            p.samtidigUttakProsent = getSamtidigUttaksprosent(p.gradert, p.stillingsprosent);\n                        }\n                    }\n                }\n            });\n\n            const uttaksplanMedAnnenPart = finnOgSettInnHull(\n                settInnAnnenPartsUttak(\n                    opprinneligPlan,\n                    eksisterendeVedtakAnnenPart.uttaksplan,\n                    familiehendelsesdatoDate!,\n                    førsteUttaksdagNesteBarnsSak,\n                    true,\n                ),\n                harAktivitetskravIPeriodeUtenUttak,\n                familiehendelsesdatoDate!,\n                erAdopsjon,\n                bareFarMedmorHarRett,\n                erFarEllerMedmor,\n                førsteUttaksdagNesteBarnsSak,\n            );\n            const eksisterendeSakMedAnnenPartsPlan = {\n                ...eksisterendeSak,\n                uttaksplan: uttaksplanMedAnnenPart,\n            };\n            dispatch(actionCreator.setUttaksplan(uttaksplanMedAnnenPart));\n            dispatch(actionCreator.setEksisterendeSak(eksisterendeSakMedAnnenPartsPlan));\n            dispatch(actionCreator.setAnnenPartsUttakErLagtTilIPlan(true));\n        }\n    }, [\n        eksisterendeVedtakAnnenPart,\n        opprinneligPlan,\n        familiehendelsesdatoDate,\n        harAktivitetskravIPeriodeUtenUttak,\n        erAdopsjon,\n        bareFarMedmorHarRett,\n        erFarEllerMedmor,\n        dispatch,\n        førsteUttaksdagNesteBarnsSak,\n        eksisterendeSak,\n        annenPartsUttakErLagtTilIPlan,\n    ]);\n\n    const onValidSubmitHandler = () => {\n        setSubmitIsClicked(true);\n        const cleanedTilleggsopplysninger = cleanupInvisibleCharsFromTilleggsopplysninger(tilleggsopplysninger);\n        return [\n            actionCreator.setTilleggsopplysninger(cleanedTilleggsopplysninger),\n            actionCreator.setEndringstidspunkt(endringstidspunkt),\n            actionCreator.setPerioderSomSkalSendesInn(perioderSomSkalSendesInn),\n        ];\n    };\n\n    const handleBegrunnelseChange = (årsak: SenEndringÅrsak, begrunnelse: string) => {\n        const ekstraInformasjon = årsak !== SenEndringÅrsak.Ingen ? årsak : undefined;\n        const opplysninger = {\n            ...tilleggsopplysninger,\n            begrunnelseForSenEndring: {\n                ...tilleggsopplysninger.begrunnelseForSenEndring,\n                tekst: begrunnelse,\n                ekstraInformasjon: ekstraInformasjon,\n            },\n        };\n        dispatch(actionCreator.setTilleggsopplysninger(opplysninger));\n    };\n    useEffect(() => {\n        const periodeAngittAvAnnenPart = opprinneligPlan?.find((p) => isUttaksperiode(p) && p.angittAvAnnenPart);\n\n        if (periodeAngittAvAnnenPart && endringstidspunkt === undefined) {\n            const tidspunktForEndring = periodeAngittAvAnnenPart.tidsperiode.fom;\n            dispatch(actionCreator.setEndringstidspunkt(tidspunktForEndring));\n\n            const perioderForÅSendeInn = getPerioderSomSkalSendesInn(\n                søknad.uttaksplan,\n                erEndringssøknad,\n                erFarEllerMedmor,\n                opprinneligPlan,\n                tidspunktForEndring,\n            );\n            setPerioderSomSkalSendesInn(perioderForÅSendeInn);\n            dispatch(actionCreator.setPerioderSomSkalSendesInn(perioderForÅSendeInn));\n        }\n    }, [opprinneligPlan, dispatch, endringstidspunkt, erFarEllerMedmor, søknad.uttaksplan, erEndringssøknad]);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(\n        onValidSubmitHandler,\n        nextRoute,\n        (state: ForeldrepengesøknadContextState) => storeAppState(state),\n    );\n\n    const perioderMedUttakRundtFødsel = getPerioderMedUttakRundtFødsel(\n        søknad.uttaksplan,\n        familiehendelsesdatoDate!,\n        termindato,\n    );\n\n    const visAutomatiskJusteringForm = getVisAutomatiskJusteringForm(\n        erFarEllerMedmor,\n        familiehendelsesdatoDate!,\n        situasjon,\n        perioderMedUttakRundtFødsel,\n        barn,\n        termindato,\n        bareFarMedmorHarRett,\n    );\n\n    const kanJustereAutomatiskVedFødsel = getKanJustereAutomatiskVedFødsel(\n        perioderMedUttakRundtFødsel,\n        termindato,\n        erFarEllerMedmor,\n        barn,\n    );\n\n    const setØnskerJustertUttakVedFødselTilUndefinedHvisUgyldig = () => {\n        if ((visAutomatiskJusteringForm || erEndringssøknad) && !kanJustereAutomatiskVedFødsel) {\n            dispatch(actionCreator.setØnskerJustertUttakVedFødsel(undefined));\n        }\n    };\n\n    const ønskerJustertUttakVedFødselErBesvart = (ønskerAutomatiskJusteringSvar: boolean | undefined) => {\n        return (\n            visAutomatiskJusteringForm && kanJustereAutomatiskVedFødsel && ønskerAutomatiskJusteringSvar !== undefined\n        );\n    };\n\n    const ref = useRef<FormikValues>(null);\n    const clickHandler = (values: any) => {\n        setSubmitIsClicked(true);\n        if (uttaksplanErGyldig && !erTomEndringssøknad) {\n            if (ref.current) {\n                ref.current.handleSubmit();\n            }\n\n            setØnskerJustertUttakVedFødselTilUndefinedHvisUgyldig();\n\n            if (ønskerJustertUttakVedFødselErBesvart(values.ønskerAutomatiskJustering)) {\n                handleSubmit(values);\n            }\n        }\n    };\n\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n\n    useEffect(() => {\n        Api.storeAppState(debouncedState, person.fnr);\n    }, [person.fnr, debouncedState]);\n\n    const foreldreSituasjon = getForeldreparSituasjon(\n        person.kjønn,\n        annenForelderKjønn,\n        erDeltUttak,\n        morErAleneOmOmsorg,\n        farMedmorErAleneOmOmsorg,\n        rolle,\n    );\n    const kontoRequestIsSuspended =\n        (eksisterendeSakAnnenPartRequestIsSuspended\n            ? false\n            : eksisterendeSakAnnenPartRequestStatus !== RequestStatus.FINISHED) ||\n        (nesteBarnsSakAnnenPartRequestIsSuspended ? false : nesteSakAnnenPartRequestStatus !== RequestStatus.FINISHED);\n\n    const { tilgjengeligeStønadskontoerData: stønadskontoer100, tilgjengeligeStønadskontoerError } =\n        Api.useGetUttakskontoer(\n            getStønadskontoParams(\n                Dekningsgrad.HUNDRE_PROSENT,\n                barn,\n                annenForelder,\n                søkersituasjon,\n                farMedmorErAleneOmOmsorg,\n                morErAleneOmOmsorg,\n                dateToISOString(familieHendelseDatoNesteSak),\n                saksgrunnlagsAntallBarn,\n                saksgrunnlagsTermindato,\n            ),\n            kontoRequestIsSuspended,\n        );\n    const { tilgjengeligeStønadskontoerData: stønadskontoer80 } = Api.useGetUttakskontoer(\n        getStønadskontoParams(\n            Dekningsgrad.ÅTTI_PROSENT,\n            barn,\n            annenForelder,\n            søkersituasjon,\n            farMedmorErAleneOmOmsorg,\n            morErAleneOmOmsorg,\n            dateToISOString(familieHendelseDatoNesteSak),\n            saksgrunnlagsAntallBarn,\n            saksgrunnlagsTermindato,\n        ),\n        kontoRequestIsSuspended,\n    );\n\n    const handleOnPlanChange = (nyPlan: Periode[]) => {\n        setSubmitIsClicked(false);\n        dispatch(actionCreator.setUttaksplan(nyPlan));\n        const tidspunktForEndring = getEndringstidspunkt(opprinneligPlan, nyPlan, erEndringssøknad);\n        setEndringstidspunkt(tidspunktForEndring);\n\n        const perioderForÅSendeInn = getPerioderSomSkalSendesInn(\n            nyPlan,\n            erEndringssøknad,\n            erFarEllerMedmor,\n            opprinneligPlan,\n            tidspunktForEndring,\n        );\n        setPerioderSomSkalSendesInn(perioderForÅSendeInn);\n        dispatch(actionCreator.setPerioderSomSkalSendesInn(perioderForÅSendeInn));\n    };\n\n    useEffect(() => {\n        if (tilgjengeligeStønadskontoerError) {\n            sendErrorMessageToSentry(tilgjengeligeStønadskontoerError);\n            throw new Error(\n                `Vi klarte ikke å hente opp stønadskontoer. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n        if (eksisterendeSakAnnenPartError) {\n            sendErrorMessageToSentry(eksisterendeSakAnnenPartError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om saken til annen forelder. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n\n        if (nesteSakAnnenPartError) {\n            sendErrorMessageToSentry(nesteSakAnnenPartError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om saken til annen forelder for neste barn. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n    }, [tilgjengeligeStønadskontoerError, eksisterendeSakAnnenPartError, nesteSakAnnenPartError]);\n\n    if (\n        !stønadskontoer100 ||\n        !stønadskontoer80 ||\n        (eksisterendeSakAnnenPartRequestStatus !== RequestStatus.FINISHED &&\n            !eksisterendeSakAnnenPartRequestIsSuspended) ||\n        (nesteSakAnnenPartRequestStatus !== RequestStatus.FINISHED && !nesteBarnsSakAnnenPartRequestIsSuspended)\n    ) {\n        return (\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n                <Loader size=\"2xlarge\" />\n            </div>\n        );\n    }\n\n    const stønadskontoer = getValgtStønadskontoFor80Og100Prosent(stønadskontoer80, stønadskontoer100);\n    const minsterettUkerToTette = getAntallUkerMinsterett(stønadskontoer100.minsteretter.toTette);\n\n    const valgteStønadskontoer =\n        dekningsgrad === Dekningsgrad.HUNDRE_PROSENT ? stønadskontoer[100] : stønadskontoer[80];\n\n    const erTomEndringssøknad =\n        erEndringssøknad && (perioderSomSkalSendesInn === undefined || perioderSomSkalSendesInn.length === 0);\n\n    const handleSlettUttaksplan = () => {\n        const slettetPlanUtenomFpFørFødsel = søknad.uttaksplan.filter((periode) =>\n            isUttakAvForeldrepengerFørFødsel(periode),\n        );\n        dispatch(actionCreator.slettUttaksplan(slettetPlanUtenomFpFørFødsel));\n        dispatch(actionCreator.setUttaksplanSlettet(true));\n    };\n\n    const handleResetUttaksplan = () => {\n        if (state.eksisterendeSak) {\n            dispatch(actionCreator.setUttaksplan(state.eksisterendeSak.uttaksplan));\n            dispatch(actionCreator.setPerioderSomSkalSendesInn([]));\n            setPerioderSomSkalSendesInn([]);\n        }\n    };\n\n    return (\n        <UttaksplanFormComponents.FormikWrapper\n            initialValues={getUttaksplanFormInitialValues(state.søknad.ønskerJustertUttakVedFødsel)}\n            onSubmit={handleSubmit}\n            innerRef={ref}\n            renderForm={({ values }) => {\n                const visibility = uttaksplanQuestionsConfig.getVisbility({\n                    ønskerAutomatiskJustering: values[UttaksplanFormField.ønskerAutomatiskJustering] ?? YesOrNo.NO,\n                    termindato,\n                    perioderMedUttakRundtFødsel,\n                });\n\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"uttaksplan\"\n                        pageTitle={intlUtils(intl, 'søknad.uttaksplan')}\n                        onCancel={onAvbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl, erEndringssøknad)}\n                    >\n                        <Block padBottom=\"l\">\n                            <InfoOmSøknaden\n                                eksisterendeSak={eksisterendeSak}\n                                erIUttaksplanenSteg={true}\n                                tilgjengeligeStønadskontoer={valgteStønadskontoer}\n                                minsterettUkerToTette={minsterettUkerToTette}\n                            />\n                        </Block>\n                        <Uttaksplan\n                            foreldreSituasjon={foreldreSituasjon}\n                            forelderVedAleneomsorg={forelderVedAleneomsorg}\n                            erDeltUttak={erDeltUttak}\n                            uttaksplan={søknad.uttaksplan}\n                            familiehendelsesdato={familiehendelsesdato}\n                            handleOnPlanChange={handleOnPlanChange}\n                            stønadskontoer={valgteStønadskontoer}\n                            navnPåForeldre={navnPåForeldre}\n                            annenForelder={annenForelder}\n                            arbeidsforhold={getAktiveArbeidsforhold(\n                                arbeidsforhold,\n                                erAdopsjon,\n                                erFarEllerMedmor,\n                                ISOStringToDate(familiehendelsesdato),\n                            )}\n                            erEndringssøknad={erEndringssøknad}\n                            erFarEllerMedmor={erFarEllerMedmor}\n                            erFlerbarnssøknad={erFlerbarnssøknad}\n                            erAleneOmOmsorg={søkerErAleneOmOmsorg}\n                            harMidlertidigOmsorg={harMidlertidigOmsorg}\n                            situasjon={situasjon}\n                            erMorUfør={erMorUfør}\n                            morHarRett={morHarRett}\n                            søkersituasjon={søkersituasjon}\n                            dekningsgrad={dekningsgrad}\n                            antallBarn={antallBarn}\n                            tilleggsopplysninger={tilleggsopplysninger}\n                            setUttaksplanErGyldig={setUttaksplanErGyldig}\n                            handleBegrunnelseChange={handleBegrunnelseChange}\n                            eksisterendeSak={eksisterendeSak}\n                            perioderSomSkalSendesInn={perioderSomSkalSendesInn}\n                            morsSisteDag={morsSisteDag}\n                            harKomplettUttaksplan={harKomplettUttaksplan}\n                            opprinneligPlan={harUttaksplanBlittSlettet ? undefined : opprinneligPlan}\n                            handleSlettUttaksplan={handleSlettUttaksplan}\n                            handleResetUttaksplan={handleResetUttaksplan}\n                            termindato={termindato}\n                            barn={barn}\n                            saveAttachment={AttachmentApi.saveAttachment}\n                            visAutomatiskJusteringForm={visAutomatiskJusteringForm}\n                            perioderMedUttakRundtFødsel={perioderMedUttakRundtFødsel}\n                            barnFraNesteSak={barnFraNesteSak}\n                            familiehendelsesdatoNesteSak={familieHendelseDatoNesteSak}\n                            førsteUttaksdagNesteBarnsSak={førsteUttaksdagNesteBarnsSak}\n                            minsterettUkerToTette={minsterettUkerToTette}\n                        />\n                        {visAutomatiskJusteringForm && (\n                            <Block padBottom=\"l\">\n                                <AutomatiskJusteringForm\n                                    termindato={termindato!}\n                                    perioderMedUttakRundtFødsel={perioderMedUttakRundtFødsel}\n                                    antallBarn={barn.antallBarn}\n                                    visibility={visibility}\n                                />\n                            </Block>\n                        )}\n                        <VilDuGåTilbakeModal isOpen={gåTilbakeIsOpen} setIsOpen={setGåTilbakeIsOpen} />\n                        {!uttaksplanErGyldig && submitIsClicked && (\n                            <Block textAlignCenter={true} padBottom=\"l\">\n                                <Alert variant=\"error\">\n                                    <FormattedMessage id=\"uttaksplan.validering.kanIkkeGåVidere\" />\n                                </Alert>\n                            </Block>\n                        )}\n                        {erTomEndringssøknad && submitIsClicked && (\n                            <Block textAlignCenter={true} padBottom=\"l\">\n                                <Alert variant=\"error\">\n                                    <FormattedMessage id=\"uttaksplan.validering.kanIkkeGåVidereEndringssøknad\" />\n                                </Alert>\n                            </Block>\n                        )}\n                        <Block textAlignCenter={true} padBottom=\"l\">\n                            <StepButtonWrapper>\n                                {!erEndringssøknad && (\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        onClick={(event) => {\n                                            event.preventDefault();\n                                            setGåTilbakeIsOpen(true);\n                                        }}\n                                        to={getPreviousStepHref('uttaksplan')}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                )}\n                                <Button\n                                    type=\"submit\"\n                                    onClick={clickHandler}\n                                    disabled={isSubmitting}\n                                    loading={isSubmitting}\n                                >\n                                    {intlUtils(intl, 'søknad.gåVidere')}\n                                </Button>\n                            </StepButtonWrapper>\n                        </Block>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\nexport default UttaksplanStep;\n","import { Søknad } from 'app/context/types/Søknad';\nimport SøknadRoutes from './routes';\nimport { uttaksplanInneholderPerioderUtenKonto } from '@navikt/uttaksplan';\n\nconst isAvailable = (route: SøknadRoutes, søknad: Søknad): boolean => {\n    switch (route) {\n        case SøknadRoutes.SØKERSITUASJON:\n            return søknad.harGodkjentVilkår === true;\n        case SøknadRoutes.OPPSUMMERING:\n            return uttaksplanInneholderPerioderUtenKonto(søknad.uttaksplan) === false && søknad.uttaksplan.length > 0;\n        default:\n            return true;\n    }\n};\n\nexport default isAvailable;\n","import { Locale } from '@navikt/fp-common';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport IkkeMyndig from 'app/pages/ikkeMyndig/IkkeMyndig';\nimport Velkommen from 'app/pages/velkommen/Velkommen';\nimport AnnenForelder from 'app/steps/annen-forelder/AnnenForelder';\nimport Inntektsinformasjon from 'app/steps/inntektsinformasjon/Inntektsinformasjon';\nimport OmBarnet from 'app/steps/om-barnet/OmBarnet';\nimport Oppsummering from 'app/steps/oppsummering/Oppsummering';\nimport Søkersituasjon from 'app/steps/søkersituasjon/Søkersituasjon';\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\nimport UttaksplanStep from 'app/steps/uttaksplan/UttaksplanStep';\nimport { FunctionComponent, useEffect, useState } from 'react';\nimport { Route, useNavigate, Navigate, Routes, useLocation } from 'react-router-dom';\nimport SøknadSendt from '../pages/søknadSendt/SøknadSendt';\nimport isAvailable from './isAvailable';\nimport SøknadRoutes from './routes';\n\ninterface Props {\n    fornavn: string;\n    locale: Locale;\n    onChangeLocale: (locale: Locale) => void;\n    currentRoute: SøknadRoutes;\n}\n\nconst renderSøknadRoutes = (harGodkjentVilkår: boolean, erEndringssøknad: boolean, søkerErMyndig: boolean) => {\n    if (!harGodkjentVilkår) {\n        return <Route path=\"*\" element={<Navigate to={SøknadRoutes.VELKOMMEN} />} />;\n    }\n\n    if (!søkerErMyndig) {\n        return <Route path=\"*\" element={<Navigate to={SøknadRoutes.IKKE_MYNDIG} />} />;\n    }\n\n    if (erEndringssøknad) {\n        return (\n            <>\n                <Route path={SøknadRoutes.UTTAKSPLAN} element={<UttaksplanStep />} />\n                <Route path={SøknadRoutes.OPPSUMMERING} element={<Oppsummering />} />\n                <Route path={SøknadRoutes.SØKNAD_SENDT} element={<SøknadSendt />} />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Route path={SøknadRoutes.SØKERSITUASJON} element={<Søkersituasjon />} />\n            <Route path={SøknadRoutes.OM_BARNET} element={<OmBarnet />} />\n            <Route path={SøknadRoutes.ANNEN_FORELDER} element={<AnnenForelder />} />\n            <Route path={SøknadRoutes.UTTAKSPLAN_INFO} element={<UttaksplanInfo />} />\n            <Route path={SøknadRoutes.UTTAKSPLAN} element={<UttaksplanStep />} />\n            <Route path={SøknadRoutes.UTENLANDSOPPHOLD} element={<Utenlandsopphold />} />\n            <Route path={SøknadRoutes.INNTEKTSINFORMASJON} element={<Inntektsinformasjon />} />\n            <Route path={SøknadRoutes.OPPSUMMERING} element={<Oppsummering />} />\n            <Route path={SøknadRoutes.SØKNAD_SENDT} element={<SøknadSendt />} />\n        </>\n    );\n};\n\nconst ForeldrepengesøknadRoutes: FunctionComponent<Props> = ({ fornavn, locale, onChangeLocale, currentRoute }) => {\n    const { state } = useForeldrepengesøknadContext();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const harGodkjentVilkår = state.søknad.harGodkjentVilkår;\n    const erMyndig = state.søkerinfo.person.erMyndig;\n    const [isFirstTimeLoadingApp, setIsFirstTimeLoadingApp] = useState(true);\n\n    useEffect(() => {\n        if (currentRoute && erMyndig && harGodkjentVilkår && isFirstTimeLoadingApp) {\n            setIsFirstTimeLoadingApp(false);\n            if (isAvailable(currentRoute, state.søknad)) {\n                navigate(currentRoute);\n            } else {\n                if (location.pathname === SøknadRoutes.OPPSUMMERING) {\n                    navigate(SøknadRoutes.UTTAKSPLAN);\n                }\n            }\n        }\n    }, [currentRoute, erMyndig, harGodkjentVilkår, navigate, isFirstTimeLoadingApp, state.søknad, location.pathname]);\n\n    return (\n        <Routes>\n            <Route\n                path={SøknadRoutes.VELKOMMEN}\n                element={\n                    <Velkommen\n                        fornavn={fornavn}\n                        locale={locale}\n                        saker={state.saker}\n                        onChangeLocale={onChangeLocale}\n                        fnr={state.søkerinfo.person.fnr}\n                    />\n                }\n            />\n            <Route path={SøknadRoutes.IKKE_MYNDIG} element={<IkkeMyndig fornavn={state.søkerinfo.person.fornavn} />} />\n\n            {renderSøknadRoutes(harGodkjentVilkår, state.søknad.erEndringssøknad, erMyndig)}\n        </Routes>\n    );\n};\n\nexport default ForeldrepengesøknadRoutes;\n","import { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport SøknadRoutes from 'app/routes/routes';\n\nconst isEndringssøknadRoute = (route: SøknadRoutes): boolean => {\n    switch (route) {\n        case SøknadRoutes.UTTAKSPLAN:\n        case SøknadRoutes.OPPSUMMERING:\n        case SøknadRoutes.SØKNAD_SENDT:\n            return true;\n        default:\n            return false;\n    }\n};\n\nexport const shouldApplyStorage = (storedState: ForeldrepengesøknadContextState): boolean => {\n    if (storedState.søknad && storedState.søknad.erEndringssøknad) {\n        if (!isEndringssøknadRoute(storedState.currentRoute)) {\n            return false;\n        }\n    }\n\n    return storedState.version === 5;\n};\n","import { Locale } from '@navikt/fp-common';\nimport { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Api from './api/api';\nimport { sendErrorMessageToSentry } from './api/apiUtils';\nimport actionCreator from './context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from './context/hooks/useForeldrepengesøknadContext';\nimport ForeldrepengesøknadRoutes from './routes/ForeldrepengesøknadRoutes';\nimport SøknadRoutes from './routes/routes';\nimport mapSøkerinfoDTOToSøkerinfo from './utils/mapSøkerinfoDTO';\nimport { shouldApplyStorage } from './utils/mellomlagringUtils';\nimport { Loader } from '@navikt/ds-react';\n\ninterface Props {\n    locale: Locale;\n    onChangeLocale: any;\n}\n\nconst renderSpinner = () => (\n    <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n        <Loader size=\"2xlarge\" />\n    </div>\n);\n\nconst Foreldrepengesøknad: React.FunctionComponent<Props> = ({ locale, onChangeLocale }) => {\n    const { søkerinfoData, søkerinfoError } = Api.useSøkerinfo();\n    const { sakerData, sakerError } = Api.useGetSaker();\n    const { storageData } = Api.useStoredAppState();\n    const { dispatch, state } = useForeldrepengesøknadContext();\n\n    useEffect(() => {\n        if (storageData) {\n            if (shouldApplyStorage(storageData)) {\n                dispatch(actionCreator.applyStoredState(storageData));\n            }\n        }\n        if (søkerinfoData) {\n            dispatch(actionCreator.setSøkerinfo(mapSøkerinfoDTOToSøkerinfo(søkerinfoData)));\n        }\n\n        if (sakerData) {\n            dispatch(actionCreator.setSaker(sakerData.foreldrepenger));\n        }\n    }, [dispatch, storageData, søkerinfoData, sakerData]);\n\n    useEffect(() => {\n        if (søkerinfoError) {\n            sendErrorMessageToSentry(søkerinfoError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om deg. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n        if (sakerError) {\n            sendErrorMessageToSentry(sakerError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om sakene dine. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n    }, [søkerinfoError, sakerError]);\n\n    if (!state.søkerinfo || !sakerData) {\n        return renderSpinner();\n    }\n\n    return (\n        <BrowserRouter>\n            <ForeldrepengesøknadRoutes\n                fornavn={state.søkerinfo.person.fornavn}\n                locale={locale}\n                onChangeLocale={onChangeLocale}\n                currentRoute={storageData ? storageData.currentRoute : SøknadRoutes.VELKOMMEN}\n            />\n        </BrowserRouter>\n    );\n};\n\nexport default Foreldrepengesøknad;\n","import * as Sentry from '@sentry/browser';\nimport Feilside from 'app/pages/feilside/Feilside';\nimport { FOR_MANGE_VEDLEGG_ERROR } from 'app/api/apiUtils';\nimport { Component } from 'react';\nimport { links } from '@navikt/fp-common';\n\ninterface State {\n    hasError: boolean;\n    error: Error | null;\n}\n\nclass ErrorBoundary extends Component<any, State> {\n    constructor(props: unknown) {\n        super(props);\n        this.state = { hasError: false, error: null };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any): void {\n        if (error && error.message !== 'window.hasFocus is not a function') {\n            this.setState({ ...this.state, hasError: true, error });\n\n            Sentry.withScope((scope) => {\n                scope.setExtras(errorInfo);\n                Sentry.captureException(error);\n            });\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            const feilPgaForMangeVedlegg =\n                !!this.state.error &&\n                !!this.state.error.message &&\n                this.state.error.message === FOR_MANGE_VEDLEGG_ERROR;\n            const feilsideTittel = feilPgaForMangeVedlegg ? 'Feil: for mange vedlegg' : 'Informasjon om feilen';\n            return (\n                <Feilside\n                    dokumenttittel=\"NAV Foreldrepengesøknad\"\n                    ingress={`${this.state.error?.message}`}\n                    tittel={feilsideTittel}\n                    illustrasjon={{\n                        tittel: 'Hei!',\n                        tekst: 'Noe har gått galt med søknaden.',\n                        lenke: { tekst: 'Her finner du en lenke til brukerstøtte', url: links.brukerstøtte },\n                    }}\n                    skalKunneGåTilbakeTilSøknad={feilPgaForMangeVedlegg}\n                />\n            );\n        }\n\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;\n","import { detect } from 'detect-browser';\n\nexport const shouldChangeBrowser = () => {\n    const browserInfo = detect();\n    return browserInfo ? browserInfo.name === 'ie' : false;\n};\n","import { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { Modal } from '@navikt/ds-react';\nimport { IntlProvider } from '@navikt/fp-ui';\nimport { allCommonMessages, getLocaleFromSessionStorage, Locale, setLocaleInSessionStorage } from '@navikt/fp-common';\nimport ForeldrepengesøknadContextProvider from './context/ForeldrepengesøknadContext';\nimport Foreldrepengesøknad from './Foreldrepengesøknad';\nimport ByttBrowserModal from 'app/pages/byttBrowserModal/ByttBrowserModal';\nimport ErrorBoundary from './errorBoundary/ErrorBoundary';\nimport { shouldChangeBrowser } from './utils/browserUtils';\nimport nnMessages from './intl/nn_NO.json';\nimport nbMessages from './intl/nb_NO.json';\n\nconst localeFromSessionStorage = getLocaleFromSessionStorage();\n\nconst MESSAGES_GROUPED_BY_LOCALE = {\n    nb: { ...nbMessages, ...allCommonMessages.nb },\n    nn: { ...nnMessages, ...allCommonMessages.nn },\n    en: { ...allCommonMessages.en },\n};\n\ndayjs.locale(localeFromSessionStorage);\n\nconst AppContainer = () => {\n    const [locale, setLocale] = useState<Locale>(localeFromSessionStorage);\n\n    useEffect(() => {\n        if (Modal.setAppElement) {\n            Modal.setAppElement('#app');\n        }\n    });\n\n    return (\n        <ForeldrepengesøknadContextProvider>\n            <ErrorBoundary>\n                <IntlProvider locale={locale} messagesGroupedByLocale={MESSAGES_GROUPED_BY_LOCALE}>\n                    <ByttBrowserModal skalEndreNettleser={shouldChangeBrowser()} />\n                    <Foreldrepengesøknad\n                        locale={locale}\n                        onChangeLocale={(activeLocale: Locale) => {\n                            setLocaleInSessionStorage(activeLocale);\n                            setLocale(activeLocale);\n                        }}\n                    />\n                </IntlProvider>\n            </ErrorBoundary>\n        </ForeldrepengesøknadContextProvider>\n    );\n};\n\nexport default AppContainer;\n"],"names":["LocaleSessionKey","getLocaleFromSessionStorage","setLocaleInSessionStorage","locale","ContentWrapper","children","bem","bemUtils","jsx","links","dayjs","getLanguageMessages","nbMessages","nnMessages","enMessages","UiIntlProvider","useIntl","messages","useMemo","Provider","ErrorPage","appnavn","feilmelding","søkPåNytt","jsxs","VStack","Heading","FormattedMessage","Alert","BodyShort","HStack","Link","Button","Label","Component","props","error","errorInfo","Sentry.withScope","scope","eventId","Sentry.captureException","errorMessage","ErrorSummaryFp","errorRef","errors","ErrorSummary","FileInput","multiple","accept","onFilesSelect","hasUplodedAttachements","onFileSelect","useCallback","e","files","inputElement","useRef","openFileDialog","Fragment","UploadIcon","useCustomIntl","intl","i18nId","values","s4","guid","bytesString","bytes","Bytes","generateAttachmentId","mapFileToAttachment","file","type","skjemanummer","AttachmentInfo","attachment","showFileSize","onDelete","i18n","Loader","FileCheckmarkIcon","Spacer","XMarkIcon","AttachmentList","attachments","Fragment2","FileUploadError","MAX_FIL_STØRRELSE_KB","FailedAttachment","failedAttachment","FailedAttachmentList","failedAttachments","VALID_EXTENSIONS","KILOBYTES_IN_BYTE","getPendingAttachmentFromFile","attachmentType","newAttachment","fileExtensionIsValid","filename","ext","fileSizeIsValid","filesizeInB","uploadAttachment","saveAttachment","response","_a","EMPTY_ATTACHMENT_LIST","FileUploader","existingAttachments","updateAttachments","setAttachments","useState","useEffect","a","uploadAttachments","allPendingAttachments","pendingAttachment","currentAttachments","saveFiles","ca","pa","deleteAttachment","uploadedAttachments","StepButtons","goToPreviousStep","nextButtonText","nextButtonOnClick","disabled","setDisabled","onClickNextButton","d","StepButtonWrapper","logAmplitudeEvent","eventName","eventData","logToConsoleOnly","amplitude","cache","createIntlCache","createIntl","createReactIntl","useUiIntl","getTitleText","Umyndig","titleText","useDocumentTitle","GuidePanel","ArrowRightIcon","IntlProvider","messagesGroupedByLocale","IkkeMyndig","fornavn","Feilside","intlUtils","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","VilDuGåTilbakeModal","isOpen","setIsOpen","navigate","useNavigate","Modal","Block","SøknadRoutes","UttaksplanFormField","UttaksplanFormComponents","getTypedFormComponents","mapUttaksplanFormValueToState","convertYesOrNoOrUndefinedToBoolean","getUttaksplanFormInitialValues","ønskerAutomatiskJustering","convertBooleanOrUndefinedToYesOrNo","YesOrNo","getKanPeriodenRundtFødselJusteres","periodeRundtFødsel","termindato","isUttaksperiode","Uttaksdagen","Forelder","StønadskontoType","getKanJustereAutomatiskVedFødsel","perioderMedUttakRundtFødsel","erFarEllerMedmor","barn","BarnType","getVisAutomatiskJusteringForm","familiehendelsesdato","situasjon","bareFarHarRett","andreAugust2022ReglerGjelder","isUfødtBarn","AutomatiskJusteringForm","antallBarn","visibility","uttaksdagPåEllerEtterTermin","dispatch","state","useForeldrepengesøknadContext","svarteJaMenFlerePerioderInnen6Uker","svarteJaMenStarterIkkeLengerPåTermin","svarteJaMenEndretPeriodenPåTermin","isOverføringsperiode","svarteJaMenEndretPeriodenTilØnskerFlerbarnsdager","infoTekstId","handleOnChange","ønskerJustertUttakVedFødsel","actionCreator","includeAutomatiskJusteringSpørsmål","UttaksplanFormConfig","uttaksplanQuestionsConfig","Questions","UttaksplanStep","søkerinfo","useSøkerinfo","søknad","useSøknad","gåTilbakeIsOpen","setGåTilbakeIsOpen","uttaksplanErGyldig","setUttaksplanErGyldig","submitIsClicked","setSubmitIsClicked","endringstidspunkt","setEndringstidspunkt","perioderSomSkalSendesInn","setPerioderSomSkalSendesInn","nextRoute","uttaksplanInfo","eksisterendeSak","harUttaksplanBlittSlettet","annenPartsUttakErLagtTilIPlan","person","arbeidsforhold","annenForelder","søker","søkersituasjon","dekningsgrad","erEndringssøknad","tilleggsopplysninger","erAleneOmOmsorg","rolle","barnFraNesteSak","debouncedState","annenForelderKjønn","getKjønnFromFnr","erDeltUttak","isAnnenForelderOppgitt","isFarEllerMedmor","morErAleneOmOmsorg","getMorErAleneOmOmsorg","farMedmorErAleneOmOmsorg","getFarMedmorErAleneOmOmsorg","søkerErAleneOmOmsorg","forelderVedAleneomsorg","getFamiliehendelsedato","familiehendelsesdatoDate","ISOStringToDate","erMorUfør","getErMorUfør","navnPåForeldre","getNavnPåForeldre","erFlerbarnssøknad","morHarRett","getMorHarRettPåForeldrepengerINorgeEllerEØS","opprinneligPlan","harKomplettUttaksplan","harMidlertidigOmsorg","morsSisteDag","getMorsSisteDag","getTermindato","annenForelderFnr","erAdopsjon","annenForelderFnrNesteSak","førsteBarnFraNesteSakFnr","familieHendelseDatoNesteSak","førsteUttaksdagNesteBarnsSak","bareFarMedmorHarRett","barnFnr","eksisterendeSakAnnenPartRequestIsSuspended","useSaveLoadedRoute","eksisterendeSakAnnenPartData","eksisterendeSakAnnenPartError","eksisterendeSakAnnenPartRequestStatus","Api","eksisterendeVedtakAnnenPart","mapAnnenPartsEksisterendeSakFromDTO","saksgrunnlagsTermindato","getTermindatoSomSkalBrukesFraSaksgrunnlagBeggeParter","saksgrunnlagsAntallBarn","getAntallBarnSomSkalBrukesFraSaksgrunnlagBeggeParter","søknadMedOppdatertAntallBarn","nesteBarnsSakAnnenPartRequestIsSuspended","RequestStatus","nesteSakAnnenPartData","nesteSakAnnenPartError","nesteSakAnnenPartRequestStatus","dateToISOString","førsteUttaksdagAnnenPart","getStartdatoFørstePeriodeAnnenPart","oppdatertBarnNesteSak","harAktivitetskravIPeriodeUtenUttak","getHarAktivitetskravIPeriodeUtenUttak","p","overlappendePerioderAnnenPart","Periodene","periode","isUttakAnnenPart","getSamtidigUttaksprosent","uttaksplanMedAnnenPart","finnOgSettInnHull","settInnAnnenPartsUttak","eksisterendeSakMedAnnenPartsPlan","onValidSubmitHandler","cleanedTilleggsopplysninger","cleanupInvisibleCharsFromTilleggsopplysninger","handleBegrunnelseChange","årsak","begrunnelse","ekstraInformasjon","SenEndringÅrsak","opplysninger","periodeAngittAvAnnenPart","tidspunktForEndring","perioderForÅSendeInn","getPerioderSomSkalSendesInn","handleSubmit","isSubmitting","useOnValidSubmit","storeAppState","getPerioderMedUttakRundtFødsel","visAutomatiskJusteringForm","kanJustereAutomatiskVedFødsel","setØnskerJustertUttakVedFødselTilUndefinedHvisUgyldig","ønskerJustertUttakVedFødselErBesvart","ønskerAutomatiskJusteringSvar","ref","clickHandler","erTomEndringssøknad","onAvbrytSøknad","useAvbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","foreldreSituasjon","getForeldreparSituasjon","kontoRequestIsSuspended","stønadskontoer100","tilgjengeligeStønadskontoerError","getStønadskontoParams","Dekningsgrad","stønadskontoer80","handleOnPlanChange","nyPlan","getEndringstidspunkt","sendErrorMessageToSentry","stønadskontoer","getValgtStønadskontoFor80Og100Prosent","minsterettUkerToTette","getAntallUkerMinsterett","valgteStønadskontoer","handleSlettUttaksplan","slettetPlanUtenomFpFørFødsel","isUttakAvForeldrepengerFørFødsel","handleResetUttaksplan","Step","stepConfig","InfoOmSøknaden","Uttaksplan","getAktiveArbeidsforhold","AttachmentApi","event","getPreviousStepHref","isAvailable","route","uttaksplanInneholderPerioderUtenKonto","renderSøknadRoutes","harGodkjentVilkår","søkerErMyndig","Route","Oppsummering","SøknadSendt","Søkersituasjon","OmBarnet","AnnenForelder","UttaksplanInfo","Utenlandsopphold","Inntektsinformasjon","Navigate","ForeldrepengesøknadRoutes","onChangeLocale","currentRoute","location","useLocation","erMyndig","isFirstTimeLoadingApp","setIsFirstTimeLoadingApp","Routes","Velkommen","isEndringssøknadRoute","shouldApplyStorage","storedState","renderSpinner","Foreldrepengesøknad","søkerinfoData","søkerinfoError","sakerData","sakerError","storageData","mapSøkerinfoDTOToSøkerinfo","BrowserRouter","ErrorBoundary","feilPgaForMangeVedlegg","FOR_MANGE_VEDLEGG_ERROR","feilsideTittel","shouldChangeBrowser","browserInfo","detect","localeFromSessionStorage","MESSAGES_GROUPED_BY_LOCALE","allCommonMessages","AppContainer","setLocale","ForeldrepengesøknadContextProvider","ByttBrowserModal","activeLocale","AppContainer$1"],"mappings":"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"}