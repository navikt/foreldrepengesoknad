{"version":3,"file":"AppContainer.stories-bb351fd3.js","sources":["../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/message.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/dateTime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/displayName.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/list.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/plural.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/relativeTime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/number.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/create-intl.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.1.6/node_modules/react-intl/lib/src/components/provider.js","../../../../packages/fp-common/src/common/utils/localeUtils.ts","../../src/app/intl/IntlProvider.tsx","../../src/app/pages/ikkeMyndig/IkkeMyndig.tsx","../../src/app/utils/hooks/useDebounce.ts","../../src/app/steps/uttaksplan/components/vil-du-gå-tilbake-modal/VilDuGåTilbakeModal.tsx","../../src/app/steps/uttaksplan/UttaksplanFormConfig.ts","../../src/app/steps/uttaksplan/UttaksplanFormUtils.ts","../../src/app/steps/uttaksplan/automatisk-justering-form/automatiskJusteringUtils.ts","../../src/app/steps/uttaksplan/automatisk-justering-form/AutomatiskJusteringForm.tsx","../../src/app/steps/uttaksplan/uttaksplanQuestionConfig.ts","../../src/app/steps/uttaksplan/UttaksplanStep.tsx","../../src/app/routes/isAvailable.ts","../../src/app/routes/ForeldrepengesøknadRoutes.tsx","../../src/app/utils/mellomlagringUtils.ts","../../src/app/Foreldrepengesøknad.tsx","../../src/app/errorBoundary/ErrorBoundary.tsx","../../src/app/utils/browserUtils.ts","../../src/app/AppContainer.tsx"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { IntlMessageFormat, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from './error';\nimport { TYPE } from '@formatjs/icu-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport var formatMessage = function (_a, state, messageDescriptor, values, opts) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, fallbackOnEmptyString = _a.fallbackOnEmptyString, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (fallbackOnEmptyString === false && message === '') {\n            return message;\n        }\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, (opts || {})));\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n};\n","import { __assign } from \"tslib\";\nimport { filterProps, getNamedFormat } from './utils';\nimport { IntlFormatError } from './error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n    'fractionalSecondDigits',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second &&\n        !filteredOptions.timeStyle &&\n        !filteredOptions.dateStyle) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatDateTimeRange(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\n    try {\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting date time range.', config.locale, e));\n    }\n    return String(from);\n}\nexport function formatDateToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return [];\n}\n","import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'style',\n    'type',\n    'fallback',\n    'languageDisplay',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting display name.', locale, e));\n    }\n}\n","import { __assign } from \"tslib\";\nimport { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar LIST_FORMAT_OPTIONS = [\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return \"\".concat(now, \"_\").concat(i, \"_\").concat(now);\n}\nexport function formatList(opts, getListFormat, values, options) {\n    if (options === void 0) { options = {}; }\n    var results = formatListToParts(opts, getListFormat, values, options).reduce(function (all, el) {\n        var val = el.value;\n        if (typeof val !== 'string') {\n            all.push(val);\n        }\n        else if (typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += val;\n        }\n        else {\n            all.push(val);\n        }\n        return all;\n    }, []);\n    return results.length === 1 ? results[0] : results.length === 0 ? '' : results;\n}\nexport function formatListToParts(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        return getListFormat(locale, filteredOptions)\n            .formatToParts(serializedValues)\n            .map(function (part) {\n            return part.type === 'literal'\n                ? part\n                : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });\n        });\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting list.', locale, e));\n    }\n    // @ts-ignore\n    return values;\n}\n","import { filterProps } from './utils';\nimport { IntlFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting plural.', locale, e));\n    }\n    return 'other';\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting relative time.', config.locale, e));\n    }\n    return String(value);\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { IntlFormatError } from './error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'numberingSystem',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return [];\n}\n","import { __assign } from \"tslib\";\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\nimport { InvalidConfigError, MissingDataError } from './error';\nimport { formatNumber, formatNumberToParts } from './number';\nimport { formatRelativeTime } from './relativeTime';\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, formatDateTimeRange, } from './dateTime';\nimport { formatPlural } from './plural';\nimport { formatMessage } from './message';\nimport { formatList, formatListToParts } from './list';\nimport { formatDisplayName } from './displayName';\nfunction messagesContainString(messages) {\n    var firstMessage = messages ? messages[Object.keys(messages)[0]] : undefined;\n    return typeof firstMessage === 'string';\n}\nfunction verifyConfigMessages(config) {\n    if (config.onWarn &&\n        config.defaultRichTextElements &&\n        messagesContainString(config.messages || {})) {\n        config.onWarn(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\n    }\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\".concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\")));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.NumberFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    verifyConfigMessages(resolvedConfig);\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), \n        // @ts-expect-error TODO: will get to this later\n        formatMessage: formatMessage.bind(null, resolvedConfig, formatters), \n        // @ts-expect-error TODO: will get to this later\n        $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var rest = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        rest[_i - 4] = arguments[_i];\n    }\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\n        formatters,\n        descriptor,\n        values], rest, false));\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\n    var resolvedConfig = {\n        locale: coreIntl.locale,\n        timeZone: coreIntl.timeZone,\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n        formats: coreIntl.formats,\n        defaultLocale: coreIntl.defaultLocale,\n        defaultFormats: coreIntl.defaultFormats,\n        messages: coreIntl.messages,\n        onError: coreIntl.onError,\n        defaultRichTextElements: defaultRichTextElements,\n    };\n    return __assign(__assign({}, coreIntl), { \n        // @ts-expect-error fix this\n        formatMessage: formatMessage.bind(null, resolvedConfig, coreIntl.formatters), \n        // @ts-expect-error fix this\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","import { Locale } from '../types/Locale';\n\nconst LocaleSessionKey = 'selectedLocale';\n\nexport const getLocaleFromSessionStorage = (): Locale => {\n    return (sessionStorage.getItem(LocaleSessionKey) as Locale) || 'nb';\n};\n\nexport const setLocaleInSessionStorage = (locale: Locale): void => {\n    sessionStorage.setItem(LocaleSessionKey, locale);\n};\n\nexport const getNynorskLocale = () => {\n    if (Intl.NumberFormat.supportedLocalesOf('no-NN').length > 0) {\n        return 'no-NN';\n    }\n    return 'nn';\n};\n\nexport const getBokmålLocale = () => {\n    if (Intl.NumberFormat.supportedLocalesOf('no-NB').length > 0) {\n        return 'no-NB';\n    }\n    return 'nb';\n};\n\nexport const getLocaleForApi = (locale: string): Locale => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n","import * as React from 'react';\nimport { IntlProvider as Provider } from 'react-intl';\nimport dayjs from 'dayjs';\nimport nnMessages from './nn_NO.json';\nimport nbMessages from './nb_NO.json';\nimport { allCommonMessages, Locale } from '@navikt/fp-common';\n\ninterface Props {\n    locale: Locale;\n    children: React.ReactNode;\n}\n\ndayjs.locale('nb');\n\nconst getLanguageMessages = (locale: Locale) => {\n    if (locale === 'nb') {\n        return { ...nbMessages, ...allCommonMessages.nb };\n    } else {\n        return { ...nnMessages, ...allCommonMessages.nn };\n    }\n};\n\nconst IntlProvider: React.FunctionComponent<Props> = ({ locale, children }) => {\n    return (\n        <Provider locale={locale} messages={getLanguageMessages(locale) || {}}>\n            {children}\n        </Provider>\n    );\n};\nexport default IntlProvider;\n","import { intlUtils, links } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport Feilside from '../feilside/Feilside';\n\ninterface Props {\n    fornavn: string;\n}\n\nconst IkkeMyndig: FunctionComponent<Props> = ({ fornavn }) => {\n    const intl = useIntl();\n\n    return (\n        <Feilside\n            dokumenttittel=\"NAV Foreldrepengesøknad\"\n            ingress={intlUtils(intl, 'velkommen.ingress')}\n            tittel={intlUtils(intl, 'velkommen.tittel')}\n            illustrasjon={{\n                tittel: intlUtils(intl, 'velkommen.ikkeMyndig.tittel', {\n                    navn: fornavn.toLowerCase(),\n                }),\n                tekst: intlUtils(intl, 'velkommen.ikkeMyndig.ingress'),\n                lenke: {\n                    tekst: intlUtils(intl, 'velkommen.ikkeMyndig.boblelenketekst'),\n                    url: links.papirsøknad,\n                },\n            }}\n            skalKunneGåTilbakeTilSøknad={false}\n        />\n    );\n};\n\nexport default IkkeMyndig;\n","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value: any, delay: number) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { bemUtils, Block, intlUtils } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Dispatch, FunctionComponent, SetStateAction } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport { BodyShort, Button, Heading, Modal } from '@navikt/ds-react';\n\nimport './vilDuGåTilbakeModal.less';\n\ninterface Props {\n    isOpen: boolean;\n    setIsOpen: Dispatch<SetStateAction<boolean>>;\n}\n\nconst VilDuGåTilbakeModal: FunctionComponent<Props> = ({ isOpen, setIsOpen }) => {\n    const intl = useIntl();\n    const bem = bemUtils('vilDuGåTilbakeModal');\n    const navigate = useNavigate();\n\n    return (\n        <Modal\n            className={bem.block}\n            aria-label={'Vil du gå tilbake'}\n            closeButton={false}\n            open={isOpen}\n            onClose={() => setIsOpen(false)}\n        >\n            <Block padBottom=\"l\">\n                <Heading size=\"small\" as=\"h1\">\n                    {intlUtils(intl, 'uttaksplan.vilDuGåTilbakeModal.tittel')}\n                </Heading>\n            </Block>\n            <Block padBottom=\"l\">\n                <BodyShort>{intlUtils(intl, 'uttaksplan.vilDuGåTilbakeModal.intro')}</BodyShort>\n            </Block>\n            <Block padBottom=\"l\">\n                <BodyShort>{intlUtils(intl, 'uttaksplan.vilDuGåTilbakeModal.spørsmål')}</BodyShort>\n            </Block>\n            <div className={bem.element('knapperad')}>\n                <Button\n                    onClick={() => {\n                        setIsOpen(false);\n                        navigate(SøknadRoutes.UTTAKSPLAN_INFO);\n                    }}\n                >\n                    <FormattedMessage id=\"uttaksplan.vilDuGåTilbakeModal.okLabel\" />\n                </Button>\n                <Button variant=\"secondary\" onClick={() => setIsOpen(false)}>\n                    <FormattedMessage id=\"uttaksplan.vilDuGåTilbakeModal.avbrytLabel\" />\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default VilDuGåTilbakeModal;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum UttaksplanFormField {\n    ønskerAutomatiskJustering = 'ønskerAutomatiskJustering',\n}\n\nexport interface UttaksplanFormData {\n    [UttaksplanFormField.ønskerAutomatiskJustering]: YesOrNo;\n}\n\nexport const UttaksplanFormComponents = getTypedFormComponents<UttaksplanFormField, UttaksplanFormData>();\n","import { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { UttaksplanFormData, UttaksplanFormField } from './UttaksplanFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from '@navikt/fp-common';\n\nexport const cleanUttaksplanFormData = (\n    values: UttaksplanFormData,\n    visibility: QuestionVisibility<UttaksplanFormField, undefined>,\n): UttaksplanFormData => {\n    const cleanedData: UttaksplanFormData = {\n        ønskerAutomatiskJustering: visibility.isVisible(UttaksplanFormField.ønskerAutomatiskJustering)\n            ? values.ønskerAutomatiskJustering\n            : YesOrNo.UNANSWERED,\n    };\n\n    return cleanedData;\n};\n\nexport const mapUttaksplanFormToState = (values: Partial<UttaksplanFormData>): boolean | undefined => {\n    return convertYesOrNoOrUndefinedToBoolean(values.ønskerAutomatiskJustering);\n};\n\nexport const mapUttaksplanFormValueToState = (value: YesOrNo): boolean | undefined => {\n    return convertYesOrNoOrUndefinedToBoolean(value);\n};\n\nexport const getUttaksplanFormInitialValues = (ønskerAutomatiskJustering: boolean | undefined): UttaksplanFormData => {\n    return {\n        ønskerAutomatiskJustering:\n            ønskerAutomatiskJustering !== undefined\n                ? convertBooleanOrUndefinedToYesOrNo(ønskerAutomatiskJustering)\n                : YesOrNo.UNANSWERED,\n    };\n};\n","import {\n    Barn,\n    BarnType,\n    Forelder,\n    Periode,\n    Situasjon,\n    StønadskontoType,\n    Uttaksdagen,\n    andreAugust2022ReglerGjelder,\n    isUfødtBarn,\n    isUttaksperiode,\n} from '@navikt/fp-common';\nimport dayjs from 'dayjs';\n\nexport const getKanPeriodenRundtFødselJusteres = (\n    periodeRundtFødsel: Periode,\n    termindato: Date | undefined,\n): boolean => {\n    return (\n        termindato !== undefined &&\n        isUttaksperiode(periodeRundtFødsel) &&\n        dayjs(periodeRundtFødsel.tidsperiode.fom).isSame(Uttaksdagen(termindato).denneEllerNeste(), 'day') &&\n        periodeRundtFødsel.forelder === Forelder.farMedmor &&\n        periodeRundtFødsel.konto === StønadskontoType.Fedrekvote &&\n        periodeRundtFødsel.ønskerSamtidigUttak === true &&\n        periodeRundtFødsel.ønskerFlerbarnsdager !== true\n    );\n};\n\nexport const getKanJustereAutomatiskVedFødsel = (\n    perioderMedUttakRundtFødsel: Periode[],\n    termindato: Date | undefined,\n    erFarEllerMedmor: boolean,\n    barn: Barn,\n): boolean => {\n    return (\n        barn.type === BarnType.UFØDT &&\n        erFarEllerMedmor &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        getKanPeriodenRundtFødselJusteres(perioderMedUttakRundtFødsel[0], termindato)\n    );\n};\n\nexport const getVisAutomatiskJusteringForm = (\n    erFarEllerMedmor: boolean,\n    familiehendelsesdato: Date,\n    situasjon: Situasjon,\n    perioderMedUttakRundtFødsel: Periode[],\n    barn: Barn,\n    termindato: Date | undefined,\n    bareFarHarRett: boolean,\n): boolean => {\n    return (\n        erFarEllerMedmor &&\n        andreAugust2022ReglerGjelder(familiehendelsesdato) &&\n        situasjon === 'fødsel' &&\n        perioderMedUttakRundtFødsel.length !== 0 &&\n        isUfødtBarn(barn) &&\n        termindato !== undefined &&\n        !bareFarHarRett\n    );\n};\n","import { Alert } from '@navikt/ds-react';\nimport { Block, Periode, StønadskontoType, intlUtils, isOverføringsperiode, isUttaksperiode } from '@navikt/fp-common';\nimport { Uttaksdagen } from '@navikt/fp-common/src/common/utils/Uttaksdagen';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { UttaksplanFormComponents, UttaksplanFormField } from 'app/steps/uttaksplan/UttaksplanFormConfig';\nimport { mapUttaksplanFormValueToState } from 'app/steps/uttaksplan/UttaksplanFormUtils';\nimport dayjs from 'dayjs';\nimport { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\ninterface Props {\n    termindato: Date;\n    perioderMedUttakRundtFødsel: Periode[];\n    antallBarn: number;\n    visibility: QuestionVisibility<UttaksplanFormField, undefined>;\n}\nconst AutomatiskJusteringForm: FunctionComponent<Props> = ({\n    termindato,\n    perioderMedUttakRundtFødsel,\n    antallBarn,\n    visibility,\n}) => {\n    const intl = useIntl();\n    const uttaksdagPåEllerEtterTermin = Uttaksdagen(termindato).denneEllerNeste();\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const svarteJaMenFlerePerioderInnen6Uker =\n        state.brukerSvarteJaPåAutoJustering && perioderMedUttakRundtFødsel.length > 1;\n    const svarteJaMenStarterIkkeLengerPåTermin =\n        state.brukerSvarteJaPåAutoJustering &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        !dayjs(perioderMedUttakRundtFødsel[0].tidsperiode.fom).isSame(uttaksdagPåEllerEtterTermin, 'day');\n    const svarteJaMenEndretPeriodenPåTermin =\n        state.brukerSvarteJaPåAutoJustering &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        dayjs(perioderMedUttakRundtFødsel[0].tidsperiode.fom).isSame(uttaksdagPåEllerEtterTermin, 'day') &&\n        ((isUttaksperiode(perioderMedUttakRundtFødsel[0]) &&\n            (perioderMedUttakRundtFødsel[0].konto !== StønadskontoType.Fedrekvote ||\n                !perioderMedUttakRundtFødsel[0].ønskerSamtidigUttak)) ||\n            isOverføringsperiode(perioderMedUttakRundtFødsel[0]));\n    const svarteJaMenEndretPeriodenTilØnskerFlerbarnsdager =\n        state.brukerSvarteJaPåAutoJustering &&\n        perioderMedUttakRundtFødsel.length === 1 &&\n        dayjs(perioderMedUttakRundtFødsel[0].tidsperiode.fom).isSame(uttaksdagPåEllerEtterTermin, 'day') &&\n        isUttaksperiode(perioderMedUttakRundtFødsel[0]) &&\n        perioderMedUttakRundtFødsel[0].konto === StønadskontoType.Fedrekvote &&\n        perioderMedUttakRundtFødsel[0].ønskerFlerbarnsdager === true;\n    let infoTekstId = '';\n    if (svarteJaMenFlerePerioderInnen6Uker) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisFlerePerioder';\n    }\n    if (svarteJaMenStarterIkkeLengerPåTermin) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisIkkeLengerStarterPåTermin';\n    }\n\n    if (svarteJaMenEndretPeriodenPåTermin) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisEndretPeriodePåTermin';\n    }\n    if (svarteJaMenEndretPeriodenTilØnskerFlerbarnsdager) {\n        infoTekstId = 'uttaksplan.automatiskJustering.info.hvisEndretPeriodeTilØnskerFlerbarnsdager';\n    }\n\n    const handleOnChange = (value: string) => {\n        const ønskerJustertUttakVedFødsel = mapUttaksplanFormValueToState(value as YesOrNo);\n        dispatch(actionCreator.setØnskerJustertUttakVedFødsel(ønskerJustertUttakVedFødsel));\n        dispatch(actionCreator.setBrukerSvarteJaPåAutoJustering(ønskerJustertUttakVedFødsel));\n    };\n\n    return (\n        <UttaksplanFormComponents.Form includeButtons={false}>\n            <div style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\n                {infoTekstId !== '' && (\n                    <Block padBottom=\"l\">\n                        <Alert variant=\"info\">\n                            <FormattedMessage id={infoTekstId} />\n                        </Alert>\n                    </Block>\n                )}\n                <Block visible={visibility.isVisible(UttaksplanFormField.ønskerAutomatiskJustering)} padBottom=\"l\">\n                    <UttaksplanFormComponents.YesOrNoQuestion\n                        name={UttaksplanFormField.ønskerAutomatiskJustering}\n                        legend={intlUtils(intl, 'uttaksplan.automatiskJustering.spørsmål', {\n                            antallBarn,\n                        })}\n                        validate={(value: YesOrNo) => {\n                            if (value === YesOrNo.UNANSWERED) {\n                                return intlUtils(intl, 'uttaksplan.automatiskJustering.svar.påkrevd');\n                            }\n\n                            return undefined;\n                        }}\n                        afterOnChange={(value: string) => handleOnChange(value)}\n                    />\n                </Block>\n            </div>\n        </UttaksplanFormComponents.Form>\n    );\n};\n\nexport default AutomatiskJusteringForm;\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { UttaksplanFormData, UttaksplanFormField } from './UttaksplanFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Periode } from '@navikt/fp-common';\nimport { getKanPeriodenRundtFødselJusteres } from './automatisk-justering-form/automatiskJusteringUtils';\n\nexport interface UttaksplanQuestionPayload extends UttaksplanFormData {\n    termindato: Date | undefined;\n    perioderMedUttakRundtFødsel: Periode[];\n}\nconst includeAutomatiskJusteringSpørsmål = (\n    perioderMedUttakRundtFødsel: Periode[],\n    termindato: Date | undefined,\n): boolean => {\n    if (perioderMedUttakRundtFødsel.length !== 1 || termindato === undefined) {\n        return false;\n    }\n\n    return getKanPeriodenRundtFødselJusteres(perioderMedUttakRundtFødsel[0], termindato);\n};\n\nconst UttaksplanFormConfig: QuestionConfig<UttaksplanQuestionPayload, UttaksplanFormField> = {\n    [UttaksplanFormField.ønskerAutomatiskJustering]: {\n        isIncluded: ({ perioderMedUttakRundtFødsel, termindato }) =>\n            includeAutomatiskJusteringSpørsmål(perioderMedUttakRundtFødsel, termindato),\n        isAnswered: ({ ønskerAutomatiskJustering }) => ønskerAutomatiskJustering !== YesOrNo.UNANSWERED,\n    },\n};\n\nconst uttaksplanQuestionsConfig = Questions<UttaksplanQuestionPayload, UttaksplanFormField>(UttaksplanFormConfig);\n\nexport default uttaksplanQuestionsConfig;\n","import {\n    Block,\n    Dekningsgrad,\n    Forelder,\n    getAktiveArbeidsforhold,\n    getErMorUfør,\n    getFarMedmorErAleneOmOmsorg,\n    getForeldreparSituasjon,\n    getKjønnFromFnr,\n    getMorErAleneOmOmsorg,\n    getMorHarRettPåForeldrepengerINorgeEllerEØS,\n    getNavnPåForeldre,\n    getPerioderMedUttakRundtFødsel,\n    intlUtils,\n    isAnnenForelderOppgitt,\n    isFarEllerMedmor,\n    ISOStringToDate,\n    isUfødtBarn,\n    isUttakAnnenPart,\n    isUttakAvForeldrepengerFørFødsel,\n    isUttaksperiode,\n    Periode,\n    Periodene,\n    SenEndringÅrsak,\n    Step,\n    StepButtonWrapper,\n} from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport { getFamiliehendelsedato, getTermindato } from 'app/utils/barnUtils';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport Api from 'app/api/api';\nimport getStønadskontoParams, {\n    getAntallBarnSomSkalBrukesFraSaksgrunnlagBeggeParter,\n    getTermindatoSomSkalBrukesFraSaksgrunnlagBeggeParter,\n} from 'app/api/getStønadskontoParams';\nimport { getValgtStønadskontoFor80Og100Prosent } from 'app/utils/stønadskontoUtils';\nimport useDebounce from 'app/utils/hooks/useDebounce';\nimport { getPerioderSomSkalSendesInn, storeAppState } from 'app/utils/submitUtils';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport { getEndringstidspunkt, getMorsSisteDag } from 'app/utils/dateUtils';\nimport { cleanupInvisibleCharsFromTilleggsopplysninger } from 'app/utils/tilleggsopplysningerUtils';\nimport VilDuGåTilbakeModal from './components/vil-du-gå-tilbake-modal/VilDuGåTilbakeModal';\nimport { UttaksplanFormComponents, UttaksplanFormField } from 'app/steps/uttaksplan/UttaksplanFormConfig';\nimport { getUttaksplanFormInitialValues } from './UttaksplanFormUtils';\n\n// import {\n//     getVisAutomatiskJusteringForm,\n//     getKanJustereAutomatiskVedFødsel,\n// } from 'uttaksplan/components/automatisk-justering-form/automatiskJusteringUtils';\nimport { FormikValues } from 'formik';\nimport {\n    getStartdatoFørstePeriodeAnnenPart,\n    mapAnnenPartsEksisterendeSakFromDTO,\n} from 'app/utils/eksisterendeSakUtils';\nimport { RequestStatus } from 'app/types/RequestState';\nimport dayjs from 'dayjs';\nimport { getAntallUkerMinsterett } from '../uttaksplan-info/utils/stønadskontoer';\nimport { sendErrorMessageToSentry } from 'app/api/apiUtils';\nimport useSaveLoadedRoute from 'app/utils/hooks/useSaveLoadedRoute';\nimport { Alert, Button, Loader } from '@navikt/ds-react';\nimport { dateToISOString, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Link } from 'react-router-dom';\nimport InfoOmSøknaden from 'app/components/info-eksisterende-sak/InfoOmSøknaden';\nimport { getHarAktivitetskravIPeriodeUtenUttak, Uttaksplan } from '@navikt/uttaksplan';\nimport AttachmentApi from '../../api/attachmentApi';\nimport { finnOgSettInnHull, settInnAnnenPartsUttak } from '@navikt/uttaksplan/src/builder/uttaksplanbuilderUtils';\nimport {\n    getKanJustereAutomatiskVedFødsel,\n    getVisAutomatiskJusteringForm,\n} from './automatisk-justering-form/automatiskJusteringUtils';\nimport { getSamtidigUttaksprosent } from '../../utils/uttaksplanInfoUtils';\nimport AutomatiskJusteringForm from './automatisk-justering-form/AutomatiskJusteringForm';\nimport uttaksplanQuestionsConfig from './uttaksplanQuestionConfig';\n\nconst UttaksplanStep = () => {\n    const intl = useIntl();\n    const søkerinfo = useSøkerinfo();\n    const søknad = useSøknad();\n    const [gåTilbakeIsOpen, setGåTilbakeIsOpen] = useState(false);\n    const [uttaksplanErGyldig, setUttaksplanErGyldig] = useState(true);\n    const [submitIsClicked, setSubmitIsClicked] = useState(false);\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const [endringstidspunkt, setEndringstidspunkt] = useState(state.endringstidspunkt);\n    const [perioderSomSkalSendesInn, setPerioderSomSkalSendesInn] = useState(state.perioderSomSkalSendesInn);\n    const nextRoute = søknad.erEndringssøknad ? SøknadRoutes.OPPSUMMERING : SøknadRoutes.UTENLANDSOPPHOLD;\n    const { uttaksplanInfo, eksisterendeSak, harUttaksplanBlittSlettet, annenPartsUttakErLagtTilIPlan } = state;\n    const { person, arbeidsforhold } = søkerinfo;\n    const { annenForelder, søker, barn, søkersituasjon, dekningsgrad, erEndringssøknad, tilleggsopplysninger } = søknad;\n    const { erAleneOmOmsorg } = søker;\n    const { situasjon } = søkersituasjon;\n    const { rolle } = søkersituasjon;\n    const { barnFraNesteSak } = state;\n    const debouncedState = useDebounce(state, 3000);\n    const annenForelderKjønn = getKjønnFromFnr(annenForelder);\n    const erDeltUttak = isAnnenForelderOppgitt(annenForelder)\n        ? !!annenForelder.harRettPåForeldrepengerINorge || !!annenForelder.harRettPåForeldrepengerIEØS\n        : false;\n    const erFarEllerMedmor = isFarEllerMedmor(søknad.søkersituasjon.rolle);\n    const morErAleneOmOmsorg = getMorErAleneOmOmsorg(!erFarEllerMedmor, erAleneOmOmsorg, annenForelder);\n    const farMedmorErAleneOmOmsorg = getFarMedmorErAleneOmOmsorg(erFarEllerMedmor, erAleneOmOmsorg, annenForelder);\n    const søkerErAleneOmOmsorg = morErAleneOmOmsorg || farMedmorErAleneOmOmsorg;\n    const forelderVedAleneomsorg = erDeltUttak ? undefined : erFarEllerMedmor ? Forelder.farMedmor : Forelder.mor;\n    const familiehendelsesdato = getFamiliehendelsedato(barn);\n    const familiehendelsesdatoDate = ISOStringToDate(familiehendelsesdato);\n    const erMorUfør = getErMorUfør(annenForelder, erFarEllerMedmor);\n    const navnPåForeldre = getNavnPåForeldre(person, annenForelder, erFarEllerMedmor, intl);\n    const antallBarn = barn.antallBarn;\n    const erFlerbarnssøknad = antallBarn > 1;\n    const morHarRett = getMorHarRettPåForeldrepengerINorgeEllerEØS(rolle, erFarEllerMedmor, annenForelder);\n    const opprinneligPlan = eksisterendeSak?.uttaksplan;\n    const harKomplettUttaksplan = eksisterendeSak ? eksisterendeSak.uttaksplan !== undefined : false;\n    const harMidlertidigOmsorg = false; //TODO søkerHarMidlertidigOmsorg\n    const morsSisteDag = getMorsSisteDag(uttaksplanInfo);\n    const termindato = getTermindato(barn);\n    const annenForelderFnr =\n        isAnnenForelderOppgitt(annenForelder) && !!annenForelder.utenlandskFnr === false\n            ? annenForelder.fnr\n            : undefined;\n    const erAdopsjon = situasjon === 'adopsjon';\n    const annenForelderFnrNesteSak = barnFraNesteSak !== undefined ? barnFraNesteSak.annenForelderFnr : undefined;\n    const førsteBarnFraNesteSakFnr =\n        barnFraNesteSak !== undefined && barnFraNesteSak.fnr !== undefined && barnFraNesteSak.fnr.length > 0\n            ? barnFraNesteSak.fnr[0]\n            : undefined;\n    const familieHendelseDatoNesteSak =\n        barnFraNesteSak !== undefined ? barnFraNesteSak.familiehendelsesdato : undefined;\n    const førsteUttaksdagNesteBarnsSak =\n        barnFraNesteSak !== undefined ? barnFraNesteSak.startdatoFørsteStønadsperiode : undefined;\n\n    const bareFarMedmorHarRett = !getMorHarRettPåForeldrepengerINorgeEllerEØS(\n        søkersituasjon.rolle,\n        erFarEllerMedmor,\n        annenForelder,\n    );\n\n    const barnFnr = !isUfødtBarn(barn) && barn.fnr !== undefined && barn.fnr.length > 0 ? barn.fnr[0] : undefined;\n    const eksisterendeSakAnnenPartRequestIsSuspended =\n        !søkerErAleneOmOmsorg &&\n        annenForelderFnr !== undefined &&\n        annenForelderFnr !== '' &&\n        (barnFnr !== undefined || familiehendelsesdato !== undefined)\n            ? false\n            : true;\n\n    useSaveLoadedRoute(SøknadRoutes.UTTAKSPLAN);\n\n    const { eksisterendeSakAnnenPartData, eksisterendeSakAnnenPartError, eksisterendeSakAnnenPartRequestStatus } =\n        Api.useGetAnnenPartsVedtak(\n            annenForelderFnr,\n            barnFnr,\n            familiehendelsesdato,\n            eksisterendeSakAnnenPartRequestIsSuspended,\n        );\n\n    const eksisterendeVedtakAnnenPart = useMemo(\n        () =>\n            mapAnnenPartsEksisterendeSakFromDTO(\n                eksisterendeSakAnnenPartData,\n                barn,\n                erFarEllerMedmor,\n                familiehendelsesdato,\n                førsteUttaksdagNesteBarnsSak,\n            ),\n        [eksisterendeSakAnnenPartData, barn, erFarEllerMedmor, familiehendelsesdato, førsteUttaksdagNesteBarnsSak],\n    );\n\n    const saksgrunnlagsTermindato = getTermindatoSomSkalBrukesFraSaksgrunnlagBeggeParter(\n        eksisterendeSak?.grunnlag.termindato,\n        eksisterendeVedtakAnnenPart?.grunnlag.termindato,\n    );\n    const saksgrunnlagsAntallBarn = getAntallBarnSomSkalBrukesFraSaksgrunnlagBeggeParter(\n        erFarEllerMedmor,\n        barn.antallBarn,\n        eksisterendeVedtakAnnenPart?.grunnlag.antallBarn,\n    );\n    useEffect(() => {\n        if (erFarEllerMedmor && søknad.barn.antallBarn !== saksgrunnlagsAntallBarn) {\n            const søknadMedOppdatertAntallBarn = {\n                ...søknad,\n                barn: { ...søknad.barn, antallBarn: saksgrunnlagsAntallBarn },\n            };\n            dispatch(actionCreator.setSøknad(søknadMedOppdatertAntallBarn));\n        }\n    }, [erFarEllerMedmor, saksgrunnlagsAntallBarn, dispatch, søknad]);\n\n    const nesteBarnsSakAnnenPartRequestIsSuspended =\n        annenForelderFnrNesteSak !== undefined &&\n        annenForelderFnrNesteSak !== '' &&\n        (førsteBarnFraNesteSakFnr !== undefined || familieHendelseDatoNesteSak !== undefined) &&\n        (eksisterendeSakAnnenPartRequestIsSuspended || eksisterendeSakAnnenPartRequestStatus === RequestStatus.FINISHED)\n            ? false\n            : true;\n\n    const {\n        eksisterendeSakAnnenPartData: nesteSakAnnenPartData,\n        eksisterendeSakAnnenPartError: nesteSakAnnenPartError,\n        eksisterendeSakAnnenPartRequestStatus: nesteSakAnnenPartRequestStatus,\n    } = Api.useGetAnnenPartsVedtak(\n        annenForelderFnrNesteSak,\n        førsteBarnFraNesteSakFnr,\n        dateToISOString(familieHendelseDatoNesteSak),\n        nesteBarnsSakAnnenPartRequestIsSuspended,\n    );\n\n    const førsteUttaksdagAnnenPart = getStartdatoFørstePeriodeAnnenPart(nesteSakAnnenPartData);\n\n    useEffect(() => {\n        if (\n            førsteUttaksdagAnnenPart !== undefined &&\n            state.barnFraNesteSak !== undefined &&\n            (dayjs(førsteUttaksdagAnnenPart).isBefore(state.barnFraNesteSak.startdatoFørsteStønadsperiode, 'd') ||\n                state.barnFraNesteSak.startdatoFørsteStønadsperiode === undefined)\n        ) {\n            const oppdatertBarnNesteSak = {\n                ...state.barnFraNesteSak,\n                startdatoFørsteStønadsperiode: førsteUttaksdagAnnenPart,\n            };\n            dispatch(actionCreator.setBarnFraNesteSak(oppdatertBarnNesteSak));\n        }\n    }, [førsteUttaksdagNesteBarnsSak, førsteUttaksdagAnnenPart, barnFraNesteSak, dispatch, state.barnFraNesteSak]);\n\n    const harAktivitetskravIPeriodeUtenUttak = getHarAktivitetskravIPeriodeUtenUttak({\n        erDeltUttak,\n        morHarRett,\n        søkerErAleneOmOmsorg,\n    });\n\n    //Legg til annen parts perioder i planen til bruker\n    useEffect(() => {\n        if (\n            eksisterendeSak !== undefined &&\n            opprinneligPlan !== undefined &&\n            eksisterendeVedtakAnnenPart !== undefined &&\n            !annenPartsUttakErLagtTilIPlan\n        ) {\n            //Sett samtidigUttak på søkerens perioder hvis de overlapper med annen parts samtidig uttak:\n            opprinneligPlan.forEach((p) => {\n                if (isUttaksperiode(p)) {\n                    const overlappendePerioderAnnenPart = Periodene(\n                        eksisterendeVedtakAnnenPart.uttaksplan,\n                    ).finnOverlappendePerioder(p);\n\n                    if (\n                        overlappendePerioderAnnenPart.length !== 0 &&\n                        overlappendePerioderAnnenPart.find(\n                            (periode) => isUttakAnnenPart(periode) && periode.ønskerSamtidigUttak === true,\n                        )\n                    ) {\n                        if (!p.ønskerSamtidigUttak) {\n                            p.ønskerSamtidigUttak = true;\n                            p.samtidigUttakProsent = getSamtidigUttaksprosent(p.gradert, p.stillingsprosent);\n                        }\n                    }\n                }\n            });\n\n            const uttaksplanMedAnnenPart = finnOgSettInnHull(\n                settInnAnnenPartsUttak(\n                    opprinneligPlan,\n                    eksisterendeVedtakAnnenPart.uttaksplan,\n                    familiehendelsesdatoDate!,\n                    førsteUttaksdagNesteBarnsSak,\n                    true,\n                ),\n                harAktivitetskravIPeriodeUtenUttak,\n                familiehendelsesdatoDate!,\n                erAdopsjon,\n                bareFarMedmorHarRett,\n                erFarEllerMedmor,\n                førsteUttaksdagNesteBarnsSak,\n            );\n            const eksisterendeSakMedAnnenPartsPlan = {\n                ...eksisterendeSak,\n                uttaksplan: uttaksplanMedAnnenPart,\n            };\n            dispatch(actionCreator.setUttaksplan(uttaksplanMedAnnenPart));\n            dispatch(actionCreator.setEksisterendeSak(eksisterendeSakMedAnnenPartsPlan));\n            dispatch(actionCreator.setAnnenPartsUttakErLagtTilIPlan(true));\n        }\n    }, [\n        eksisterendeVedtakAnnenPart,\n        opprinneligPlan,\n        familiehendelsesdatoDate,\n        harAktivitetskravIPeriodeUtenUttak,\n        erAdopsjon,\n        bareFarMedmorHarRett,\n        erFarEllerMedmor,\n        dispatch,\n        førsteUttaksdagNesteBarnsSak,\n        eksisterendeSak,\n        annenPartsUttakErLagtTilIPlan,\n    ]);\n\n    const onValidSubmitHandler = () => {\n        setSubmitIsClicked(true);\n        const cleanedTilleggsopplysninger = cleanupInvisibleCharsFromTilleggsopplysninger(tilleggsopplysninger);\n        return [\n            actionCreator.setTilleggsopplysninger(cleanedTilleggsopplysninger),\n            actionCreator.setEndringstidspunkt(endringstidspunkt),\n            actionCreator.setPerioderSomSkalSendesInn(perioderSomSkalSendesInn),\n        ];\n    };\n\n    const handleBegrunnelseChange = (årsak: SenEndringÅrsak, begrunnelse: string) => {\n        const ekstraInformasjon = årsak !== SenEndringÅrsak.Ingen ? årsak : undefined;\n        const opplysninger = {\n            ...tilleggsopplysninger,\n            begrunnelseForSenEndring: {\n                ...tilleggsopplysninger.begrunnelseForSenEndring,\n                tekst: begrunnelse,\n                ekstraInformasjon: ekstraInformasjon,\n            },\n        };\n        dispatch(actionCreator.setTilleggsopplysninger(opplysninger));\n    };\n    useEffect(() => {\n        const periodeAngittAvAnnenPart = opprinneligPlan?.find((p) => isUttaksperiode(p) && p.angittAvAnnenPart);\n\n        if (periodeAngittAvAnnenPart && endringstidspunkt === undefined) {\n            const tidspunktForEndring = periodeAngittAvAnnenPart.tidsperiode.fom;\n            dispatch(actionCreator.setEndringstidspunkt(tidspunktForEndring));\n\n            const perioderForÅSendeInn = getPerioderSomSkalSendesInn(\n                søknad.uttaksplan,\n                erEndringssøknad,\n                erFarEllerMedmor,\n                opprinneligPlan,\n                tidspunktForEndring,\n            );\n            setPerioderSomSkalSendesInn(perioderForÅSendeInn);\n            dispatch(actionCreator.setPerioderSomSkalSendesInn(perioderForÅSendeInn));\n        }\n    }, [opprinneligPlan, dispatch, endringstidspunkt, erFarEllerMedmor, søknad.uttaksplan, erEndringssøknad]);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(\n        onValidSubmitHandler,\n        nextRoute,\n        (state: ForeldrepengesøknadContextState) => storeAppState(state),\n    );\n\n    const perioderMedUttakRundtFødsel = getPerioderMedUttakRundtFødsel(\n        søknad.uttaksplan,\n        familiehendelsesdatoDate!,\n        termindato,\n    );\n\n    const visAutomatiskJusteringForm = getVisAutomatiskJusteringForm(\n        erFarEllerMedmor,\n        familiehendelsesdatoDate!,\n        situasjon,\n        perioderMedUttakRundtFødsel,\n        barn,\n        termindato,\n        bareFarMedmorHarRett,\n    );\n\n    const kanJustereAutomatiskVedFødsel = getKanJustereAutomatiskVedFødsel(\n        perioderMedUttakRundtFødsel,\n        termindato,\n        erFarEllerMedmor,\n        barn,\n    );\n\n    const setØnskerJustertUttakVedFødselTilUndefinedHvisUgyldig = () => {\n        if ((visAutomatiskJusteringForm || erEndringssøknad) && !kanJustereAutomatiskVedFødsel) {\n            dispatch(actionCreator.setØnskerJustertUttakVedFødsel(undefined));\n        }\n    };\n\n    const ønskerJustertUttakVedFødselErBesvart = (ønskerAutomatiskJusteringSvar: boolean | undefined) => {\n        return (\n            visAutomatiskJusteringForm && kanJustereAutomatiskVedFødsel && ønskerAutomatiskJusteringSvar !== undefined\n        );\n    };\n\n    const ref = useRef<FormikValues>(null);\n    const clickHandler = (values: any) => {\n        setSubmitIsClicked(true);\n        if (uttaksplanErGyldig && !erTomEndringssøknad) {\n            if (ref.current) {\n                ref.current.handleSubmit();\n            }\n\n            setØnskerJustertUttakVedFødselTilUndefinedHvisUgyldig();\n\n            if (ønskerJustertUttakVedFødselErBesvart(values.ønskerAutomatiskJustering)) {\n                handleSubmit(values);\n            }\n        }\n    };\n\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n\n    useEffect(() => {\n        Api.storeAppState(debouncedState, person.fnr);\n    }, [person.fnr, debouncedState]);\n\n    const foreldreSituasjon = getForeldreparSituasjon(\n        person.kjønn,\n        annenForelderKjønn,\n        erDeltUttak,\n        morErAleneOmOmsorg,\n        farMedmorErAleneOmOmsorg,\n        rolle,\n    );\n    const kontoRequestIsSuspended =\n        (eksisterendeSakAnnenPartRequestIsSuspended\n            ? false\n            : eksisterendeSakAnnenPartRequestStatus !== RequestStatus.FINISHED) ||\n        (nesteBarnsSakAnnenPartRequestIsSuspended ? false : nesteSakAnnenPartRequestStatus !== RequestStatus.FINISHED);\n\n    const { tilgjengeligeStønadskontoerData: stønadskontoer100, tilgjengeligeStønadskontoerError } =\n        Api.useGetUttakskontoer(\n            getStønadskontoParams(\n                Dekningsgrad.HUNDRE_PROSENT,\n                barn,\n                annenForelder,\n                søkersituasjon,\n                farMedmorErAleneOmOmsorg,\n                morErAleneOmOmsorg,\n                dateToISOString(familieHendelseDatoNesteSak),\n                saksgrunnlagsAntallBarn,\n                saksgrunnlagsTermindato,\n            ),\n            kontoRequestIsSuspended,\n        );\n    const { tilgjengeligeStønadskontoerData: stønadskontoer80 } = Api.useGetUttakskontoer(\n        getStønadskontoParams(\n            Dekningsgrad.ÅTTI_PROSENT,\n            barn,\n            annenForelder,\n            søkersituasjon,\n            farMedmorErAleneOmOmsorg,\n            morErAleneOmOmsorg,\n            dateToISOString(familieHendelseDatoNesteSak),\n            saksgrunnlagsAntallBarn,\n            saksgrunnlagsTermindato,\n        ),\n        kontoRequestIsSuspended,\n    );\n\n    const handleOnPlanChange = (nyPlan: Periode[]) => {\n        setSubmitIsClicked(false);\n        dispatch(actionCreator.setUttaksplan(nyPlan));\n        const tidspunktForEndring = getEndringstidspunkt(opprinneligPlan, nyPlan, erEndringssøknad);\n        setEndringstidspunkt(tidspunktForEndring);\n\n        const perioderForÅSendeInn = getPerioderSomSkalSendesInn(\n            nyPlan,\n            erEndringssøknad,\n            erFarEllerMedmor,\n            opprinneligPlan,\n            tidspunktForEndring,\n        );\n        setPerioderSomSkalSendesInn(perioderForÅSendeInn);\n        dispatch(actionCreator.setPerioderSomSkalSendesInn(perioderForÅSendeInn));\n    };\n\n    useEffect(() => {\n        if (tilgjengeligeStønadskontoerError) {\n            sendErrorMessageToSentry(tilgjengeligeStønadskontoerError);\n            throw new Error(\n                `Vi klarte ikke å hente opp stønadskontoer. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n        if (eksisterendeSakAnnenPartError) {\n            sendErrorMessageToSentry(eksisterendeSakAnnenPartError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om saken til annen forelder. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n\n        if (nesteSakAnnenPartError) {\n            sendErrorMessageToSentry(nesteSakAnnenPartError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om saken til annen forelder for neste barn. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n    }, [tilgjengeligeStønadskontoerError, eksisterendeSakAnnenPartError, nesteSakAnnenPartError]);\n\n    if (\n        !stønadskontoer100 ||\n        !stønadskontoer80 ||\n        (eksisterendeSakAnnenPartRequestStatus !== RequestStatus.FINISHED &&\n            !eksisterendeSakAnnenPartRequestIsSuspended) ||\n        (nesteSakAnnenPartRequestStatus !== RequestStatus.FINISHED && !nesteBarnsSakAnnenPartRequestIsSuspended)\n    ) {\n        return (\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n                <Loader size=\"2xlarge\" />\n            </div>\n        );\n    }\n\n    const stønadskontoer = getValgtStønadskontoFor80Og100Prosent(stønadskontoer80, stønadskontoer100);\n    const minsterettUkerToTette = getAntallUkerMinsterett(stønadskontoer100.minsteretter.toTette);\n\n    const valgteStønadskontoer =\n        dekningsgrad === Dekningsgrad.HUNDRE_PROSENT ? stønadskontoer[100] : stønadskontoer[80];\n\n    const erTomEndringssøknad =\n        erEndringssøknad && (perioderSomSkalSendesInn === undefined || perioderSomSkalSendesInn.length === 0);\n\n    const handleSlettUttaksplan = () => {\n        const slettetPlanUtenomFpFørFødsel = søknad.uttaksplan.filter((periode) =>\n            isUttakAvForeldrepengerFørFødsel(periode),\n        );\n        dispatch(actionCreator.slettUttaksplan(slettetPlanUtenomFpFørFødsel));\n        dispatch(actionCreator.setUttaksplanSlettet(true));\n    };\n\n    const handleResetUttaksplan = () => {\n        if (state.eksisterendeSak) {\n            dispatch(actionCreator.setUttaksplan(state.eksisterendeSak.uttaksplan));\n            dispatch(actionCreator.setPerioderSomSkalSendesInn([]));\n            setPerioderSomSkalSendesInn([]);\n        }\n    };\n\n    return (\n        <UttaksplanFormComponents.FormikWrapper\n            initialValues={getUttaksplanFormInitialValues(state.søknad.ønskerJustertUttakVedFødsel)}\n            onSubmit={handleSubmit}\n            innerRef={ref}\n            renderForm={({ values }) => {\n                const visibility = uttaksplanQuestionsConfig.getVisbility({\n                    ønskerAutomatiskJustering: values[UttaksplanFormField.ønskerAutomatiskJustering] ?? YesOrNo.NO,\n                    termindato,\n                    perioderMedUttakRundtFødsel,\n                });\n\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"uttaksplan\"\n                        pageTitle={intlUtils(intl, 'søknad.uttaksplan')}\n                        onCancel={onAvbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl, erEndringssøknad)}\n                    >\n                        <Block padBottom=\"l\">\n                            <InfoOmSøknaden\n                                eksisterendeSak={eksisterendeSak}\n                                erIUttaksplanenSteg={true}\n                                tilgjengeligeStønadskontoer={valgteStønadskontoer}\n                                minsterettUkerToTette={minsterettUkerToTette}\n                            />\n                        </Block>\n                        <Uttaksplan\n                            foreldreSituasjon={foreldreSituasjon}\n                            forelderVedAleneomsorg={forelderVedAleneomsorg}\n                            erDeltUttak={erDeltUttak}\n                            uttaksplan={søknad.uttaksplan}\n                            familiehendelsesdato={familiehendelsesdato}\n                            handleOnPlanChange={handleOnPlanChange}\n                            stønadskontoer={valgteStønadskontoer}\n                            navnPåForeldre={navnPåForeldre}\n                            annenForelder={annenForelder}\n                            arbeidsforhold={getAktiveArbeidsforhold(\n                                arbeidsforhold,\n                                erAdopsjon,\n                                erFarEllerMedmor,\n                                ISOStringToDate(familiehendelsesdato),\n                            )}\n                            erEndringssøknad={erEndringssøknad}\n                            erFarEllerMedmor={erFarEllerMedmor}\n                            erFlerbarnssøknad={erFlerbarnssøknad}\n                            erAleneOmOmsorg={søkerErAleneOmOmsorg}\n                            harMidlertidigOmsorg={harMidlertidigOmsorg}\n                            situasjon={situasjon}\n                            erMorUfør={erMorUfør}\n                            morHarRett={morHarRett}\n                            søkersituasjon={søkersituasjon}\n                            dekningsgrad={dekningsgrad}\n                            antallBarn={antallBarn}\n                            tilleggsopplysninger={tilleggsopplysninger}\n                            setUttaksplanErGyldig={setUttaksplanErGyldig}\n                            handleBegrunnelseChange={handleBegrunnelseChange}\n                            eksisterendeSak={eksisterendeSak}\n                            perioderSomSkalSendesInn={perioderSomSkalSendesInn}\n                            morsSisteDag={morsSisteDag}\n                            harKomplettUttaksplan={harKomplettUttaksplan}\n                            opprinneligPlan={harUttaksplanBlittSlettet ? undefined : opprinneligPlan}\n                            handleSlettUttaksplan={handleSlettUttaksplan}\n                            handleResetUttaksplan={handleResetUttaksplan}\n                            termindato={termindato}\n                            barn={barn}\n                            saveAttachment={AttachmentApi.saveAttachment}\n                            visAutomatiskJusteringForm={visAutomatiskJusteringForm}\n                            perioderMedUttakRundtFødsel={perioderMedUttakRundtFødsel}\n                            barnFraNesteSak={barnFraNesteSak}\n                            familiehendelsesdatoNesteSak={familieHendelseDatoNesteSak}\n                            førsteUttaksdagNesteBarnsSak={førsteUttaksdagNesteBarnsSak}\n                            minsterettUkerToTette={minsterettUkerToTette}\n                        />\n                        {visAutomatiskJusteringForm && (\n                            <Block padBottom=\"l\">\n                                <AutomatiskJusteringForm\n                                    termindato={termindato!}\n                                    perioderMedUttakRundtFødsel={perioderMedUttakRundtFødsel}\n                                    antallBarn={barn.antallBarn}\n                                    visibility={visibility}\n                                />\n                            </Block>\n                        )}\n                        <VilDuGåTilbakeModal isOpen={gåTilbakeIsOpen} setIsOpen={setGåTilbakeIsOpen} />\n                        {!uttaksplanErGyldig && submitIsClicked && (\n                            <Block textAlignCenter={true} padBottom=\"l\">\n                                <Alert variant=\"error\">\n                                    <FormattedMessage id=\"uttaksplan.validering.kanIkkeGåVidere\" />\n                                </Alert>\n                            </Block>\n                        )}\n                        {erTomEndringssøknad && submitIsClicked && (\n                            <Block textAlignCenter={true} padBottom=\"l\">\n                                <Alert variant=\"error\">\n                                    <FormattedMessage id=\"uttaksplan.validering.kanIkkeGåVidereEndringssøknad\" />\n                                </Alert>\n                            </Block>\n                        )}\n                        <Block textAlignCenter={true} padBottom=\"l\">\n                            <StepButtonWrapper>\n                                {!erEndringssøknad && (\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        onClick={(event) => {\n                                            event.preventDefault();\n                                            setGåTilbakeIsOpen(true);\n                                        }}\n                                        to={getPreviousStepHref('uttaksplan')}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                )}\n                                <Button\n                                    type=\"submit\"\n                                    onClick={clickHandler}\n                                    disabled={isSubmitting}\n                                    loading={isSubmitting}\n                                >\n                                    {intlUtils(intl, 'søknad.gåVidere')}\n                                </Button>\n                            </StepButtonWrapper>\n                        </Block>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\nexport default UttaksplanStep;\n","import { Søknad } from 'app/context/types/Søknad';\nimport SøknadRoutes from './routes';\nimport { uttaksplanInneholderPerioderUtenKonto } from '@navikt/uttaksplan';\n\nconst isAvailable = (route: SøknadRoutes, søknad: Søknad): boolean => {\n    switch (route) {\n        case SøknadRoutes.SØKERSITUASJON:\n            return søknad.harGodkjentVilkår === true;\n        case SøknadRoutes.OPPSUMMERING:\n            return uttaksplanInneholderPerioderUtenKonto(søknad.uttaksplan) === false && søknad.uttaksplan.length > 0;\n        default:\n            return true;\n    }\n};\n\nexport default isAvailable;\n","import { Locale } from '@navikt/fp-common';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport IkkeMyndig from 'app/pages/ikkeMyndig/IkkeMyndig';\nimport Velkommen from 'app/pages/velkommen/Velkommen';\nimport AnnenForelder from 'app/steps/annen-forelder/AnnenForelder';\nimport Inntektsinformasjon from 'app/steps/inntektsinformasjon/Inntektsinformasjon';\nimport OmBarnet from 'app/steps/om-barnet/OmBarnet';\nimport Oppsummering from 'app/steps/oppsummering/Oppsummering';\nimport Søkersituasjon from 'app/steps/søkersituasjon/Søkersituasjon';\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\nimport UttaksplanInfo from 'app/steps/uttaksplan-info/UttaksplanInfo';\nimport UttaksplanStep from 'app/steps/uttaksplan/UttaksplanStep';\nimport { FunctionComponent, useEffect, useState } from 'react';\nimport { Route, useNavigate, Navigate, Routes, useLocation } from 'react-router-dom';\nimport SøknadSendt from '../pages/søknadSendt/SøknadSendt';\nimport isAvailable from './isAvailable';\nimport SøknadRoutes from './routes';\n\ninterface Props {\n    fornavn: string;\n    locale: Locale;\n    onChangeLocale: (locale: Locale) => void;\n    currentRoute: SøknadRoutes;\n}\n\nconst renderSøknadRoutes = (harGodkjentVilkår: boolean, erEndringssøknad: boolean, søkerErMyndig: boolean) => {\n    if (!harGodkjentVilkår) {\n        return <Route path=\"*\" element={<Navigate to={SøknadRoutes.VELKOMMEN} />} />;\n    }\n\n    if (!søkerErMyndig) {\n        return <Route path=\"*\" element={<Navigate to={SøknadRoutes.IKKE_MYNDIG} />} />;\n    }\n\n    if (erEndringssøknad) {\n        return (\n            <>\n                <Route path={SøknadRoutes.UTTAKSPLAN} element={<UttaksplanStep />} />\n                <Route path={SøknadRoutes.OPPSUMMERING} element={<Oppsummering />} />\n                <Route path={SøknadRoutes.SØKNAD_SENDT} element={<SøknadSendt />} />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Route path={SøknadRoutes.SØKERSITUASJON} element={<Søkersituasjon />} />\n            <Route path={SøknadRoutes.OM_BARNET} element={<OmBarnet />} />\n            <Route path={SøknadRoutes.ANNEN_FORELDER} element={<AnnenForelder />} />\n            <Route path={SøknadRoutes.UTTAKSPLAN_INFO} element={<UttaksplanInfo />} />\n            <Route path={SøknadRoutes.UTTAKSPLAN} element={<UttaksplanStep />} />\n            <Route path={SøknadRoutes.UTENLANDSOPPHOLD} element={<Utenlandsopphold />} />\n            <Route path={SøknadRoutes.INNTEKTSINFORMASJON} element={<Inntektsinformasjon />} />\n            <Route path={SøknadRoutes.OPPSUMMERING} element={<Oppsummering />} />\n            <Route path={SøknadRoutes.SØKNAD_SENDT} element={<SøknadSendt />} />\n        </>\n    );\n};\n\nconst ForeldrepengesøknadRoutes: FunctionComponent<Props> = ({ fornavn, locale, onChangeLocale, currentRoute }) => {\n    const { state } = useForeldrepengesøknadContext();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const harGodkjentVilkår = state.søknad.harGodkjentVilkår;\n    const erMyndig = state.søkerinfo.person.erMyndig;\n    const [isFirstTimeLoadingApp, setIsFirstTimeLoadingApp] = useState(true);\n\n    useEffect(() => {\n        if (currentRoute && erMyndig && harGodkjentVilkår && isFirstTimeLoadingApp) {\n            setIsFirstTimeLoadingApp(false);\n            if (isAvailable(currentRoute, state.søknad)) {\n                navigate(currentRoute);\n            } else {\n                if (location.pathname === SøknadRoutes.OPPSUMMERING) {\n                    navigate(SøknadRoutes.UTTAKSPLAN);\n                }\n            }\n        }\n    }, [currentRoute, erMyndig, harGodkjentVilkår, navigate, isFirstTimeLoadingApp, state.søknad, location.pathname]);\n\n    return (\n        <Routes>\n            <Route\n                path={SøknadRoutes.VELKOMMEN}\n                element={\n                    <Velkommen\n                        fornavn={fornavn}\n                        locale={locale}\n                        saker={state.saker}\n                        onChangeLocale={onChangeLocale}\n                        fnr={state.søkerinfo.person.fnr}\n                    />\n                }\n            />\n            <Route path={SøknadRoutes.IKKE_MYNDIG} element={<IkkeMyndig fornavn={state.søkerinfo.person.fornavn} />} />\n\n            {renderSøknadRoutes(harGodkjentVilkår, state.søknad.erEndringssøknad, erMyndig)}\n        </Routes>\n    );\n};\n\nexport default ForeldrepengesøknadRoutes;\n","import { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport SøknadRoutes from 'app/routes/routes';\n\nconst isEndringssøknadRoute = (route: SøknadRoutes): boolean => {\n    switch (route) {\n        case SøknadRoutes.UTTAKSPLAN:\n        case SøknadRoutes.OPPSUMMERING:\n        case SøknadRoutes.SØKNAD_SENDT:\n            return true;\n        default:\n            return false;\n    }\n};\n\nexport const shouldApplyStorage = (storedState: ForeldrepengesøknadContextState): boolean => {\n    if (storedState.søknad && storedState.søknad.erEndringssøknad) {\n        if (!isEndringssøknadRoute(storedState.currentRoute)) {\n            return false;\n        }\n    }\n\n    return storedState.version === 5;\n};\n","import { Locale } from '@navikt/fp-common';\nimport { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Api from './api/api';\nimport { sendErrorMessageToSentry } from './api/apiUtils';\nimport actionCreator from './context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from './context/hooks/useForeldrepengesøknadContext';\nimport ForeldrepengesøknadRoutes from './routes/ForeldrepengesøknadRoutes';\nimport SøknadRoutes from './routes/routes';\nimport mapSøkerinfoDTOToSøkerinfo from './utils/mapSøkerinfoDTO';\nimport { shouldApplyStorage } from './utils/mellomlagringUtils';\nimport { Loader } from '@navikt/ds-react';\n\ninterface Props {\n    locale: Locale;\n    onChangeLocale: any;\n}\n\nconst renderSpinner = () => (\n    <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n        <Loader size=\"2xlarge\" />\n    </div>\n);\n\nconst Foreldrepengesøknad: React.FunctionComponent<Props> = ({ locale, onChangeLocale }) => {\n    const { søkerinfoData, søkerinfoError } = Api.useSøkerinfo();\n    const { sakerData, sakerError } = Api.useGetSaker();\n    const { storageData } = Api.useStoredAppState();\n    const { dispatch, state } = useForeldrepengesøknadContext();\n\n    useEffect(() => {\n        if (storageData) {\n            if (shouldApplyStorage(storageData)) {\n                dispatch(actionCreator.applyStoredState(storageData));\n            }\n        }\n        if (søkerinfoData) {\n            dispatch(actionCreator.setSøkerinfo(mapSøkerinfoDTOToSøkerinfo(søkerinfoData)));\n        }\n\n        if (sakerData) {\n            dispatch(actionCreator.setSaker(sakerData.foreldrepenger));\n        }\n    }, [dispatch, storageData, søkerinfoData, sakerData]);\n\n    useEffect(() => {\n        if (søkerinfoError) {\n            sendErrorMessageToSentry(søkerinfoError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om deg. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n        if (sakerError) {\n            sendErrorMessageToSentry(sakerError);\n            throw new Error(\n                `Vi klarte ikke å hente informasjon om sakene dine. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.`,\n            );\n        }\n    }, [søkerinfoError, sakerError]);\n\n    if (!state.søkerinfo || !sakerData) {\n        return renderSpinner();\n    }\n\n    return (\n        <BrowserRouter>\n            <ForeldrepengesøknadRoutes\n                fornavn={state.søkerinfo.person.fornavn}\n                locale={locale}\n                onChangeLocale={onChangeLocale}\n                currentRoute={storageData ? storageData.currentRoute : SøknadRoutes.VELKOMMEN}\n            />\n        </BrowserRouter>\n    );\n};\n\nexport default Foreldrepengesøknad;\n","import * as Sentry from '@sentry/browser';\nimport Feilside from 'app/pages/feilside/Feilside';\nimport { FOR_MANGE_VEDLEGG_ERROR } from 'app/api/apiUtils';\nimport { Component } from 'react';\nimport { links } from '@navikt/fp-common';\n\ninterface State {\n    hasError: boolean;\n    error: Error | null;\n}\n\nclass ErrorBoundary extends Component<any, State> {\n    constructor(props: unknown) {\n        super(props);\n        this.state = { hasError: false, error: null };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any): void {\n        if (error && error.message !== 'window.hasFocus is not a function') {\n            this.setState({ ...this.state, hasError: true, error });\n\n            Sentry.withScope((scope) => {\n                scope.setExtras(errorInfo);\n                Sentry.captureException(error);\n            });\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            const feilPgaForMangeVedlegg =\n                !!this.state.error &&\n                !!this.state.error.message &&\n                this.state.error.message === FOR_MANGE_VEDLEGG_ERROR;\n            const feilsideTittel = feilPgaForMangeVedlegg ? 'Feil: for mange vedlegg' : 'Informasjon om feilen';\n            return (\n                <Feilside\n                    dokumenttittel=\"NAV Foreldrepengesøknad\"\n                    ingress={`${this.state.error?.message}`}\n                    tittel={feilsideTittel}\n                    illustrasjon={{\n                        tittel: 'Hei!',\n                        tekst: 'Noe har gått galt med søknaden.',\n                        lenke: { tekst: 'Her finner du en lenke til brukerstøtte', url: links.brukerstøtte },\n                    }}\n                    skalKunneGåTilbakeTilSøknad={feilPgaForMangeVedlegg}\n                />\n            );\n        }\n\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;\n","import { detect } from 'detect-browser';\n\nexport const shouldChangeBrowser = () => {\n    const browserInfo = detect();\n    return browserInfo ? browserInfo.name === 'ie' : false;\n};\n","import { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { getLocaleFromSessionStorage, Locale, setLocaleInSessionStorage } from '@navikt/fp-common';\nimport IntlProvider from './intl/IntlProvider';\nimport ForeldrepengesøknadContextProvider from './context/ForeldrepengesøknadContext';\nimport Foreldrepengesøknad from './Foreldrepengesøknad';\nimport ByttBrowserModal from 'app/pages/byttBrowserModal/ByttBrowserModal';\nimport ErrorBoundary from './errorBoundary/ErrorBoundary';\nimport { Modal } from '@navikt/ds-react';\nimport { shouldChangeBrowser } from './utils/browserUtils';\n\nconst localeFromSessionStorage = getLocaleFromSessionStorage();\n\ndayjs.locale(localeFromSessionStorage);\n\nconst AppContainer = () => {\n    const [locale, setLocale] = useState<Locale>(localeFromSessionStorage);\n\n    useEffect(() => {\n        if (Modal.setAppElement) {\n            Modal.setAppElement('#app');\n        }\n    });\n\n    return (\n        <ForeldrepengesøknadContextProvider>\n            <ErrorBoundary>\n                <IntlProvider locale={locale}>\n                    <ByttBrowserModal skalEndreNettleser={shouldChangeBrowser()} />\n                    <Foreldrepengesøknad\n                        locale={locale}\n                        onChangeLocale={(activeLocale: Locale) => {\n                            setLocaleInSessionStorage(activeLocale);\n                            setLocale(activeLocale);\n                        }}\n                    />\n                </IntlProvider>\n            </ErrorBoundary>\n        </ForeldrepengesøknadContextProvider>\n    );\n};\n\nexport default AppContainer;\n"],"names":["setTimeZoneInOptions","opts","timeZone","all","k","__assign","deepMergeOptions","opts1","opts2","keys","deepMergeFormatsAndSetTimeZone","f1","mfFormats","IntlMessageFormat","formatMessage","_a","state","messageDescriptor","values","locale","formats","messages","defaultLocale","defaultFormats","fallbackOnEmptyString","onError","defaultRichTextElements","msgId","defaultMessage","invariant","id","message","TYPE","MissingTranslationError","formatter","e","MessageFormatError","DATE_TIME_FORMAT_OPTIONS","getFormatter","type","getDateTimeFormat","options","format","defaults","getNamedFormat","filteredOptions","filterProps","formatDate","config","_i","value","_b","date","IntlFormatError","formatTime","formatDateTimeRange","from","to","formatDateToParts","formatTimeToParts","DISPLAY_NAMES_OPTONS","formatDisplayName","getDisplayNames","DisplayNames","FormatError","ErrorCode","LIST_FORMAT_OPTIONS","now","generateToken","i","formatList","getListFormat","results","formatListToParts","el","val","ListFormat","richValues_1","serializedValues","v","part","PLURAL_FORMAT_OPTIONS","formatPlural","getPluralRules","RELATIVE_TIME_FORMAT_OPTIONS","getRelativeTimeFormat","formatRelativeTime","unit","RelativeTimeFormat","NUMBER_FORMAT_OPTIONS","getNumberFormat","formatNumber","formatNumberToParts","messagesContainString","firstMessage","verifyConfigMessages","createIntl","cache","formatters","createFormatters","resolvedConfig","DEFAULT_INTL_CONFIG","MissingDataError","InvalidConfigError","processIntlConfig","assignUniqueKeysToFormatXMLElementFnArgument","acc","isFormatXMLElementFn","assignUniqueKeysToParts","descriptor","rawValues","rest","chunks","coreFormatMessage","__spreadArray","React.Children","rawDefaultRichTextElements","__rest","coreIntl","coreCreateIntl","IntlProvider","_super","__extends","_this","createIntlCache","props","prevConfig","shallowEqual","invariantIntlContext","React.createElement","Provider","React.PureComponent","LocaleSessionKey","getLocaleFromSessionStorage","setLocaleInSessionStorage","dayjs","getLanguageMessages","nbMessages","allCommonMessages","nnMessages","children","jsx","IkkeMyndig","fornavn","intl","useIntl","Feilside","intlUtils","links","useDebounce","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","VilDuGåTilbakeModal","isOpen","setIsOpen","bem","bemUtils","navigate","useNavigate","jsxs","Modal","Block","Heading","BodyShort","Button","SøknadRoutes","FormattedMessage","UttaksplanFormField","UttaksplanFormComponents","getTypedFormComponents","mapUttaksplanFormValueToState","convertYesOrNoOrUndefinedToBoolean","getUttaksplanFormInitialValues","ønskerAutomatiskJustering","convertBooleanOrUndefinedToYesOrNo","YesOrNo","getKanPeriodenRundtFødselJusteres","periodeRundtFødsel","termindato","isUttaksperiode","Uttaksdagen","Forelder","StønadskontoType","getKanJustereAutomatiskVedFødsel","perioderMedUttakRundtFødsel","erFarEllerMedmor","barn","BarnType","getVisAutomatiskJusteringForm","familiehendelsesdato","situasjon","bareFarHarRett","andreAugust2022ReglerGjelder","isUfødtBarn","AutomatiskJusteringForm","antallBarn","visibility","uttaksdagPåEllerEtterTermin","dispatch","useForeldrepengesøknadContext","svarteJaMenFlerePerioderInnen6Uker","svarteJaMenStarterIkkeLengerPåTermin","svarteJaMenEndretPeriodenPåTermin","isOverføringsperiode","svarteJaMenEndretPeriodenTilØnskerFlerbarnsdager","infoTekstId","handleOnChange","ønskerJustertUttakVedFødsel","actionCreator","Alert","includeAutomatiskJusteringSpørsmål","UttaksplanFormConfig","uttaksplanQuestionsConfig","Questions","UttaksplanStep","søkerinfo","useSøkerinfo","søknad","useSøknad","gåTilbakeIsOpen","setGåTilbakeIsOpen","uttaksplanErGyldig","setUttaksplanErGyldig","submitIsClicked","setSubmitIsClicked","endringstidspunkt","setEndringstidspunkt","perioderSomSkalSendesInn","setPerioderSomSkalSendesInn","nextRoute","uttaksplanInfo","eksisterendeSak","harUttaksplanBlittSlettet","annenPartsUttakErLagtTilIPlan","person","arbeidsforhold","annenForelder","søker","søkersituasjon","dekningsgrad","erEndringssøknad","tilleggsopplysninger","erAleneOmOmsorg","rolle","barnFraNesteSak","debouncedState","annenForelderKjønn","getKjønnFromFnr","erDeltUttak","isAnnenForelderOppgitt","isFarEllerMedmor","morErAleneOmOmsorg","getMorErAleneOmOmsorg","farMedmorErAleneOmOmsorg","getFarMedmorErAleneOmOmsorg","søkerErAleneOmOmsorg","forelderVedAleneomsorg","getFamiliehendelsedato","familiehendelsesdatoDate","ISOStringToDate","erMorUfør","getErMorUfør","navnPåForeldre","getNavnPåForeldre","erFlerbarnssøknad","morHarRett","getMorHarRettPåForeldrepengerINorgeEllerEØS","opprinneligPlan","harKomplettUttaksplan","harMidlertidigOmsorg","morsSisteDag","getMorsSisteDag","getTermindato","annenForelderFnr","erAdopsjon","annenForelderFnrNesteSak","førsteBarnFraNesteSakFnr","familieHendelseDatoNesteSak","førsteUttaksdagNesteBarnsSak","bareFarMedmorHarRett","barnFnr","eksisterendeSakAnnenPartRequestIsSuspended","useSaveLoadedRoute","eksisterendeSakAnnenPartData","eksisterendeSakAnnenPartError","eksisterendeSakAnnenPartRequestStatus","Api","eksisterendeVedtakAnnenPart","useMemo","mapAnnenPartsEksisterendeSakFromDTO","saksgrunnlagsTermindato","getTermindatoSomSkalBrukesFraSaksgrunnlagBeggeParter","saksgrunnlagsAntallBarn","getAntallBarnSomSkalBrukesFraSaksgrunnlagBeggeParter","søknadMedOppdatertAntallBarn","nesteBarnsSakAnnenPartRequestIsSuspended","RequestStatus","nesteSakAnnenPartData","nesteSakAnnenPartError","nesteSakAnnenPartRequestStatus","dateToISOString","førsteUttaksdagAnnenPart","getStartdatoFørstePeriodeAnnenPart","oppdatertBarnNesteSak","harAktivitetskravIPeriodeUtenUttak","getHarAktivitetskravIPeriodeUtenUttak","p","overlappendePerioderAnnenPart","Periodene","periode","isUttakAnnenPart","getSamtidigUttaksprosent","uttaksplanMedAnnenPart","finnOgSettInnHull","settInnAnnenPartsUttak","eksisterendeSakMedAnnenPartsPlan","onValidSubmitHandler","cleanedTilleggsopplysninger","cleanupInvisibleCharsFromTilleggsopplysninger","handleBegrunnelseChange","årsak","begrunnelse","ekstraInformasjon","SenEndringÅrsak","opplysninger","periodeAngittAvAnnenPart","tidspunktForEndring","perioderForÅSendeInn","getPerioderSomSkalSendesInn","handleSubmit","isSubmitting","useOnValidSubmit","storeAppState","getPerioderMedUttakRundtFødsel","visAutomatiskJusteringForm","kanJustereAutomatiskVedFødsel","setØnskerJustertUttakVedFødselTilUndefinedHvisUgyldig","ønskerJustertUttakVedFødselErBesvart","ønskerAutomatiskJusteringSvar","ref","useRef","clickHandler","erTomEndringssøknad","onAvbrytSøknad","useAvbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","foreldreSituasjon","getForeldreparSituasjon","kontoRequestIsSuspended","stønadskontoer100","tilgjengeligeStønadskontoerError","getStønadskontoParams","Dekningsgrad","stønadskontoer80","handleOnPlanChange","nyPlan","getEndringstidspunkt","sendErrorMessageToSentry","Loader","stønadskontoer","getValgtStønadskontoFor80Og100Prosent","minsterettUkerToTette","getAntallUkerMinsterett","valgteStønadskontoer","handleSlettUttaksplan","slettetPlanUtenomFpFørFødsel","isUttakAvForeldrepengerFørFødsel","handleResetUttaksplan","Step","stepConfig","InfoOmSøknaden","Uttaksplan","getAktiveArbeidsforhold","AttachmentApi","StepButtonWrapper","Link","event","getPreviousStepHref","isAvailable","route","uttaksplanInneholderPerioderUtenKonto","renderSøknadRoutes","harGodkjentVilkår","søkerErMyndig","Fragment","Route","Oppsummering","SøknadSendt","Søkersituasjon","OmBarnet","AnnenForelder","UttaksplanInfo","Utenlandsopphold","Inntektsinformasjon","Navigate","ForeldrepengesøknadRoutes","onChangeLocale","currentRoute","location","useLocation","erMyndig","isFirstTimeLoadingApp","setIsFirstTimeLoadingApp","Routes","Velkommen","isEndringssøknadRoute","shouldApplyStorage","storedState","renderSpinner","Foreldrepengesøknad","søkerinfoData","søkerinfoError","sakerData","sakerError","storageData","mapSøkerinfoDTOToSøkerinfo","BrowserRouter","ErrorBoundary","Component","error","errorInfo","Sentry.withScope","scope","Sentry.captureException","feilPgaForMangeVedlegg","FOR_MANGE_VEDLEGG_ERROR","feilsideTittel","shouldChangeBrowser","browserInfo","detect","localeFromSessionStorage","AppContainer","setLocale","ForeldrepengesøknadContextProvider","ByttBrowserModal","activeLocale","AppContainer$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}