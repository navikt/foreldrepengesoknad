{"version":3,"file":"OmBarnet-cec91813.js","sources":["../../src/app/steps/om-barnet/omBarnetFormConfig.ts","../../src/app/steps/om-barnet/validation/omBarnetValidering.ts","../../src/app/steps/om-barnet/components/AdopsjonAnnetBarn.tsx","../../src/app/steps/om-barnet/components/AdopsjonEktefellesBarn.tsx","../../src/app/steps/om-barnet/components/BarnFødtEllerAdoptert.tsx","../../src/app/steps/om-barnet/components/Fødsel.tsx","../../src/app/steps/om-barnet/omBarnetQuestionsConfig.ts","../../src/app/steps/om-barnet/components/Termin.tsx","../../src/app/steps/om-barnet/omBarnetUtils.ts","../../src/app/steps/om-barnet/components/ValgteRegistrerteBarn.tsx","../../src/app/steps/om-barnet/OmBarnet.tsx"],"sourcesContent":["import { Attachment } from '@navikt/fp-common';\nimport { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum OmBarnetFormField {\n    erBarnetFødt = 'erBarnetFødt',\n    adopsjonAvEktefellesBarn = 'adopsjonAvEktefellesBarn',\n    antallBarn = 'antallBarn',\n    antallBarnSelect = 'antallBarnSelect',\n    adopsjonsdato = 'adopsjonsdato',\n    søkerAdopsjonAlene = 'søkerAdopsjonAlene',\n    adoptertIUtlandet = 'adoptertIUtlandet',\n    fødselsdatoer = 'fødselsdatoer',\n    termindato = 'termindato',\n    omsorgsovertakelse = 'omsorgsovertakelse',\n    terminbekreftelse = 'terminbekreftelse',\n    terminbekreftelsedato = 'terminbekreftelsedato',\n    ankomstdato = 'ankomstdato',\n}\n\nexport interface OmBarnetFormData {\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo;\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo;\n    [OmBarnetFormField.antallBarn]: string;\n    [OmBarnetFormField.antallBarnSelect]: string;\n    [OmBarnetFormField.adopsjonsdato]: string;\n    [OmBarnetFormField.fødselsdatoer]: string[];\n    [OmBarnetFormField.omsorgsovertakelse]: Attachment[];\n    [OmBarnetFormField.termindato]: string;\n    [OmBarnetFormField.terminbekreftelse]: Attachment[];\n    [OmBarnetFormField.terminbekreftelsedato]: string;\n    [OmBarnetFormField.adoptertIUtlandet]: YesOrNo;\n    [OmBarnetFormField.ankomstdato]: string;\n}\n\nexport const OmBarnetFormComponents = getTypedFormComponents<OmBarnetFormField, OmBarnetFormData>();\n","import {\n    barnetErUnder15årPåAdopsjonsdato,\n    erIUke22Pluss3,\n    erMindreEnn3UkerSiden,\n    etterDagensDato,\n    hasValue,\n    intlUtils,\n} from '@navikt/fp-common';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport { isDateABeforeDateB } from 'app/utils/dateUtils';\nimport { isISODateString } from '@navikt/ds-datepicker';\n\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\n\nexport const validateFødselsdato = (intl: IntlShape) => (fødselsdato: string) => {\n    if (!hasValue(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ugyldigDatoFormat');\n    }\n\n    if (etterDagensDato(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreIdagEllerTidligere');\n    }\n\n    if (dayjs(fødselsdato).isBefore(dayjs(new Date()).subtract(3, 'years').subtract(4, 'months'), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ikkeMerEnn3År3MndTilbake');\n    }\n\n    return undefined;\n};\n\nexport const validateFødselsdatoAdopsjon = (intl: IntlShape) => (fødselsdato: string, adopsjonsdato: string) => {\n    if (!hasValue(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ugyldigDatoFormat');\n    }\n\n    if (etterDagensDato(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreIdagEllerTidligere');\n    }\n\n    if (isDateABeforeDateB(adopsjonsdato, fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreFørAdopsjonsdato');\n    }\n\n    if (!barnetErUnder15årPåAdopsjonsdato(fødselsdato, adopsjonsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ikkeMerEnn15År3MndTilbake');\n    }\n\n    return undefined;\n};\n\nexport const validateTermindato = (intl: IntlShape) => (termindato: string) => {\n    if (!hasValue(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\n    }\n\n    if (!isISODateString(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.ugyldigDatoFormat');\n    }\n\n    if (!erMindreEnn3UkerSiden(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forTidlig');\n    }\n\n    if (!erIUke22Pluss3(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåVæreIUke22');\n    }\n\n    return undefined;\n};\n\nexport const validateTermindatoFødsel = (fødselsdato: string, intl: IntlShape) => (termindato: string) => {\n    if (!hasValue(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\n    }\n\n    if (!isISODateString(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.ugyldigDatoFormat');\n    }\n\n    if (!dayjs(termindato).subtract(6, 'months').isSameOrBefore(dayjs(fødselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forLangtFremITid');\n    }\n    if (!dayjs(termindato).add(1, 'months').isSameOrAfter(dayjs(fødselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forLangtTilbakeITid');\n    }\n\n    return undefined;\n};\n\nexport const validateAdopsjonsdato = (intl: IntlShape) => (adopsjonsdato: string) => {\n    if (!hasValue(adopsjonsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(adopsjonsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonsdato.ugyldigDatoFormat');\n    }\n\n    return undefined;\n};\n\nexport const validateAnkomstdato = (intl: IntlShape) => (ankomstdato: string, fødselsdato: string) => {\n    if (!hasValue(ankomstdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.duMåOppgi');\n    }\n\n    if (!isISODateString(ankomstdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.ugyldigDatoFormat');\n    }\n\n    if (fødselsdato !== undefined && !dayjs(fødselsdato).isSameOrBefore(ankomstdato, 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.førFødselsdato');\n    }\n\n    return undefined;\n};\n\nexport const validateTerminbekreftelse = (intl: IntlShape) => (terminbekreftelseDato: string) => {\n    if (!hasValue(terminbekreftelseDato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåOppgi');\n    }\n\n    if (!isISODateString(terminbekreftelseDato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.ugyldigDatoFormat');\n    }\n\n    if (dayjs().isBefore(dayjs(terminbekreftelseDato))) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.kanIkkeVæreFremITid');\n    }\n\n    return undefined;\n};\n","import {\n    AttachmentType,\n    Block,\n    ISOStringToDate,\n    Skjemanummer,\n    Søkersituasjon,\n    guid,\n    intlUtils,\n} from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport {\n    validateAdopsjonsdato,\n    validateAnkomstdato,\n    validateFødselsdatoAdopsjon,\n} from '../validation/omBarnetValidering';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { ScanDocumentInfo } from '@navikt/fp-ui';\nimport { BodyShort, Heading } from '@navikt/ds-react';\n\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst AdopsjonAnnetBarn: FunctionComponent<Props> = ({\n    søkersituasjon,\n    formValues,\n    visibility,\n    søknadGjelderEtNyttBarn,\n}) => {\n    const intl = useIntl();\n\n    if (søkersituasjon.situasjon === 'fødsel' || formValues.adopsjonAvEktefellesBarn !== YesOrNo.NO) {\n        return null;\n    }\n\n    return (\n        <>\n            <Block padBottom=\"xl\">\n                <OmBarnetFormComponents.DatePicker\n                    label={intlUtils(intl, 'omBarnet.adopsjonsdato.annetBarn')}\n                    name={OmBarnetFormField.adopsjonsdato}\n                    validate={validateAdopsjonsdato(intl)}\n                    placeholder={'dd.mm.åååå'}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.adopsjon.født')}\n                />\n            </Block>\n            <Block\n                padBottom=\"xl\"\n                visible={\n                    formValues.antallBarn !== undefined &&\n                    søknadGjelderEtNyttBarn &&\n                    parseInt(formValues.antallBarn, 10) >= 3\n                }\n            >\n                <OmBarnetFormComponents.Select label=\"Antall barn\" name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\n                <FieldArray\n                    name={OmBarnetFormField.fødselsdatoer}\n                    render={() =>\n                        [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\n                            return (\n                                <Block key={guid()} padBottom=\"xl\">\n                                    <OmBarnetFormComponents.DatePicker\n                                        name={\n                                            `${OmBarnetFormField.fødselsdatoer}.${index}` as unknown as OmBarnetFormField\n                                        }\n                                        label={\n                                            formValues.antallBarn === '1'\n                                                ? intlUtils(intl, 'omBarnet.fødselsdato')\n                                                : intlUtils(intl, `omBarnet.fødselsdato.adopsjon.${index + 1}`)\n                                        }\n                                        minDate={dayjs(formValues.adopsjonsdato).subtract(15, 'years').toDate()}\n                                        maxDate={ISOStringToDate(formValues.adopsjonsdato)}\n                                        validate={(value) =>\n                                            validateFødselsdatoAdopsjon(intl)(value, formValues.adopsjonsdato)\n                                        }\n                                        placeholder={'dd.mm.åååå'}\n                                        showYearSelector={true}\n                                    />\n                                </Block>\n                            );\n                        })\n                    }\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.adoptertIUtlandet)}>\n                <OmBarnetFormComponents.YesOrNoQuestion\n                    name={OmBarnetFormField.adoptertIUtlandet}\n                    legend={intlUtils(intl, 'omBarnet.adopteresFraUtlandet')}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.ankomstdato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.ankomstdato}\n                    label={intlUtils(intl, 'omBarnet.ankomstDato')}\n                    minDate={dayjs(formValues.fødselsdatoer[0]).toDate()}\n                    maxDate={dayjs().add(6, 'months').toDate()}\n                    validate={(value) => validateAnkomstdato(intl)(value, formValues.fødselsdatoer[0])}\n                    placeholder={'dd.mm.åååå'}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\n                <Block padBottom=\"xl\">\n                    <Heading level=\"2\" size=\"xsmall\">\n                        {intlUtils(intl, 'omBarnet.tittel.omsorgsovertakelse')}\n                    </Heading>\n                    <BodyShort> {intlUtils(intl, 'omBarnet.veileder.omsorgsovertakelse')}</BodyShort>\n                </Block>\n                <FormikFileUploader\n                    legend={''}\n                    label={intlUtils(intl, 'omBarnet.adopsjon.vedlegg')}\n                    name={OmBarnetFormField.omsorgsovertakelse}\n                    attachments={formValues.omsorgsovertakelse || []}\n                    attachmentType={AttachmentType.OMSORGSOVERTAKELSE}\n                    skjemanummer={Skjemanummer.OMSORGSOVERTAKELSESDATO}\n                />\n                <ScanDocumentInfo />\n            </Block>\n        </>\n    );\n};\n\nexport default AdopsjonAnnetBarn;\n","import {\n    AttachmentType,\n    Block,\n    ISOStringToDate,\n    Skjemanummer,\n    Søkersituasjon,\n    guid,\n    intlUtils,\n} from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateAdopsjonsdato, validateFødselsdatoAdopsjon } from '../validation/omBarnetValidering';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { BodyShort, Heading } from '@navikt/ds-react';\nimport { ScanDocumentInfo } from '@navikt/fp-ui';\n\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst AdopsjonEktefellesBarn: FunctionComponent<Props> = ({\n    søkersituasjon,\n    formValues,\n    visibility,\n    søknadGjelderEtNyttBarn,\n}) => {\n    const intl = useIntl();\n\n    if (søkersituasjon.situasjon === 'fødsel' || formValues.adopsjonAvEktefellesBarn !== YesOrNo.YES) {\n        return null;\n    }\n\n    return (\n        <>\n            <Block padBottom=\"xl\">\n                <OmBarnetFormComponents.DatePicker\n                    label={intlUtils(intl, 'omBarnet.adopsjonsdato.stebarn')}\n                    name={OmBarnetFormField.adopsjonsdato}\n                    validate={validateAdopsjonsdato(intl)}\n                    placeholder={'dd.mm.åååå'}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.adopsjon.født')}\n                />\n            </Block>\n            <Block\n                padBottom=\"xl\"\n                visible={\n                    formValues.antallBarn !== undefined &&\n                    søknadGjelderEtNyttBarn &&\n                    parseInt(formValues.antallBarn, 10) >= 3\n                }\n            >\n                <OmBarnetFormComponents.Select label=\"Antall barn\" name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\n                <FieldArray\n                    name={OmBarnetFormField.fødselsdatoer}\n                    render={() =>\n                        [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\n                            return (\n                                <Block key={guid()} padBottom=\"xl\">\n                                    <OmBarnetFormComponents.DatePicker\n                                        name={\n                                            `${OmBarnetFormField.fødselsdatoer}.${index}` as unknown as OmBarnetFormField\n                                        }\n                                        label={\n                                            formValues.antallBarn === '1'\n                                                ? intlUtils(intl, 'omBarnet.fødselsdato')\n                                                : intlUtils(intl, `omBarnet.fødselsdato.adopsjon.${index + 1}`)\n                                        }\n                                        minDate={dayjs().subtract(6, 'month').toDate()}\n                                        maxDate={ISOStringToDate(formValues.adopsjonsdato)}\n                                        validate={(value) =>\n                                            validateFødselsdatoAdopsjon(intl)(value, formValues.adopsjonsdato)\n                                        }\n                                        placeholder={'dd.mm.åååå'}\n                                    />{' '}\n                                </Block>\n                            );\n                        })\n                    }\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\n                <Block padBottom=\"xl\">\n                    <Heading level=\"2\" size=\"xsmall\">\n                        {intlUtils(intl, 'omBarnet.tittel.omsorgsovertakelse')}\n                    </Heading>\n                    <BodyShort> {intlUtils(intl, 'omBarnet.veileder.omsorgsovertakelse')}</BodyShort>\n                </Block>{' '}\n                <FormikFileUploader\n                    legend=\"\"\n                    label={intlUtils(intl, 'omBarnet.adopsjon.vedlegg')}\n                    name={OmBarnetFormField.omsorgsovertakelse}\n                    attachments={formValues.omsorgsovertakelse || []}\n                    attachmentType={AttachmentType.OMSORGSOVERTAKELSE}\n                    skjemanummer={Skjemanummer.OMSORGSOVERTAKELSESDATO}\n                />\n                <ScanDocumentInfo />\n            </Block>\n        </>\n    );\n};\n\nexport default AdopsjonEktefellesBarn;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { ReadMore } from '@navikt/ds-react';\n\ninterface Props {\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    erFarEllerMedmor: boolean;\n}\n\nconst BarnFødtEllerAdoptert: FunctionComponent<Props> = ({ visibility, erFarEllerMedmor }) => {\n    const intl = useIntl();\n    return (\n        <>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.adopsjonAvEktefellesBarn)}>\n                <OmBarnetFormComponents.YesOrNoQuestion\n                    name={OmBarnetFormField.adopsjonAvEktefellesBarn}\n                    legend={intlUtils(intl, 'omBarnet.adopsjonGjelder')}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.erBarnetFødt)}>\n                <OmBarnetFormComponents.YesOrNoQuestion\n                    name={OmBarnetFormField.erBarnetFødt}\n                    legend={intlUtils(intl, 'omBarnet.erBarnetFødt')}\n                />\n                {!erFarEllerMedmor && (\n                    <ReadMore header={intlUtils(intl, 'omBarnet.erBarnetFødt.readMore.header')}>\n                        <Block padBottom=\"m\">\n                            <FormattedMessage id=\"omBarnet.erBarnetFødt.readMore.innhold.del1\" />\n                        </Block>\n                        <FormattedMessage id=\"omBarnet.erBarnetFødt.readMore.innhold.del2\" />\n                    </ReadMore>\n                )}\n            </Block>\n        </>\n    );\n};\n\nexport default BarnFødtEllerAdoptert;\n","import { Block, Søkersituasjon, intlUtils } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateFødselsdato, validateTermindatoFødsel } from '../validation/omBarnetValidering';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n    barnSøktOmFørMenIkkeRegistrert: boolean;\n}\n\nconst Fødsel: FunctionComponent<Props> = ({\n    søkersituasjon,\n    formValues,\n    visibility,\n    søknadGjelderEtNyttBarn,\n    barnSøktOmFørMenIkkeRegistrert,\n}) => {\n    const { erBarnetFødt, antallBarn, fødselsdatoer } = formValues;\n\n    const intl = useIntl();\n    const intlIdFødsel =\n        antallBarn !== undefined && parseInt(antallBarn, 10) > 1\n            ? 'omBarnet.fødselsdato.flereBarn'\n            : 'omBarnet.fødselsdato';\n\n    if (\n        søkersituasjon.situasjon === 'adopsjon' ||\n        erBarnetFødt !== YesOrNo.YES ||\n        (!søknadGjelderEtNyttBarn && !barnSøktOmFørMenIkkeRegistrert)\n    ) {\n        return null;\n    }\n\n    return (\n        <>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.født')}\n                />\n            </Block>\n            <Block\n                padBottom=\"xl\"\n                visible={antallBarn !== undefined && søknadGjelderEtNyttBarn && parseInt(antallBarn, 10) >= 3}\n            >\n                <OmBarnetFormComponents.Select label=\"Antall barn\" name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\n                <FieldArray\n                    name={OmBarnetFormField.fødselsdatoer}\n                    render={() => [\n                        <OmBarnetFormComponents.DatePicker\n                            key={`${OmBarnetFormField.fødselsdatoer}.0`}\n                            name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\n                            label={intlUtils(intl, intlIdFødsel)}\n                            minDate={dayjs().subtract(3, 'years').toDate()}\n                            maxDate={dayjs().toDate()}\n                            validate={validateFødselsdato(intl)}\n                            placeholder={'dd.mm.åååå'}\n                        />,\n                    ]}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.termindato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.termindato}\n                    label={intlUtils(intl, 'omBarnet.termindato.født')}\n                    minDate={dayjs(fødselsdatoer[0]).subtract(1, 'months').toDate()}\n                    maxDate={dayjs(fødselsdatoer[0]).add(6, 'months').toDate()}\n                    placeholder={'dd.mm.åååå'}\n                    validate={validateTermindatoFødsel(fødselsdatoer[0], intl)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default Fødsel;\n","import {\n    Arbeidsforhold,\n    ISOStringToDate,\n    RegistrertBarn,\n    Situasjon,\n    Søkerrolle,\n    andreAugust2022ReglerGjelder,\n    førsteOktober2021ReglerGjelder,\n    hasValue,\n    isFarEllerMedmor,\n} from '@navikt/fp-common';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport dayjs from 'dayjs';\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { getEldsteRegistrerteBarn } from '../../utils/dateUtils';\n\nexport interface OmBarnetQuestionPayload extends OmBarnetFormData {\n    situasjon: Situasjon;\n    rolle: Søkerrolle;\n    arbeidsforhold: Arbeidsforhold[];\n    valgteRegistrerteBarn: RegistrertBarn[] | undefined;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst erDatoInnenforDeSiste12Ukene = (dato: Date) => {\n    const twelveWeeksAfterBirthday = dayjs(dato).add(12, 'weeks');\n    return dayjs(twelveWeeksAfterBirthday).isAfter(new Date(), 'day');\n};\n\nconst includeTermindato = (\n    rolle: Søkerrolle,\n    fødselsdato: string | undefined,\n    valgteRegistrerteBarn: RegistrertBarn[] | undefined,\n    situasjon: Situasjon,\n): boolean => {\n    if (situasjon === 'adopsjon') {\n        return false;\n    }\n\n    let eldsteBarnFødselsdato = undefined;\n\n    if (valgteRegistrerteBarn !== undefined && valgteRegistrerteBarn.length > 0) {\n        const eldsteBarn = getEldsteRegistrerteBarn(valgteRegistrerteBarn);\n\n        eldsteBarnFødselsdato = eldsteBarn.fødselsdato;\n    }\n\n    if (!fødselsdato && !eldsteBarnFødselsdato) {\n        return false;\n    }\n\n    const relevantFødselsdato = eldsteBarnFødselsdato || ISOStringToDate(fødselsdato);\n\n    if (isFarEllerMedmor(rolle)) {\n        if (andreAugust2022ReglerGjelder(relevantFødselsdato!)) {\n            return true;\n        }\n        return erDatoInnenforDeSiste12Ukene(relevantFødselsdato!);\n    }\n    return true;\n};\n\nconst includeTerminbekreftelse = (\n    erBarnetFødt: YesOrNo,\n    arbeidsforhold: Arbeidsforhold[],\n    rolle: Søkerrolle,\n    termindato: string,\n) => {\n    return erBarnetFødt === YesOrNo.NO && arbeidsforhold.length === 0 && kanSøkePåTermin(rolle, termindato);\n};\n\nconst includeAdoptertIUtlandet = (adopsjonAvEktefellesBarn: YesOrNo, omsorgsovertakelse: string) => {\n    return (\n        adopsjonAvEktefellesBarn === YesOrNo.NO &&\n        omsorgsovertakelse !== '' &&\n        !førsteOktober2021ReglerGjelder(ISOStringToDate(omsorgsovertakelse)!)\n    );\n};\n\nconst includeAnkomstDato = (adopsjonAvEktefellesBarn: YesOrNo, adopsjonsdato: string) => {\n    return adopsjonAvEktefellesBarn === YesOrNo.NO && includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato);\n};\n\nexport const kanSøkePåTermin = (rolle: Søkerrolle, termindato: string): boolean => {\n    if (!isFarEllerMedmor(rolle)) {\n        return true;\n    }\n    return hasValue(termindato) ? andreAugust2022ReglerGjelder(new Date(termindato)) : false;\n};\n\nconst skalViseErBarnFødt = (situasjon: string, søknadGjelderEtNyttBarn: boolean): boolean => {\n    if (situasjon === 'fødsel') {\n        return søknadGjelderEtNyttBarn;\n    }\n\n    return false;\n};\n\nconst skalViseOmsorgsovertakelse = (\n    adopsjonsdato: string,\n    adopsjonAvEktefellesBarn: YesOrNo,\n    adoptertIUtlandet: YesOrNo,\n    ankomstdato: string,\n    søknadGjelderEtNyttBarn: boolean,\n    fødselsdatoer: string[] | undefined,\n) => {\n    if (søknadGjelderEtNyttBarn) {\n        return (\n            (includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                adoptertIUtlandet !== YesOrNo.UNANSWERED) ||\n            (!includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                fødselsdatoer !== undefined &&\n                hasValue(fødselsdatoer[0])) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && fødselsdatoer !== undefined && hasValue(fødselsdatoer[0]))\n        );\n    } else {\n        return (\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && hasValue(adopsjonsdato)) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO &&\n                hasValue(adopsjonsdato) &&\n                !includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato)) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO &&\n                includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                adoptertIUtlandet === YesOrNo.NO) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO &&\n                includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                adoptertIUtlandet === YesOrNo.YES &&\n                hasValue(ankomstdato))\n        );\n    }\n};\n\nconst OmBarnetFormConfig: QuestionConfig<OmBarnetQuestionPayload, OmBarnetFormField> = {\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: {\n        isIncluded: ({ situasjon }) => situasjon === 'adopsjon',\n        isAnswered: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon }) => situasjon === 'adopsjon',\n    },\n    [OmBarnetFormField.erBarnetFødt]: {\n        isIncluded: ({ situasjon, søknadGjelderEtNyttBarn }) => søknadGjelderEtNyttBarn && situasjon === 'fødsel',\n        isAnswered: ({ erBarnetFødt }) => erBarnetFødt !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon, søknadGjelderEtNyttBarn }) =>\n            skalViseErBarnFødt(situasjon, søknadGjelderEtNyttBarn),\n    },\n    [OmBarnetFormField.antallBarn]: {\n        isIncluded: ({ søknadGjelderEtNyttBarn }) => søknadGjelderEtNyttBarn,\n        isAnswered: ({ antallBarn }) => hasValue(antallBarn),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, adopsjonsdato }) =>\n            erBarnetFødt !== YesOrNo.UNANSWERED ||\n            (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato)),\n    },\n    [OmBarnetFormField.antallBarnSelect]: {\n        isIncluded: ({ antallBarn, søknadGjelderEtNyttBarn }) =>\n            parseInt(antallBarn, 10) >= 3 && søknadGjelderEtNyttBarn,\n        isAnswered: ({ antallBarnSelect }) => hasValue(antallBarnSelect),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, adopsjonsdato, antallBarn }) =>\n            parseInt(antallBarn, 10) >= 3 &&\n            (erBarnetFødt !== YesOrNo.UNANSWERED ||\n                (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato))),\n    },\n    [OmBarnetFormField.adopsjonsdato]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ adopsjonsdato }) => hasValue(adopsjonsdato),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n    },\n    [OmBarnetFormField.fødselsdatoer]: {\n        isIncluded: ({ erBarnetFødt, adopsjonAvEktefellesBarn, søknadGjelderEtNyttBarn }) =>\n            søknadGjelderEtNyttBarn &&\n            (erBarnetFødt === YesOrNo.YES || adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED),\n        isAnswered: ({ fødselsdatoer }) => fødselsdatoer.length > 0 && hasValue(fødselsdatoer[0]),\n        visibilityFilter: ({ antallBarn }) => {\n            return hasValue(antallBarn);\n        },\n    },\n    [OmBarnetFormField.omsorgsovertakelse]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: () => true,\n        visibilityFilter: ({\n            adopsjonsdato,\n            adopsjonAvEktefellesBarn,\n            ankomstdato,\n            adoptertIUtlandet,\n            søknadGjelderEtNyttBarn,\n            fødselsdatoer,\n        }) =>\n            skalViseOmsorgsovertakelse(\n                adopsjonsdato,\n                adopsjonAvEktefellesBarn,\n                adoptertIUtlandet,\n                ankomstdato,\n                søknadGjelderEtNyttBarn,\n                fødselsdatoer,\n            ),\n    },\n    [OmBarnetFormField.termindato]: {\n        isIncluded: ({ rolle, fødselsdatoer, erBarnetFødt, situasjon, valgteRegistrerteBarn }) =>\n            includeTermindato(rolle, fødselsdatoer[0], valgteRegistrerteBarn, situasjon) || erBarnetFødt === YesOrNo.NO,\n        isAnswered: ({ termindato }) => hasValue(termindato),\n        visibilityFilter: ({ fødselsdatoer, erBarnetFødt, antallBarn, valgteRegistrerteBarn }) => {\n            return (\n                hasValue(fødselsdatoer[0]) ||\n                (erBarnetFødt === YesOrNo.NO && hasValue(antallBarn)) ||\n                (valgteRegistrerteBarn !== undefined && valgteRegistrerteBarn.length > 0)\n            );\n        },\n    },\n    [OmBarnetFormField.terminbekreftelse]: {\n        isIncluded: ({ erBarnetFødt, arbeidsforhold, rolle, termindato }) =>\n            includeTerminbekreftelse(erBarnetFødt, arbeidsforhold, rolle, termindato),\n        isAnswered: ({ terminbekreftelse }) => hasValue(terminbekreftelse),\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\n    },\n    [OmBarnetFormField.terminbekreftelsedato]: {\n        isIncluded: ({ erBarnetFødt, arbeidsforhold, rolle, termindato }) =>\n            erBarnetFødt === YesOrNo.NO && arbeidsforhold.length === 0 && kanSøkePåTermin(rolle, termindato),\n        isAnswered: ({ terminbekreftelsedato }) => hasValue(terminbekreftelsedato),\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\n    },\n    [OmBarnetFormField.adoptertIUtlandet]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn, adopsjonsdato }) =>\n            includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato),\n        isAnswered: ({ adoptertIUtlandet }) => adoptertIUtlandet !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ fødselsdatoer, søknadGjelderEtNyttBarn }) =>\n            (søknadGjelderEtNyttBarn && hasValue(fødselsdatoer[0])) || !søknadGjelderEtNyttBarn,\n    },\n    [OmBarnetFormField.ankomstdato]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn, adopsjonsdato }) =>\n            includeAnkomstDato(adopsjonAvEktefellesBarn, adopsjonsdato),\n        isAnswered: ({ ankomstdato }) => hasValue(ankomstdato),\n        visibilityFilter: ({ adoptertIUtlandet }) => adoptertIUtlandet === YesOrNo.YES,\n    },\n};\n\nconst omBarnetQuestionsConfig = Questions<OmBarnetQuestionPayload, OmBarnetFormField>(OmBarnetFormConfig);\n\nexport default omBarnetQuestionsConfig;\n","import {\n    attenUkerTreDager,\n    date21DaysAgo,\n    Block,\n    dateToday,\n    hasValue,\n    intlUtils,\n    erIUke22Pluss3,\n    Søkersituasjon,\n    isFarEllerMedmor,\n    links,\n    AttachmentType,\n    Skjemanummer,\n} from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { kanSøkePåTermin } from '../omBarnetQuestionsConfig';\nimport { validateTerminbekreftelse, validateTermindato } from '../validation/omBarnetValidering';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Alert, BodyShort, GuidePanel, Heading, Link, ReadMore } from '@navikt/ds-react';\nimport { isISODateString } from '@navikt/ds-datepicker';\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n    setErForTidligTilÅSøkePåTermin: (val: boolean) => void;\n}\n\nconst Termin: FunctionComponent<Props> = ({\n    søkersituasjon,\n    visibility,\n    formValues,\n    søknadGjelderEtNyttBarn,\n    setErForTidligTilÅSøkePåTermin,\n}) => {\n    const intl = useIntl();\n\n    if (søkersituasjon.situasjon === 'adopsjon' || formValues.erBarnetFødt !== YesOrNo.NO || !søknadGjelderEtNyttBarn) {\n        return null;\n    }\n\n    const erForTidligTilÅSøkePåTermin =\n        hasValue(formValues.termindato) && isISODateString(formValues.termindato)\n            ? !erIUke22Pluss3(formValues.termindato)\n            : false;\n    setErForTidligTilÅSøkePåTermin(erForTidligTilÅSøkePåTermin);\n\n    const søkerErFarMedmor = isFarEllerMedmor(søkersituasjon.rolle);\n    const farMedMorSøkerPåTermin = søkerErFarMedmor && hasValue(formValues.termindato);\n    const intlSpørsmålAntallBarnId = søkerErFarMedmor ? 'omBarnet.antallBarn.termin.far' : 'omBarnet.antallBarn.termin';\n\n    const intlTerminbekreftelseId = søkerErFarMedmor\n        ? 'omBarnet.veileder.terminbekreftelse.far'\n        : 'omBarnet.veileder.terminbekreftelse';\n\n    return (\n        <>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    legend={intlUtils(intl, intlSpørsmålAntallBarnId)}\n                />\n            </Block>\n            <Block\n                padBottom=\"xl\"\n                visible={formValues.antallBarn !== undefined && parseInt(formValues.antallBarn, 10) >= 3}\n            >\n                <OmBarnetFormComponents.Select label=\"Antall barn\" name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"s\" visible={visibility.isVisible(OmBarnetFormField.termindato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.termindato}\n                    label={intlUtils(intl, 'omBarnet.termindato.termin')}\n                    placeholder={'dd.mm.åååå'}\n                    minDate={date21DaysAgo}\n                    maxDate={attenUkerTreDager}\n                    validate={validateTermindato(intl)}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.termindato) && !søkerErFarMedmor}>\n                <ReadMore header={intlUtils(intl, 'omBarnet.termindato.åpneLabel')}>\n                    <Block padBottom=\"m\">\n                        <FormattedMessage id=\"omBarnet.termindato.innhold.del1\" />\n                    </Block>\n                    <FormattedMessage id=\"omBarnet.termindato.innhold.del2\" />\n                </ReadMore>\n            </Block>\n\n            {farMedMorSøkerPåTermin && !kanSøkePåTermin(søkersituasjon.rolle, formValues.termindato) && (\n                <Block padBottom=\"xl\">\n                    <GuidePanel>\n                        <FormattedMessage\n                            id=\"omBarnet.veileder.medMorEllerFarTermin\"\n                            values={{\n                                lenke: (\n                                    <Link href={links.papirsøknad}>\n                                        <FormattedMessage id=\"omBarnet.papirsøknad.lenke\" />\n                                    </Link>\n                                ),\n                            }}\n                        />\n                    </GuidePanel>\n                </Block>\n            )}\n\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelse)}>\n                <GuidePanel>\n                    <FormattedMessage id={intlTerminbekreftelseId} />\n                </GuidePanel>\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelse)}>\n                <FormikFileUploader\n                    legend=\"Dokumentasjon om terminbekreftelse\"\n                    label={intlUtils(intl, 'omBarnet.terminbekreftelse.lastOpp')}\n                    name={OmBarnetFormField.terminbekreftelse}\n                    attachments={formValues.terminbekreftelse || []}\n                    attachmentType={AttachmentType.TERMINBEKREFTELSE}\n                    skjemanummer={Skjemanummer.TERMINBEKREFTELSE}\n                />\n            </Block>\n            <Block padBottom=\"xl\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelsedato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.terminbekreftelsedato}\n                    label={intlUtils(intl, 'omBarnet.terminbekreftelseDato')}\n                    placeholder={'dd.mm.åååå'}\n                    validate={validateTerminbekreftelse(intl)}\n                    maxDate={dateToday}\n                />\n            </Block>\n            {erForTidligTilÅSøkePåTermin && (\n                <Block padBottom=\"xl\">\n                    <Alert variant=\"warning\">\n                        <Block padBottom=\"m\">\n                            <Heading level=\"3\" size=\"small\">\n                                <FormattedMessage id=\"omBarnet.termindato.erForTidligTilÅSøkePåTermin.heading\" />\n                            </Heading>\n                        </Block>\n                        <BodyShort>\n                            <FormattedMessage id=\"omBarnet.termindato.erForTidligTilÅSøkePåTermin.innhold\" />\n                        </BodyShort>\n                    </Alert>\n                </Block>\n            )}\n        </>\n    );\n};\n\nexport default Termin;\n","import {\n    AdoptertBarn,\n    Arbeidsforhold,\n    AttachmentType,\n    Barn,\n    BarnType,\n    FødtBarn,\n    ISOStringToDate,\n    IkkeUtfyltTypeBarn,\n    Situasjon,\n    Skjemanummer,\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n    hasValue,\n    isAdoptertAnnetBarn,\n    isAdoptertStebarn,\n    isFødtBarn,\n    isUfødtBarn,\n    lagSendSenereDokumentNårIngenAndreFinnes,\n} from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\nimport { YesOrNo, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\n\nconst getInitValues = (): Readonly<OmBarnetFormData> => ({\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo.UNANSWERED,\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo.UNANSWERED,\n    [OmBarnetFormField.antallBarn]: '',\n    [OmBarnetFormField.antallBarnSelect]: '',\n    [OmBarnetFormField.adopsjonsdato]: '',\n    [OmBarnetFormField.fødselsdatoer]: [],\n    [OmBarnetFormField.omsorgsovertakelse]: [],\n    [OmBarnetFormField.termindato]: '',\n    [OmBarnetFormField.terminbekreftelse]: [],\n    [OmBarnetFormField.terminbekreftelsedato]: '',\n    [OmBarnetFormField.adoptertIUtlandet]: YesOrNo.UNANSWERED,\n    [OmBarnetFormField.ankomstdato]: '',\n});\n\nexport const cleanupOmBarnetFormData = (\n    values: OmBarnetFormData,\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>,\n): OmBarnetFormData => {\n    const cleanedData: OmBarnetFormData = {\n        erBarnetFødt: visibility.isVisible(OmBarnetFormField.erBarnetFødt) ? values.erBarnetFødt : YesOrNo.UNANSWERED,\n        adopsjonAvEktefellesBarn: visibility.isVisible(OmBarnetFormField.adopsjonAvEktefellesBarn)\n            ? values.adopsjonAvEktefellesBarn\n            : YesOrNo.UNANSWERED,\n        antallBarn: visibility.isVisible(OmBarnetFormField.antallBarn) ? values.antallBarn : '',\n        antallBarnSelect: visibility.isVisible(OmBarnetFormField.antallBarnSelect) ? values.antallBarnSelect : '',\n        adopsjonsdato: visibility.isVisible(OmBarnetFormField.adopsjonsdato) ? values.adopsjonsdato : '',\n        fødselsdatoer: visibility.isVisible(OmBarnetFormField.fødselsdatoer) ? values.fødselsdatoer : [],\n        omsorgsovertakelse: visibility.isVisible(OmBarnetFormField.omsorgsovertakelse) ? values.omsorgsovertakelse : [],\n        termindato: visibility.isVisible(OmBarnetFormField.termindato) ? values.termindato : '',\n        terminbekreftelse: visibility.isVisible(OmBarnetFormField.terminbekreftelse) ? values.terminbekreftelse : [],\n        terminbekreftelsedato: visibility.isVisible(OmBarnetFormField.terminbekreftelsedato)\n            ? values.terminbekreftelsedato\n            : '',\n        adoptertIUtlandet: visibility.isVisible(OmBarnetFormField.adoptertIUtlandet)\n            ? values.adoptertIUtlandet\n            : YesOrNo.UNANSWERED,\n        ankomstdato: visibility.isVisible(OmBarnetFormField.ankomstdato) ? values.ankomstdato : '',\n    };\n\n    return cleanedData;\n};\n\nexport const mapOmDetValgteBarnetFormDataToState = (\n    valgtRegistrertBarn: FødtBarn | AdoptertBarn | IkkeUtfyltTypeBarn,\n    situasjon: Situasjon,\n    values: Partial<OmBarnetFormData>,\n    barnSøktOmFørMenIkkeRegistrert: boolean,\n): Barn => {\n    if (valgtRegistrertBarn !== undefined && situasjon === 'fødsel') {\n        return {\n            ...valgtRegistrertBarn,\n            type: barnSøktOmFørMenIkkeRegistrert ? BarnType.UFØDT : BarnType.FØDT,\n            termindato: hasValue(values.termindato) ? ISOStringToDate(values.termindato) : undefined,\n            fødselsdatoer: valgtRegistrertBarn.fødselsdatoer,\n            antallBarn: valgtRegistrertBarn.antallBarn,\n        } as Barn;\n    }\n\n    const omsorgsovertakelse = lagSendSenereDokumentNårIngenAndreFinnes(\n        values.omsorgsovertakelse!,\n        AttachmentType.OMSORGSOVERTAKELSE,\n        Skjemanummer.OMSORGSOVERTAKELSESDATO,\n    );\n\n    if (values.adopsjonAvEktefellesBarn === YesOrNo.YES) {\n        return {\n            ...valgtRegistrertBarn,\n            type: BarnType.ADOPTERT_STEBARN,\n            adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n            omsorgsovertakelse,\n        };\n    }\n\n    return {\n        ...valgtRegistrertBarn,\n        type: BarnType.ADOPTERT_ANNET_BARN,\n        adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n        adoptertIUtlandet: convertYesOrNoOrUndefinedToBoolean(values.adoptertIUtlandet)!,\n        ankomstdato: values.adoptertIUtlandet === YesOrNo.YES ? ISOStringToDate(values.ankomstdato) : undefined,\n        omsorgsovertakelse,\n    };\n};\n\nexport const mapOmBarnetFormDataToState = (\n    values: Partial<OmBarnetFormData>,\n    arbeidsforhold: Arbeidsforhold[],\n    valgtRegistrertBarn: Barn | undefined,\n    situasjon: Situasjon,\n    barnSøktOmFørMenIkkeRegistrert: boolean,\n): Barn => {\n    if (valgtRegistrertBarn !== undefined) {\n        return mapOmDetValgteBarnetFormDataToState(\n            valgtRegistrertBarn as FødtBarn | AdoptertBarn | IkkeUtfyltTypeBarn,\n            situasjon,\n            values,\n            barnSøktOmFørMenIkkeRegistrert,\n        );\n    }\n    const antallBarn =\n        parseInt(values.antallBarn!, 10) < 3\n            ? parseInt(values.antallBarn!, 10)\n            : parseInt(values.antallBarnSelect!, 10);\n\n    if (values.erBarnetFødt === YesOrNo.YES) {\n        return {\n            type: BarnType.FØDT,\n            fødselsdatoer: values.fødselsdatoer!.map((fødselsdato) => ISOStringToDate(fødselsdato)!),\n            antallBarn,\n            termindato: hasValue(values.termindato) ? ISOStringToDate(values.termindato) : undefined,\n        };\n    }\n\n    if (values.erBarnetFødt === YesOrNo.NO) {\n        const terminbekreftelse = lagSendSenereDokumentNårIngenAndreFinnes(\n            values.terminbekreftelse!,\n            AttachmentType.TERMINBEKREFTELSE,\n            Skjemanummer.TERMINBEKREFTELSE,\n        );\n\n        if (arbeidsforhold.length === 0) {\n            return {\n                type: BarnType.UFØDT,\n                terminbekreftelse: terminbekreftelse,\n                terminbekreftelsedato: ISOStringToDate(values.terminbekreftelsedato),\n                antallBarn,\n                termindato: ISOStringToDate(values.termindato)!,\n            };\n        }\n        return {\n            type: BarnType.UFØDT,\n            antallBarn,\n            termindato: ISOStringToDate(values.termindato)!,\n        };\n    }\n\n    const omsorgsovertakelse = lagSendSenereDokumentNårIngenAndreFinnes(\n        values.omsorgsovertakelse!,\n        AttachmentType.OMSORGSOVERTAKELSE,\n        Skjemanummer.OMSORGSOVERTAKELSESDATO,\n    );\n\n    if (values.adopsjonAvEktefellesBarn === YesOrNo.YES) {\n        return {\n            type: BarnType.ADOPTERT_STEBARN,\n            adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n            antallBarn,\n            fødselsdatoer: values.fødselsdatoer!.map((fødselsdato) => ISOStringToDate(fødselsdato)!),\n            omsorgsovertakelse,\n        };\n    }\n\n    return {\n        type: BarnType.ADOPTERT_ANNET_BARN,\n        fødselsdatoer: values.fødselsdatoer!.map((fødselsdato) => ISOStringToDate(fødselsdato)!),\n        adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n        antallBarn,\n        adoptertIUtlandet: convertYesOrNoOrUndefinedToBoolean(values.adoptertIUtlandet)!,\n        ankomstdato: values.adoptertIUtlandet === YesOrNo.YES ? ISOStringToDate(values.ankomstdato) : undefined,\n        omsorgsovertakelse,\n    };\n};\n\nexport const getOmBarnetInitialValues = (arbeidsforhold: Arbeidsforhold[], barn?: Barn): OmBarnetFormData => {\n    const initialOmBarnetValues = getInitValues();\n\n    if (!barn) {\n        return initialOmBarnetValues;\n    }\n\n    const erFlereEnnToBarn = barn.antallBarn > 2;\n\n    if (isFødtBarn(barn)) {\n        return {\n            ...initialOmBarnetValues,\n            erBarnetFødt: YesOrNo.YES,\n            fødselsdatoer: barn.fødselsdatoer.map((fødselsdato) => dateToISOString(fødselsdato)),\n            termindato: dateToISOString(barn.termindato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n        };\n    }\n\n    if (isUfødtBarn(barn)) {\n        if (arbeidsforhold.length === 0) {\n            return {\n                ...initialOmBarnetValues,\n                erBarnetFødt: YesOrNo.NO,\n                terminbekreftelse: barn.terminbekreftelse || [],\n                terminbekreftelsedato: dateToISOString(barn.terminbekreftelsedato),\n                termindato: dateToISOString(barn.termindato),\n                antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n                antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n            };\n        }\n\n        return {\n            ...initialOmBarnetValues,\n            erBarnetFødt: YesOrNo.NO,\n            termindato: dateToISOString(barn.termindato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n        };\n    }\n\n    if (isAdoptertAnnetBarn(barn)) {\n        return {\n            ...initialOmBarnetValues,\n            adopsjonAvEktefellesBarn: YesOrNo.NO,\n            fødselsdatoer: barn.fødselsdatoer.map((fødselsdato) => dateToISOString(fødselsdato)),\n            adopsjonsdato: dateToISOString(barn.adopsjonsdato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n            adoptertIUtlandet: convertBooleanOrUndefinedToYesOrNo(barn.adoptertIUtlandet),\n            omsorgsovertakelse: barn.omsorgsovertakelse,\n            ankomstdato: dateToISOString(barn.ankomstdato),\n        };\n    }\n\n    if (isAdoptertStebarn(barn)) {\n        return {\n            ...initialOmBarnetValues,\n            adopsjonAvEktefellesBarn: YesOrNo.YES,\n            adopsjonsdato: dateToISOString(barn.adopsjonsdato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n            fødselsdatoer: barn.fødselsdatoer.map((fødselsdato) => dateToISOString(fødselsdato)),\n            omsorgsovertakelse: barn.omsorgsovertakelse,\n        };\n    }\n\n    return initialOmBarnetValues;\n};\n","import * as React from 'react';\nimport RegistrertePersonalia from 'app/components/registrerte-personalia/RegistrertePersonalia';\nimport { Block, RegistrertBarn, intlUtils } from '@navikt/fp-common';\nimport { OmBarnetFormComponents, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateTermindatoFødsel } from '../validation/omBarnetValidering';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { formaterFødselsdatoerPåBarn, getLeverBarnet, getTittelBarnNårNavnSkalIkkeVises } from 'app/utils/barnUtils';\nimport { sorterRegistrerteBarnEtterEldstOgNavn } from 'app/pages/velkommen/velkommenUtils';\nimport { Label } from '@navikt/ds-react';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\n\ninterface Props {\n    valgteBarn: RegistrertBarn[];\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst ValgteRegistrerteBarn: React.FunctionComponent<Props> = ({ valgteBarn, visibility }: Props) => {\n    const intl = useIntl();\n    const antallBarn = valgteBarn.length;\n    const alleBarnaLever = valgteBarn.every((b) => getLeverBarnet(b));\n    valgteBarn.sort(sorterRegistrerteBarnEtterEldstOgNavn);\n    const fødselsdatoer = valgteBarn.map((b) => b.fødselsdato);\n    const fødselsdato = valgteBarn[0].fødselsdato;\n    return (\n        <>\n            <Block padBottom=\"xl\">\n                <div>\n                    <Block padBottom=\"s\">\n                        <Label>\n                            <FormattedMessage id=\"omBarnet.valgteBarn.tittel\" values={{ antallBarn }} />\n                        </Label>\n                    </Block>\n                    {alleBarnaLever ? (\n                        valgteBarn.map((barn: RegistrertBarn) => (\n                            <Block padBottom=\"s\" key={barn.fnr}>\n                                <RegistrertePersonalia\n                                    person={barn}\n                                    fødselsdatoForVisning={formaterFødselsdatoerPåBarn([barn.fødselsdato])}\n                                    visEtternavn={false}\n                                />\n                            </Block>\n                        ))\n                    ) : (\n                        <Block padBottom=\"s\">\n                            <RegistrertePersonalia\n                                person={valgteBarn[0]}\n                                fødselsdatoForVisning={formaterFødselsdatoerPåBarn(fødselsdatoer)}\n                                altTekstHvisUkjentNavn={getTittelBarnNårNavnSkalIkkeVises(\n                                    undefined,\n                                    fødselsdatoer,\n                                    valgteBarn.length,\n                                    intl,\n                                )}\n                                visEtternavn={false}\n                            />\n                        </Block>\n                    )}\n                </div>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.termindato) && valgteBarn.length > 0}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.termindato}\n                    label={intlUtils(intl, 'omBarnet.termindato.født')}\n                    dayPickerProps={{\n                        defaultMonth: fødselsdato,\n                    }}\n                    minDate={dayjs(fødselsdato).subtract(1, 'months').toDate()}\n                    maxDate={dayjs(fødselsdato).add(6, 'months').toDate()}\n                    placeholder={'dd.mm.åååå'}\n                    validate={validateTermindatoFødsel(dateToISOString(fødselsdato), intl)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default ValgteRegistrerteBarn;\n","import {\n    andreAugust2022ReglerGjelder,\n    Block,\n    convertYesOrNoOrUndefinedToBoolean,\n    hasValue,\n    intlUtils,\n    isFarEllerMedmor,\n    isFødtBarn,\n    ISOStringToDate,\n    isUfødtBarn,\n    RegistrertBarn,\n    Step,\n    StepButtonWrapper,\n    Søkerinfo,\n} from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\n\nimport { useIntl } from 'react-intl';\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\nimport AdopsjonAnnetBarn from './components/AdopsjonAnnetBarn';\nimport AdopsjonEktefellesBarn from './components/AdopsjonEktefellesBarn';\nimport BarnFødtEllerAdoptert from './components/BarnFødtEllerAdoptert';\nimport Fødsel from './components/Fødsel';\nimport Termin from './components/Termin';\nimport { OmBarnetFormComponents, OmBarnetFormData } from './omBarnetFormConfig';\nimport omBarnetQuestionsConfig, { OmBarnetQuestionPayload } from './omBarnetQuestionsConfig';\nimport { cleanupOmBarnetFormData, getOmBarnetInitialValues, mapOmBarnetFormDataToState } from './omBarnetUtils';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport ValgteRegistrerteBarn from './components/ValgteRegistrerteBarn';\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\nimport { getErDatoInnenEnDagFraAnnenDato } from 'app/pages/velkommen/velkommenUtils';\nimport { Button } from '@navikt/ds-react';\nimport { useState } from 'react';\nimport { ContextDataType, useContextGetData, useContextSaveData } from 'app/context/FpDataContext';\nimport { notEmpty } from '@navikt/fp-validation';\nimport BackButton from '../BackButton';\n\ntype Props = {\n    søkerInfo: Søkerinfo;\n    søknadGjelderNyttBarn: boolean;\n    mellomlagreSøknadOgNaviger: () => Promise<void>;\n    avbrytSøknad: () => void;\n};\n\nconst OmBarnet: React.FunctionComponent<Props> = ({\n    søkerInfo,\n    søknadGjelderNyttBarn,\n    mellomlagreSøknadOgNaviger,\n    avbrytSøknad,\n}) => {\n    const intl = useIntl();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const søkersituasjon = notEmpty(useContextGetData(ContextDataType.SØKERSITUASJON));\n    const omBarnet = useContextGetData(ContextDataType.OM_BARNET);\n\n    const oppdaterOmBarnet = useContextSaveData(ContextDataType.OM_BARNET);\n    const oppdaterAppRoute = useContextSaveData(ContextDataType.APP_ROUTE);\n\n    const { arbeidsforhold, registrerteBarn } = søkerInfo;\n\n    const [erForTidligTilÅSøkePåTermin, setErForTidligTilÅSøkePåTermin] = useState(false);\n    const erFarEllerMedmor = isFarEllerMedmor(søkersituasjon.rolle);\n    const findBarnetIRegistrerteBarn = (regBarn: RegistrertBarn) => {\n        if (omBarnet && !isUfødtBarn(omBarnet) && omBarnet.fnr !== undefined && omBarnet.fnr.length > 0) {\n            return omBarnet.fnr.includes(regBarn.fnr);\n        }\n        return false;\n    };\n\n    const familiehendelsesdato = omBarnet ? ISOStringToDate(getFamiliehendelsedato(omBarnet)) : undefined;\n\n    const dødfødteUtenFnrMedSammeFødselsdato =\n        omBarnet && isFødtBarn(omBarnet)\n            ? registrerteBarn.filter(\n                  (barn: RegistrertBarn) =>\n                      barn.fnr === undefined && getErDatoInnenEnDagFraAnnenDato(barn.fødselsdato, familiehendelsesdato),\n              )\n            : [];\n\n    const valgteRegistrerteBarn =\n        !søknadGjelderNyttBarn && omBarnet && !isUfødtBarn(omBarnet)\n            ? registrerteBarn.filter((b) => findBarnetIRegistrerteBarn(b)).concat(dødfødteUtenFnrMedSammeFødselsdato)\n            : undefined;\n    const barnSøktOmFørMenIkkeRegistrert =\n        !søknadGjelderNyttBarn && (valgteRegistrerteBarn === undefined || valgteRegistrerteBarn.length === 0);\n\n    const onSubmit = (values: Partial<OmBarnetFormData>) => {\n        setIsSubmitting(true);\n\n        const valgtBarn = !søknadGjelderNyttBarn && !barnSøktOmFørMenIkkeRegistrert ? omBarnet : undefined;\n        const oppdatertBarn = mapOmBarnetFormDataToState(\n            values,\n            arbeidsforhold,\n            valgtBarn,\n            søkersituasjon.situasjon,\n            barnSøktOmFørMenIkkeRegistrert,\n        );\n\n        oppdaterOmBarnet(oppdatertBarn);\n        oppdaterAppRoute(SøknadRoutes.ANNEN_FORELDER);\n\n        mellomlagreSøknadOgNaviger();\n    };\n\n    return (\n        <OmBarnetFormComponents.FormikWrapper\n            initialValues={getOmBarnetInitialValues(arbeidsforhold, omBarnet)}\n            onSubmit={onSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = omBarnetQuestionsConfig.getVisbility({\n                    ...formValues,\n                    arbeidsforhold,\n                    situasjon: søkersituasjon.situasjon,\n                    rolle: søkersituasjon.rolle,\n                    valgteRegistrerteBarn,\n                    søknadGjelderEtNyttBarn: barnSøktOmFørMenIkkeRegistrert || søknadGjelderNyttBarn,\n                } as OmBarnetQuestionPayload);\n\n                const farMedmorSøkerPåTerminFørWLB =\n                    erFarEllerMedmor &&\n                    convertYesOrNoOrUndefinedToBoolean(formValues.erBarnetFødt) === false &&\n                    hasValue(formValues.termindato) &&\n                    !andreAugust2022ReglerGjelder(ISOStringToDate(formValues.termindato)!);\n\n                const visGåVidereKnapp = visibility.areAllQuestionsAnswered() && !farMedmorSøkerPåTerminFørWLB;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"omBarnet\"\n                        pageTitle={intlUtils(intl, 'søknad.omBarnet')}\n                        onCancel={avbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl, false)}\n                    >\n                        <OmBarnetFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupOmBarnetFormData(values, visibility)}\n                        >\n                            {valgteRegistrerteBarn !== undefined && valgteRegistrerteBarn.length > 0 && (\n                                <ValgteRegistrerteBarn valgteBarn={valgteRegistrerteBarn} visibility={visibility} />\n                            )}\n                            <BarnFødtEllerAdoptert visibility={visibility} erFarEllerMedmor={erFarEllerMedmor} />\n                            <AdopsjonAnnetBarn\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues as OmBarnetFormData}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={søknadGjelderNyttBarn}\n                            />\n                            <AdopsjonEktefellesBarn\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues as OmBarnetFormData}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={søknadGjelderNyttBarn}\n                            />\n                            <Termin\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues as OmBarnetFormData}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={barnSøktOmFørMenIkkeRegistrert || søknadGjelderNyttBarn}\n                                setErForTidligTilÅSøkePåTermin={setErForTidligTilÅSøkePåTermin}\n                            />\n                            <Fødsel\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues as OmBarnetFormData}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={søknadGjelderNyttBarn}\n                                barnSøktOmFørMenIkkeRegistrert={barnSøktOmFørMenIkkeRegistrert}\n                            />\n                            <Block margin=\"l\">\n                                <StepButtonWrapper>\n                                    <BackButton\n                                        mellomlagreSøknadOgNaviger={mellomlagreSøknadOgNaviger}\n                                        route={getPreviousStepHref('omBarnet')}\n                                    />\n                                    {visGåVidereKnapp && (\n                                        <Button\n                                            type=\"submit\"\n                                            disabled={isSubmitting || erForTidligTilÅSøkePåTermin}\n                                            loading={isSubmitting}\n                                        >\n                                            {intlUtils(intl, 'søknad.gåVidere')}\n                                        </Button>\n                                    )}\n                                </StepButtonWrapper>\n                            </Block>\n                        </OmBarnetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default OmBarnet;\n"],"names":["OmBarnetFormField","OmBarnetFormComponents","getTypedFormComponents","dayjs","isSameOrAfter","isSameOrBefore","validateFødselsdato","intl","fødselsdato","hasValue","intlUtils","isISODateString","etterDagensDato","validateFødselsdatoAdopsjon","adopsjonsdato","isDateABeforeDateB","barnetErUnder15årPåAdopsjonsdato","validateTermindato","termindato","erMindreEnn3UkerSiden","erIUke22Pluss3","validateTermindatoFødsel","validateAdopsjonsdato","validateAnkomstdato","ankomstdato","validateTerminbekreftelse","terminbekreftelseDato","AdopsjonAnnetBarn","søkersituasjon","formValues","visibility","søknadGjelderEtNyttBarn","useIntl","YesOrNo","jsxs","Fragment","jsx","Block","FieldArray","_","index","ISOStringToDate","value","guid","Heading","BodyShort","FormikFileUploader","AttachmentType","Skjemanummer","ScanDocumentInfo","AdopsjonEktefellesBarn","BarnFødtEllerAdoptert","erFarEllerMedmor","ReadMore","FormattedMessage","Fødsel","barnSøktOmFørMenIkkeRegistrert","erBarnetFødt","antallBarn","fødselsdatoer","intlIdFødsel","erDatoInnenforDeSiste12Ukene","dato","twelveWeeksAfterBirthday","includeTermindato","rolle","valgteRegistrerteBarn","situasjon","eldsteBarnFødselsdato","getEldsteRegistrerteBarn","relevantFødselsdato","isFarEllerMedmor","andreAugust2022ReglerGjelder","includeTerminbekreftelse","arbeidsforhold","kanSøkePåTermin","includeAdoptertIUtlandet","adopsjonAvEktefellesBarn","omsorgsovertakelse","førsteOktober2021ReglerGjelder","includeAnkomstDato","skalViseErBarnFødt","skalViseOmsorgsovertakelse","adoptertIUtlandet","OmBarnetFormConfig","antallBarnSelect","terminbekreftelse","terminbekreftelsedato","omBarnetQuestionsConfig","Questions","Termin","setErForTidligTilÅSøkePåTermin","erForTidligTilÅSøkePåTermin","søkerErFarMedmor","farMedMorSøkerPåTermin","intlSpørsmålAntallBarnId","intlTerminbekreftelseId","date21DaysAgo","attenUkerTreDager","GuidePanel","Link","links","dateToday","Alert","getInitValues","cleanupOmBarnetFormData","values","mapOmDetValgteBarnetFormDataToState","valgtRegistrertBarn","BarnType","lagSendSenereDokumentNårIngenAndreFinnes","convertYesOrNoOrUndefinedToBoolean","mapOmBarnetFormDataToState","getOmBarnetInitialValues","barn","initialOmBarnetValues","erFlereEnnToBarn","isFødtBarn","dateToISOString","isUfødtBarn","isAdoptertAnnetBarn","convertBooleanOrUndefinedToYesOrNo","isAdoptertStebarn","ValgteRegistrerteBarn","valgteBarn","alleBarnaLever","b","getLeverBarnet","sorterRegistrerteBarnEtterEldstOgNavn","Label","RegistrertePersonalia","formaterFødselsdatoerPåBarn","getTittelBarnNårNavnSkalIkkeVises","OmBarnet","søkerInfo","søknadGjelderNyttBarn","mellomlagreSøknadOgNaviger","avbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","isSubmitting","setIsSubmitting","useState","notEmpty","useContextGetData","ContextDataType","omBarnet","oppdaterOmBarnet","useContextSaveData","oppdaterAppRoute","registrerteBarn","findBarnetIRegistrerteBarn","regBarn","familiehendelsesdato","getFamiliehendelsedato","dødfødteUtenFnrMedSammeFødselsdato","getErDatoInnenEnDagFraAnnenDato","onSubmit","oppdatertBarn","SøknadRoutes","farMedmorSøkerPåTerminFørWLB","visGåVidereKnapp","Step","stepConfig","StepButtonWrapper","BackButton","getPreviousStepHref","Button","OmBarnet$1"],"mappings":"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"}