{"version":3,"file":"TidligereUtenlandsoppholdPanel-a9180ca4.js","sources":["../../../../packages/ui/src/contentWrapper/ContentWrapper.tsx","../../../../packages/constants/src/links.ts","../../../../packages/constants/src/dates.ts","../../../../packages/ui/src/i18n/ui/UiIntlProvider.tsx","../../../../packages/ui/src/error/ErrorPage.tsx","../../../../packages/ui/src/error/ErrorBoundary.tsx","../../../../packages/ui/src/error/ErrorSummaryFp.tsx","../../../../packages/ui/src/fileUploader/input/FileInput.tsx","../../../../packages/ui/src/i18n/useCustomI18n.ts","../../../../packages/ui/src/fileUploader/fileUtils.ts","../../../../packages/ui/src/fileUploader/liste/AttachmentInfo.tsx","../../../../packages/ui/src/fileUploader/liste/AttachmentList.tsx","../../../../packages/ui/src/fileUploader/typer/FileUploadError.ts","../../../../packages/ui/src/fileUploader/liste/FailedAttachment.tsx","../../../../packages/ui/src/fileUploader/liste/FailedAttachmentList.tsx","../../../../packages/ui/src/fileUploader/FileUploader.tsx","../../../../packages/ui/src/step/StepButtons.tsx","../../../../packages/ui/src/i18n/ui/useUiIntl.ts","../../../../packages/metrics/src/amplitude.ts","../../../../packages/ui/src/umyndig/Umyndig.tsx","../../../../packages/ui/src/i18n/IntlProvider.tsx","../../../../node_modules/.pnpm/react-hook-form@7.45.4_react@18.2.0/node_modules/react-hook-form/dist/index.esm.mjs","../../../../packages/form-hooks/src/formWrappers/Form.tsx","../../../../packages/form-hooks/src/formWrappers/formUtils.ts","../../../../packages/form-hooks/src/formWrappers/Checkbox.tsx","../../../../packages/form-hooks/src/formWrappers/CheckboxGroup.tsx","../../../../packages/form-hooks/src/formWrappers/Datepicker.tsx","../../../../packages/form-hooks/src/formWrappers/RadioGroup.tsx","../../../../packages/form-hooks/src/formWrappers/Select.tsx","../../../../packages/form-hooks/src/formWrappers/TextField.tsx","../../../../packages/form-hooks/src/formWrappers/TextArea.tsx","../../../../packages/form-hooks/src/StepButtonsHookForm.tsx","../../../../node_modules/.pnpm/@hookform+error-message@2.0.1_react-dom@18.2.0_react-hook-form@7.45.4_react@18.2.0/node_modules/@hookform/error-message/dist/index.esm.js","../../../../packages/form-hooks/src/error/ErrorMessageHookForm.tsx","../../../../packages/form-hooks/src/error/ErrorSummaryHookForm.tsx","../../../../packages/validation/src/form/generalFormValidation.ts","../../../../packages/utils/src/countryUtils.ts","../../../../packages/utils/src/dateUtils.ts","../../../../packages/validation/src/form/dateFormValidation.ts","../../../../packages/utenlandsopphold/src/intl/useUtenlandsoppholdIntl.ts","../../../../packages/utenlandsopphold/src/intl/UtenlandsoppholdIntlProvider.tsx","../../../../packages/utenlandsopphold/src/utenlandsopphold/UtenlandsoppholdPanel.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdSenere/SenereUtenlandsoppholdPeriode.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdSenere/SenereUtenlandsoppholdPanel.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPeriode.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPanel.tsx"],"sourcesContent":["import { bemUtils } from '@navikt/fp-common';\n\nimport './contentWrapper.less';\n\ninterface Props {\n    children: React.ReactElement | React.ReactElement[];\n}\n\nconst ContentWrapper: React.FunctionComponent<Props> = ({ children }) => {\n    const bem = bemUtils('content');\n    return <div className={bem.block}>{children}</div>;\n};\n\nexport default ContentWrapper;\n","export const links = {\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    brukerstøtte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    kontaktOss: 'https://www.nav.no/person/kontakt-oss/nb/tilbakemeldinger/feil-og-mangler',\n    dittNav: 'https://tjenester.nav.no/dittnav/oversikt',\n    foreldrepenger: 'https://foreldrepenger.nav.no',\n    nav: 'https://www.nav.no',\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    personvernerklæring:\n        'https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten',\n    plikter: 'https://nav.no/rettOgPlikt',\n    søknadsveileder: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    veiviser: 'https://familie.nav.no/veiviser',\n    innsyn: 'https://foreldrepenger.nav.no',\n    engangsstonad: 'https://www.nav.no/engangsstonad',\n    farMedmor: 'https://www.nav.no/engangsstonad#far_medmor',\n    barn: 'https://www.nav.no/barn',\n    foreldrepengerUtland: 'https://www.nav.no/foreldrepenger#utland',\n    engangsstonadHvem: 'https://www.nav.no/engangsstonad#hvem',\n    scanneDokument: 'https://www.nav.no/brukerstotte#bilde-vedlegg',\n};\n","import dayjs from 'dayjs';\n\nexport const ISO_DATE_FORMAT = 'YYYY-MM-DD';\nexport const DDMMYYYY_DATE_FORMAT = 'DD.MM.YYYY';\nexport const TIME_FORMAT = 'HH:mm';\n\n// TODO Er dette greie datoar eller bør ein velga noko anna?\nexport const TIDENES_MORGEN = dayjs('1000-01-01').toDate();\nexport const TIDENES_ENDE = dayjs('9999-31-12').toDate();\n\nexport const DATE_TODAY = dayjs().toDate();\nexport const SIX_MONTHS_AGO = dayjs().subtract(6, 'month').startOf('day').toDate();\nexport const DATE_1_YEAR_FROM_NOW = dayjs().add(1, 'years').toDate();\nexport const DATE_1_YEAR_AGO = dayjs().subtract(1, 'years').toDate();\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UiIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UiIntlProvider;\n","import { FunctionComponent } from 'react';\nimport { links } from '@navikt/fp-constants';\nimport { Alert, BodyShort, Button, HStack, Heading, Label, Link, VStack } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appName: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    errorMessage: string;\n    retryCallback: () => void;\n}\n\nconst ErrorPage: FunctionComponent<Props> = ({ appName, errorMessage, retryCallback }) => {\n    //TODO Bytt ut div under med Box frå ds-react når oppdatert til siste versjon\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"20\">\n                    <Heading size=\"large\">\n                        {appName === 'Engangsstønad' && <FormattedMessage id=\"ErrorPage.Engangsstønad\" />}\n                        {appName === 'Foreldrepenger' && <FormattedMessage id=\"ErrorPage.Foreldrepenger\" />}\n                        {appName === 'Svangerskapspenger' && <FormattedMessage id=\"ErrorPage.Svangerskapspenger\" />}\n                    </Heading>\n                    <VStack gap=\"10\">\n                        <Alert variant=\"warning\">\n                            <VStack gap=\"4\">\n                                <Heading size=\"small\">\n                                    <FormattedMessage id=\"ErrorPage.Heading\" />\n                                </Heading>\n                                <BodyShort>\n                                    <FormattedMessage id=\"ErrorPage.Message\" />\n                                </BodyShort>\n                            </VStack>\n                        </Alert>\n                        <HStack gap=\"4\" justify=\"center\">\n                            <Link href={links.kontaktOss} target=\"_blank\">\n                                <Button type=\"button\" variant=\"secondary\">\n                                    <FormattedMessage id=\"ErrorPage.Contact\" />\n                                </Button>\n                            </Link>\n                            <Button type=\"button\" variant=\"primary\" onClick={retryCallback}>\n                                <FormattedMessage id=\"ErrorPage.TryAgain\" />\n                            </Button>\n                        </HStack>\n                        <div style={{ backgroundColor: 'var(--a-gray-200)', padding: '16px', borderRadius: '4px' }}>\n                            <VStack gap=\"2\">\n                                <Label>\n                                    <FormattedMessage id=\"ErrorPage.ErrorMessage\" />\n                                </Label>\n                                <BodyShort>Error: {errorMessage}</BodyShort>\n                            </VStack>\n                        </div>\n                    </VStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorPage;\n","import * as Sentry from '@sentry/browser';\nimport { Component } from 'react';\nimport ErrorPage from './ErrorPage';\n\ninterface Props {\n    appName: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    children: React.ReactNode;\n    retryCallback: () => void;\n}\n\ninterface State {\n    eventId: string | null;\n    hasError: boolean;\n    errorInfo: any;\n    errorMessage: string | undefined;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = { eventId: null, hasError: false, errorInfo: null, errorMessage: undefined };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any) {\n        Sentry.withScope((scope: any) => {\n            scope.setExtras(errorInfo);\n            const eventId = Sentry.captureException(error);\n            this.setState({ eventId, errorInfo });\n        });\n        this.setState({ hasError: true, errorMessage: error?.message });\n    }\n\n    render() {\n        const { appName, retryCallback } = this.props;\n        const { errorMessage, errorInfo } = this.state;\n\n        if (this.state.hasError) {\n            return errorMessage ? (\n                <ErrorPage appName={appName} errorMessage={errorMessage} retryCallback={retryCallback} />\n            ) : (\n                <div>{errorMessage || errorInfo}</div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { FunctionComponent } from 'react';\nimport { ErrorSummary } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nexport type ErrorSummaryError = {\n    message?: string;\n    focus?: () => void;\n};\n\ninterface Props {\n    errorRef: React.RefObject<HTMLDivElement>;\n    errors: ErrorSummaryError[];\n}\n\n//TODO Fjern FP postfix. Er litt misvisande da det kan sjå ut som denne er spesifikk for FP-appen\n\nconst ErrorSummaryFp: FunctionComponent<Props> = ({ errorRef, errors }) => {\n    return (\n        <UiIntlProvider>\n            <ErrorSummary size=\"small\" ref={errorRef} heading={<FormattedMessage id={'ErrorSummaryFp.Tittel'} />}>\n                {Object.values(errors).map((error) => (\n                    <ErrorSummary.Item\n                        key={error.message}\n                        onClick={() => {\n                            if (error.focus) {\n                                error.focus();\n                            }\n                        }}\n                    >\n                        {error.message}\n                    </ErrorSummary.Item>\n                ))}\n            </ErrorSummary>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorSummaryFp;\n","import React, { useCallback, useRef } from 'react';\nimport { Button } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport { UploadIcon } from '@navikt/aksel-icons';\n\nimport './fileInput.less';\nimport { bemUtils } from '@navikt/fp-common';\n\ninterface Props {\n    onFilesSelect: (files: File[]) => void;\n    multiple: boolean;\n    accept: string;\n    hasUplodedAttachements: boolean;\n}\n\nconst FileInput: React.FunctionComponent<Props> = ({ multiple, accept, onFilesSelect, hasUplodedAttachements }) => {\n    const bem = bemUtils('fileInput');\n    const onFileSelect = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.files) {\n                const files = Array.from(e.target.files) as File[];\n                onFilesSelect(files);\n                e.target.value = '';\n            }\n        },\n        [onFilesSelect],\n    );\n\n    const inputElement = useRef<HTMLInputElement>(null);\n\n    const openFileDialog = useCallback(() => {\n        if (inputElement.current) {\n            inputElement.current.click();\n        }\n    }, []);\n\n    return (\n        <>\n            <input\n                ref={inputElement}\n                className={bem.element('input')}\n                type=\"file\"\n                accept={accept}\n                onChange={(e) => onFileSelect(e)}\n                multiple={multiple === true}\n                data-testid=\"file-upload\"\n            />\n            <Button\n                className={bem.element('upload_button')}\n                variant={hasUplodedAttachements ? 'secondary' : 'primary'}\n                type=\"button\"\n                onClick={openFileDialog}\n                icon={<UploadIcon />}\n                iconPosition=\"right\"\n            >\n                {hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp.Flere\" />}\n                {!hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp\" />}\n            </Button>\n        </>\n    );\n};\n\nexport default FileInput;\n","import { PrimitiveType, useIntl } from 'react-intl';\nimport { FormatXMLElementFn } from 'intl-messageformat';\n\nexport type I18nFn = (\n    i18nId: string,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>,\n) => string;\n\nexport type CustomIntlShape = {\n    i18n: I18nFn;\n};\n\nexport const useCustomIntl = (): CustomIntlShape => {\n    const intl = useIntl();\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n","import Bytes from 'bytes';\nimport { Attachment } from '@navikt/fp-types';\nimport { Skjemanummer, AttachmentType } from '@navikt/fp-constants';\n\nconst s4 = (): string =>\n    Math.floor((1 + Math.random()) * 0x10000)\n        .toString()\n        .substring(1);\n\n//TODO Denne ligg sikkert ein annan stad (evt flytt ut)\nconst guid = (): string => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const getTotalFileSize = (files: File[]): number => {\n    return files.reduce(\n        (a, b) =>\n            ({\n                size: a.size + b.size,\n            }) as any,\n        { size: 0 },\n    ).size;\n};\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\n    return {\n        id: generateAttachmentId(),\n        file,\n        filename: file.name,\n        filesize: file.size,\n        uploaded: false,\n        pending: false,\n        type,\n        skjemanummer,\n    };\n};\n","import { VStack, Link, Loader, HStack, Spacer } from '@navikt/ds-react';\nimport { XMarkIcon, FileCheckmarkIcon } from '@navikt/aksel-icons';\n\nimport { useCustomIntl } from '../../i18n/useCustomI18n';\nimport { Attachment } from '@navikt/fp-types';\nimport { bytesString } from '../fileUtils';\n\nimport './attachmentInfo.less';\n\ninterface OwnProps {\n    attachment: Attachment;\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\ntype Props = OwnProps;\n\nconst AttachmentInfo: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const { i18n } = useCustomIntl();\n\n    return (\n        <div className=\"attachmentPanel\">\n            <HStack gap=\"4\">\n                {attachment.pending && <Loader type=\"S\" />}\n                {!attachment.pending && <FileCheckmarkIcon width={24} height={24} />}\n                <VStack gap=\"1\">\n                    {attachment.url ? (\n                        <Link href={attachment.url} target=\"_blank\">\n                            {attachment.filename}\n                        </Link>\n                    ) : (\n                        <span>{attachment.filename}</span>\n                    )}\n                    {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n                </VStack>\n                {onDelete && (\n                    <>\n                        <Spacer />\n                        <XMarkIcon\n                            onClick={() => onDelete(attachment)}\n                            height={24}\n                            width={24}\n                            cursor=\"pointer\"\n                            aria-label={i18n('Attachment.Vedlegg.Slett', { navn: attachment.filename })}\n                        />\n                    </>\n                )}\n            </HStack>\n        </div>\n    );\n};\n\nexport default AttachmentInfo;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport AttachmentInfo from './AttachmentInfo';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    attachments: Attachment[];\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { attachments, showFileSize, onDelete } = props;\n\n    return (\n        <>\n            {attachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {attachments.map((attachment) => (\n                        <Fragment key={guid()}>\n                            <AttachmentInfo attachment={attachment} onDelete={onDelete} showFileSize={showFileSize} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default AttachmentList;\n","export enum FileUploadError {\n    GENERAL = 'GENERAL',\n    TIMEOUT = 'TIMEOUT',\n    VALID_EXTENSION = 'VALID_EXTENSION',\n    MAX_SIZE = 'MAX_SIZE',\n}\n","import { Alert } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Attachment } from '@navikt/fp-types';\nimport { FileUploadError } from '../typer/FileUploadError';\n\nconst MAX_FIL_STØRRELSE_KB = 16777;\n\ninterface OwnProps {\n    failedAttachment: Attachment;\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachment: React.FunctionComponent<OwnProps> = ({ failedAttachment, onDelete }) => {\n    return (\n        <Alert variant=\"warning\" closeButton onClose={() => onDelete(failedAttachment)}>\n            {failedAttachment.error === FileUploadError.GENERAL && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Opplasting.Feilet\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.TIMEOUT && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Timeout\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.MAX_SIZE && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Størrelse\"\n                    values={{ filename: failedAttachment.filename, maxStørrelse: MAX_FIL_STØRRELSE_KB }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.VALID_EXTENSION && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Type\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n        </Alert>\n    );\n};\n\nexport default FailedAttachment;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport FailedAttachment from './FailedAttachment';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    failedAttachments: Attachment[];\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { failedAttachments, onDelete } = props;\n    return (\n        <>\n            {failedAttachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {failedAttachments.map((failedAttachment) => (\n                        <Fragment key={guid()}>\n                            <FailedAttachment failedAttachment={failedAttachment} onDelete={onDelete} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default FailedAttachmentList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { AttachmentType, Skjemanummer } from '@navikt/fp-constants';\n\nimport FileInput from './input/FileInput';\nimport AttachmentList from './liste/AttachmentList';\nimport { Attachment } from '@navikt/fp-types';\nimport { mapFileToAttachment } from './fileUtils';\nimport FailedAttachmentList from './liste/FailedAttachmentList';\nimport { FileUploadError } from './typer/FileUploadError';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_STØRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\n// TODO Fjern any her utan å måtte dra inn axios i denne pakka\ntype SaveAttachment = (attachment: Attachment) => Promise<any>;\n\nconst getPendingAttachmentFromFile = (\n    file: File,\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer,\n): Attachment => {\n    const newAttachment = mapFileToAttachment(file, attachmentType, skjemanummer);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return ext ? VALID_EXTENSIONS.includes(`.${ext.toLowerCase()}`) : false;\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_STØRRELSE_KB;\n};\n\nconst uploadAttachment = async (attachment: Attachment, saveAttachment: SaveAttachment): Promise<void> => {\n    if (!fileExtensionIsValid(attachment.file.name)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.VALID_EXTENSION;\n        return;\n    }\n    if (!fileSizeIsValid(attachment.filesize)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.MAX_SIZE;\n        return;\n    }\n\n    try {\n        const response = await saveAttachment(attachment);\n        attachment.pending = false;\n        attachment.url = response.headers.location;\n        attachment.uploaded = true;\n        attachment.uuid = response.data;\n    } catch (error) {\n        // TODO Burde få ut feilmelding frå backend og vise denne\n        attachment.pending = false;\n\n        // @ts-ignore TODO Fix typing her (Mogleg  mykje av logikken her bør ligga inne i saveAttachment, så slepp ein da inn Axios her)\n        if (error?.response?.status === 408) {\n            attachment.error = FileUploadError.TIMEOUT;\n        } else {\n            attachment.error = FileUploadError.GENERAL;\n        }\n    }\n};\n\nconst EMPTY_ATTACHMENT_LIST = [] as Attachment[];\n\nexport interface Props {\n    updateAttachments: (attachments: Attachment[]) => void;\n    attachmentType: AttachmentType;\n    skjemanummer: Skjemanummer;\n    existingAttachments?: Attachment[];\n    saveAttachment: SaveAttachment;\n    multiple?: boolean;\n}\n\nconst FileUploader: React.FunctionComponent<Props> = ({\n    existingAttachments = EMPTY_ATTACHMENT_LIST,\n    updateAttachments,\n    attachmentType,\n    skjemanummer,\n    saveAttachment,\n    multiple = true,\n}) => {\n    const [attachments, setAttachments] = useState(existingAttachments);\n\n    useEffect(() => {\n        updateAttachments(attachments.filter((a) => !a.error && a.pending === false));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [attachments]);\n\n    const saveFiles = useCallback(\n        (files: File[]) => {\n            const uploadAttachments = async (allPendingAttachments: Attachment[]) => {\n                for (const pendingAttachment of allPendingAttachments) {\n                    await uploadAttachment(pendingAttachment, saveAttachment);\n                    setAttachments((currentAttachments) =>\n                        currentAttachments.map((a) =>\n                            a.filename === pendingAttachment.filename ? pendingAttachment : a,\n                        ),\n                    );\n                }\n            };\n\n            const allPendingAttachments = files.map((file) =>\n                getPendingAttachmentFromFile(file, attachmentType, skjemanummer),\n            );\n            setAttachments((currentAttachments) => {\n                const otherAttachments = currentAttachments.filter(\n                    (ca) => !allPendingAttachments.some((pa) => pa.filename === ca.filename),\n                );\n                return otherAttachments.concat(allPendingAttachments);\n            });\n            uploadAttachments(allPendingAttachments);\n        },\n        [attachmentType, skjemanummer, saveAttachment],\n    );\n\n    const deleteAttachment = useCallback((file: Attachment) => {\n        setAttachments((currentAttachments) => currentAttachments.filter((a) => a.filename !== file.filename));\n    }, []);\n\n    const uploadedAttachments = useMemo(() => attachments.filter((a) => !a.error), [attachments]);\n    const failedAttachments = useMemo(() => attachments.filter((a) => !!a.error), [attachments]);\n\n    return (\n        <UiIntlProvider>\n            <VStack gap=\"6\">\n                <AttachmentList attachments={uploadedAttachments} showFileSize={true} onDelete={deleteAttachment} />\n                <FileInput\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={saveFiles}\n                    hasUplodedAttachements={uploadedAttachments.length > 0}\n                    multiple={multiple}\n                />\n                <FailedAttachmentList failedAttachments={failedAttachments} onDelete={deleteAttachment} />\n            </VStack>\n        </UiIntlProvider>\n    );\n};\n\nexport default FileUploader;\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\ninterface Props {\n    goToPreviousStep: () => void;\n    nextButtonText?: string;\n    nextButtonOnClick?: (setButtonsDisabled: (isDisabled: boolean) => void) => void;\n    isSubmitting: boolean;\n}\n\nconst StepButtons: FunctionComponent<Props> = ({\n    goToPreviousStep,\n    nextButtonText,\n    nextButtonOnClick,\n    isSubmitting,\n}) => {\n    const [disabled, setDisabled] = useState(false);\n\n    const onClickNextButton = useCallback(() => {\n        if (nextButtonOnClick) {\n            nextButtonOnClick((d: boolean) => setDisabled(d));\n        }\n    }, [nextButtonOnClick]);\n\n    return (\n        <UiIntlProvider>\n            <StepButtonWrapper>\n                <Button type=\"button\" variant=\"secondary\" onClick={goToPreviousStep}>\n                    <FormattedMessage id=\"StepButtons.Forrige\" />\n                </Button>\n                <Button\n                    type={nextButtonOnClick ? 'button' : 'submit'}\n                    onClick={onClickNextButton}\n                    disabled={disabled}\n                    loading={isSubmitting}\n                >\n                    {nextButtonText !== undefined && nextButtonText}\n                    {!nextButtonText && <FormattedMessage id={'StepButtons.Neste'} />}\n                </Button>\n            </StepButtonWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default StepButtons;\n","import { useMemo } from 'react';\nimport { useIntl, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUiIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return intl;\n};\n\nexport default useUiIntl;\n","import amplitude from 'amplitude-js';\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = false) => {\n    if (logToConsoleOnly) {\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            // tslint:disable-next-line\n            console.error(error);\n        }\n    });\n};\n","import { FormattedMessage, IntlShape } from 'react-intl';\nimport { useDocumentTitle } from '@navikt/fp-common';\nimport { logAmplitudeEvent } from '@navikt/fp-metrics';\nimport { Button, GuidePanel, Heading, VStack, HStack } from '@navikt/ds-react';\nimport { ArrowRightIcon } from '@navikt/aksel-icons';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n}\n\nconst getTitleText = (appnavn: Props['appnavn'], intl: IntlShape): string => {\n    switch (appnavn) {\n        case 'Engangsstønad':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Engangsstonad' });\n        case 'Foreldrepenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Foreldrepenger' });\n        case 'Svangerskapspenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Svangerskapspenger' });\n    }\n};\n\nconst Umyndig: React.FunctionComponent<Props> = ({ appnavn }) => {\n    const intl = useUiIntl();\n\n    const titleText = getTitleText(appnavn, intl);\n    useDocumentTitle(titleText);\n\n    logAmplitudeEvent('sidevisning', {\n        app: appnavn,\n        team: 'foreldrepenger',\n        pageKey: 'umyndig',\n    });\n\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"10\">\n                    <Heading level=\"1\" size=\"xlarge\">\n                        {titleText}\n                    </Heading>\n                    <GuidePanel poster>\n                        <VStack gap=\"8\">\n                            <Heading level=\"2\" size=\"small\">\n                                <FormattedMessage id=\"Umyndig.Tittel\" />\n                            </Heading>\n                            <FormattedMessage id=\"Umyndig.Tekst\" />\n                        </VStack>\n                    </GuidePanel>\n                    <HStack justify=\"center\">\n                        <Button as=\"a\" icon={<ArrowRightIcon />} iconPosition=\"right\" href={links.papirsøknad}>\n                            <FormattedMessage id=\"Umyndig.Knapp.Papirsøknad\" />\n                        </Button>\n                    </HStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default Umyndig;\n","import { IntlProvider as Provider } from 'react-intl';\nimport { LocaleAll } from '@navikt/fp-types';\n\ninterface Props<T extends LocaleAll> {\n    locale: T;\n    messagesGroupedByLocale: Record<T, Record<string, string>>;\n    children: React.ReactNode;\n}\n\nconst IntlProvider = <T extends LocaleAll>({ locale, messagesGroupedByLocale, children }: Props<T>) => {\n    const messages = messagesGroupedByLocale[locale];\n    return (\n        <Provider locale={locale} messages={messages || {}}>\n            {children}\n        </Provider>\n    );\n};\n\nexport default IntlProvider;\n","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n    if (!path || !isObject(obj)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n    return isUndefined(result) || result === obj\n        ? isUndefined(obj[path])\n            ? defaultValue\n            : obj[path]\n        : result;\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\n    ? name === signalName\n    : !name ||\n        !signalName ||\n        name === signalName ||\n        convertToArrayPayload(name).some((currentName) => currentName &&\n            (currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n    }));\n    _registerProps.current = control.register(name, props.rules);\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    return {\n        field: {\n            name,\n            value,\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: (elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            },\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            for (const name of control._names.mount) {\n                formData.append(name, get(data, name));\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(action, {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus) {\n                    _f.ref.focus();\n                    break;\n                }\n                else if (_f.refs && _f.refs[0].focus) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(currentField)) {\n                focusFieldBy(currentField, callback);\n            }\n        }\n    }\n};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = compact(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nfunction append(data, value) {\n    return [...data, ...convertToArrayPayload(value)];\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nfunction prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append$1 = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = append(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend$1 = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prepend(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend$1, [updateValues, name, control]),\n        append: React.useCallback(append$1, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nfunction createSubject() {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}, flushRootRender) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        errors: {},\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (_proxyFormState.isValid || shouldUpdateValid) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\n        _subjects.state.next({\n            isValidating: value,\n        });\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!isBlurEvent || shouldDirty) {\n            if (_proxyFormState.isDirty) {\n                isPreviousDirty = _formState.isDirty;\n                _formState.isDirty = output.isDirty = _getDirty();\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\n            }\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n            isPreviousDirty = get(_formState.dirtyFields, name);\n            isCurrentFieldPristine\n                ? unset(_formState.dirtyFields, name)\n                : set(_formState.dirtyFields, name, true);\n            output.dirtyFields = _formState.dirtyFields;\n            shouldUpdateField =\n                shouldUpdateField ||\n                    (_proxyFormState.dirtyFields &&\n                        isPreviousDirty !== !isCurrentFieldPristine);\n        }\n        if (isBlurEvent) {\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\n            if (!isPreviousFieldTouched) {\n                set(_formState.touchedFields, name, isBlurEvent);\n                output.touchedFields = _formState.touchedFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.touchedFields &&\n                            isPreviousFieldTouched !== isBlurEvent);\n            }\n        }\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n        _updateIsValidating(false);\n    };\n    const _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                fieldValue &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\n        !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                !isPrimitive(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name,\n            values: { ..._formValues },\n        });\n        !_state.mount && flushRootRender();\n    };\n    const onChange = async (event) => {\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                _proxyFormState.isValid && _updateValid();\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            _updateIsValidating(true);\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                error = errorLookupResult.error;\n                name = errorLookupResult.name;\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                isFieldValueUpdated =\n                    isNaN(fieldValue) ||\n                        fieldValue === get(_formValues, name, fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        _updateIsValidating(true);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n            isValidating: false,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ..._defaultValues,\n            ...(_state.mount ? _formValues : {}),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n        error: get((formState || _formState).errors, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, {\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        field\n            ? disabledIsDefined &&\n                set(_formValues, name, options.disabled\n                    ? undefined\n                    : get(_formValues, name, getFieldValue(field._f)))\n            : updateValidAndValue(name, true, options.value);\n        return {\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            await onValid(fieldValues, e);\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors),\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, get(_defaultValues, name));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, options.defaultValue);\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, get(_defaultValues, name))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues || _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const values = formValues && !isEmptyObject(formValues)\n            ? cloneUpdatedValues\n            : _defaultValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n                for (const fieldName of _names.mount) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        !_state.mount && flushRootRender();\n        _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : !!(keepStateOptions.keepDefaultValues &&\n                    !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirtyValues\n                ? _formState.dirtyFields\n                : keepStateOptions.keepDefaultValues && formValues\n                    ? getDirtyFields(_defaultValues, formValues)\n                    : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef();\n    const _values = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        errors: {},\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import { ReactNode } from 'react';\nimport { FieldValues, FormProvider, SubmitHandler, UseFormReturn } from 'react-hook-form';\n\nexport interface OwnProps<FormValues extends FieldValues> {\n    formMethods: UseFormReturn<FormValues>;\n    children: ReactNode;\n    onSubmit?: SubmitHandler<FormValues>;\n    className?: string;\n}\n\nconst Form = <FormValues extends FieldValues>({ formMethods, children, onSubmit, className }: OwnProps<FormValues>) => {\n    const { handleSubmit } = formMethods;\n\n    return (\n        <FormProvider {...formMethods}>\n            <form className={className} onSubmit={onSubmit ? handleSubmit((values) => onSubmit(values)) : undefined}>\n                {children}\n            </form>\n        </FormProvider>\n    );\n};\n\nexport default Form;\n","export const getValidationRules = (validate: Array<(value: any) => any>) =>\n    validate.reduce(\n        (acc, fn, index) => ({\n            ...acc,\n            [index]: (value: any) => fn(value) || true,\n        }),\n        {},\n    );\n\nexport const getError = (errors: { [x: string]: any }, name: string): string | undefined => {\n    const error = name.split('.').reduce((o, i) => (o !== undefined ? o[i] : o), errors);\n    return error?.message;\n};\n","import { FunctionComponent, ReactNode, useCallback, useMemo } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\nimport { Checkbox as DsCheckbox, ErrorMessage } from '@navikt/ds-react';\n\nimport { getError, getValidationRules } from './formUtils';\n\nexport interface Props {\n    name: string;\n    label: string | ReactNode;\n    validate?: Array<(value: string) => any>;\n    onChange?: (isChecked: boolean) => void;\n    onClick?: () => void;\n    className?: string;\n    disabled?: boolean;\n}\n\nconst Checkbox: FunctionComponent<Props> = ({ name, label, validate = [], onChange, className, disabled }) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    const error = getError(errors, name);\n\n    const onChangeFn = useCallback(\n        (evt: React.ChangeEvent<HTMLInputElement>) => {\n            field.onChange(evt);\n            if (onChange) {\n                onChange(evt.currentTarget.checked);\n            }\n        },\n        [field, onChange],\n    );\n\n    return (\n        <>\n            <DsCheckbox\n                ref={field.ref}\n                value={field.value}\n                disabled={disabled}\n                checked={field.value === true}\n                className={className}\n                error={!!error}\n                onChange={onChangeFn}\n            >\n                {label}\n            </DsCheckbox>\n            {error && <ErrorMessage>{error}</ErrorMessage>}\n        </>\n    );\n};\n\nexport default Checkbox;\n","import { FunctionComponent, ReactElement, ReactNode, useCallback, useMemo } from 'react';\nimport { CheckboxGroup as DsCheckboxGroup } from '@navikt/ds-react';\nimport { useFormContext, useController } from 'react-hook-form';\n\nimport { getError, getValidationRules } from './formUtils';\n\ninterface CheckboxPanelProps {\n    name: string;\n    label: string | ReactNode;\n    description?: string;\n    validate?: Array<(value: string | number) => any>;\n    onChange?: (value: any) => void;\n    disabled?: boolean;\n    children: ReactElement[];\n}\n\nconst CheckboxGroup: FunctionComponent<CheckboxPanelProps> = ({\n    label,\n    name,\n    description,\n    validate = [],\n    onChange,\n    disabled = false,\n    children,\n}) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    const onChangeFn = useCallback(\n        (value: any[]) => {\n            if (onChange) {\n                onChange(value);\n            }\n            field.onChange(value);\n        },\n        [field, onChange],\n    );\n\n    return (\n        <>\n            <DsCheckboxGroup\n                name={name}\n                description={description}\n                value={field.value !== undefined ? field.value : []}\n                onChange={onChangeFn}\n                legend={label}\n                disabled={disabled}\n                error={getError(errors, name)}\n            >\n                {children}\n            </DsCheckboxGroup>\n        </>\n    );\n};\n\nexport default CheckboxGroup;\n","import React, { useState, FunctionComponent, ReactNode, useMemo, useCallback } from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport dayjs from 'dayjs';\nimport { DatePicker, useDatepicker } from '@navikt/ds-react';\nimport { TIDENES_MORGEN, TIDENES_ENDE, ISO_DATE_FORMAT, DDMMYYYY_DATE_FORMAT } from '@navikt/fp-constants';\n\nimport { getError, getValidationRules } from './formUtils';\n\ndayjs.extend(customParseFormat);\n\nconst findDisabledDays = (minDate?: Date, maxDate?: Date): Array<{ from: Date; to?: Date }> => {\n    const disabledDays = [];\n    if (minDate) {\n        disabledDays.push({\n            from: dayjs(TIDENES_MORGEN).toDate(),\n            to: dayjs(minDate).subtract(1, 'day').toDate(),\n        });\n    }\n    if (maxDate) {\n        disabledDays.push({\n            from: dayjs(maxDate).add(1, 'day').toDate(),\n            to: dayjs(TIDENES_ENDE).toDate(),\n        });\n    }\n    return disabledDays;\n};\n\nexport interface Props {\n    name: string;\n    label?: string | ReactNode;\n    description?: string;\n    validate?: Array<(value: string) => any>;\n    onChange?: (value: any) => void;\n    minDate?: Date;\n    maxDate?: Date;\n    defaultMonth?: Date;\n    showMonthAndYearDropdowns?: boolean;\n}\n\nconst Datepicker: FunctionComponent<Props> = ({\n    name,\n    label,\n    description,\n    validate = [],\n    onChange,\n    minDate,\n    maxDate,\n    defaultMonth,\n    showMonthAndYearDropdowns,\n}): JSX.Element => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    const defaultDate = field.value ? dayjs(field.value, ISO_DATE_FORMAT, true).format(DDMMYYYY_DATE_FORMAT) : '';\n    const [fieldValue, setFieldValue] = useState<string>(defaultDate);\n\n    const { datepickerProps, inputProps } = useDatepicker({\n        onDateChange: (date) => {\n            if (date !== undefined) {\n                const verdi = dayjs(date).format(ISO_DATE_FORMAT);\n                if (onChange) {\n                    onChange(verdi);\n                }\n                field.onChange(verdi);\n                setFieldValue(dayjs(verdi, ISO_DATE_FORMAT, true).format(DDMMYYYY_DATE_FORMAT));\n            }\n        },\n        defaultSelected: field.value ? dayjs(field.value, ISO_DATE_FORMAT, true).toDate() : undefined,\n        defaultMonth: defaultMonth,\n        openOnFocus: false,\n    });\n\n    const onChangeInput = useCallback(\n        (event: React.ChangeEvent<HTMLInputElement>) => {\n            const verdi = dayjs(event.target.value, DDMMYYYY_DATE_FORMAT, true).format(ISO_DATE_FORMAT);\n            const validDate = verdi !== 'Invalid Date';\n\n            setFieldValue(event.target.value);\n            if (onChange) {\n                onChange(validDate ? verdi : event.target.value);\n            }\n            field.onChange(validDate ? verdi : event.target.value);\n        },\n        [setFieldValue, onChange, field],\n    );\n\n    const disabledDays = useMemo(\n        () => (minDate || maxDate ? findDisabledDays(minDate, maxDate) : undefined),\n        [minDate, maxDate],\n    );\n\n    return (\n        <DatePicker\n            {...datepickerProps}\n            disabled={disabledDays}\n            strategy=\"fixed\"\n            dropdownCaption={showMonthAndYearDropdowns}\n            fromDate={minDate}\n            toDate={maxDate}\n        >\n            <DatePicker.Input\n                {...inputProps}\n                ref={field.ref}\n                onChange={onChangeInput}\n                value={fieldValue}\n                label={label}\n                description={description}\n                error={getError(errors, name)}\n                placeholder=\"dd.mm.åååå\"\n            />\n        </DatePicker>\n    );\n};\n\nexport default Datepicker;\n","import React, { FunctionComponent, ReactElement, ReactNode, useMemo } from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport { RadioGroup as DsRadioGroup } from '@navikt/ds-react';\nimport { getError, getValidationRules } from './formUtils';\n\ninterface Props {\n    name: string;\n    description?: string | ReactNode;\n    label?: string | ReactNode;\n    validate?: Array<(value: string | number) => any>;\n    onChange?: (value: string | boolean | number) => void;\n    children: ReactElement[];\n}\n\nconst RadioGroup: FunctionComponent<Props> = ({ label, description, name, validate = [], onChange, children }) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    return (\n        <DsRadioGroup\n            name={name}\n            value={field.value !== undefined ? field.value : null}\n            legend={label}\n            description={description}\n            error={getError(errors, name)}\n            onChange={(value) => {\n                if (onChange) {\n                    onChange(value);\n                }\n                field.onChange(value);\n            }}\n        >\n            {children.map((child, index) => {\n                //TODO Vurder å heller lage ein wrapper til children\n                //Denne map'en legg til ref for å kunna setta fokus ved feil\n                if (index === 0) {\n                    return React.cloneElement(child, { key: child.key, ref: field.ref });\n                }\n                return child;\n            })}\n        </DsRadioGroup>\n    );\n};\n\nexport default RadioGroup;\n","import { FunctionComponent, ReactNode, useCallback, useMemo } from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport { Select as DsSelect } from '@navikt/ds-react';\nimport { getError, getValidationRules } from './formUtils';\n\nexport interface Props {\n    name: string;\n    label: string | ReactNode;\n    onChange?: (event: any) => void;\n    validate?: Array<(value: string) => any>;\n    children: React.ReactElement[];\n    description?: ReactNode;\n    disabled?: boolean;\n    className?: string;\n}\n\nconst Select: FunctionComponent<Props> = ({\n    name,\n    label,\n    validate = [],\n    description,\n    onChange,\n    disabled,\n    className,\n    children,\n}) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    const onChangeFn = useCallback(\n        (evt: React.ChangeEvent) => {\n            if (onChange) {\n                onChange(evt);\n            }\n            field.onChange(evt);\n        },\n        [field, onChange],\n    );\n\n    return (\n        <DsSelect\n            ref={field.ref}\n            value={field.value}\n            className={className}\n            error={getError(errors, name)}\n            label={label}\n            description={description}\n            disabled={disabled}\n            onChange={onChangeFn}\n        >\n            <option style={{ display: 'none' }} />,{children}\n        </DsSelect>\n    );\n};\n\nexport default Select;\n","import { FunctionComponent, ReactNode, useCallback, useMemo } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\nimport { TextField as DsTextField } from '@navikt/ds-react';\n\nimport { getError, getValidationRules } from './formUtils';\n\nexport interface Props {\n    name: string;\n    label: string | ReactNode;\n    validate?: Array<(value: string) => any> | Array<(value: number) => any>;\n    description?: string;\n    onChange?: (value: any) => void;\n    autoFocus?: boolean;\n    maxLength?: number;\n    disabled?: boolean;\n    type?: 'email' | 'password' | 'tel' | 'text' | 'url';\n    className?: string;\n}\n\nconst TextField: FunctionComponent<Props> = ({\n    name,\n    label,\n    validate = [],\n    type,\n    onChange,\n    description,\n    autoFocus,\n    maxLength,\n    disabled,\n    className,\n}) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    const onChangeFn = useCallback(\n        (evt: React.ChangeEvent<HTMLInputElement>) => {\n            field.onChange(evt);\n            if (onChange) {\n                onChange(evt.currentTarget.value);\n            }\n        },\n        [field, onChange],\n    );\n\n    return (\n        <DsTextField\n            ref={field.ref}\n            value={field.value}\n            label={label}\n            description={description}\n            type={type}\n            error={getError(errors, name)}\n            autoFocus={autoFocus}\n            autoComplete=\"off\"\n            maxLength={maxLength}\n            disabled={disabled}\n            className={className}\n            onChange={onChangeFn}\n        />\n    );\n};\n\nexport default TextField;\n","import { FunctionComponent, ReactNode, useMemo } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\nimport { Textarea } from '@navikt/ds-react';\n\nimport { getError, getValidationRules } from './formUtils';\n\nexport interface Props {\n    name: string;\n    label: string | ReactNode;\n    maxLength?: number;\n    validate?: Array<(value: string) => any>;\n    className?: string;\n    description?: string;\n}\n\nconst TextArea: FunctionComponent<Props> = ({ name, label, maxLength, validate = [], className, description }) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    const { field } = useController({\n        name,\n        rules: {\n            validate: useMemo(() => getValidationRules(validate), [validate]),\n        },\n    });\n\n    return (\n        <Textarea\n            label={label}\n            description={description}\n            className={className}\n            autoComplete=\"off\"\n            {...field}\n            value={field.value ? field.value : ''}\n            error={getError(errors, name)}\n            maxLength={maxLength}\n        />\n    );\n};\n\nexport default TextArea;\n","import { FieldValues, useFormContext } from 'react-hook-form';\nimport { useCallback } from 'react';\nimport { StepButtons } from '@navikt/fp-ui';\n\ninterface Props<DATA_TYPE extends FieldValues> {\n    goToPreviousStep: () => void;\n    saveDataOnPreviousClick?: (data: DATA_TYPE) => void;\n    nextButtonText?: string;\n    nextButtonOnClick?: (setButtonsDisabled: (isDisabled: boolean) => void) => void;\n}\n\nconst StepButtonsHookForm = <DATA_TYPE extends FieldValues>({\n    goToPreviousStep,\n    saveDataOnPreviousClick,\n    nextButtonText,\n    nextButtonOnClick,\n}: Props<DATA_TYPE>) => {\n    const {\n        getValues,\n        formState: { dirtyFields, isSubmitting },\n    } = useFormContext<DATA_TYPE>();\n\n    const onBackButtonClick = useCallback(() => {\n        if (saveDataOnPreviousClick && Object.keys(dirtyFields).length > 0) {\n            saveDataOnPreviousClick(getValues());\n        }\n        goToPreviousStep();\n    }, [dirtyFields, getValues, goToPreviousStep, saveDataOnPreviousClick]);\n\n    return (\n        <StepButtons\n            goToPreviousStep={onBackButtonClick}\n            nextButtonText={nextButtonText}\n            nextButtonOnClick={nextButtonOnClick}\n            isSubmitting={isSubmitting}\n        />\n    );\n};\n\nexport default StepButtonsHookForm;\n","import*as e from\"react\";import{useFormContext as r,get as n}from\"react-hook-form\";var s=function(s){var t=s.as,a=s.errors,m=s.name,o=s.message,i=s.render,l=function(e,r){if(null==e)return{};var n,s,t={},a=Object.keys(e);for(s=0;s<a.length;s++)r.indexOf(n=a[s])>=0||(t[n]=e[n]);return t}(s,[\"as\",\"errors\",\"name\",\"message\",\"render\"]),f=r(),c=n(a||f.formState.errors,m);if(!c)return null;var g=c.message,u=c.types,d=Object.assign({},l,{children:g||o});return e.isValidElement(t)?e.cloneElement(t,d):i?i({message:g||o,messages:u}):e.createElement(t||e.Fragment,d)};export{s as ErrorMessage};\n//# sourceMappingURL=index.esm.js.map\n","import { FunctionComponent } from 'react';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useFormContext } from 'react-hook-form';\nimport { ErrorMessage as AkselErrorMessage } from '@navikt/ds-react';\n\ninterface Props {\n    name: string;\n}\n\nconst ErrorMessageHookForm: FunctionComponent<Props> = ({ name }) => {\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    return (\n        <ErrorMessage\n            errors={errors}\n            name={name}\n            render={({ message }) => <AkselErrorMessage>{message}</AkselErrorMessage>}\n        />\n    );\n};\n\nexport default ErrorMessageHookForm;\n","import { useEffect, useRef } from 'react';\nimport { FieldErrors, FieldValues, useFormContext } from 'react-hook-form';\nimport { ErrorSummaryFp } from '@navikt/fp-ui';\n\nconst findAllErrors = (errors: FieldErrors<FieldValues>): FieldErrors<FieldValues> => {\n    return Object.keys(errors).reduce<FieldErrors<FieldValues>>((acc, fieldKey) => {\n        const fieldValue = errors[fieldKey];\n\n        if (fieldValue?.message && !acc[fieldKey]) {\n            const shouldNotAdd = Object.keys(acc).some((key) => acc[key]?.message === fieldValue?.message);\n            if (shouldNotAdd) {\n                return acc;\n            }\n            return {\n                ...acc,\n                [fieldKey]: errors[fieldKey],\n            };\n        }\n\n        if (Array.isArray(fieldValue)) {\n            const alle = fieldValue.reduce((a, f) => {\n                return {\n                    ...(f ? findAllErrors(f) : {}),\n                    ...a,\n                };\n            }, {});\n            return {\n                ...acc,\n                ...alle,\n            };\n        }\n        return acc;\n    }, {});\n};\n\nconst ErrorSummaryHookForm: React.FunctionComponent = () => {\n    const errorRef = useRef<HTMLDivElement>(null);\n\n    const {\n        formState: { errors },\n    } = useFormContext();\n\n    useEffect(() => {\n        if (errorRef?.current) {\n            errorRef.current.focus();\n        }\n    }, [errors]);\n\n    const flattenAndUniqueErrors = findAllErrors(errors);\n\n    // TODO Denne er ikkje optimal\n    const mappedErrors = Object.values(flattenAndUniqueErrors).map((error) => ({\n        message: error?.message?.toString(),\n        //@ts-ignore TODO Burde nok heller bruka setFocus her\n        focus: error?.ref?.focus,\n    }));\n\n    return (\n        Object.keys(flattenAndUniqueErrors).length > 0 && <ErrorSummaryFp errorRef={errorRef} errors={mappedErrors} />\n    );\n};\n\nexport default ErrorSummaryHookForm;\n","import dayjs from 'dayjs';\n\nexport const isEmpty = (text?: string | number | boolean | dayjs.Dayjs | null) =>\n    text === null || text === undefined || text.toString().trim().length === 0;\n\nexport type FormValidationResult = string | null;\n\nexport const isRequired =\n    (i18nText: string) =>\n    (value?: string | number): FormValidationResult =>\n        isEmpty(value) ? i18nText : null;\n","import * as countries from 'i18n-iso-countries';\nimport * as langNB from 'i18n-iso-countries/langs/nb.json';\nimport * as langNN from 'i18n-iso-countries/langs/nn.json';\n\ncountries.registerLocale(langNB);\ncountries.registerLocale(langNN);\n\n/** Kilde:\n * https://www.nav.no/no/person/flere-tema/arbeid-og-opphold-i-utlandet/relatert-informasjon/eos-landene\n */\nexport const filteredListEØSCountries = (countryOptionValue: string, shouldFilter?: boolean) => {\n    if (shouldFilter) {\n        switch (countryOptionValue) {\n            case 'BE': // Belgia\n            case 'BG': // Bulgaria\n            case 'DK': // Danmark\n            case 'EE': // Estland\n            case 'FI': // Finland\n            case 'FR': // Frankrike\n            case 'GR': // Hellas\n            case 'IE': // Irland\n            case 'IS': // Island\n            case 'IT': // Italia\n            case 'HR': // Kroatia\n            case 'CY': // Kypros\n            case 'LV': // Latvia\n            case 'LI': // Liechtenstein\n            case 'LT': // Litauen\n            case 'LU': // Luxembourg\n            case 'MT': // Malta\n            case 'NL': // Nederland\n            case 'NO': // Norge\n            case 'PL': // Polen\n            case 'PT': // Portugal\n            case 'RO': // Romania\n            case 'SK': // Slovakia\n            case 'SI': // Slovenia\n            case 'ES': // Spania\n            case 'CH': // Sveits\n            case 'SE': // Sverige\n            case 'CZ': // Tsjekkia\n            case 'DE': // Tyskland\n            case 'HU': // Ungarn\n            case 'AT': // Østerrike\n                return true;\n            default:\n                return false;\n        }\n    } else {\n        // Filter ut Antarktis\n        return countryOptionValue !== 'AQ';\n    }\n};\n\nexport const getLocaleKey = (locale: string): string => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n\nexport const getCountryName = (alphaCode: string, locale: string): string => {\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer NAV sin landkode av Kosovo til i18n-iso-countries sin landkode for å hente riktig landsnavn.\n    if (alphaCode === 'XXK') {\n        alphaCode = 'XKX';\n    }\n    return countries.getName(alphaCode, getLocaleKey(locale));\n};\n\nexport const getAlpha3Code = (alpha2Code: string) => {\n    const countryAlpha3Code = countries.alpha2ToAlpha3(alpha2Code).toUpperCase();\n\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer i18n-iso-countries sin landkode til landkode som brukes i NAV for å sende riktig kode videre.\n    return countryAlpha3Code === 'XKX' ? 'XXK' : countryAlpha3Code;\n};\n\nexport const countryIsMemberOfEøsOrEfta = (isoCode: string) => {\n    let isoCodeToUse = isoCode.toUpperCase();\n    if (isoCodeToUse === 'XXK') {\n        isoCodeToUse = 'XKX';\n    }\n    isoCodeToUse = isoCodeToUse.length === 2 ? isoCodeToUse : countries.alpha3ToAlpha2(isoCodeToUse);\n    return filteredListEØSCountries(isoCodeToUse.toUpperCase(), true) === true;\n};\n\nexport const getCountries = () => countries;\n\nexport const createCountryOptions = (): Record<string, any> => {\n    const lang = 'nb';\n    const countries = getCountries();\n\n    const names: Array<[string, any]> = Object.entries(countries.getNames(lang));\n    return names\n        .sort((a: string[], b: string[]) => a[1].localeCompare(b[1], lang))\n        .filter((countryOptionValue: string[]) => filteredListEØSCountries(countryOptionValue[0], false));\n};\n","import dayjs from 'dayjs';\nimport { DATE_TODAY, DDMMYYYY_DATE_FORMAT, ISO_DATE_FORMAT } from '@navikt/fp-constants';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { TIME_FORMAT } from '@navikt/fp-constants/src/dates';\n\ndayjs.extend(isBetween);\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isSameOrAfter);\n\ntype Period = { from: Date; to: Date };\n\ntype DateTypes = string | Date | dayjs.Dayjs;\nexport const formatDate = (date: Date | string) => dayjs(date).format(DDMMYYYY_DATE_FORMAT);\nexport const formatDateIso = (date: Date | string) => dayjs(date).format(ISO_DATE_FORMAT);\nexport const formatTime = (date: Date | string) => dayjs(date).format(TIME_FORMAT);\n\nexport const isToday = (date: DateTypes): boolean => dayjs(date).isSame(DATE_TODAY, 'day');\nexport const isAfterToday = (date: DateTypes): boolean => dayjs(date).isAfter(DATE_TODAY, 'day');\nexport const isBeforeToday = (date: DateTypes): boolean => dayjs(date).isBefore(DATE_TODAY, 'day');\nexport const isSameOrAfterToday = (date: DateTypes): boolean => dayjs(date).isSameOrAfter(DATE_TODAY, 'day');\nexport const isSameOrBeforeToday = (date: DateTypes): boolean => dayjs(date).isSameOrBefore(DATE_TODAY, 'day');\nexport const isDateASameOrBeforeDateB = (dateA: DateTypes, dateB: DateTypes): boolean =>\n    dayjs(dateA).isSameOrBefore(dateB, 'day');\nexport const isDateAAfterDateB = (dateA: DateTypes, dateB: DateTypes): boolean => dayjs(dateA).isAfter(dateB, 'day');\nexport const isDateWithinRange = (date: Date, minDate: Date, maxDate: Date): boolean =>\n    dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\n\nexport const erMyndig = (fødselsdato: string) => {\n    const now = dayjs();\n    const momentDate = dayjs(fødselsdato);\n    return now.diff(momentDate, 'years') >= 18;\n};\n\nconst sortDateRange = (d1: Period, d2: Period) => {\n    return dayjs(d1.from).isSameOrBefore(d2.from) ? -1 : 1;\n};\n\nexport const isDateRangesOverlapping = (ranges: Period[]) => {\n    if (ranges.length > 0) {\n        const sortedDates = [...ranges].sort(sortDateRange);\n        const hasOverlap = sortedDates.find((d, idx) => {\n            if (idx < sortedDates.length - 1) {\n                return dayjs(d.to).isSameOrAfter(sortedDates[idx + 1].from);\n            }\n            return false;\n        });\n        return hasOverlap !== undefined;\n    }\n    return false;\n};\n","import dayjs from 'dayjs';\nimport { DATE_TODAY, SIX_MONTHS_AGO, TIDENES_ENDE } from '@navikt/fp-constants';\nimport { isDateRangesOverlapping, isDateWithinRange as isDateWithinRangeUtil } from '@navikt/fp-utils';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { FormValidationResult, isEmpty } from './generalFormValidation';\n\ndayjs.extend(isBetween);\n\nconst ATTEN_UKER_TRE_DAGER = dayjs().add(18, 'week').add(3, 'day').startOf('day').toDate();\nconst DATO_FOR_3_UKER_SIDEN = dayjs().startOf('day').subtract(21, 'days');\nconst ONE_YEAR_AFTER_TODAY = dayjs().add(1, 'year').startOf('day').toDate();\n\nconst ISO_DATE_REGEX = /(19|20)\\d{2}-(0?[1-9]|1[0-2])-(0?[1-9]|1\\d|2\\d|3[01])$/;\n\nexport const isValidDate =\n    (i18nText: string) =>\n    (date: string): FormValidationResult =>\n        isEmpty(date) || ISO_DATE_REGEX.test(date) ? null : i18nText;\n\nexport const isBeforeTodayOrToday =\n    (i18nText: string) =>\n    (date: string): FormValidationResult =>\n        dayjs(date).isAfter(DATE_TODAY) ? i18nText : null;\n\nexport const isBeforeOrSame =\n    (i18nText: string, endDate: string) =>\n    (startDate: string): FormValidationResult =>\n        endDate && dayjs(startDate).isAfter(endDate, 'day') ? i18nText : null;\n\nexport const isAfterOrSameAsSixMonthsAgo =\n    (i18nText: string) =>\n    (date: string): FormValidationResult =>\n        dayjs(date).isBefore(SIX_MONTHS_AGO) ? i18nText : null;\n\nexport const isAfterOrSame =\n    (i18nText: string, fromDate: string) =>\n    (endDate: string): FormValidationResult =>\n        fromDate && dayjs(endDate).isBefore(fromDate, 'day') ? i18nText : null;\n\nexport const isDatesNotTheSame =\n    (i18nText: string, date1?: string) =>\n    (date2?: string): FormValidationResult =>\n        date1 && date2 && dayjs(date1).isSame(date2, 'day') ? i18nText : null;\n\nexport const isLessThanThreeWeeksAgo =\n    (i18nText: string) =>\n    (date: string): FormValidationResult => {\n        return dayjs(date).isBefore(DATO_FOR_3_UKER_SIDEN) ? i18nText : null;\n    };\n\nexport const erI22SvangerskapsukeEllerSenere =\n    (i18nText: string) =>\n    (date: string): FormValidationResult =>\n        dayjs(date).isAfter(ATTEN_UKER_TRE_DAGER) ? i18nText : null;\n\nexport const isMaxOneYearIntoTheFuture =\n    (i18nText: string) =>\n    (date: string): FormValidationResult =>\n        dayjs(date).isAfter(ONE_YEAR_AFTER_TODAY) ? i18nText : null;\n\nexport const isDateWithinRange =\n    (i18nText: string, start: Date, end: Date) =>\n    (date: string): FormValidationResult =>\n        isDateWithinRangeUtil(dayjs(date).toDate(), start, end) ? null : i18nText;\n\nexport const isPeriodNotOverlappingOthers =\n    (\n        i18nText: string,\n        otherDateInfo: { date: Date | string; isStartDate: boolean },\n        otherPeriods: Array<{ fom: Date | string; tom: Date | string }>,\n    ) =>\n    (date: string): FormValidationResult => {\n        const dateRanges = otherPeriods\n            .filter((u) => u.fom)\n            .map((u) => ({\n                from: dayjs(u.fom).toDate(),\n                to: u.tom ? dayjs(u.tom).toDate() : TIDENES_ENDE,\n            }));\n\n        const toDate = otherDateInfo.isStartDate ? date : otherDateInfo.date;\n\n        const allDateRanges = dateRanges.concat({\n            from: dayjs(otherDateInfo.isStartDate ? otherDateInfo.date : date).toDate(),\n            to: toDate ? dayjs(toDate).toDate() : TIDENES_ENDE,\n        });\n\n        return isDateRangesOverlapping(allDateRanges) ? i18nText : null;\n    };\n","import { useMemo } from 'react';\nimport { FormatXMLElementFn } from 'intl-messageformat';\nimport { useIntl, PrimitiveType, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUtenlandsoppholdIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n\nexport default useUtenlandsoppholdIntl;\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UtenlandsoppholdIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UtenlandsoppholdIntlProvider;\n","import { useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { Link, VStack, Radio, ExpansionCard, BodyLong, Heading, HStack, BodyShort } from '@navikt/ds-react';\nimport { Form, ErrorSummaryHookForm, RadioGroup, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport { Step } from '@navikt/fp-common';\nimport { links } from '@navikt/fp-constants';\nimport { isRequired } from '@navikt/fp-validation';\nimport { StepConfig, Utenlandsopphold } from '@navikt/fp-types';\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nexport interface Props {\n    utenlandsopphold?: Utenlandsopphold;\n    saveOnNext: (formValues: Utenlandsopphold) => void;\n    saveOnPrevious: (formValues: Utenlandsopphold | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    stønadstype: 'Engangsstønad' | 'Foreldrepenger' | 'Svangerskapspenger';\n    supportsTempSaving?: boolean;\n}\n\nconst UtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    utenlandsopphold,\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    stepConfig,\n    stønadstype,\n    supportsTempSaving = false,\n}) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const formMethods = useForm<Utenlandsopphold>({\n        defaultValues: utenlandsopphold,\n    });\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                steps={stepConfig}\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                useNoTempSavingText={!supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <RadioGroup\n                            name=\"harBoddUtenforNorgeSiste12Mnd\"\n                            label={<FormattedMessage id=\"UtenlandsoppholdSteg.Siste12Måneder.Spørsmål\" />}\n                            validate={[isRequired(i18n('UtenlandsoppholdSteg.Siste12Måneder.IsRequired'))]}\n                        >\n                            <Radio value={false}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Siste12MånederInfotekst.Radiobutton.BoddINorge\" />\n                            </Radio>\n                            <Radio value={true}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Siste12MånederInfotekst.Radiobutton.BoddIUtlandet\" />\n                            </Radio>\n                        </RadioGroup>\n                        <RadioGroup\n                            name=\"skalBoUtenforNorgeNeste12Mnd\"\n                            label={<FormattedMessage id=\"UtenlandsoppholdSteg.Neste12Måneder.Spørsmål\" />}\n                            validate={[isRequired(i18n('UtenlandsoppholdSteg.Neste12Måneder.IsRequired'))]}\n                        >\n                            <Radio value={false}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Neste12MånederInfotekst.Radiobutton.BoddINorge\" />\n                            </Radio>\n                            <Radio value={true}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Neste12MånederInfotekst.Radiobutton.BoddIUtlandet\" />\n                            </Radio>\n                        </RadioGroup>\n                        <ExpansionCard size=\"small\" aria-label={i18n('UtenlandsoppholdSteg.StotteFraNav')}>\n                            <ExpansionCard.Header>\n                                <ExpansionCard.Title size=\"small\">\n                                    <FormattedMessage id=\"UtenlandsoppholdSteg.StotteFraNav\" />\n                                </ExpansionCard.Title>\n                            </ExpansionCard.Header>\n                            <ExpansionCard.Content>\n                                <VStack gap=\"10\">\n                                    <VStack gap=\"5\">\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del1\" />\n                                        </BodyLong>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del2\" />\n                                        </BodyLong>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del3\" />\n                                        </BodyLong>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del4\" />\n                                        </BodyLong>\n                                    </VStack>\n                                    <VStack gap=\"5\">\n                                        <Heading size=\"small\">\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Undertittel\" />\n                                        </Heading>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del5\" />\n                                        </BodyLong>\n                                        <HStack gap=\"1\">\n                                            <BodyShort>\n                                                <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del6\" />\n                                            </BodyShort>\n                                            <BodyShort>\n                                                {stønadstype === 'Engangsstønad' && (\n                                                    <Link href={links.engangsstonadHvem}>\n                                                        nav.no/engangsstonad#hvem\n                                                    </Link>\n                                                )}\n                                                {stønadstype === 'Foreldrepenger' && (\n                                                    <Link href={links.foreldrepengerUtland}>\n                                                        nav.no/foreldrepenger#utland\n                                                    </Link>\n                                                )}\n                                            </BodyShort>\n                                        </HStack>\n                                    </VStack>\n                                </VStack>\n                            </ExpansionCard.Content>\n                        </ExpansionCard>\n                        <StepButtonsHookForm<Utenlandsopphold>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default UtenlandsoppholdPanel;\n","import { FormattedMessage } from 'react-intl';\nimport { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate, isSameOrAfterToday } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\nimport { DATE_1_YEAR_FROM_NOW, DATE_TODAY } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\n\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdNeste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdNeste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdNeste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdNeste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_TODAY).toDate();\n    const maxDateFom = tom ? dayjs(tom).subtract(1, 'days').toDate() : dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    const minDateTom = fom && isSameOrAfterToday(fom) ? dayjs(fom).add(1, 'days').toDate() : dayjs(DATE_TODAY).toDate();\n    const maxDateTom = dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdNeste12Mnd.${index}.landkode`}\n                label={\n                    <FormattedMessage\n                        id={'SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Spørsmål.HvilketLandSkalDuBoI'}\n                    />\n                }\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuSkalBoIPåkreved')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={minDateFom}\n                maxDate={maxDateFom}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n                defaultMonth={fom ? dayjs(fom).toDate() : undefined}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { Form, ErrorSummaryHookForm, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport { StepConfig, UtenlandsoppholdPeriode, UtenlandsoppholdSenere } from '@navikt/fp-types';\n\nimport SenereUtenlandsoppholdPeriode from './SenereUtenlandsoppholdPeriode';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdNeste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdSenere;\n\nexport interface Props {\n    senereUtenlandsopphold?: UtenlandsoppholdSenere;\n    saveOnNext: (formValues: UtenlandsoppholdSenere) => void;\n    saveOnPrevious: (formValues: UtenlandsoppholdSenere | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    supportsTempSaving?: boolean;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    senereUtenlandsopphold,\n    stepConfig,\n    supportsTempSaving = false,\n}) => {\n    const defaultValues = useMemo(() => senereUtenlandsopphold || DEFAULT_FORM_VALUES, [senereUtenlandsopphold]);\n    const formMethods = useForm<UtenlandsoppholdSenere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdNeste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                steps={stepConfig}\n                useNoTempSavingText={!supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <VStack gap=\"10\" align=\"start\">\n                            {fields.map((field, index) => (\n                                <Fragment key={field.id}>\n                                    <SenereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                    {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                                </Fragment>\n                            ))}\n                            <Button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                size=\"small\"\n                                icon={<PlusIcon aria-hidden />}\n                                onClick={leggTilOpphold}\n                            >\n                                <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                            </Button>\n                        </VStack>\n                        <StepButtonsHookForm<UtenlandsoppholdSenere>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n","import { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { useFormContext } from 'react-hook-form';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate, isDateAAfterDateB } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { DATE_TODAY, DATE_1_YEAR_AGO } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdSiste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdSiste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdSiste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdSiste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateFom = tom ? dayjs(tom).subtract(1, 'days').toDate() : dayjs(DATE_TODAY).toDate();\n\n    const minDateTom =\n        fom && isDateAAfterDateB(fom, DATE_1_YEAR_AGO)\n            ? dayjs(fom).add(1, 'days').toDate()\n            : dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateTom = dayjs(DATE_TODAY).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdSiste12Mnd.${index}.landkode`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Spørsmål.HvilketLandHarDuBoddI\" />}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuHarBoddIPåkrevd')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={minDateFom}\n                maxDate={maxDateFom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n                defaultMonth={tom ? dayjs(tom).toDate() : undefined}\n            />\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuHarBoddIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { ErrorSummaryHookForm, StepButtonsHookForm, Form } from '@navikt/fp-form-hooks';\nimport { StepConfig, UtenlandsoppholdPeriode, UtenlandsoppholdTidligere } from '@navikt/fp-types';\n\nimport TidligereUtenlandsoppholdPeriode from './TidligereUtenlandsoppholdPeriode';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdSiste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdTidligere;\n\nexport interface Props {\n    tidligereUtenlandsopphold?: UtenlandsoppholdTidligere;\n    saveOnNext: (formValues: UtenlandsoppholdTidligere) => void;\n    saveOnPrevious: (data: UtenlandsoppholdTidligere | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    supportsTempSaving?: boolean;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    tidligereUtenlandsopphold,\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    stepConfig,\n    supportsTempSaving = false,\n}) => {\n    const defaultValues = useMemo(() => tidligereUtenlandsopphold || DEFAULT_FORM_VALUES, [tidligereUtenlandsopphold]);\n    const formMethods = useForm<UtenlandsoppholdTidligere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdSiste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                steps={stepConfig}\n                useNoTempSavingText={!supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <VStack gap=\"10\" align=\"start\">\n                            {fields.map((field, index) => (\n                                <Fragment key={field.id}>\n                                    <TidligereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                    {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                                </Fragment>\n                            ))}\n                            <Button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                size=\"small\"\n                                icon={<PlusIcon aria-hidden />}\n                                onClick={leggTilOpphold}\n                            >\n                                <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                            </Button>\n                        </VStack>\n                        <StepButtonsHookForm<UtenlandsoppholdTidligere>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n"],"names":["ContentWrapper","children","bem","bemUtils","jsx","links","ISO_DATE_FORMAT","DDMMYYYY_DATE_FORMAT","TIDENES_MORGEN","dayjs","TIDENES_ENDE","DATE_TODAY","DATE_1_YEAR_FROM_NOW","DATE_1_YEAR_AGO","getLanguageMessages","locale","nbMessages","nnMessages","enMessages","UiIntlProvider","useIntl","messages","useMemo","Provider","ErrorPage","appName","errorMessage","retryCallback","jsxs","VStack","Heading","FormattedMessage","Alert","BodyShort","HStack","Link","Button","Label","ErrorBoundary","Component","props","error","errorInfo","Sentry.withScope","scope","eventId","Sentry.captureException","ErrorSummaryFp","errorRef","errors","ErrorSummary","FileInput","multiple","accept","onFilesSelect","hasUplodedAttachements","onFileSelect","useCallback","e","files","inputElement","useRef","openFileDialog","Fragment","UploadIcon","useCustomIntl","intl","i18nId","values","s4","guid","bytesString","bytes","Bytes","generateAttachmentId","mapFileToAttachment","file","type","skjemanummer","AttachmentInfo","attachment","showFileSize","onDelete","i18n","Loader","FileCheckmarkIcon","Spacer","XMarkIcon","AttachmentList","attachments","Fragment2","FileUploadError","MAX_FIL_STØRRELSE_KB","FailedAttachment","failedAttachment","FailedAttachmentList","failedAttachments","VALID_EXTENSIONS","KILOBYTES_IN_BYTE","getPendingAttachmentFromFile","attachmentType","newAttachment","fileExtensionIsValid","filename","ext","fileSizeIsValid","filesizeInB","uploadAttachment","saveAttachment","response","_a","EMPTY_ATTACHMENT_LIST","FileUploader","existingAttachments","updateAttachments","setAttachments","useState","useEffect","a","saveFiles","uploadAttachments","allPendingAttachments2","pendingAttachment","currentAttachments","allPendingAttachments","ca","pa","deleteAttachment","uploadedAttachments","StepButtons","goToPreviousStep","nextButtonText","nextButtonOnClick","isSubmitting","disabled","setDisabled","onClickNextButton","d","StepButtonWrapper","cache","createIntlCache","createIntl","createReactIntl","useUiIntl","logAmplitudeEvent","eventName","eventData","logToConsoleOnly","amplitude","getTitleText","appnavn","Umyndig","titleText","useDocumentTitle","GuidePanel","ArrowRightIcon","IntlProvider","messagesGroupedByLocale","isCheckBoxInput","element","isDateObject","value","isNullOrUndefined","isObjectType","isObject","getEventValue","event","getNodeParentName","name","isNameInFieldArray","names","isPlainObject","tempObject","prototypeCopy","isWeb","cloneObject","data","copy","isArray","key","compact","isUndefined","val","get","obj","path","defaultValue","result","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","HookFormContext","React","useFormContext","FormProvider","getProxyFormState","formState","control","localProxyFormState","isRoot","_key","isEmptyObject","shouldRenderFormState","formStateData","_proxyFormState","updateFormState","convertToArrayPayload","shouldSubscribeByName","signalName","exact","currentName","useSubscribe","_props","subscription","useFormState","methods","_mounted","_localProxyFormState","_name","isString","generateWatchOutput","_names","formValues","isGlobal","fieldName","useWatch","updateValue","isKey","stringToPath","input","set","object","index","tempPath","length","lastIndex","newValue","objValue","useController","shouldUnregister","isArrayField","_registerProps","_shouldUnregisterField","updateMounted","field","elm","message","appendErrors","validateAllFieldCriteria","focusFieldBy","fields","callback","fieldsNames","_f","currentField","generateId","c","r","getFocusFieldName","options","getValidationModes","mode","isWatched","isBlurEvent","watchName","updateFieldArrayRootError","fieldArrayErrors","isBoolean","isFileInput","isFunction","isHTMLElement","owner","isMessage","isRadioInput","isRegex","defaultResult","validResult","getCheckboxValue","option","defaultReturn","getRadioValue","previous","getValidateError","ref","getValueAndMessage","validationData","validateField","shouldUseNativeValidation","isFieldArray","refs","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","time","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","append","fillEmptyArray","insert","moveArrayAt","from","to","prepend","removeAtIndexes","indexes","i","temp","removeArrayAt","b","swapArrayAt","indexA","indexB","baseGet","updatePath","isEmptyArray","unset","paths","childObject","updateAt","fieldValues","useFieldArray","keyName","setFields","ids","_fieldIds","_actioned","fieldArrayName","updateValues","updatedFieldArrayValues","append$1","appendValue","prepend$1","prependValue","remove","insert$1","insertValue","swap","move","update","item","replace","existingError","createSubject","_observers","observer","o","isPrimitive","deepEqual","object1","object2","keys1","keys2","val1","val2","isMultipleSelect","live","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","defaultValues","getFieldValueAs","valueAsDate","setValueAs","getFieldValue","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","hasValidation","schemaErrorLookup","foundError","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","createFormControl","flushRootRender","_options","_formState","_defaultValues","_formValues","_state","delayErrorCallback","timer","_subjects","shouldCaptureDirtyFields","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","_updateValid","shouldUpdateValid","isValid","_executeSchema","executeBuiltInValidation","_updateIsValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","touchedFields","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","updatedFormState","executeSchemaAndUpdateState","shouldOnlyCheckValid","context","isFieldArrayRoot","fieldError","_removeUnmounted","unregister","getValues","_getWatch","_getFieldArray","fieldReference","optionRef","checkboxRef","radioRef","trigger","setValues","fieldKey","setValue","cloneValue","onChange","target","isFieldValueUpdated","getCurrentFieldValue","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","fieldNames","getFieldState","clearErrors","inputName","setError","watch","payload","register","disabledIsDefined","fieldRef","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","form","reset","useForm","_formControl","_values","Form","formMethods","onSubmit","className","getValidationRules","acc","fn","getError","Checkbox","label","onChangeFn","evt","DsCheckbox","ErrorMessage","CheckboxGroup","description","DsCheckboxGroup","customParseFormat","findDisabledDays","minDate","maxDate","disabledDays","Datepicker","defaultMonth","showMonthAndYearDropdowns","defaultDate","datepickerProps","inputProps","useDatepicker","date","verdi","onChangeInput","validDate","DatePicker","RadioGroup","DsRadioGroup","child","Select","DsSelect","TextField","autoFocus","DsTextField","TextArea","Textarea","StepButtonsHookForm","saveDataOnPreviousClick","dirtyFields","onBackButtonClick","s","t","m","l","n","f","g","u","e.isValidElement","e.cloneElement","e.createElement","e.Fragment","ErrorMessageHookForm","AkselErrorMessage","findAllErrors","alle","ErrorSummaryHookForm","flattenAndUniqueErrors","mappedErrors","_b","text","isRequired","i18nText","countries.registerLocale","langNB","langNN","filteredListEØSCountries","countryOptionValue","shouldFilter","getCountries","countries","createCountryOptions","lang","isBetween","isSameOrBefore","isSameOrAfter","formatDate","isSameOrAfterToday","isDateAAfterDateB","dateA","dateB","isDateWithinRange","sortDateRange","d1","d2","isDateRangesOverlapping","ranges","sortedDates","idx","ISO_DATE_REGEX","isValidDate","isBeforeOrSame","endDate","startDate","isAfterOrSame","fromDate","isDatesNotTheSame","date1","date2","start","end","isDateWithinRangeUtil","isPeriodNotOverlappingOthers","otherDateInfo","otherPeriods","dateRanges","toDate","allDateRanges","useUtenlandsoppholdIntl","UtenlandsoppholdIntlProvider","UtenlandsoppholdPanel","utenlandsopphold","saveOnNext","saveOnPrevious","cancelApplication","onContinueLater","stepConfig","stønadstype","supportsTempSaving","Step","Radio","ExpansionCard","BodyLong","SenereUtenlandsoppholdPanel","fjernOpphold","alleAndreUtenlandsopphold","_u","fom","tom","minDateFom","maxDateFom","minDateTom","maxDateTom","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","senereUtenlandsopphold","leggTilOpphold","SenereUtenlandsoppholdPeriode","PlusIcon","TidligereUtenlandsoppholdPanel","tidligereUtenlandsopphold","TidligereUtenlandsoppholdPeriode"],"mappings":"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","x_google_ignoreList":[21,32]}