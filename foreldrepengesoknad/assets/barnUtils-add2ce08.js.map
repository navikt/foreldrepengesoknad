{"version":3,"file":"barnUtils-add2ce08.js","sources":["../../../../packages/fp-common/src/common/types/AnnenForelder.ts","../../../../packages/fp-common/src/common/types/Barn.ts","../../../../packages/fp-common/src/common/utils/personUtils.ts","../../src/app/utils/barnUtils.ts"],"sourcesContent":["interface Common {\n    kanIkkeOppgis: boolean;\n}\n\nexport interface AnnenForelderOppgitt extends Common {\n    fornavn: string;\n    etternavn: string;\n    fnr: string;\n    utenlandskFnr?: boolean;\n    bostedsland?: string;\n    harRettPåForeldrepengerINorge?: boolean;\n    harOppholdtSegIEØS?: boolean;\n    harRettPåForeldrepengerIEØS?: boolean;\n    erInformertOmSøknaden?: boolean;\n    erForSyk?: boolean;\n    erUfør?: boolean;\n}\n\nexport type AnnenForelderIkkeOppgitt = Common;\n\nexport type AnnenForelder = AnnenForelderIkkeOppgitt | AnnenForelderOppgitt;\n\nexport const isAnnenForelderOppgitt = (annenForelder: AnnenForelder): annenForelder is AnnenForelderOppgitt => {\n    return annenForelder.kanIkkeOppgis === false;\n};\n\nexport const isAnnenForelderIkkeOppgitt = (annenForelder: AnnenForelder): annenForelder is AnnenForelderIkkeOppgitt => {\n    return annenForelder.kanIkkeOppgis === true;\n};\n","import { Attachment } from './Attachment';\n\nexport enum BarnType {\n    FØDT = 'født',\n    UFØDT = 'ufødt',\n    ADOPTERT_STEBARN = 'adoptertStebarn',\n    ADOPTERT_ANNET_BARN = 'adoptertAnnetBarn',\n    IKKE_UTFYLT = 'ikkeUtfylt',\n}\n\ninterface Common {\n    type: BarnType;\n    antallBarn: number;\n    dokumentasjonAvAleneomsorg?: Attachment[];\n    datoForAleneomsorg?: Date;\n}\n\nexport interface IkkeUtfyltTypeBarn extends Common {\n    type: BarnType.IKKE_UTFYLT;\n    fødselsdatoer: Date[];\n    fnr?: string[];\n}\n\nexport interface FødtBarn extends Common {\n    type: BarnType.FØDT;\n    fødselsdatoer: Date[];\n    termindato?: Date;\n    fnr?: string[];\n}\n\nexport interface UfødtBarn extends Common {\n    type: BarnType.UFØDT;\n    termindato: Date;\n    terminbekreftelse?: Attachment[];\n    terminbekreftelsedato?: Date;\n}\n\nexport interface AdoptertBarn extends Common {\n    type: BarnType.ADOPTERT_STEBARN | BarnType.ADOPTERT_ANNET_BARN;\n    adopsjonsdato: Date;\n    fødselsdatoer: Date[];\n    omsorgsovertakelse: Attachment[];\n    fnr?: string[];\n}\n\nexport interface AdoptertStebarn extends AdoptertBarn {\n    type: BarnType.ADOPTERT_STEBARN;\n}\n\nexport interface AdoptertAnnetBarn extends AdoptertBarn {\n    type: BarnType.ADOPTERT_ANNET_BARN;\n    adoptertIUtlandet: boolean;\n    ankomstdato?: Date;\n}\n\nexport type Barn = FødtBarn | UfødtBarn | AdoptertBarn | AdoptertStebarn | AdoptertAnnetBarn | IkkeUtfyltTypeBarn;\n\nexport interface BarnFraNesteSak {\n    familiehendelsesdato: Date;\n    startdatoFørsteStønadsperiode: Date;\n    fnr: string[] | undefined;\n    annenForelderFnr: string | undefined;\n}\n\nexport const isIkkeUtfyltTypeBarn = (barn: Barn): barn is IkkeUtfyltTypeBarn => {\n    return barn.type === BarnType.IKKE_UTFYLT;\n};\n\nexport const isFødtBarn = (barn: Barn): barn is FødtBarn => {\n    return barn.type === BarnType.FØDT;\n};\n\nexport const isUfødtBarn = (barn: Barn): barn is UfødtBarn => {\n    return barn.type === BarnType.UFØDT;\n};\n\nexport const isAdoptertBarn = (barn: Barn): barn is AdoptertBarn => {\n    return barn.type === BarnType.ADOPTERT_STEBARN || barn.type === BarnType.ADOPTERT_ANNET_BARN;\n};\n\nexport const isAdoptertStebarn = (barn: Barn): barn is AdoptertStebarn => {\n    return barn.type === BarnType.ADOPTERT_STEBARN;\n};\n\nexport const isAdoptertAnnetBarn = (barn: Barn): barn is AdoptertAnnetBarn => {\n    return barn.type === BarnType.ADOPTERT_ANNET_BARN;\n};\n\nexport default Barn;\n","import dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\nimport { AnnenForelder, Kjønn, NavnPåForeldre, Søkerrolle, isAnnenForelderOppgitt } from '../types';\nimport Person from '../types/Person';\nimport intlUtils from './intlUtils';\n\nexport const formaterNavn = (fornavn: string, etternavn: string, visEtternavn: boolean, mellomnavn?: string) => {\n    if (visEtternavn) {\n        return mellomnavn ? `${fornavn} ${mellomnavn} ${etternavn}` : `${fornavn} ${etternavn}`;\n    }\n    return mellomnavn ? `${fornavn} ${mellomnavn}` : `${fornavn}`;\n};\n\nconst navnSlutterPåSLyd = (navn: string): boolean => {\n    const sisteBokstav = navn.charAt(navn.length - 1).toLowerCase();\n    return sisteBokstav === 's' || sisteBokstav === 'x' || sisteBokstav === 'z';\n};\n\nexport const getNavnGenitivEierform = (navn: string, locale: string): string => {\n    if (locale !== 'nb') {\n        return navn;\n    }\n    if (navnSlutterPåSLyd(navn)) {\n        return `${navn}'`;\n    }\n    return `${navn}s`;\n};\n\nexport const getKjønnFromFnr = (annenForelder: AnnenForelder): Kjønn | undefined => {\n    if (isAnnenForelderOppgitt(annenForelder)) {\n        const { fnr } = annenForelder;\n\n        if (fnr === undefined || fnr.length !== 11) {\n            return undefined;\n        }\n        return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n    }\n\n    return undefined;\n};\n\nexport const getKjønnFromFnrString = (fnr: string): Kjønn | undefined => {\n    if (fnr.length !== 11) {\n        return undefined;\n    }\n    return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n};\n\nexport const getMorErAleneOmOmsorg = (\n    søkerErMor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder,\n) => {\n    return søkerErMor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getMorHarRettPåForeldrepengerINorgeEllerEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder,\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return (\n            annenForelder.harRettPåForeldrepengerINorge === true || annenForelder.harRettPåForeldrepengerIEØS === true\n        );\n    }\n    return rolle === 'mor';\n};\n\nexport const getMorHarRettPåForeldrepengerIEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder,\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return annenForelder.harRettPåForeldrepengerINorge === true;\n    }\n    return rolle === 'mor';\n};\n\nexport const getFarMedmorErAleneOmOmsorg = (\n    søkerErFarMedmor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder,\n) => {\n    return søkerErFarMedmor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getNavnPåForeldre = (\n    person: Person,\n    annenForelder: AnnenForelder,\n    erFarEllerMedmor: boolean,\n    intl: IntlShape,\n): NavnPåForeldre => {\n    const navnSøker = person.fornavn;\n    const navnAnnenForelder =\n        isAnnenForelderOppgitt(annenForelder) && annenForelder.fornavn !== undefined && annenForelder.fornavn !== ''\n            ? annenForelder.fornavn\n            : intlUtils(intl, 'annen.forelder');\n    const navnMor = erFarEllerMedmor ? navnAnnenForelder : navnSøker;\n    const navnFarMedmor = erFarEllerMedmor ? navnSøker : navnAnnenForelder;\n\n    return {\n        mor: navnMor,\n        farMedmor: navnFarMedmor,\n    };\n};\n\nexport const getErSøkerFarEllerMedmor = (søkerRolle: Søkerrolle): boolean =>\n    søkerRolle === 'far' || søkerRolle === 'medmor';\n\nexport const erEldreEnn3ÅrOg3Måneder = (fødselsdato: Date) => {\n    return dayjs(fødselsdato).add(3, 'year').add(3, 'month').isBefore(dayjs(), 'day');\n};\n","import {\n    Barn,\n    RegistrertBarn,\n    formatDate,\n    intlUtils,\n    isFødtBarn,\n    isIkkeUtfyltTypeBarn,\n    isUfødtBarn,\n} from '@navikt/fp-common';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { IntlShape } from 'react-intl';\n\ndayjs.extend(utc);\n\nexport const getFamiliehendelsedato = (barn: Barn): string => {\n    if (isFødtBarn(barn) || isIkkeUtfyltTypeBarn(barn)) {\n        return dateToISOString(barn.fødselsdatoer[0]);\n    }\n    if (isUfødtBarn(barn)) {\n        return dateToISOString(barn.termindato);\n    }\n\n    return dateToISOString(barn.adopsjonsdato);\n};\n\nconst barnFødselsdatoLikSakFødselsdato = (fødselsdatoer: Date[] | undefined, regBarnFødselsdato: Date | undefined) => {\n    return fødselsdatoer !== undefined && regBarnFødselsdato !== undefined\n        ? fødselsdatoer.find((fødselsdato) => dayjs(fødselsdato).isSame(regBarnFødselsdato)) !== undefined\n        : false;\n};\n\nexport const getRegistrerteBarnOmDeFinnes = (\n    barn: Barn,\n    registrerteBarn: RegistrertBarn[],\n): RegistrertBarn[] | undefined => {\n    return registrerteBarn.length > 0 && !isUfødtBarn(barn)\n        ? registrerteBarn.filter(\n              (regBarn) =>\n                  barn.fnr?.includes(regBarn.fnr) ||\n                  barnFødselsdatoLikSakFødselsdato(barn.fødselsdatoer, regBarn.fødselsdato),\n          )\n        : undefined;\n};\n\nexport const getTermindato = (barn: Barn): Date | undefined => {\n    return isFødtBarn(barn) || isUfødtBarn(barn) ? barn.termindato : undefined;\n};\n\nexport const getFødselsdato = (barn: Barn): Date | undefined => {\n    return isFødtBarn(barn) ? barn.fødselsdatoer[0] : undefined;\n};\n\nexport const getDødeBarnetForMerEnn3MånederSiden = (registrerteBarn: RegistrertBarn) => {\n    const dato3MånederTilbake = dayjs(new Date()).subtract(3, 'month');\n    return (\n        registrerteBarn.dødsdato !== undefined && dayjs(registrerteBarn.dødsdato).isBefore(dato3MånederTilbake, 'day')\n    );\n};\n\nexport const getTekstForAntallBarn = (antallBarn: number, intl: IntlShape): string => {\n    if (antallBarn === 1) {\n        return intlUtils(intl, 'barn');\n    } else if (antallBarn === 2) {\n        return intlUtils(intl, 'tvillinger');\n    } else if (antallBarn === 3) {\n        return intlUtils(intl, 'trillinger');\n    }\n    return intlUtils(intl, 'flerlinger');\n};\n\nexport const getLeverBarnet = (barn: RegistrertBarn) => {\n    return !barn.dødsdato;\n};\n\nexport const getAndreBarnFødtSammenMedBarnet = (\n    barnFnr: string | undefined,\n    barnFødselsdato: Date,\n    registrerteBarn: RegistrertBarn[],\n) => {\n    const dagenFørFødsel = dayjs(barnFødselsdato).subtract(1, 'day');\n    const dagenEtterFødsel = dayjs(barnFødselsdato).add(1, 'day');\n    return registrerteBarn.filter(\n        (b) =>\n            b.fnr !== barnFnr &&\n            dayjs(b.fødselsdato).isSameOrAfter(dagenFørFødsel, 'day') &&\n            dayjs(b.fødselsdato).isSameOrBefore(dagenEtterFødsel, 'day'),\n    );\n};\n\nexport const getTittelBarnNårNavnSkalIkkeVises = (\n    omsorgsovertagelsesdato: Date | undefined,\n    fødselsdatoer: Date[] | undefined,\n    antallBarn: number,\n    intl: IntlShape,\n): string => {\n    if (omsorgsovertagelsesdato !== undefined) {\n        return intlUtils(intl, 'velkommen.barnVelger.adoptertBarn', {\n            adopsjonsdato: formatDate(omsorgsovertagelsesdato),\n        });\n    } else {\n        const fødselsdatoTekst = formaterFødselsdatoerPåBarn(fødselsdatoer);\n        const barnTekst = getTekstForAntallBarn(antallBarn, intl);\n\n        return fødselsdatoer !== undefined && fødselsdatoer.length > 0\n            ? intlUtils(intl, 'velkommen.barnVelger.fødtBarn.barn', {\n                  barnTekst,\n                  fødselsdato: fødselsdatoTekst,\n              })\n            : '';\n    }\n};\n\nexport const formaterNavnPåBarn = (\n    fornavn: string[] | undefined,\n    fødselsdatoer: Date[] | undefined,\n    omsorgsovertagelsesdato: Date | undefined,\n    alleBarnaLever: boolean,\n    antallBarn: number,\n    intl: IntlShape,\n): string => {\n    if (fornavn === undefined || fornavn.length === 0 || !alleBarnaLever) {\n        return getTittelBarnNårNavnSkalIkkeVises(omsorgsovertagelsesdato, fødselsdatoer, antallBarn, intl);\n    }\n\n    if (fornavn.length > 1) {\n        const fornavnene = fornavn.slice(0, -1).join(', ');\n        const sisteFornavn = fornavn[fornavn.length - 1];\n        return `${fornavnene} og ${sisteFornavn}`;\n    }\n    return `${fornavn[0]}`;\n};\n\nexport const formaterFødselsdatoerPåBarn = (fødselsdatoer: Date[] | undefined): string | undefined => {\n    if (fødselsdatoer === undefined) {\n        return undefined;\n    }\n    const unikeFødselsdatoer = [] as Date[];\n    fødselsdatoer.forEach((f) => {\n        const finnesIUnikeFødselsdatoer = unikeFødselsdatoer.find((dato) => dayjs(dato).isSame(f, 'day'));\n        if (finnesIUnikeFødselsdatoer === undefined) {\n            unikeFødselsdatoer.push(f);\n        }\n    });\n\n    if (unikeFødselsdatoer.length > 1) {\n        const fødselsdatoerTekst = unikeFødselsdatoer.map((fd) => formatDate(fd));\n        const førsteFødselsdaoer = fødselsdatoerTekst.slice(0, -1).join(', ');\n        const sisteFødselsdato = fødselsdatoerTekst[fødselsdatoerTekst.length - 1];\n        return `${førsteFødselsdaoer} og ${sisteFødselsdato}`;\n    }\n    return formatDate(unikeFødselsdatoer[0]);\n};\n"],"names":["isAnnenForelderOppgitt","annenForelder","isAnnenForelderIkkeOppgitt","BarnType","isIkkeUtfyltTypeBarn","barn","isFødtBarn","isUfødtBarn","isAdoptertBarn","isAdoptertStebarn","isAdoptertAnnetBarn","formaterNavn","fornavn","etternavn","visEtternavn","mellomnavn","navnSlutterPåSLyd","navn","sisteBokstav","getNavnGenitivEierform","locale","getKjønnFromFnr","fnr","getKjønnFromFnrString","getMorErAleneOmOmsorg","søkerErMor","søkerErAleneOmOmsorg","getMorHarRettPåForeldrepengerINorgeEllerEØS","rolle","søkerErFarEllerMedmor","getFarMedmorErAleneOmOmsorg","søkerErFarMedmor","getNavnPåForeldre","person","erFarEllerMedmor","intl","navnSøker","navnAnnenForelder","intlUtils","getErSøkerFarEllerMedmor","søkerRolle","erEldreEnn3ÅrOg3Måneder","fødselsdato","dayjs","utc","getFamiliehendelsedato","dateToISOString","barnFødselsdatoLikSakFødselsdato","fødselsdatoer","regBarnFødselsdato","getRegistrerteBarnOmDeFinnes","registrerteBarn","regBarn","_a","getTermindato","getFødselsdato","getDødeBarnetForMerEnn3MånederSiden","dato3MånederTilbake","getTekstForAntallBarn","antallBarn","getLeverBarnet","getAndreBarnFødtSammenMedBarnet","barnFnr","barnFødselsdato","dagenFørFødsel","dagenEtterFødsel","b","getTittelBarnNårNavnSkalIkkeVises","omsorgsovertagelsesdato","formatDate","fødselsdatoTekst","formaterFødselsdatoerPåBarn","barnTekst","formaterNavnPåBarn","alleBarnaLever","fornavnene","sisteFornavn","unikeFødselsdatoer","f","dato","fødselsdatoerTekst","fd","førsteFødselsdaoer","sisteFødselsdato"],"mappings":"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"}