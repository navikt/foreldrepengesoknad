import{j as e}from"./jsx-runtime-69eee039.js";import{w as d}from"./withIntl-4043b8b4.js";import{w as k}from"./withRouter-2e2c6e6b.js";import{w as l,F as c}from"./ForeldrepengerStateMock-8c04d332.js";import{A as f}from"./AxiosMock-f4313c42.js";import{R as u}from"./api-38cb33cc.js";import{s as g,a as A}from"./stønadskontoDeltUttak100-ce558aaf.js";import{U as p}from"./UttaksplanInfo-326651d2.js";import"./index-7c191284.js";import"./IntlProvider-7d7f37e2.js";import"./validationUtils-3923a44f.js";import"./index-b3a39e30.js";import"./Link-b834ea2b.js";import"./index-e13aeee6.js";import"./_createSet-32a27317.js";import"./_baseToString-4b695375.js";import"./v4-a960c1f4.js";import"./useSøknad-bb41a340.js";import"./mapSøkerinfoDTO-f0b0bc3c.js";import"./AttachmentType-f6ad37cf.js";import"./useSaveLoadedRoute-d6f51789.js";import"./amplitude-bdf1e125.js";import"./submitUtils-4c286eb0.js";import"./Periodene-7b9c80a7.js";import"./apiInterceptor-c6c2844c.js";import"./leggTilPeriode-23ab0ec4.js";import"./Uttaksplan-4e4f58cd.js";import"./FormikFileUploader-cbd05895.js";import"./AttachmentList-bc8c7263.js";import"./Attachment-31710907.js";import"./links-b36d21ab.js";import"./arbeidsforholdUtils-667b1f29.js";import"./_baseIteratee-9b4fb880.js";import"./_baseUniq-e5198354.js";import"./formUtils-f08b9c6b.js";import"./useSøkerinfo-ae49b1f5.js";import"./LenkeKnapp-a5650a66.js";import"./InfoOmSøknaden-b1b47928.js";import"./useOnValidSubmit-6a5c6f7b.js";import"./dateUtils-8d5a81ce.js";import"./eksisterendeSakUtils-9aeb0224.js";import"./velkommenUtils-6a8ccc93.js";const F={søker:{fnr:"19047815714",fornavn:"TALENTFULL",etternavn:"MYGG",kjønn:"M",fødselsdato:"1978-04-19",barn:[]}},O=4,N="/soknad/uttaksplan-info",S={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2022-03-01"],antallBarn:"1",datoForAleneomsorg:"2022-03-24",dokumentasjonAvAleneomsorg:[]},annenForelder:{etternavn:"dfg",fornavn:"dfg",fnr:"02068629902",utenlandskFnr:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!0,erInformertOmSøknaden:!0},søker:{erAleneOmOmsorg:!0,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1},version:O,currentRoute:N,søknadGjelderEtNyttBarn:!0},M="/innsyn/v2/annenPartVedtak",n="/konto",x=F,U=S,uo={title:"steps/uttaksplan-info/FarMedmorFødselAleneomsorg",component:p,decorators:[k,d,l]},T=t=>{const m=async r=>{r.onPost(M).replyOnce(200,void 0,u.FINISHED),await r.onGet(n).replyOnce(200,t.stønadskonto100),await r.onGet(n).replyOnce(200,t.stønadskonto80)};return e.jsx(f,{mock:m,children:e.jsx(c,{søknad:t.context,søkerinfo:t.søkerinfo,children:e.jsx(p,{})})})},o=T.bind({});o.args={stønadskonto100:g,stønadskonto80:A,context:U,søkerinfo:x};var s,a,i;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const restMock = async (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    await apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    await apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(i=(a=o.parameters)==null?void 0:a.docs)==null?void 0:i.source}}};const go=["UttaksplanInfoFarMedmorFødselAleneomsorg"];export{o as UttaksplanInfoFarMedmorFødselAleneomsorg,go as __namedExportsOrder,uo as default};
//# sourceMappingURL=FarMedmorFodselAleneomsorg.stories-49438dfd.js.map
