{"version":3,"file":"Perioden-1c854ba4.js","sources":["../../../../packages/fp-common/src/common/types/PeriodeInfoType.ts","../../../../packages/fp-common/src/common/types/StønadskontoType.ts","../../../../packages/fp-common/src/common/types/UtsettelseÅrsakType.ts","../../../../packages/fp-common/src/common/types/Periode.ts","../../../../packages/fp-common/src/common/utils/Perioden.ts"],"sourcesContent":["export enum PeriodeInfoType {\n    avslåttPeriode = 'avslåttPeriode',\n    uttakAnnenPart = 'uttakAnnenPart',\n    utsettelseAnnenPart = 'utsettelseAnnenPart',\n}\n","export enum StønadskontoType {\n    Mødrekvote = 'MØDREKVOTE',\n    Fedrekvote = 'FEDREKVOTE',\n    Fellesperiode = 'FELLESPERIODE',\n    Foreldrepenger = 'FORELDREPENGER',\n    ForeldrepengerFørFødsel = 'FORELDREPENGER_FØR_FØDSEL',\n    Flerbarnsdager = 'FLERBARNSDAGER', // Ikke brukt som egen type i periodene\n    AktivitetsfriKvote = 'AKTIVITETSFRI_KVOTE', // Foreldrepenger\n}\n","export enum UtsettelseÅrsakType {\n    Ferie = 'LOVBESTEMT_FERIE',\n    Arbeid = 'ARBEID',\n    Sykdom = 'SYKDOM',\n    InstitusjonSøker = 'INSTITUSJONSOPPHOLD_SØKER',\n    InstitusjonBarnet = 'INSTITUSJONSOPPHOLD_BARNET',\n    HvØvelse = 'HV_OVELSE',\n    NavTiltak = 'NAV_TILTAK',\n    Fri = 'FRI',\n}\n","import { Arbeidsform } from './Arbeidsform';\nimport { Attachment } from './Attachment';\nimport { Forelder } from './Forelder';\nimport { MorsAktivitet } from './MorsAktivitet';\nimport { OppholdÅrsakType } from './OppholdÅrsakType';\nimport { OverføringÅrsakType } from './OverføringÅrsakType';\nimport { PeriodeHullÅrsak } from './PeriodeHullÅrsak';\nimport { PeriodeInfoType } from './PeriodeInfoType';\nimport { StønadskontoType } from './StønadskontoType';\nimport { TidsperiodeDate } from './TidsperiodeDate';\nimport { UtsettelseÅrsakType } from './UtsettelseÅrsakType';\n\nexport enum Periodetype {\n    Uttak = 'uttak',\n    Utsettelse = 'utsettelse',\n    Opphold = 'opphold',\n    Overføring = 'overføring',\n    Hull = 'ubegrunnetOpphold',\n    Info = 'info',\n    PeriodeUtenUttak = 'periodeUtenUttak',\n}\n\nexport interface PeriodeBase {\n    id: string;\n    type: Periodetype;\n    tidsperiode: TidsperiodeDate;\n    vedlegg?: Attachment[];\n}\n\nexport interface ForeldrepengerFørFødselUttaksperiode extends UttaksperiodeBase {\n    konto: StønadskontoType.ForeldrepengerFørFødsel;\n    skalIkkeHaUttakFørTermin: boolean;\n}\n\nexport interface UttaksperiodeBase extends PeriodeBase {\n    type: Periodetype.Uttak;\n    konto: StønadskontoType;\n    forelder: Forelder;\n    morsAktivitetIPerioden?: MorsAktivitet;\n    ønskerSamtidigUttak?: boolean;\n    samtidigUttakProsent?: string;\n    gradert?: boolean;\n    stillingsprosent?: string;\n    orgnumre?: string[];\n    arbeidsformer?: Arbeidsform[];\n    erArbeidstaker?: boolean;\n    harIkkeAktivitetskrav?: boolean;\n    vedlegg?: Attachment[];\n    ønskerFlerbarnsdager?: boolean;\n    erMorForSyk?: boolean;\n    angittAvAnnenPart?: boolean;\n}\n\nexport type Uttaksperiode = UttaksperiodeBase | ForeldrepengerFørFødselUttaksperiode;\n\nexport type UtsettelseFormPeriodeType = Utsettelsesperiode | Oppholdsperiode;\nexport interface Utsettelsesperiode extends PeriodeBase {\n    type: Periodetype.Utsettelse;\n    årsak: UtsettelseÅrsakType;\n    forelder: Forelder;\n    morsAktivitetIPerioden?: MorsAktivitet;\n    erArbeidstaker: boolean;\n    bekrefterArbeidIPerioden?: boolean;\n}\n\nexport interface Oppholdsperiode extends PeriodeBase {\n    type: Periodetype.Opphold;\n    årsak: OppholdÅrsakType;\n    forelder: Forelder;\n}\n\nexport interface Overføringsperiode extends PeriodeBase {\n    type: Periodetype.Overføring;\n    konto: StønadskontoType;\n    forelder: Forelder;\n    årsak: OverføringÅrsakType;\n}\n\nexport interface PeriodeHull extends PeriodeBase {\n    type: Periodetype.Hull;\n    tidsperiode: TidsperiodeDate;\n    årsak?: PeriodeHullÅrsak;\n}\n\ninterface InfoPeriodeBase extends PeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType;\n    overskrives: boolean;\n    visPeriodeIPlan: boolean;\n}\n\nexport interface AvslåttPeriode extends InfoPeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType.avslåttPeriode;\n    avslåttPeriodeType?: Periodetype;\n    kontoType: StønadskontoType | undefined;\n    forelder: Forelder;\n    overskrives: true;\n    visPeriodeIPlan: boolean;\n    kanSlettes: boolean;\n}\n\nexport interface UttakAnnenPartInfoPeriode extends InfoPeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType.uttakAnnenPart;\n    årsak: OppholdÅrsakType;\n    forelder: Forelder;\n    overskrives: true;\n    visPeriodeIPlan: boolean;\n    ønskerSamtidigUttak?: boolean;\n    samtidigUttakProsent?: string;\n    gradert?: boolean;\n    stillingsprosent?: string;\n}\n\nexport interface UtsettelseAnnenPartInfoPeriode extends InfoPeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType.utsettelseAnnenPart;\n    årsak: UtsettelseÅrsakType;\n    forelder: Forelder;\n    overskrives: true;\n    visPeriodeIPlan: boolean;\n}\n\nexport type InfoPeriode = AvslåttPeriode | UttakAnnenPartInfoPeriode | UtsettelseAnnenPartInfoPeriode;\n\nexport interface PeriodeUtenUttak extends PeriodeBase {\n    type: Periodetype.PeriodeUtenUttak;\n}\n\nexport interface PeriodeUtenUttakUtsettelse extends Omit<Utsettelsesperiode, 'forelder'> {\n    type: Periodetype.Utsettelse;\n    morsAktivitetIPerioden?: MorsAktivitet;\n    årsak: UtsettelseÅrsakType.Fri;\n    erArbeidstaker: boolean;\n    forelder: Forelder;\n}\n\nexport type Periode =\n    | Uttaksperiode\n    | Utsettelsesperiode\n    | Oppholdsperiode\n    | Overføringsperiode\n    | PeriodeHull\n    | PeriodeUtenUttakUtsettelse\n    | PeriodeUtenUttak\n    | InfoPeriode;\n\nexport function isUttaksperiode(periode: Periode): periode is Uttaksperiode {\n    return periode.type === Periodetype.Uttak;\n}\n\nexport const isForeldrepengerFørFødselUttaksperiode = (\n    periode: Periode,\n): periode is ForeldrepengerFørFødselUttaksperiode => {\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.ForeldrepengerFørFødsel;\n};\n\nexport const isUttakAvFellesperiode = (periode: Periode): periode is Uttaksperiode => {\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.Fellesperiode;\n};\n\nexport const isUttakAvForeldrepengerFørFødsel = (periode: Periode): periode is ForeldrepengerFørFødselUttaksperiode => {\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.ForeldrepengerFørFødsel;\n};\n\nexport const isUtsettelsesperiode = (periode: Periode): periode is Utsettelsesperiode => {\n    return periode.type === Periodetype.Utsettelse;\n};\n\nexport const isUtsettelsePgaFerie = (periode: Periode): periode is Utsettelsesperiode => {\n    return isUtsettelsesperiode(periode) && periode.årsak === UtsettelseÅrsakType.Ferie;\n};\n\nexport const isUtsettelsePgaArbeid = (periode: Periode): periode is Utsettelsesperiode => {\n    return isUtsettelsesperiode(periode) && periode.årsak === UtsettelseÅrsakType.Arbeid;\n};\n\nexport const isOverføringsperiode = (periode: Periode): periode is Overføringsperiode => {\n    return periode.type === Periodetype.Overføring;\n};\n\nexport const isOppholdsperiode = (periode: Periode): periode is Oppholdsperiode => {\n    return periode.type === Periodetype.Opphold;\n};\n\nexport const isInfoPeriode = (periode: Periode): periode is InfoPeriode => {\n    return periode.type === Periodetype.Info && periode.overskrives === true;\n};\n\nexport const isInfoPeriodeAnnenPart = (periode: Periode): periode is InfoPeriode => {\n    return (\n        periode.type === Periodetype.Info &&\n        (periode.infotype === PeriodeInfoType.uttakAnnenPart ||\n            periode.infotype === PeriodeInfoType.utsettelseAnnenPart)\n    );\n};\n\nexport const isHull = (periode: Periode): periode is PeriodeHull => {\n    return periode.type === Periodetype.Hull;\n};\n\nexport const isUtsettelseAnnenPart = (periode: Periode): periode is UtsettelseAnnenPartInfoPeriode => {\n    return periode.type === Periodetype.Info && periode.infotype === PeriodeInfoType.utsettelseAnnenPart;\n};\n\nexport const isAvslåttPeriode = (periode: Periode): periode is AvslåttPeriode => {\n    return periode.type === Periodetype.Info && periode.infotype === PeriodeInfoType.avslåttPeriode;\n};\n\nexport const isSlettbarAvslåttPeriode = (periode: Periode): periode is AvslåttPeriode => {\n    return isAvslåttPeriode(periode) && periode.kanSlettes;\n};\n\nexport const isUttakAnnenPart = (periode: Periode): periode is UttakAnnenPartInfoPeriode => {\n    return periode.type === Periodetype.Info && periode.infotype === PeriodeInfoType.uttakAnnenPart;\n};\n\nexport const isPeriodeUtenUttakUtsettelse = (periode: Periode): periode is PeriodeUtenUttakUtsettelse => {\n    return periode.type === Periodetype.Utsettelse && periode.årsak === UtsettelseÅrsakType.Fri;\n};\n\nexport const isPeriodeUtenUttak = (periode: Periode): periode is PeriodeUtenUttak => {\n    return periode.type === Periodetype.PeriodeUtenUttak;\n};\n\nexport const isOverskrivbarPeriode = (periode: Periode): boolean => {\n    return (\n        (periode.type === Periodetype.Info && periode.overskrives === true) ||\n        periode.type === Periodetype.Hull ||\n        isPeriodeUtenUttak(periode) ||\n        isPeriodeUtenUttakUtsettelse(periode)\n    );\n};\n\nconst isAnnenPartInfoPeriodeOppholdUttak = (periode: InfoPeriode) => {\n    return periode.infotype === PeriodeInfoType.uttakAnnenPart;\n};\n\nconst isAnnenPartInfoPeriodeOppholdUtsettelse = (periode: InfoPeriode) => {\n    return periode.infotype === PeriodeInfoType.utsettelseAnnenPart;\n};\n\nexport const isAnnenPartInfoPeriode = (periode: Periode): periode is UttakAnnenPartInfoPeriode => {\n    return (\n        periode.type === Periodetype.Info &&\n        (isAnnenPartInfoPeriodeOppholdUttak(periode) || isAnnenPartInfoPeriodeOppholdUtsettelse(periode))\n    );\n};\n","import dayjs from 'dayjs';\nimport { getTidsperiode, Tidsperioden } from './Tidsperioden';\nimport { Uttaksdagen } from './Uttaksdagen';\nimport { formaterDatoKompakt } from './dateUtils';\nimport { isForeldrepengerFørFødselUttaksperiode, Periode, Periodetype } from '../types';\n\nexport const Perioden = (periode: Periode) => ({\n    setStartdato: (fom: Date) => flyttPeriode(periode, fom),\n    setUttaksdager: (uttaksdager: number) =>\n        (periode.tidsperiode = getTidsperiode(periode.tidsperiode.fom, uttaksdager)),\n    getAntallUttaksdager: () => Tidsperioden(periode.tidsperiode).getAntallUttaksdager(),\n    getAntallFridager: () => Tidsperioden(periode.tidsperiode).getAntallFridager(),\n    erLik: (periode2: Periode, inkluderTidsperiode = false, inkluderUtsettelser = false) =>\n        erPerioderLike(periode, periode2, inkluderTidsperiode, inkluderUtsettelser),\n    erSammenhengende: (periode2: Periode) => erPerioderSammenhengende(periode, periode2),\n    inneholderFridager: () => Tidsperioden(periode.tidsperiode).getAntallFridager() > 0,\n    starterFør: (dato: Date) => dayjs(periode.tidsperiode.fom).isBefore(dato, 'day'),\n    slutterEtter: (dato: Date) => dayjs(periode.tidsperiode.tom).isAfter(dato, 'day'),\n    slutterSammeDagEllerEtter: (dato: Date) => dayjs(periode.tidsperiode.tom).isSameOrAfter(dato, 'day'),\n});\n\nfunction erPerioderSammenhengende(p1: Periode, p2: Periode) {\n    const p1NesteUttaksdato = Uttaksdagen(dayjs(p1.tidsperiode.tom).toDate()).neste();\n    const p2Startdato = p2.tidsperiode.fom;\n    return dayjs(p1NesteUttaksdato).isSame(p2Startdato, 'day');\n}\n\nfunction erPerioderLike(p1: Periode, p2: Periode, inkluderTidsperiode = false, inkluderUtsettelser = false) {\n    if (p1.type !== p2.type) {\n        return false;\n    }\n    if (inkluderUtsettelser === false && (p1.type === Periodetype.Utsettelse || p2.type === Periodetype.Utsettelse)) {\n        return false;\n    }\n    if (p1.type === Periodetype.Hull && p2.type === Periodetype.Hull) {\n        return true;\n    }\n    if (isForeldrepengerFørFødselUttaksperiode(p1) && isForeldrepengerFørFødselUttaksperiode(p2)) {\n        const fff1 = getPeriodeFootprint(\n            { ...p1, skalIkkeHaUttakFørTermin: p1.skalIkkeHaUttakFørTermin || false },\n            inkluderTidsperiode,\n        );\n        const fff2 = getPeriodeFootprint(\n            { ...p2, skalIkkeHaUttakFørTermin: p2.skalIkkeHaUttakFørTermin || false },\n            inkluderTidsperiode,\n        );\n        return fff1 === fff2;\n    }\n    const k1 = getPeriodeFootprint(p1, inkluderTidsperiode);\n    const k2 = getPeriodeFootprint(p2, inkluderTidsperiode);\n    return k1 === k2;\n}\n\nfunction getPeriodeFootprint(periode: Periode, inkluderTidsperiode = false) {\n    const { tidsperiode, id, ...rest } = periode;\n    const sortedPeriode: any = {};\n    Object.keys(rest)\n        .sort((a, b) => a.localeCompare(b))\n        .filter((key) => (rest as any)[key] !== undefined)\n        .forEach((key) => {\n            sortedPeriode[key] = (rest as any)[key];\n        });\n    if (inkluderTidsperiode && tidsperiode) {\n        sortedPeriode.tidsperiode = {\n            fom: tidsperiode.fom ? formaterDatoKompakt(tidsperiode.fom) : undefined,\n            tom: tidsperiode.tom ? formaterDatoKompakt(tidsperiode.tom) : undefined,\n        };\n    }\n    return JSON.stringify({ ...sortedPeriode });\n}\n\nfunction flyttPeriode(periode: Periode, fom: Date): Periode {\n    const { tidsperiode } = periode;\n\n    return {\n        ...periode,\n        tidsperiode: Tidsperioden({\n            fom: tidsperiode.fom,\n            tom: tidsperiode.tom,\n        }).setStartdato(fom),\n    };\n}\n"],"names":["PeriodeInfoType","StønadskontoType","UtsettelseÅrsakType","Periodetype","isUttaksperiode","periode","isForeldrepengerFørFødselUttaksperiode","isUttakAvFellesperiode","isUttakAvForeldrepengerFørFødsel","isUtsettelsesperiode","isUtsettelsePgaFerie","isUtsettelsePgaArbeid","isOverføringsperiode","isOppholdsperiode","isInfoPeriode","isInfoPeriodeAnnenPart","isHull","isUtsettelseAnnenPart","isAvslåttPeriode","isSlettbarAvslåttPeriode","isUttakAnnenPart","isPeriodeUtenUttakUtsettelse","isPeriodeUtenUttak","isOverskrivbarPeriode","isAnnenPartInfoPeriodeOppholdUttak","isAnnenPartInfoPeriodeOppholdUtsettelse","isAnnenPartInfoPeriode","Perioden","fom","flyttPeriode","uttaksdager","getTidsperiode","Tidsperioden","periode2","inkluderTidsperiode","inkluderUtsettelser","erPerioderLike","erPerioderSammenhengende","dato","dayjs","p1","p2","p1NesteUttaksdato","Uttaksdagen","p2Startdato","fff1","getPeriodeFootprint","fff2","k1","k2","tidsperiode","id","rest","sortedPeriode","a","b","key","formaterDatoKompakt"],"mappings":"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"}