import{j as s}from"./jsx-runtime-69eee039.js";import{w as u}from"./withRouter-ab431e13.js";import{w as O,F as R}from"./ForeldrepengerStateMock-ae7feae9.js";import{A as S}from"./AxiosMock-5a6f61ee.js";import{F as N,U}from"./UttaksplanInfo-e8ef205c.js";import{R as T}from"./api-6765dbc0.js";import"./index-7c191284.js";import"./useSøknad-e5916e1e.js";import"./validationUtils-024c2399.js";import"./index-b3a39e30.js";import"./Link-b834ea2b.js";import"./index-e13aeee6.js";import"./_createSet-1fb11dfb.js";import"./_baseToString-4b695375.js";import"./v4-a960c1f4.js";import"./mapSøkerinfoDTO-695a75e8.js";import"./AttachmentType-f6ad37cf.js";import"./useSaveLoadedRoute-b612c2e3.js";import"./amplitude-e7683f28.js";import"./submitUtils-db323592.js";import"./Periodene-7d2fd09b.js";import"./apiInterceptor-7ea9ce80.js";import"./leggTilPeriode-e3e6dffd.js";import"./Uttaksplan-ed9a705f.js";import"./index-dfb6bae5.js";import"./FormikFileUploader-8915696f.js";import"./AttachmentList-f19a2777.js";import"./Attachment-a9115a99.js";import"./links-b36d21ab.js";import"./arbeidsforholdUtils-d8402a3d.js";import"./_baseIteratee-9b4fb880.js";import"./_baseUniq-5ffc9a17.js";import"./formUtils-a66fbbf6.js";import"./useSøkerinfo-17a18f9b.js";import"./LenkeKnapp-a5650a66.js";import"./InfoOmSøknaden-642a1e87.js";import"./useOnValidSubmit-63822350.js";import"./dateUtils-df7c4084.js";import"./eksisterendeSakUtils-f13344d6.js";import"./velkommenUtils-4288805c.js";const A={søker:{fnr:"1212121313",fornavn:"Espen",etternavn:"Utvikler",kjønn:"M",fødselsdato:"1978-04-12",barn:[{fnr:"19047815714",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"TALENTFULL",etternavn:"MYGG"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},E=4,I="/soknad/uttaksplan-info",x={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-07-01"],antallBarn:"1",termindato:"2021-07-01"},annenForelder:{etternavn:"dfg",fornavn:"dsgdfg",fnr:"123123123",utenlandskFnr:!1,erUfør:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!1,harRettPåForeldrepengerIEØS:!1},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1,uttaksplan:[]},version:E,currentRoute:I,søknadGjelderEtNyttBarn:!0},D={FORELDREPENGER:250},L={farRundtFødsel:0,generellMinsterett:0,toTette:0},m={kontoer:D,minsteretter:L},P={FORELDREPENGER:200},_={farRundtFødsel:0,generellMinsterett:0,toTette:0},f={kontoer:P,minsteretter:_},v="/innsyn/v2/annenPartVedtak",a="/konto",o=x,M=A,Re={title:"steps/uttaksplan-info/FarMedmorFødselOgMorHarIkkeRett",component:N,decorators:[u,O]},g=t=>{const F=n=>{n.onPost(v).replyOnce(200,void 0,T.FINISHED),n.onGet(a).replyOnce(200,t.stønadskonto100),n.onGet(a).replyOnce(200,t.stønadskonto80)};return s.jsx(S,{mock:F,children:s.jsx(R,{søknad:t.context,søkerinfo:t.søkerinfo,children:s.jsx(U,{})})})},e=g.bind({});e.args={stønadskonto100:f,stønadskonto80:m,context:o,søkerinfo:M};const r=g.bind({});r.args={stønadskonto100:f,stønadskonto80:m,context:{...o,søknad:{...o.søknad,annenForelder:{...o.søknad.annenForelder,erUfør:!0}}},søkerinfo:M};var k,p,d;e.parameters={...e.parameters,docs:{...(k=e.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(d=(p=e.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};var i,c,l;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(l=(c=r.parameters)==null?void 0:c.docs)==null?void 0:l.source}}};const Se=["UttaksplanDerMorIkkeHarRettPåForeldrepenger","UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør"];export{e as UttaksplanDerMorIkkeHarRettPåForeldrepenger,r as UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør,Se as __namedExportsOrder,Re as default};
//# sourceMappingURL=FarMedmorFodselOgMorHarIkkeRett.stories-9abb936b.js.map
