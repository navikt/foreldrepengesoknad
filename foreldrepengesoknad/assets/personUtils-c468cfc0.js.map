{"version":3,"file":"personUtils-c468cfc0.js","sources":["../../src/app/utils/personUtils.ts"],"sourcesContent":["import { intlUtils, Kjønn } from '@navikt/fp-common';\nimport AnnenForelder, { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\nimport { NavnPåForeldre } from 'app/types/NavnPåForeldre';\nimport Person from 'app/types/Person';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const formaterNavn = (fornavn: string, etternavn: string, visEtternavn: boolean, mellomnavn?: string) => {\n    if (visEtternavn) {\n        return mellomnavn ? `${fornavn} ${mellomnavn} ${etternavn}` : `${fornavn} ${etternavn}`;\n    }\n    return mellomnavn ? `${fornavn} ${mellomnavn}` : `${fornavn}`;\n};\n\nconst navnSlutterPåSLyd = (navn: string): boolean => {\n    const sisteBokstav = navn.charAt(navn.length - 1).toLowerCase();\n    return sisteBokstav === 's' || sisteBokstav === 'x' || sisteBokstav === 'z';\n};\n\nexport const getNavnGenitivEierform = (navn: string, locale: string): string => {\n    if (locale !== 'nb') {\n        return navn;\n    }\n    if (navnSlutterPåSLyd(navn)) {\n        return `${navn}'`;\n    }\n    return `${navn}s`;\n};\n\nexport const getKjønnFromFnr = (annenForelder: AnnenForelder): Kjønn | undefined => {\n    if (isAnnenForelderOppgitt(annenForelder)) {\n        const { fnr } = annenForelder;\n\n        if (fnr === undefined || fnr.length !== 11) {\n            return undefined;\n        }\n        return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n    }\n\n    return undefined;\n};\n\nexport const getKjønnFromFnrString = (fnr: string): Kjønn | undefined => {\n    if (fnr.length !== 11) {\n        return undefined;\n    }\n    return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n};\n\nexport const getMorErAleneOmOmsorg = (\n    søkerErMor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder\n) => {\n    return søkerErMor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getMorHarRettPåForeldrepengerINorgeEllerEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return (\n            annenForelder.harRettPåForeldrepengerINorge === true || annenForelder.harRettPåForeldrepengerIEØS === true\n        );\n    }\n    return rolle === 'mor';\n};\n\nexport const getMorHarRettPåForeldrepengerIEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return annenForelder.harRettPåForeldrepengerINorge === true;\n    }\n    return rolle === 'mor';\n};\n\nexport const getFarMedmorErAleneOmOmsorg = (\n    søkerErFarMedmor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder\n) => {\n    return søkerErFarMedmor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getNavnPåForeldre = (\n    person: Person,\n    annenForelder: AnnenForelder,\n    erFarEllerMedmor: boolean,\n    intl: IntlShape\n): NavnPåForeldre => {\n    const navnSøker = person.fornavn;\n    const navnAnnenForelder =\n        isAnnenForelderOppgitt(annenForelder) && annenForelder.fornavn !== undefined && annenForelder.fornavn !== ''\n            ? annenForelder.fornavn\n            : intlUtils(intl, 'annen.forelder');\n    const navnMor = erFarEllerMedmor ? navnAnnenForelder : navnSøker;\n    const navnFarMedmor = erFarEllerMedmor ? navnSøker : navnAnnenForelder;\n\n    return {\n        mor: navnMor,\n        farMedmor: navnFarMedmor,\n    };\n};\n\nexport const getErSøkerFarEllerMedmor = (søkerRolle: Søkerrolle): boolean =>\n    søkerRolle === 'far' || søkerRolle === 'medmor';\n\nexport const erEldreEnn3ÅrOg3Måneder = (fødselsdato: Date) => {\n    return dayjs(fødselsdato).add(3, 'year').add(3, 'month').isBefore(dayjs(), 'day');\n};\n"],"names":["formaterNavn","fornavn","etternavn","visEtternavn","mellomnavn","navnSlutterPåSLyd","navn","sisteBokstav","getNavnGenitivEierform","locale","getKjønnFromFnr","annenForelder","isAnnenForelderOppgitt","fnr","getKjønnFromFnrString","getMorErAleneOmOmsorg","søkerErMor","søkerErAleneOmOmsorg","getMorHarRettPåForeldrepengerINorgeEllerEØS","rolle","søkerErFarEllerMedmor","getFarMedmorErAleneOmOmsorg","søkerErFarMedmor","getNavnPåForeldre","person","erFarEllerMedmor","intl","navnSøker","navnAnnenForelder","intlUtils","getErSøkerFarEllerMedmor","søkerRolle","erEldreEnn3ÅrOg3Måneder","fødselsdato","dayjs"],"mappings":"mMAQO,MAAMA,EAAe,CAACC,EAAiBC,EAAmBC,EAAuBC,IAChFD,EACOC,EAAa,GAAGH,KAAWG,KAAcF,IAAc,GAAGD,KAAWC,IAEzEE,EAAa,GAAGH,KAAWG,IAAe,GAAGH,IAGlDI,EAAqBC,GAA0B,CACjD,MAAMC,EAAeD,EAAK,OAAOA,EAAK,OAAS,CAAC,EAAE,cAClD,OAAOC,IAAiB,KAAOA,IAAiB,KAAOA,IAAiB,GAC5E,EAEaC,EAAyB,CAACF,EAAcG,IAC7CA,IAAW,KACJH,EAEPD,EAAkBC,CAAI,EACf,GAAGA,KAEP,GAAGA,KAGDI,EAAmBC,GAAoD,CAC5E,GAAAC,EAAuBD,CAAa,EAAG,CACjC,KAAA,CAAE,IAAAE,CAAQ,EAAAF,EAEhB,OAAIE,IAAQ,QAAaA,EAAI,SAAW,GAC7B,OAEJ,SAASA,EAAI,OAAO,CAAC,EAAG,EAAE,EAAI,IAAM,EAAI,IAAM,IAI7D,EAEaC,EAAyBD,GAAmC,CACjE,GAAAA,EAAI,SAAW,GAGZ,OAAA,SAASA,EAAI,OAAO,CAAC,EAAG,EAAE,EAAI,IAAM,EAAI,IAAM,GACzD,EAEaE,EAAwB,CACjCC,EACAC,EACAN,IAEOK,IAAeC,GAAwBN,EAAc,gBAAkB,IAGrEO,EAA8C,CACvDC,EACAC,EACAT,IAEIS,IAA0B,IAAQR,EAAuBD,CAAa,EAElEA,EAAc,gCAAkC,IAAQA,EAAc,8BAAgC,GAGvGQ,IAAU,MAcRE,EAA8B,CACvCC,EACAL,EACAN,IAEOW,IAAqBL,GAAwBN,EAAc,gBAAkB,IAG3EY,EAAoB,CAC7BC,EACAb,EACAc,EACAC,IACiB,CACjB,MAAMC,EAAYH,EAAO,QACnBI,EACFhB,EAAuBD,CAAa,GAAKA,EAAc,UAAY,QAAaA,EAAc,UAAY,GACpGA,EAAc,QACdkB,EAAUH,EAAM,gBAAgB,EAInC,MAAA,CACH,IAJYD,EAAmBG,EAAoBD,EAKnD,UAJkBF,EAAmBE,EAAYC,CAItC,CAEnB,EAEaE,EAA4BC,GACrCA,IAAe,OAASA,IAAe,SAE9BC,EAA2BC,GAC7BC,EAAMD,CAAW,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,OAAO,EAAE,SAASC,IAAS,KAAK"}