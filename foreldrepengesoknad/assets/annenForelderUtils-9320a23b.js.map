{"version":3,"file":"annenForelderUtils-9320a23b.js","sources":["../../src/app/steps/uttaksplan-info/utils/uttaksplanDatoavgrensninger.ts","../../src/app/utils/annenForelderUtils.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { Uttaksdagen } from './Uttaksdagen';\nimport uttaksConstants from 'app/constants';\nimport { andreAugust2022ReglerGjelder } from 'app/utils/dateUtils';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { getFørsteUttaksdag2UkerFørFødsel } from 'app/utils/wlbUtils';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { DatepickerLimitations } from '@navikt/ds-datepicker';\n\nfunction sisteMuligePermisjonsdag(familiehendelsedato: Date): Date {\n    const startDato = Uttaksdagen(familiehendelsedato).denneEllerNeste();\n    return Uttaksdagen(\n        dayjs(startDato).add(uttaksConstants.MAKS_PERMISJONSLENGDE_I_ÅR, 'years').toDate()\n    ).denneEllerNeste();\n}\n\nconst konverterMinOgMaxDatoerTilString = (minDate: Date, maxDate: Date) => ({\n    minDate: dateToISOString(minDate),\n    maxDate: dateToISOString(maxDate),\n});\n\nconst defaultPermisjonsperiodeAvgrensning = (familiehendelsesdato: Date): DatepickerLimitations => {\n    const minDato = Uttaksdagen(familiehendelsesdato).denneEllerNeste();\n    const maksDato = sisteMuligePermisjonsdag(familiehendelsesdato);\n    return {\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\n        weekendsNotSelectable: true,\n    };\n};\n\nconst startdatoFørTermin = (familiehendelsesdato: Date, termindato: Date | undefined): DatepickerLimitations => {\n    const datoÅRegneFra = termindato !== undefined ? termindato : familiehendelsesdato;\n    const maksDato = Uttaksdagen(dayjs(datoÅRegneFra).toDate()).forrige();\n    const minDato = Uttaksdagen(maksDato).trekkFra(uttaksConstants.MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1);\n    return {\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\n        weekendsNotSelectable: true,\n    };\n};\n\nconst startdatoFørTerminForeldrepengerFørFødselKonto = (familiehendelsesdato: string): DatepickerLimitations => {\n    const maksDato = Uttaksdagen(dayjs(familiehendelsesdato).toDate()).forrige();\n    const minDato = Uttaksdagen(maksDato).trekkFra(uttaksConstants.ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1);\n    return {\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\n        weekendsNotSelectable: true,\n    };\n};\n\nconst ekstrauttakFørFødsel = (familiehendelsesdato: string): DatepickerLimitations => {\n    const sisteDagFørFødsel = Uttaksdagen(dayjs(familiehendelsesdato).toDate()).forrige();\n    const minDato = Uttaksdagen(sisteDagFørFødsel).trekkFra(\n        uttaksConstants.MAKS_ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1\n    );\n    const maksDato = Uttaksdagen(sisteDagFørFødsel).trekkFra(\n        uttaksConstants.ANTALL_UKER_FORELDREPENGER_FØR_FØDSEL * 5 - 1\n    );\n    return {\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\n        weekendsNotSelectable: true,\n    };\n};\n\nconst startdatoPermisjonAleneomsorgFarMedmor = (\n    datoForAleneomsorg: string,\n    familiehendelsesdato: string\n): DatepickerLimitations => {\n    const minDato = Uttaksdagen(dayjs(datoForAleneomsorg).toDate()).denneEllerNeste();\n    const maksDato = sisteMuligePermisjonsdag(dayjs(familiehendelsesdato).toDate());\n    return {\n        ...konverterMinOgMaxDatoerTilString(minDato, maksDato),\n        weekendsNotSelectable: true,\n    };\n};\n\nconst startdatoPermisjonAdopsjon = (familiehendelsesdato: string): DatepickerLimitations => {\n    return defaultPermisjonsperiodeAvgrensning(dayjs(familiehendelsesdato).toDate());\n};\n\nconst morsSisteUttaksdag = (familiehendelsesdato: string): DatepickerLimitations => {\n    return defaultPermisjonsperiodeAvgrensning(dayjs(familiehendelsesdato).toDate());\n};\n\nconst startdatoPermisjonFarMedmor = (\n    familiehendelsesdato: Date,\n    termindato: Date | undefined,\n    situasjon: Situasjon\n): DatepickerLimitations => {\n    const defaultAvgrensning = defaultPermisjonsperiodeAvgrensning(familiehendelsesdato);\n    if (situasjon === 'fødsel' && andreAugust2022ReglerGjelder(familiehendelsesdato)) {\n        return {\n            ...defaultAvgrensning,\n            minDate: dateToISOString(getFørsteUttaksdag2UkerFørFødsel(familiehendelsesdato, termindato)),\n        };\n    }\n    return defaultAvgrensning;\n};\n\nexport const uttaksplanDatoavgrensninger = {\n    startdatoFørTermin,\n    morsSisteUttaksdag,\n    startdatoPermisjonFarMedmor,\n    startdatoPermisjonAdopsjon,\n    startdatoPermisjonAleneomsorgFarMedmor,\n    startdatoFørTerminForeldrepengerFørFødselKonto,\n    ekstrauttakFørFødsel,\n};\n","import { intlUtils } from '@navikt/fp-common';\nimport AnnenForelder, { AnnenForelderOppgitt, isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\nimport { RettighetType } from 'app/types/RettighetType';\nimport { Sak } from 'app/types/Sak';\nimport { IntlShape } from 'react-intl';\n\nexport const getErMorUfør = (annenForelder: AnnenForelder, erFarEllerMedmor: boolean) => {\n    if (isAnnenForelderOppgitt(annenForelder) && erFarEllerMedmor) {\n        return !!annenForelder.erUfør;\n    }\n\n    return false;\n};\n\nexport const harAnnenForelderRettIEØS = (annenForelder: AnnenForelder): boolean => {\n    return isAnnenForelderOppgitt(annenForelder) && !!annenForelder.harRettPåForeldrepengerIEØS;\n};\n\nexport const getMockAnnenForelder = (sak: Sak, intl: IntlShape): AnnenForelderOppgitt => {\n    return {\n        fornavn: intlUtils(intl, 'annen.forelder'),\n        etternavn: '',\n        fnr: '',\n        harRettPåForeldrepengerINorge:\n            sak.rettighetType === RettighetType.BEGGE_RETT && !sak.harAnnenForelderTilsvarendeRettEØS,\n        harRettPåForeldrepengerIEØS: sak.harAnnenForelderTilsvarendeRettEØS,\n        erUfør: (!sak.sakTilhørerMor && sak.morUføretrygd) || undefined,\n        kanIkkeOppgis: false,\n    };\n};\n"],"names":["sisteMuligePermisjonsdag","familiehendelsedato","startDato","Uttaksdagen","dayjs","uttaksConstants","konverterMinOgMaxDatoerTilString","minDate","maxDate","dateToISOString","defaultPermisjonsperiodeAvgrensning","familiehendelsesdato","minDato","maksDato","startdatoFørTermin","termindato","startdatoFørTerminForeldrepengerFørFødselKonto","ekstrauttakFørFødsel","sisteDagFørFødsel","startdatoPermisjonAleneomsorgFarMedmor","datoForAleneomsorg","startdatoPermisjonAdopsjon","morsSisteUttaksdag","startdatoPermisjonFarMedmor","situasjon","defaultAvgrensning","andreAugust2022ReglerGjelder","getFørsteUttaksdag2UkerFørFødsel","uttaksplanDatoavgrensninger","getErMorUfør","annenForelder","erFarEllerMedmor","isAnnenForelderOppgitt","harAnnenForelderRettIEØS"],"mappings":"iVASA,SAASA,EAAyBC,EAAiC,CAC/D,MAAMC,EAAYC,EAAYF,CAAmB,EAAE,gBAAgB,EAC5D,OAAAE,EACHC,EAAMF,CAAS,EAAE,IAAIG,EAAgB,2BAA4B,OAAO,EAAE,OAAO,GACnF,gBAAgB,CACtB,CAEA,MAAMC,EAAmC,CAACC,EAAeC,KAAmB,CACxE,QAASC,EAAgBF,CAAO,EAChC,QAASE,EAAgBD,CAAO,CACpC,GAEME,EAAuCC,GAAsD,CAC/F,MAAMC,EAAUT,EAAYQ,CAAoB,EAAE,gBAAgB,EAC5DE,EAAWb,EAAyBW,CAAoB,EACvD,MAAA,CACH,GAAGL,EAAiCM,EAASC,CAAQ,EACrD,sBAAuB,EAAA,CAE/B,EAEMC,EAAqB,CAACH,EAA4BI,IAAwD,CAEtG,MAAAF,EAAWV,EAAYC,EADPW,IAAe,OAAYA,EAAaJ,CACd,EAAE,OAAQ,CAAA,EAAE,UACtDC,EAAUT,EAAYU,CAAQ,EAAE,SAASR,EAAgB,2CAA6C,EAAI,CAAC,EAC1G,MAAA,CACH,GAAGC,EAAiCM,EAASC,CAAQ,EACrD,sBAAuB,EAAA,CAE/B,EAEMG,EAAkDL,GAAwD,CACtG,MAAAE,EAAWV,EAAYC,EAAMO,CAAoB,EAAE,OAAQ,CAAA,EAAE,UAC7DC,EAAUT,EAAYU,CAAQ,EAAE,SAASR,EAAgB,sCAAwC,EAAI,CAAC,EACrG,MAAA,CACH,GAAGC,EAAiCM,EAASC,CAAQ,EACrD,sBAAuB,EAAA,CAE/B,EAEMI,EAAwBN,GAAwD,CAC5E,MAAAO,EAAoBf,EAAYC,EAAMO,CAAoB,EAAE,OAAQ,CAAA,EAAE,UACtEC,EAAUT,EAAYe,CAAiB,EAAE,SAC3Cb,EAAgB,2CAA6C,EAAI,CAAA,EAE/DQ,EAAWV,EAAYe,CAAiB,EAAE,SAC5Cb,EAAgB,sCAAwC,EAAI,CAAA,EAEzD,MAAA,CACH,GAAGC,EAAiCM,EAASC,CAAQ,EACrD,sBAAuB,EAAA,CAE/B,EAEMM,EAAyC,CAC3CC,EACAT,IACwB,CAClB,MAAAC,EAAUT,EAAYC,EAAMgB,CAAkB,EAAE,OAAQ,CAAA,EAAE,kBAC1DP,EAAWb,EAAyBI,EAAMO,CAAoB,EAAE,QAAQ,EACvE,MAAA,CACH,GAAGL,EAAiCM,EAASC,CAAQ,EACrD,sBAAuB,EAAA,CAE/B,EAEMQ,EAA8BV,GACzBD,EAAoCN,EAAMO,CAAoB,EAAE,OAAQ,CAAA,EAG7EW,EAAsBX,GACjBD,EAAoCN,EAAMO,CAAoB,EAAE,OAAQ,CAAA,EAG7EY,EAA8B,CAChCZ,EACAI,EACAS,IACwB,CAClB,MAAAC,EAAqBf,EAAoCC,CAAoB,EACnF,OAAIa,IAAc,UAAYE,EAA6Bf,CAAoB,EACpE,CACH,GAAGc,EACH,QAAShB,EAAgBkB,EAAiChB,EAAsBI,CAAU,CAAC,CAAA,EAG5FU,CACX,EAEaG,EAA8B,CACvC,mBAAAd,EACA,mBAAAQ,EACA,4BAAAC,EACA,2BAAAF,EACA,uCAAAF,EACA,+CAAAH,EACA,qBAAAC,CACJ,ECpGaY,EAAe,CAACC,EAA8BC,IACnDC,EAAuBF,CAAa,GAAKC,EAClC,CAAC,CAACD,EAAc,OAGpB,GAGEG,EAA4BH,GAC9BE,EAAuBF,CAAa,GAAK,CAAC,CAACA,EAAc"}