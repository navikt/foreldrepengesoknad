{"version":3,"file":"FpDataContext-75ac2616.js","sources":["../../src/app/context/FpDataContext.tsx"],"sourcesContent":["import { createContext, useReducer, FunctionComponent, ReactNode, useContext } from 'react';\nimport { SøkersituasjonFp } from '@navikt/fp-types';\nimport { AnnenForelder, Barn, BarnFraNesteSak, EksisterendeSak, Periode } from '@navikt/fp-common';\nimport { Opphold, SenereOpphold, TidligereOpphold } from './types/InformasjonOmUtenlandsopphold';\nimport SøknadRoutes from 'app/routes/routes';\nimport Søker from './types/Søker';\nimport { UttaksplanMetaData } from 'app/types/UttaksplanMetaData';\nimport UttaksplanInfo from './types/UttaksplanInfo';\n\nexport enum ContextDataType {\n    APP_ROUTE = 'APP_ROUTE',\n    EKSISTERENDE_SAK = 'EKSISTERENDE_SAK',\n    BARN_FRA_NESTE_SAK = 'BARN_FRA_NESTE_SAK',\n    SØKERSITUASJON = 'SØKERSITUASJON',\n    OM_BARNET = 'OM_BARNET',\n    ANNEN_FORELDER = 'ANNEN_FORELDER',\n    SØKER = 'SØKER',\n    UTENLANDSOPPHOLD = 'UTENLANDSOPPHOLD',\n    UTENLANDSOPPHOLD_SENERE = 'UTENLANDSOPPHOLD_SENERE',\n    UTENLANDSOPPHOLD_TIDLIGERE = 'UTENLANDSOPPHOLD_TIDLIGERE',\n    UTTAKSPLAN_INFO = 'UTTAKSPLAN_INFO',\n    UTTAKSPLAN = 'UTTAKSPLAN',\n    UTTAKSPLAN_METADATA = 'UTTAKSPLAN_METADATA',\n}\n\nexport type ContextDataMap = {\n    [ContextDataType.APP_ROUTE]?: SøknadRoutes;\n    [ContextDataType.EKSISTERENDE_SAK]?: EksisterendeSak;\n    [ContextDataType.BARN_FRA_NESTE_SAK]?: BarnFraNesteSak;\n    [ContextDataType.SØKERSITUASJON]?: SøkersituasjonFp;\n    [ContextDataType.OM_BARNET]?: Barn;\n    [ContextDataType.ANNEN_FORELDER]?: AnnenForelder;\n    [ContextDataType.SØKER]?: Søker;\n    [ContextDataType.UTENLANDSOPPHOLD]?: Opphold;\n    [ContextDataType.UTENLANDSOPPHOLD_SENERE]?: SenereOpphold;\n    [ContextDataType.UTENLANDSOPPHOLD_TIDLIGERE]?: TidligereOpphold;\n    [ContextDataType.UTTAKSPLAN_INFO]?: UttaksplanInfo;\n    [ContextDataType.UTTAKSPLAN]?: Periode[];\n    [ContextDataType.UTTAKSPLAN_METADATA]?: UttaksplanMetaData;\n};\n\nconst defaultInitialState = {} as ContextDataMap;\n\nexport type Action = { type: 'update'; key: ContextDataType; data: any } | { type: 'reset' };\ntype Dispatch = (action: Action) => void;\ntype State = ContextDataMap;\n\nconst FpStateContext = createContext<State>(defaultInitialState);\nconst FpDispatchContext = createContext<Dispatch | undefined>(undefined);\n\ninterface OwnProps {\n    children: ReactNode;\n    initialState?: ContextDataMap;\n    onDispatch?: (action: Action) => void;\n}\n\nexport const FpDataContext: FunctionComponent<OwnProps> = ({ children, initialState, onDispatch }): JSX.Element => {\n    const [state, dispatch] = useReducer((oldState: State, action: Action) => {\n        switch (action.type) {\n            case 'update':\n                return {\n                    ...oldState,\n                    [action.key]: action.data,\n                };\n            case 'reset':\n                return {};\n            default:\n                throw new Error();\n        }\n    }, initialState || defaultInitialState);\n\n    const dispatchWrapper = (a: Action) => {\n        if (onDispatch) {\n            onDispatch(a);\n        }\n        dispatch(a);\n    };\n\n    return (\n        <FpStateContext.Provider value={state}>\n            <FpDispatchContext.Provider value={dispatchWrapper}>{children}</FpDispatchContext.Provider>\n        </FpStateContext.Provider>\n    );\n};\n\n/** Hook returns data for one specific data type  */\nexport const useContextGetData = <TYPE extends ContextDataType>(key: TYPE): ContextDataMap[TYPE] => {\n    const state = useContext(FpStateContext);\n    return state[key];\n};\n\n/** Hook returns function capable of getting all types of data from context state  */\nexport const useContextGetAnyData = () => {\n    const state = useContext(FpStateContext);\n\n    return <TYPE extends ContextDataType>(key: TYPE) => {\n        return state[key];\n    };\n};\n\n/** Hook returns save function for one specific data type */\nexport const useContextSaveData = <TYPE extends ContextDataType>(key: TYPE): ((data: ContextDataMap[TYPE]) => void) => {\n    const dispatch = useContext(FpDispatchContext);\n    return (data: ContextDataMap[TYPE]) => {\n        if (dispatch) {\n            dispatch({ type: 'update', key, data });\n        }\n    };\n};\n\n/** Hook returns save function usable with all data types  */\nexport const useContextSaveAnyData = () => {\n    const dispatch = useContext(FpDispatchContext);\n    return <TYPE extends ContextDataType>(key: TYPE, data: ContextDataMap[TYPE]) => {\n        if (dispatch) {\n            dispatch({ type: 'update', key, data });\n        }\n    };\n};\n\n/** Hook returns state reset function  */\nexport const useContextReset = () => {\n    const dispatch = useContext(FpDispatchContext);\n    return () => {\n        if (dispatch) {\n            dispatch({ type: 'reset' });\n        }\n    };\n};\n\n// TODO (TOR) Fjern denne\n/**\n * @deprecated Bruk heller useFpStateData eller useFpStateAllDataFn\n */\nexport const useContextComplete = () => {\n    return useContext(FpStateContext);\n};\n"],"names":["ContextDataType","ContextDataType2","defaultInitialState","FpStateContext","createContext","FpDispatchContext","FpDataContext","children","initialState","onDispatch","state","dispatch","useReducer","oldState","action","dispatchWrapper","a","jsx","useContextGetData","key","useContext","useContextGetAnyData","useContextSaveData","data","useContextSaveAnyData","useContextReset","useContextComplete"],"mappings":"sFASO,IAAAA,GAAAC,IACHA,EAAA,UAAA,YACAA,EAAA,iBAAA,mBACAA,EAAA,mBAAA,qBACAA,EAAA,eAAA,iBACAA,EAAA,UAAA,YACAA,EAAA,eAAA,iBACAA,EAAA,MAAA,QACAA,EAAA,iBAAA,mBACAA,EAAA,wBAAA,0BACAA,EAAA,2BAAA,6BACAA,EAAA,gBAAA,kBACAA,EAAA,WAAA,aACAA,EAAA,oBAAA,sBAbQA,IAAAD,GAAA,CAAA,CAAA,EAgCZ,MAAAE,EAAA,CAAA,EAMAC,EAAAC,EAAAA,cAAAF,CAAA,EACAG,EAAAD,EAAAA,cAAA,MAAA,EAQOE,EAAA,CAAA,CAAA,SAAAC,EAAA,aAAAC,EAAA,WAAAC,CAAA,IAAA,CACH,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,WAAA,CAAAC,EAAAC,IAAA,CACI,OAAAA,EAAA,KAAA,CAAqB,IAAA,SAEb,MAAA,CAAO,GAAAD,EACA,CAAAC,EAAA,GAAA,EAAAA,EAAA,IACkB,EACzB,IAAA,QAEA,MAAA,GAAQ,QAER,MAAA,IAAA,KAAgB,CACxB,EAAAN,GAAAN,CAAA,EAGJa,EAAAC,GAAA,CACIP,GACIA,EAAAO,CAAA,EAEJL,EAAAK,CAAA,CAAU,EAGd,OAAAC,EAAAA,IAAAd,EAAA,SAAA,CAAA,MAAAO,EAAA,SAAAO,EAAAA,IAAAZ,EAAA,SAAA,CAAA,MAAAU,EAAA,SAAAR,CAAA,CAAA,CAAA,CAAA,CAKJ,EAGOW,EAAAC,GACHC,aAAAjB,CAAA,EACAgB,CAAA,EAIGE,EAAA,IAAA,CACH,MAAAX,EAAAU,aAAAjB,CAAA,EAEA,OAAAgB,GACIT,EAAAS,CAAA,CAER,EAGOG,EAAAH,GAAA,CACH,MAAAR,EAAAS,aAAAf,CAAA,EACA,OAAAkB,GAAA,CACIZ,GACIA,EAAA,CAAA,KAAA,SAAA,IAAAQ,EAAA,KAAAI,CAAA,CAAA,CACJ,CAER,EAGOC,EAAA,IAAA,CACH,MAAAb,EAAAS,aAAAf,CAAA,EACA,MAAA,CAAAc,EAAAI,IAAA,CACIZ,GACIA,EAAA,CAAA,KAAA,SAAA,IAAAQ,EAAA,KAAAI,CAAA,CAAA,CACJ,CAER,EAGOE,EAAA,IAAA,CACH,MAAAd,EAAAS,aAAAf,CAAA,EACA,MAAA,IAAA,CACIM,GACIA,EAAA,CAAA,KAAA,OAAA,CAAA,CACJ,CAER,EAMOe,EAAA,IACHN,EAAAA,WAAAjB,CAAA"}