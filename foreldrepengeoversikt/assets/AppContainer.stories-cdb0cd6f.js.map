{"version":3,"file":"AppContainer.stories-cdb0cd6f.js","sources":["../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Dialog.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/DialogReport.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Edit.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/ExternalLink.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/FileContent.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Folder.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Home.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Next.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Send.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Telephone.js","../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Warning.js","../../../../node_modules/.pnpm/detect-browser@5.3.0/node_modules/detect-browser/es/index.js","../../src/app/utils/browserUtils.ts","../../src/app/components/bytt-browser-modal/ByttBrowserModal.tsx","../../src/app/components/error-boundary/ErrorBoundary.tsx","../../src/app/atoms/backgroundColorAtom.ts","../../src/app/hooks/useBackgroundColor.ts","../../src/app/components/content-section/ContentSection.tsx","../../src/app/components/se-dokumenter/SeDokumenter.tsx","../../src/app/atoms/selectedSakAtom.ts","../../src/app/hooks/useSelectedSak.ts","../../src/app/types/StønadskontoType.ts","../../src/app/types/UtsettelseÅrsakType.ts","../../src/app/utils/stringUtils.ts","../../../../packages/utils/src/countryUtils.ts","../../../../packages/utils/src/dateUtils.ts","../../src/app/types/MorsAktivitet.ts","../../src/app/types/PeriodeResultatÅrsak.ts","../../src/app/utils/tidsperiodeUtils.ts","../../src/app/utils/Uttaksdagen.ts","../../src/app/utils/periodeUtils.ts","../../src/app/types/RettighetType.ts","../../src/app/types/UttaksplanColor.ts","../../src/app/utils/styleUtils.ts","../../src/app/components/icon-box/IconBox.tsx","../../src/assets/ArbeidIkon.tsx","../../src/assets/FerieIkon.tsx","../../src/assets/SykdomIkon.tsx","../../src/assets/UttakIkon.tsx","../../src/app/components/uttaksplan-ikon/UttaksplanIkon.tsx","../../src/app/components/stønadskonto-ikon/StønadskontoIkon.tsx","../../src/app/components/utsettelse-ikon/UtsettelseIkon.tsx","../../src/app/components/periode-liste-item/PeriodeListeItem.tsx","../../src/app/components/periode-liste/PeriodeListe.tsx","../../src/app/components/periode-oversikt/PeriodeOversikt.tsx","../../src/app/utils/planUtils.ts","../../src/app/sections/din-plan/DinPlan.tsx","../../src/app/sections/oppgave-lenkepanel/OppgaveLenkepanel.tsx","../../src/app/sections/oppgaver/Oppgaver.tsx","../../src/app/utils/dokumenterUtils.ts","../../src/app/sections/tidslinje/DokumentHendelse.tsx","../../src/app/types/TidslinjehendelseType.ts","../../src/app/types/AktørType.ts","../../src/app/types/BehandlingTilstand.ts","../../src/app/types/TilretteleggingsperiodeSVP.ts","../../src/app/utils/tidslinjeUtils.ts","../../src/app/sections/tidslinje/TidslinjeHendelse.tsx","../../src/app/components/noe-gikk-galt/NoeGikkGalt.tsx","../../src/app/sections/tidslinje/Tidslinje.tsx","../../src/app/components/se-hele-prosessen/SeHeleProsessen.tsx","../../src/app/components/bekreftelse-sendt-søknad/BekreftelseSendtSøknad.tsx","../../src/app/atoms/isRedirectedFromSøknadAtom.ts","../../src/app/types/RedirectSource.ts","../../src/app/hooks/useIsRedirectedFromSøknad.ts","../../src/app/pages/saksoversikt/Saksoversikt.tsx","../../src/app/pages/Sak.tsx","../../src/app/pages/din-plan-page/DinPlanPage.tsx","../../src/app/components/har-ikke-saker/HarIkkeSaker.tsx","../../src/assets/EtBarn.tsx","../../src/assets/ToBarn.tsx","../../src/assets/TreBarn.tsx","../../src/app/components/status-tag/StatusTag.tsx","../../src/app/components/sak-link/SakLink.tsx","../../src/app/components/har-saker/HarSaker.tsx","../../src/app/pages/forside/Forside.tsx","../../src/assets/TåteflaskeBaby.tsx","../../src/app/utils/globalUtils.ts","../../src/app/types/Breadcrumb.ts","../../src/app/components/breadcrumb/Breadcrumb.tsx","../../src/app/components/header/Header.tsx","../../src/app/types/DokumentType.ts","../../src/app/components/dokument-avsender/DokumentAvsender.tsx","../../src/app/components/dokument/Dokument.tsx","../../src/app/components/grupperte-dokumenter/GrupperteDokumenter.tsx","../../src/app/pages/dokumenter-page/DokumenterPage.tsx","../../src/app/pages/minidialog-page/MinidialogPage.tsx","../../src/app/components/snarveier/Snarveier.tsx","../../src/app/sections/kontakt-oss/KontaktOss.tsx","../../src/app/pages/tidslinje-page/TidslinjePage.tsx","../../src/app/routes/ForeldrepengeoversiktRoutes.tsx","../../src/app/Foreldrepengeoversikt.tsx","../../src/app/AppContainer.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgDialog = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M18 4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12.79l4-2.462V18a2 2 0 0 0 2 2h8.447L22 22.563V10a2 2 0 0 0-2-2h-2V4ZM6 10v2h-.033L4 13.21V4h12v4H8a2 2 0 0 0-2 2Zm14 8.571V10H8v8h8.886L20 19.437v-.866ZM11 15a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm4-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm2 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\", fill: \"currentColor\" })));\n});\nexport default SvgDialog;\n//# sourceMappingURL=Dialog.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgDialogReport = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M0 4a4 4 0 0 1 4-4h16a4 4 0 0 1 4 4v11a4 4 0 0 1-4 4H7l-7 5V4Zm21.994-.15A2 2 0 0 0 20 2l-16.15.005A2 2 0 0 0 2 4v16l4-3h14c1.035-.076 2-.946 2-2l-.006-11.15ZM10.5 13.5a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM11 4h2v6h-2V4Z\", fill: \"currentColor\" })));\n});\nexport default SvgDialogReport;\n//# sourceMappingURL=DialogReport.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgEdit = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M22.835 1.165a3.976 3.976 0 0 1 0 5.623L8.073 21.549.682 24 0 23.318l2.45-7.392L17.21 1.165a3.977 3.977 0 0 1 5.624 0Zm-4.218 7.029-2.811-2.812L4.188 17l-1.393 4.205 4.207-1.395L18.618 8.194ZM21.43 2.57a1.989 1.989 0 0 0-2.703-.1l-.108.1-1.406 1.406 2.811 2.812 1.406-1.406a1.988 1.988 0 0 0 .101-2.703l-.1-.109Z\", fill: \"currentColor\" })));\n});\nexport default SvgEdit;\n//# sourceMappingURL=Edit.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgExternalLink = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M20.586 2H14V0h10v10h-2V3.414L10.707 14.707l-1.414-1.414L20.586 2ZM0 5a2 2 0 0 1 2-2h8.5v2H2v17h17v-8.5h2V22a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V5Z\", fill: \"currentColor\" })));\n});\nexport default SvgExternalLink;\n//# sourceMappingURL=ExternalLink.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgFileContent = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"m14 0 7 7v17H3V0h11Zm-2 2H5v20h14V8h-7V2Zm3 15v2H7v-2h8Zm2-4v2H7v-2h10Zm-4-4v2H7V9h6Zm1-6.17V6l3.17-.001L14 2.83Z\", fill: \"currentColor\" })));\n});\nexport default SvgFileContent;\n//# sourceMappingURL=FileContent.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgFolder = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M9 8V4H2v16h20V8H9ZM0 4v16a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H11V4a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2Z\", fill: \"currentColor\" })));\n});\nexport default SvgFolder;\n//# sourceMappingURL=Folder.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgHome = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"m12 0 10 10v14h-9v-6h-2v6H2V10L12 0Zm0 2.829-8 7.999V22h5v-6h6v6h5V10.829l-8-8Z\", fill: \"currentColor\" })));\n});\nexport default SvgHome;\n//# sourceMappingURL=Home.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgNext = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"m17.414 12-7.707 7.707-1.414-1.414L14.586 12 8.293 5.707l1.414-1.414L17.414 12Z\", fill: \"currentColor\" })));\n});\nexport default SvgNext;\n//# sourceMappingURL=Next.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgSend = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M23.462 12 1.532 2.254 3.97 12l-2.436 9.747L23.463 12ZM5.781 11 4.467 5.747 18.537 12l-14.07 6.253L5.781 13H12v-2H5.78Z\", fill: \"currentColor\" })));\n});\nexport default SvgSend;\n//# sourceMappingURL=Send.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgTelephone = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M5.1 2a2 2 0 0 1 2.829 0l3.692 3.692a2 2 0 0 1 .001 2.828l-1.309 1.31 4.255 4.253 1.308-1.309a2 2 0 0 1 2.828 0L22 16.067a2 2 0 0 1 0 2.828l-2.18 2.182a4.081 4.081 0 0 1-4.835.702A31.817 31.817 0 0 1 2.221 9.018a4.082 4.082 0 0 1 .698-4.835L5.1 2.001Zm5.107 5.106L6.515 3.414l-2.18 2.183a2.082 2.082 0 0 0-.357 2.466 29.817 29.817 0 0 0 11.962 11.96c.81.44 1.814.294 2.466-.358l2.18-2.182-3.296-3.295-2.722 2.724L7.485 9.83l2.722-2.724Z\", fill: \"currentColor\" })));\n});\nexport default SvgTelephone;\n//# sourceMappingURL=Telephone.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgWarning = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M12 0a1 1 0 0 1 .894.553l11 22A1 1 0 0 1 23 24H1a1 1 0 0 1-.894-1.447l11-22A1 1 0 0 1 12 0Zm9.382 22L12 3.236 2.618 22h18.764ZM11 15V8h2v7h-2Zm1 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\", fill: \"currentColor\" })));\n});\nexport default SvgWarning;\n//# sourceMappingURL=Warning.js.map","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","import { detect } from 'detect-browser';\n\nexport const shouldChangeBrowser = () => {\n    const browserInfo = detect();\n    return browserInfo ? browserInfo.name === 'ie' : false;\n};\n","import { FormattedMessage, useIntl } from 'react-intl';\nimport { shouldChangeBrowser } from 'app/utils/browserUtils';\nimport { bemUtils, intlUtils } from '@navikt/fp-common';\nimport { BodyShort, Button, Heading, Modal } from '@navikt/ds-react';\nimport { Warning } from '@navikt/ds-icons';\n\nimport './byttBrowserModal.less';\nimport { useState } from 'react';\n\nconst ByttBrowserModal: React.FunctionComponent = () => {\n    const [isOpen, toggleIsOpen] = useState(shouldChangeBrowser());\n    const intl = useIntl();\n    const cls = bemUtils('bytt-browser-modal');\n\n    return (\n        <Modal\n            className={cls.block}\n            aria-label={intlUtils(intl, 'byttBrowser.tittel')}\n            closeButton={false}\n            open={isOpen}\n            onClose={() => undefined}\n        >\n            <Warning />\n            <Heading size=\"medium\">\n                <FormattedMessage id=\"byttBrowser.tittel\" />\n            </Heading>\n            <BodyShort>\n                <FormattedMessage id=\"byttBrowser.ingress\" />\n            </BodyShort>\n            <div className={cls.element('ok-knapp')}>\n                <Button onClick={() => toggleIsOpen(false)}>\n                    <FormattedMessage id=\"ok\" />\n                </Button>\n            </div>\n        </Modal>\n    );\n};\nexport default ByttBrowserModal;\n","import * as Sentry from '@sentry/browser';\nimport { Component } from 'react';\n\ninterface State {\n    error: Error | null;\n    hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<any, State> {\n    constructor(props: unknown) {\n        super(props);\n        this.state = { hasError: false, error: null };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any): void {\n        if (error && error.message !== 'window.hasFocus is not a function') {\n            this.setState({ ...this.state, hasError: true, error });\n\n            Sentry.withScope((scope) => {\n                scope.setExtras(errorInfo);\n                Sentry.captureException(error);\n            });\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div style={{ padding: '2rem', maxWidth: '704px', margin: '0 auto' }}>{this.state.error?.message}</div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;\n","import { atom } from 'jotai';\n\nexport const backgroundColorAtom = atom('blue');\n","import { backgroundColorAtom } from 'app/atoms/backgroundColorAtom';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { useEffect } from 'react';\n\nexport const useGetBackgroundColor = () => {\n    const backgroundColor = useAtomValue(backgroundColorAtom);\n    return backgroundColor;\n};\n\nexport const useSetBackgroundColor = (color: 'blue' | 'white') => {\n    const setBackgroundColor = useSetAtom(backgroundColorAtom);\n\n    useEffect(() => {\n        setBackgroundColor(color);\n    }, [setBackgroundColor, color]);\n};\n","import { Heading, Skeleton, SkeletonProps } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport classNames from 'classnames';\nimport { FunctionComponent } from 'react';\n\nimport './content-section.css';\n\ntype BackgroundColor = 'white' | 'yellow';\ntype Padding = 'default' | 'none' | 'large';\ntype CornerStyle = 'rounded' | 'square';\n\ninterface Props {\n    backgroundColor?: BackgroundColor;\n    children: React.ReactNode;\n    cornerStyle?: CornerStyle;\n    heading?: string;\n    padding?: Padding;\n    showSkeleton?: boolean;\n    skeletonProps?: SkeletonProps;\n    marginBottom?: 'default' | 'small';\n}\n\nconst ContentSection: FunctionComponent<Props> = ({\n    heading,\n    children,\n    backgroundColor = 'white',\n    cornerStyle = 'rounded',\n    padding = 'default',\n    showSkeleton = false,\n    marginBottom = 'default',\n    skeletonProps,\n}) => {\n    const bem = bemUtils('content-section');\n\n    if (showSkeleton && skeletonProps) {\n        return (\n            <div className={bem.element('skeleton')}>\n                {heading && (\n                    <Heading size=\"medium\" level=\"2\" className={bem.element('heading')}>\n                        {heading}\n                    </Heading>\n                )}\n                <Skeleton {...skeletonProps} />\n            </div>\n        );\n    }\n\n    return (\n        <section>\n            {heading && (\n                <Heading size=\"medium\" level=\"2\" className={bem.element('heading')}>\n                    {heading}\n                </Heading>\n            )}\n            <div\n                className={classNames(\n                    bem.block,\n                    bem.modifier(`bg-${backgroundColor}`),\n                    bem.modifier(`padding-${padding}`),\n                    bem.modifier(`corner-style-${cornerStyle}`),\n                    bem.modifier(`margin-${marginBottom}`),\n                )}\n            >\n                {children}\n            </div>\n        </section>\n    );\n};\n\nexport default ContentSection;\n","import { LinkPanel } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport OversiktRoutes from 'app/routes/routes';\n\nimport { Link } from 'react-router-dom';\n\nimport './se-dokumenter.css';\n\nconst SeDokumenter = () => {\n    const bem = bemUtils('se-dokumenter');\n\n    return (\n        <LinkPanel as={Link} to={OversiktRoutes.DOKUMENTER} border={false} className={bem.element('linkPanel')}>\n            <LinkPanel.Title as=\"h2\">\n                <div className={bem.block}>Se dokumentene i saken</div>\n            </LinkPanel.Title>\n        </LinkPanel>\n    );\n};\n\nexport default SeDokumenter;\n","import { Sak } from 'app/types/Sak';\nimport { atom } from 'jotai';\n\nexport const selectedSakAtom = atom<Sak | undefined>(undefined);\n","import { selectedSakAtom } from 'app/atoms/selectedSakAtom';\nimport { Sak } from 'app/types/Sak';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { useEffect } from 'react';\n\nexport const useGetSelectedSak = () => {\n    const selectedSak = useAtomValue(selectedSakAtom);\n    return selectedSak;\n};\n\nexport const useSetSelectedSak = (sak: Sak) => {\n    const setSelectedSak = useSetAtom(selectedSakAtom);\n\n    useEffect(() => {\n        setSelectedSak(sak);\n    }, [setSelectedSak, sak]);\n};\n","export enum StønadskontoType {\n    Mødrekvote = 'MØDREKVOTE',\n    Fedrekvote = 'FEDREKVOTE',\n    Fellesperiode = 'FELLESPERIODE',\n    Foreldrepenger = 'FORELDREPENGER',\n    ForeldrepengerFørFødsel = 'FORELDREPENGER_FØR_FØDSEL',\n    Flerbarnsdager = 'FLERBARNSDAGER', // Ikke brukt som egen type i periodene\n    AktivitetsfriKvote = 'AKTIVITETSFRI_KVOTE', // Foreldrepenger\n}\n","export enum UtsettelseÅrsakType {\n    Ferie = 'LOVBESTEMT_FERIE',\n    Arbeid = 'ARBEID',\n    Sykdom = 'SØKER_SYKDOM',\n    InstitusjonSøker = 'SØKER_INNLAGT',\n    InstitusjonBarnet = 'BARN_INNLAGT',\n    HvØvelse = 'HV_ØVELSE',\n    NavTiltak = 'NAV_TILTAK',\n    Fri = 'FRI',\n}\n","export const capitalizeFirstLetter = (s: string): string => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","import * as countries from 'i18n-iso-countries';\nimport * as langNB from 'i18n-iso-countries/langs/nb.json';\nimport * as langNN from 'i18n-iso-countries/langs/nn.json';\n\ncountries.registerLocale(langNB);\ncountries.registerLocale(langNN);\n\n/** Kilde:\n * https://www.nav.no/no/person/flere-tema/arbeid-og-opphold-i-utlandet/relatert-informasjon/eos-landene\n */\nexport const filteredListEØSCountries = (countryOptionValue: string, shouldFilter?: boolean) => {\n    if (shouldFilter) {\n        switch (countryOptionValue) {\n            case 'BE': // Belgia\n            case 'BG': // Bulgaria\n            case 'DK': // Danmark\n            case 'EE': // Estland\n            case 'FI': // Finland\n            case 'FR': // Frankrike\n            case 'GR': // Hellas\n            case 'IE': // Irland\n            case 'IS': // Island\n            case 'IT': // Italia\n            case 'HR': // Kroatia\n            case 'CY': // Kypros\n            case 'LV': // Latvia\n            case 'LI': // Liechtenstein\n            case 'LT': // Litauen\n            case 'LU': // Luxembourg\n            case 'MT': // Malta\n            case 'NL': // Nederland\n            case 'NO': // Norge\n            case 'PL': // Polen\n            case 'PT': // Portugal\n            case 'RO': // Romania\n            case 'SK': // Slovakia\n            case 'SI': // Slovenia\n            case 'ES': // Spania\n            case 'CH': // Sveits\n            case 'SE': // Sverige\n            case 'CZ': // Tsjekkia\n            case 'DE': // Tyskland\n            case 'HU': // Ungarn\n            case 'AT': // Østerrike\n                return true;\n            default:\n                return false;\n        }\n    } else {\n        // Filter ut Antarktis\n        return countryOptionValue !== 'AQ';\n    }\n};\n\nexport const getLocaleKey = (locale: string): string => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n\nexport const getCountryName = (alphaCode: string, locale: string): string => {\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer NAV sin landkode av Kosovo til i18n-iso-countries sin landkode for å hente riktig landsnavn.\n    if (alphaCode === 'XXK') {\n        alphaCode = 'XKX';\n    }\n    return countries.getName(alphaCode, getLocaleKey(locale));\n};\n\nexport const getAlpha3Code = (alpha2Code: string) => {\n    const countryAlpha3Code = countries.alpha2ToAlpha3(alpha2Code).toUpperCase();\n\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer i18n-iso-countries sin landkode til landkode som brukes i NAV for å sende riktig kode videre.\n    return countryAlpha3Code === 'XKX' ? 'XXK' : countryAlpha3Code;\n};\n\nexport const countryIsMemberOfEøsOrEfta = (isoCode: string) => {\n    let isoCodeToUse = isoCode.toUpperCase();\n    if (isoCodeToUse === 'XXK') {\n        isoCodeToUse = 'XKX';\n    }\n    isoCodeToUse = isoCodeToUse.length === 2 ? isoCodeToUse : countries.alpha3ToAlpha2(isoCodeToUse);\n    return filteredListEØSCountries(isoCodeToUse.toUpperCase(), true) === true;\n};\n\nexport const getCountries = () => countries;\n\nexport const createCountryOptions = (): Record<string, any> => {\n    const lang = 'nb';\n    const countries = getCountries();\n\n    const names: Array<[string, any]> = Object.entries(countries.getNames(lang));\n    return names\n        .sort((a: string[], b: string[]) => a[1].localeCompare(b[1], lang))\n        .filter((countryOptionValue: string[]) => filteredListEØSCountries(countryOptionValue[0], false));\n};\n","import dayjs from 'dayjs';\nimport { DATE_TODAY, DDMMYYYY_DATE_FORMAT, ISO_DATE_FORMAT } from '@navikt/fp-constants';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { TIME_FORMAT } from '@navikt/fp-constants/src/dates';\n\ndayjs.extend(isBetween);\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isSameOrAfter);\n\ntype Period = { from: Date; to: Date };\n\ntype DateTypes = string | Date | dayjs.Dayjs;\nexport const formatDate = (date: Date | string) => dayjs(date).format(DDMMYYYY_DATE_FORMAT);\nexport const formatDateIso = (date: Date | string) => dayjs(date).format(ISO_DATE_FORMAT);\nexport const formatTime = (date: Date | string) => dayjs(date).format(TIME_FORMAT);\n\nexport const isToday = (date: DateTypes): boolean => dayjs(date).isSame(DATE_TODAY, 'day');\nexport const isAfterToday = (date: DateTypes): boolean => dayjs(date).isAfter(DATE_TODAY, 'day');\nexport const isBeforeToday = (date: DateTypes): boolean => dayjs(date).isBefore(DATE_TODAY, 'day');\nexport const isSameOrAfterToday = (date: DateTypes): boolean => dayjs(date).isSameOrAfter(DATE_TODAY, 'day');\nexport const isSameOrBeforeToday = (date: DateTypes): boolean => dayjs(date).isSameOrBefore(DATE_TODAY, 'day');\nexport const isDateASameOrBeforeDateB = (dateA: DateTypes, dateB: DateTypes): boolean =>\n    dayjs(dateA).isSameOrBefore(dateB, 'day');\nexport const isDateAAfterDateB = (dateA: DateTypes, dateB: DateTypes): boolean => dayjs(dateA).isAfter(dateB, 'day');\nexport const isDateWithinRange = (date: Date, minDate: Date, maxDate: Date): boolean =>\n    dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\n\nexport const erMyndig = (fødselsdato: string) => {\n    const now = dayjs();\n    const momentDate = dayjs(fødselsdato);\n    return now.diff(momentDate, 'years') >= 18;\n};\n\nconst sortDateRange = (d1: Period, d2: Period) => {\n    return dayjs(d1.from).isSameOrBefore(d2.from) ? -1 : 1;\n};\n\nexport const isDateRangesOverlapping = (ranges: Period[]) => {\n    if (ranges.length > 0) {\n        const sortedDates = [...ranges].sort(sortDateRange);\n        const hasOverlap = sortedDates.find((d, idx) => {\n            if (idx < sortedDates.length - 1) {\n                return dayjs(d.to).isSameOrAfter(sortedDates[idx + 1].from);\n            }\n            return false;\n        });\n        return hasOverlap !== undefined;\n    }\n    return false;\n};\n","export enum MorsAktivitet {\n    Arbeid = 'ARBEID',\n    Utdanning = 'UTDANNING',\n    Kvalifiseringsprogrammet = 'KVALPROG',\n    Introduksjonsprogrammet = 'INTROPROG',\n    TrengerHjelp = 'TRENGER_HJELP',\n    Innlagt = 'INNLAGT',\n    ArbeidOgUtdanning = 'ARBEID_OG_UTDANNING',\n    Uføre = 'UFØRE',\n    IkkeOppgitt = 'IKKE_OPPGITT',\n}\n","export enum PeriodeResultatÅrsak {\n    AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER = 'AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER ',\n    ANNET = 'ANNET',\n}\n","import { TidsperiodeDate } from '@navikt/fp-common';\nimport { Periode } from 'app/types/Periode';\nimport dayjs from 'dayjs';\nimport { ISOStringToDate } from './dateUtils';\n\nexport function isValidTidsperiode(tidsperiode: TidsperiodeDate): boolean {\n    return (\n        tidsperiode.fom !== undefined &&\n        tidsperiode.tom !== undefined &&\n        dayjs(tidsperiode.fom).isSameOrBefore(tidsperiode.tom, 'day')\n    );\n}\n\nexport const Tidsperioden = (tidsperiode: TidsperiodeDate) => ({\n    inneholderDato: (dato: Date) => inneholderTidsperiodeDato(tidsperiode, dato),\n    erOmsluttetAv: (tidsperiode2: TidsperiodeDate) => erTidsperiodeOmsluttetAvTidsperiode(tidsperiode, tidsperiode2),\n    overlapper: (tidsperiode2: TidsperiodeDate) => overlapperTidsperioder(tidsperiode, tidsperiode2),\n});\n\nfunction erTidsperiodeOmsluttetAvTidsperiode(tidsperiode1: TidsperiodeDate, tidsperiode2: TidsperiodeDate): boolean {\n    if (isValidTidsperiode(tidsperiode1) && isValidTidsperiode(tidsperiode2)) {\n        return (\n            dayjs(tidsperiode1.fom).isSameOrAfter(tidsperiode2.fom) &&\n            dayjs(tidsperiode1.tom).isSameOrBefore(tidsperiode2.tom)\n        );\n    }\n    return false;\n}\n\nfunction inneholderTidsperiodeDato(tidsperiode: TidsperiodeDate, dato: Date): boolean {\n    if (!tidsperiode.fom || !tidsperiode.tom) {\n        return false;\n    }\n\n    return dayjs(dato).isBetween(tidsperiode.fom, tidsperiode.tom, 'days', '[]');\n}\n\nconst overlapperTidsperioder = (t1: TidsperiodeDate, t2: TidsperiodeDate) => {\n    return (\n        dayjs(t1.fom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t1.tom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t2.fom).isBetween(t1.fom, t1.tom, 'day', '[]') ||\n        dayjs(t2.tom).isBetween(t1.fom, t1.tom, 'day', '[]')\n    );\n};\n\nexport const getTidsperiode = (periode: Periode): TidsperiodeDate => {\n    return {\n        fom: ISOStringToDate(periode.fom)!,\n        tom: ISOStringToDate(periode.tom)!,\n    };\n};\n","import isoWeek from 'dayjs/plugin/isoWeek';\nimport utc from 'dayjs/plugin/utc';\nimport dayjs from 'dayjs';\n\ndayjs.extend(isoWeek);\ndayjs.extend(utc);\n\nexport const UTTAKSDAGER_PER_UKE = 5;\n\nexport const Uttaksdagen = (dato: Date) => ({\n    erUttaksdag: (): boolean => erUttaksdag(dato),\n    forrige: (): Date => getUttaksdagFørDato(dato),\n    neste: (): Date => getUttaksdagEtterDato(dato),\n    denneEllerNeste: (): Date => getUttaksdagFraOgMedDato(dato),\n    denneEllerForrige: (): Date => getUttaksdagTilOgMedDato(dato),\n    trekkFra: (uttaksdager: number): Date => trekkUttaksdagerFraDato(dato, uttaksdager),\n});\n\nconst getUkedag = (dato: Date): number => {\n    return dayjs(dato).isoWeekday();\n};\n\nexport const erUttaksdag = (dato: Date): boolean => {\n    return getUkedag(dato) !== 6 && getUkedag(dato) !== 7;\n};\n\nconst getUttaksdagFørDato = (dato: Date): Date => {\n    return getUttaksdagTilOgMedDato(dayjs.utc(dato).subtract(24, 'hours').toDate());\n};\n\nconst getUttaksdagTilOgMedDato = (dato: Date): Date => {\n    switch (getUkedag(dato)) {\n        case 6:\n            return dayjs.utc(dato).subtract(24, 'hours').toDate();\n        case 7:\n            return dayjs.utc(dato).subtract(48, 'hours').toDate();\n        default:\n            return dato;\n    }\n};\n\nconst getUttaksdagEtterDato = (dato: Date): Date => {\n    return getUttaksdagFraOgMedDato(dayjs.utc(dato).add(24, 'hours').toDate());\n};\n\nconst getUttaksdagFraOgMedDato = (dato: Date): Date => {\n    switch (getUkedag(dato)) {\n        case 6:\n            return dayjs.utc(dato).add(48, 'hours').toDate();\n        case 7:\n            return dayjs.utc(dato).add(24, 'hours').toDate();\n        default:\n            return dato;\n    }\n};\n\nconst trekkUttaksdagerFraDato = (dato: Date, uttaksdager: number): Date => {\n    if (erUttaksdag(dato) === false) {\n        throw new Error('trekkUttaksdagerFraDato: Dato må være uttaksdag');\n    }\n    let nyDato = dato;\n    let dagteller = 0;\n    let uttaksdageteller = 0;\n    while (uttaksdageteller < Math.abs(uttaksdager)) {\n        const tellerdato = dayjs\n            .utc(dato)\n            .add(--dagteller * 24, 'hours')\n            .toDate();\n        if (erUttaksdag(tellerdato)) {\n            nyDato = tellerdato;\n            uttaksdageteller++;\n        }\n    }\n    return nyDato;\n};\n","import { guid, intlUtils, ISOStringToDate, TidsperiodeDate } from '@navikt/fp-common';\nimport { Periode } from 'app/types/Periode';\nimport { OppholdÅrsakType } from 'app/types/OppholdÅrsakType';\nimport { StønadskontoType } from 'app/types/StønadskontoType';\nimport { UtsettelseÅrsakType } from 'app/types/UtsettelseÅrsakType';\nimport { IntlShape } from 'react-intl';\nimport { getNavnGenitivEierform, NavnPåForeldre } from './personUtils';\nimport { capitalizeFirstLetter } from './stringUtils';\nimport dayjs from 'dayjs';\nimport { isEqual } from 'lodash';\nimport { formatDateIso } from '@navikt/fp-utils';\nimport { PeriodeResultat } from 'app/types/PeriodeResultat';\nimport { MorsAktivitet } from 'app/types/MorsAktivitet';\nimport { PeriodeResultatÅrsak } from 'app/types/PeriodeResultatÅrsak';\nimport { getTidsperiode, isValidTidsperiode, Tidsperioden } from './tidsperiodeUtils';\nimport { Uttaksdagen } from './Uttaksdagen';\n\nexport const Periodene = (perioder: Periode[]) => ({\n    sort: () => [...perioder].sort(sorterPerioder),\n});\n\nexport function sorterPerioder(p1: Periode, p2: Periode) {\n    const t1 = getTidsperiode(p1);\n    const t2 = getTidsperiode(p2);\n    if (isValidTidsperiode(t1) === false || isValidTidsperiode(t2) === false) {\n        return isValidTidsperiode(t1) ? 1 : -1;\n    }\n    if (dayjs(t1.fom).isSame(t2.fom, 'day')) {\n        return 1;\n    }\n\n    if (Tidsperioden(t2).erOmsluttetAv(t1)) {\n        return 1;\n    }\n\n    return dayjs(t1.fom).isBefore(t2.fom, 'day') ? -1 : 1;\n}\n\nexport const isUttaksperiode = (periode: Periode) => {\n    return periode.kontoType !== undefined && periode.utsettelseÅrsak === undefined;\n};\n\nexport const isUtsettelsesperiode = (periode: Periode) => {\n    return periode.utsettelseÅrsak !== undefined;\n};\n\nexport const isOverføringsperiode = (periode: Periode) => {\n    return periode.overføringÅrsak !== undefined;\n};\n\nexport const isOppholdsperiode = (periode: Periode) => {\n    return periode.oppholdÅrsak !== undefined;\n};\n\nexport const isAvslåttPeriode = (periode: Periode) => {\n    return periode.resultat && periode.resultat.innvilget !== true;\n};\n\nexport const finnTidligerePerioder = (perioder: Periode[]): Periode[] => {\n    return perioder.filter(({ tom }) => dayjs(tom).isBefore(dayjs(), 'd'));\n};\n\nexport const finnNåværendePerioder = (perioder: Periode[]): Periode[] => {\n    return perioder.filter(({ fom, tom }) => dayjs().isBetween(fom, tom, 'd', '[]'));\n};\n\nexport const finnFremtidigePerioder = (perioder: Periode[]): Periode[] => {\n    return perioder.filter(({ fom }) => dayjs(fom).isAfter(dayjs(), 'd'));\n};\n\nexport const finnDuplikatePerioderPgaArbeidsforohld = (periode: Periode, perioder: Periode[]) => {\n    return perioder\n        .filter((p) => periode !== p)\n        .filter((p) =>\n            isEqual(\n                getFelterForSammenligningAvDuplikatePerioderPgaArbeidsforhold(p),\n                getFelterForSammenligningAvDuplikatePerioderPgaArbeidsforhold(periode),\n            ),\n        );\n};\n\nexport const erDuplikatPeriodePgaFlereArbeidsforhold = (\n    periode: Periode,\n    uttaksperiodeDtoListe: Periode[],\n): boolean => {\n    return finnDuplikatePerioderPgaArbeidsforohld(periode, uttaksperiodeDtoListe).length > 0;\n};\n\nexport const getFelterForSammenligningAvDuplikatePerioderPgaArbeidsforhold = ({\n    gradering,\n    ...uttaksperiodeDtoUtenArbeidsgiverInfo\n}: Periode) => {\n    return uttaksperiodeDtoUtenArbeidsgiverInfo;\n};\n\nexport const gyldigePerioderForVisning = (periode: Periode, erPlanVedtatt: boolean): boolean => {\n    if (!erPlanVedtatt) {\n        return true;\n    }\n    if (periode.resultat && periode.resultat.innvilget) return true;\n\n    if (\n        periode.resultat &&\n        periode.resultat.årsak !== PeriodeResultatÅrsak.AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER &&\n        periode.resultat.trekkerDager === true\n    ) {\n        return true;\n    }\n    return false;\n};\n\nconst filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode = (\n    periode: Periode,\n    index: number,\n    perioder: Periode[],\n) => {\n    const likePerioder = perioder.filter(\n        (periode2, index_periode2) =>\n            index !== index_periode2 &&\n            dayjs(periode.fom).isSame(periode2.fom, 'd') &&\n            dayjs(periode.tom).isSame(periode2.tom, 'd'),\n    );\n\n    if (likePerioder.length === 0) {\n        return true;\n    }\n\n    const innvilgedePerioder = likePerioder.filter(periodeErInnvilget);\n\n    if (periodeErInnvilget(periode) === false && innvilgedePerioder.length > 0) {\n        return false;\n    }\n\n    return true;\n};\n\nexport const getCleanedPlanForVisning = (\n    plan: Periode[] | undefined,\n    erPlanVedtatt: boolean,\n): Periode[] | undefined => {\n    if (plan === undefined) {\n        return undefined;\n    }\n    const filtrertPlan = plan.filter((periode) => !isOppholdsperiode(periode));\n    if (erPlanVedtatt) {\n        const utenOverlappendeAvslåttePerioder = filtrertPlan.filter((p, index) =>\n            filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode(p, index, plan),\n        );\n\n        const gyldigePerioder = utenOverlappendeAvslåttePerioder.filter((p) =>\n            gyldigePerioderForVisning(p, erPlanVedtatt),\n        );\n\n        return gyldigePerioder;\n    } else {\n        return filtrertPlan;\n    }\n};\n\nconst finnNesteMuligeUttaksdag = (dato: Date): Date => {\n    const nesteDag = dayjs(dato).add(1, 'day');\n    return nesteDag.isoWeekday() >= 6 ? nesteDag.add(1, 'weeks').startOf('isoWeek').toDate() : nesteDag.toDate();\n};\n\nexport const erSammenhengende = (tidsperiode1: TidsperiodeDate, tidsperiode2: TidsperiodeDate): boolean => {\n    return (\n        finnNesteMuligeUttaksdag(tidsperiode1.tom) === tidsperiode2.fom ||\n        dayjs(tidsperiode1.tom).add(1, 'days').isSame(tidsperiode2.fom, 'days')\n    );\n};\n\nexport const erHullMellomPerioder = (periode: Periode, nestePeriode?: Periode) => {\n    const periodeTidsperiode = { fom: ISOStringToDate(periode.fom)!, tom: ISOStringToDate(periode.tom)! };\n    const nestePeriodeTidsperiode = nestePeriode\n        ? { fom: ISOStringToDate(nestePeriode.fom)!, tom: ISOStringToDate(nestePeriode.tom)! }\n        : undefined;\n    return (\n        nestePeriodeTidsperiode !== undefined &&\n        !erSammenhengende(periodeTidsperiode, nestePeriodeTidsperiode) &&\n        dayjs(periodeTidsperiode.tom).isBefore(nestePeriodeTidsperiode.fom, 'd')\n    );\n};\n\nconst isValidStillingsprosent = (pst: number | undefined): boolean => pst !== undefined && isNaN(pst) === false;\n\nconst prettifyProsent = (pst: number | undefined): number | undefined => {\n    if (pst === undefined) {\n        return undefined;\n    }\n\n    const nbr = pst;\n    if (isNaN(nbr)) {\n        return undefined;\n    }\n    if (Math.round(nbr) === nbr) {\n        return Math.round(nbr);\n    }\n    return nbr;\n};\n\nexport const getStønadskontoForelderNavn = (\n    intl: IntlShape,\n    konto: StønadskontoType,\n    navnPåForeldre: NavnPåForeldre,\n    periodeResultat: PeriodeResultat | undefined,\n    morsAktivitet: MorsAktivitet | undefined,\n    erFarEllerMedmor?: boolean,\n    erAleneOmOmsorg?: boolean,\n) => {\n    let navn;\n\n    switch (konto) {\n        case StønadskontoType.Mødrekvote:\n            navn = navnPåForeldre.mor;\n            break;\n        case StønadskontoType.Fedrekvote:\n            navn = navnPåForeldre.farMedmor;\n            break;\n        default:\n            navn = undefined;\n    }\n\n    if (navn) {\n        return intl.formatMessage(\n            { id: 'uttaksplan.stønadskontotype.foreldernavn.kvote' },\n            { navn: getNavnGenitivEierform(capitalizeFirstLetter(navn), intl.locale) },\n        );\n    }\n\n    if (erFarEllerMedmor === true && erAleneOmOmsorg === false) {\n        if (konto === StønadskontoType.Foreldrepenger) {\n            if (\n                (periodeResultat && periodeResultat.trekkerMinsterett) ||\n                (!periodeResultat && morsAktivitet === MorsAktivitet.IkkeOppgitt)\n            ) {\n                return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.AKTIVITETSFRI_KVOTE_BFHR' });\n            }\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.AKTIVITETSKRAV_KVOTE_BFHR' });\n        }\n    }\n\n    if (!konto) {\n        //TODO Denne skal jo ikkje kun skje (ref typen), men Andreas meinar at det kanskje skjer?\n        return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.undefined' });\n    }\n\n    return finnTekstForStønadskontoType(intl, konto);\n};\n\nconst finnTekstForStønadskontoType = (intl: IntlShape, konto: StønadskontoType) => {\n    switch (konto) {\n        case StønadskontoType.Fedrekvote:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.FEDREKVOTE' });\n        case StønadskontoType.Fellesperiode:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.FELLESPERIODE' });\n        case StønadskontoType.Foreldrepenger:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.FORELDREPENGER' });\n        case StønadskontoType.ForeldrepengerFørFødsel:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.FORELDREPENGER_FØR_FØDSEL' });\n        case StønadskontoType.Mødrekvote:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.MØDREKVOTE' });\n        case StønadskontoType.AktivitetsfriKvote:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.AKTIVITETSFRI_KVOTE' });\n        case StønadskontoType.Flerbarnsdager:\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.FLERBARNSDAGER' });\n    }\n};\n\nexport const getUttaksprosentFromStillingsprosent = (\n    stillingsPst: number | undefined,\n    samtidigUttakPst: number | undefined,\n): number | undefined => {\n    if (samtidigUttakPst) {\n        return samtidigUttakPst;\n    }\n    if (stillingsPst) {\n        let prosent = (100 - stillingsPst) * 100;\n        prosent = Math.round(prosent) / 100;\n\n        return prosent;\n    }\n    return undefined;\n};\n\nexport const getOppholdskontoNavn = (\n    intl: IntlShape,\n    årsak: OppholdÅrsakType,\n    foreldernavn: string,\n    erMor: boolean,\n) => {\n    const navn = capitalizeFirstLetter(foreldernavn);\n    return erMor\n        ? intlUtils(intl, `uttaksplan.oppholdsårsaktype.foreldernavn.far.${årsak}`, { foreldernavn: navn })\n        : intlUtils(intl, `uttaksplan.oppholdsårsaktype.foreldernavn.mor.${årsak}`, { foreldernavn: navn });\n};\n\nexport const finnTekstForUtsettelseÅrsak = (intl: IntlShape, utsettelseÅrsak: UtsettelseÅrsakType) => {\n    switch (utsettelseÅrsak) {\n        case UtsettelseÅrsakType.Arbeid:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.ARBEID' });\n        case UtsettelseÅrsakType.Ferie:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.LOVBESTEMT_FERIE' });\n        case UtsettelseÅrsakType.Fri:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.FRI' });\n        case UtsettelseÅrsakType.HvØvelse:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.HV_ØVELSE' });\n        case UtsettelseÅrsakType.InstitusjonBarnet:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.BARN_INNLAGT' });\n        case UtsettelseÅrsakType.InstitusjonSøker:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.SØKER_INNLAGT' });\n        case UtsettelseÅrsakType.NavTiltak:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.NAV_TILTAK' });\n        case UtsettelseÅrsakType.Sykdom:\n            return intl.formatMessage({ id: 'uttaksplan.utsettelsesårsak.SØKER_SYKDOM' });\n    }\n};\n\nexport const getPeriodeTittel = (\n    intl: IntlShape,\n    periode: Periode,\n    navnPåForeldre: NavnPåForeldre,\n    erFarEllerMedmor?: boolean,\n    erAleneOmOmsorg?: boolean,\n): string => {\n    if (isAvslåttPeriode(periode)) {\n        return intlUtils(intl, 'uttaksplan.avslåttPeriode');\n    }\n    if (isUttaksperiode(periode)) {\n        const tittelMedNavn = getStønadskontoForelderNavn(\n            intl,\n            periode.kontoType!,\n            navnPåForeldre,\n            periode.resultat,\n            periode.morsAktivitet,\n            erFarEllerMedmor,\n            erAleneOmOmsorg,\n        );\n        //TODO:\n        // const tittel = appendPeriodeNavnHvisUttakRundtFødselFarMedmor(\n        //     intl,\n        //     tittelMedNavn,\n        //     periode,\n        //     situasjon,\n        //     familiehendelsesdato,\n        //     termindato\n        // );\n        const tittel = tittelMedNavn;\n        if (\n            (periode.gradering && isValidStillingsprosent(periode.gradering.arbeidstidprosent)) ||\n            (periode.samtidigUttak && isValidStillingsprosent(periode.samtidigUttak))\n        ) {\n            const graderingsProsent = periode.gradering\n                ? prettifyProsent(periode.gradering.arbeidstidprosent)\n                : undefined;\n            const samtidigUttaksProsent = periode.samtidigUttak ? prettifyProsent(periode.samtidigUttak) : undefined;\n            return `${tittel} ${intlUtils(intl, 'gradering.prosent', {\n                stillingsprosent: getUttaksprosentFromStillingsprosent(graderingsProsent, samtidigUttaksProsent),\n            })}`;\n        }\n\n        return tittel;\n    }\n    if (isOverføringsperiode(periode)) {\n        return getStønadskontoForelderNavn(\n            intl,\n            periode.kontoType!,\n            navnPåForeldre,\n            periode.resultat,\n            periode.morsAktivitet,\n        );\n    }\n    if (isUtsettelsesperiode(periode)) {\n        if (periode.utsettelseÅrsak) {\n            return finnTekstForUtsettelseÅrsak(intl, periode.utsettelseÅrsak);\n        }\n        return intlUtils(intl, 'uttaksplan.utsettelsesårsak.ukjent');\n    }\n    //TODO getOppholdskontoNavn\n    return '';\n};\n\nconst periodeErInnvilget = (periode: Periode): boolean => periode.resultat && periode.resultat.innvilget;\n\ninterface SplittetDatoType {\n    dato: Date;\n    erFom: boolean;\n}\n\nconst splittPeriodePåDatoer = (periode: Periode, alleDatoer: SplittetDatoType[]) => {\n    const datoerIPerioden = alleDatoer.filter((datoWrapper) =>\n        Tidsperioden(getTidsperiode(periode)).inneholderDato(datoWrapper.dato),\n    );\n    const oppsplittetPeriode: Periode[] = [];\n\n    if (datoerIPerioden.length === 2) {\n        return [periode];\n    }\n\n    datoerIPerioden.forEach((datoWrapper, index) => {\n        if (index === 0) {\n            oppsplittetPeriode.push({\n                ...periode,\n                fom: formatDateIso(datoWrapper.dato),\n                tom: undefined!,\n            });\n            return;\n        }\n\n        oppsplittetPeriode[index - 1].tom = datoWrapper.erFom\n            ? formatDateIso(Uttaksdagen(datoWrapper.dato).forrige())\n            : formatDateIso(datoWrapper.dato);\n\n        if (index < datoerIPerioden.length - 1) {\n            oppsplittetPeriode.push({\n                ...periode,\n                id: guid(),\n                fom: formatDateIso(datoWrapper.erFom ? datoWrapper.dato : Uttaksdagen(datoWrapper.dato).neste()),\n                tom: undefined!,\n            });\n        }\n    });\n\n    return oppsplittetPeriode.filter((p) => isValidTidsperiode(getTidsperiode(p)));\n};\n\nexport const normaliserPerioder = (søkersPerioder: Periode[], annenPartsPerioder: Periode[]) => {\n    const perioderTidsperioder: SplittetDatoType[] = søkersPerioder.reduce((res, p) => {\n        res.push({ dato: ISOStringToDate(p.fom)!, erFom: true });\n        res.push({ dato: ISOStringToDate(p.tom)!, erFom: false });\n        return res;\n    }, [] as SplittetDatoType[]);\n    const annenPartsUttakTidsperioder = annenPartsPerioder.reduce((res, p) => {\n        res.push({ dato: ISOStringToDate(p.fom)!, erFom: true });\n        res.push({ dato: ISOStringToDate(p.tom)!, erFom: false });\n        return res;\n    }, [] as SplittetDatoType[]);\n\n    const alleDatoer = perioderTidsperioder.concat(annenPartsUttakTidsperioder).sort((d1, d2) => {\n        if (d1.dato.getTime() - d2.dato.getTime() === 0) {\n            if (!d1.erFom) {\n                return 1;\n            }\n\n            if (!d2.erFom) {\n                return -1;\n            }\n        }\n        return d1.dato.getTime() - d2.dato.getTime();\n    });\n    const normaliserteEgnePerioder: Periode[] = [];\n    const normaliserteAnnenPartsPerioder: Periode[] = [];\n\n    søkersPerioder.forEach((p) => {\n        const oppsplittetPeriode = splittPeriodePåDatoer(p, alleDatoer);\n        normaliserteEgnePerioder.push(...oppsplittetPeriode);\n    });\n\n    annenPartsPerioder.forEach((p) => {\n        const oppsplittetPeriode = splittPeriodePåDatoer(p, alleDatoer);\n        normaliserteAnnenPartsPerioder.push(...oppsplittetPeriode);\n    });\n\n    return {\n        normaliserteEgnePerioder,\n        normaliserteAnnenPartsPerioder,\n    };\n};\n\nexport const filtrerAnnenPartsUttakNårIkkeSamtidigUttak = (\n    annenPartsPerioder: Periode[],\n    søkerensPerioder: Periode[],\n): Periode[] => {\n    const filtrerteAnnenPartsPerioder = annenPartsPerioder.filter((periode) => {\n        if (!isUttaksperiode(periode)) {\n            return true;\n        }\n        const overlappendeSøkersPeriode = søkerensPerioder.find((p) => {\n            return Tidsperioden(getTidsperiode(p)).overlapper(getTidsperiode(periode));\n        });\n\n        if (!overlappendeSøkersPeriode) {\n            return true;\n        }\n        const beholdUttaksSomOverlapperAnnenPartsPeriode =\n            overlappendeSøkersPeriode &&\n            overlappendeSøkersPeriode.resultat &&\n            overlappendeSøkersPeriode.resultat.innvilget &&\n            isUttaksperiode(overlappendeSøkersPeriode) &&\n            isUttaksperiode(periode)\n                ? periode.samtidigUttak !== undefined || overlappendeSøkersPeriode.samtidigUttak !== undefined\n                : true;\n        return beholdUttaksSomOverlapperAnnenPartsPeriode;\n    });\n    return filtrerteAnnenPartsPerioder;\n};\n\nexport const leggTilVisningsInfo = (annenPartsPerioder: Periode[], søkerensPerioder: Periode[]): Periode[] => {\n    const annenPartsPerioderMedVisningsInfo = annenPartsPerioder.map((periode) => {\n        const overlappendeSøkersPeriode = søkerensPerioder.find((p) => {\n            return Tidsperioden(getTidsperiode(p)).overlapper(getTidsperiode(periode));\n        });\n        const erInnvilgetSamtidigUttak =\n            overlappendeSøkersPeriode &&\n            overlappendeSøkersPeriode.resultat &&\n            overlappendeSøkersPeriode.resultat.innvilget\n                ? periode.samtidigUttak !== undefined || overlappendeSøkersPeriode.samtidigUttak !== undefined\n                : false;\n        if (erInnvilgetSamtidigUttak) {\n            return {\n                ...periode,\n                visIPlan: false,\n            };\n        }\n        const overlapperMedSøkerensPeriodeSomTrekkerDager =\n            overlappendeSøkersPeriode &&\n            overlappendeSøkersPeriode.resultat &&\n            (overlappendeSøkersPeriode.resultat.innvilget || overlappendeSøkersPeriode.resultat.trekkerDager);\n\n        if (overlapperMedSøkerensPeriodeSomTrekkerDager) {\n            return {\n                ...periode,\n                visIPlan: false,\n            };\n        }\n\n        return {\n            ...periode,\n            visIPlan: true,\n        };\n    });\n    return annenPartsPerioderMedVisningsInfo;\n};\n\nexport const getPerioderForVisning = (perioder: Periode[], erAnnenPartsPeriode: boolean): Periode[] => {\n    return perioder\n        .map((periode) => {\n            return {\n                ...periode,\n                gjelderAnnenPart: erAnnenPartsPeriode,\n                id: guid(),\n            };\n        })\n        .filter(\n            (p) =>\n                isValidTidsperiode(getTidsperiode(p)) &&\n                (isUttaksperiode(p) || isOverføringsperiode(p) || isUtsettelsesperiode(p)),\n        );\n};\n\nexport const getOverlappendePeriodeTittel = (\n    søkerensPeriode: Periode,\n    overlappendePeriodeAnnenPart: Periode,\n    intl: IntlShape,\n    navnPåForeldre: NavnPåForeldre,\n) => {\n    if (søkerensPeriode.utsettelseÅrsak) {\n        return getStønadskontoForelderNavn(\n            intl,\n            overlappendePeriodeAnnenPart.kontoType!,\n            navnPåForeldre,\n            overlappendePeriodeAnnenPart.resultat,\n            overlappendePeriodeAnnenPart.morsAktivitet,\n        );\n    }\n    if (overlappendePeriodeAnnenPart.utsettelseÅrsak) {\n        return 'Utsettelse';\n    }\n    return 'Samtidig uttak';\n};\n\nexport const erAnnenPartsPrematurePeriode = (annenPartsPeriode: Periode, termindato: string | undefined): boolean => {\n    return (\n        !!termindato &&\n        !annenPartsPeriode.resultat.innvilget &&\n        dayjs(annenPartsPeriode.tom).isBefore(dayjs(termindato), 'd') &&\n        annenPartsPeriode.kontoType !== StønadskontoType.Fedrekvote\n    );\n};\n\nexport const skalAnnenPartsPeriodeVises = (annenPartsPeriode: Periode, termindato: string | undefined): boolean => {\n    if (annenPartsPeriode.resultat.innvilget) {\n        return true;\n    }\n    return erAnnenPartsPrematurePeriode(annenPartsPeriode, termindato);\n};\n","export enum RettighetType {\n    BARE_SØKER_RETT = 'BARE_SØKER_RETT',\n    ALENEOMSORG = 'ALENEOMSORG',\n    BEGGE_RETT = 'BEGGE_RETT',\n}\n","export enum UttaksplanColor {\n    'purple' = 'purple',\n    'blue' = 'blue',\n    'green' = 'green',\n    'purpleBlue' = 'purpleBlue',\n    'yellow' = 'yellow',\n    'transparent' = 'transparent',\n    'gray' = 'gray',\n}\n","import { StønadskontoType } from 'app/types/StønadskontoType';\nimport { UttaksplanColor } from 'app/types/UttaksplanColor';\n\nexport const getStønadskontoFarge = (konto: StønadskontoType): UttaksplanColor => {\n    switch (konto) {\n        case StønadskontoType.Fedrekvote:\n        case StønadskontoType.AktivitetsfriKvote:\n            return UttaksplanColor.blue;\n        case StønadskontoType.Mødrekvote:\n        case StønadskontoType.Foreldrepenger:\n        case StønadskontoType.ForeldrepengerFørFødsel:\n            return UttaksplanColor.purple;\n        case StønadskontoType.Fellesperiode:\n            return UttaksplanColor.purpleBlue;\n        default:\n            return UttaksplanColor.transparent;\n    }\n};\n","import './iconBox.css';\nimport { bemUtils } from '@navikt/fp-common';\nimport { UttaksplanColor } from 'app/types/UttaksplanColor';\nimport classNames from 'classnames';\n\nexport interface Props {\n    children?: React.ReactNode;\n    color: UttaksplanColor;\n    stripes?: boolean;\n}\n\nconst IconBox: React.FunctionComponent<Props> = ({ children, color }) => {\n    const bem = bemUtils('iconBox');\n    return <div className={classNames(bem.element('icon'), bem.modifier(`${color}`))}>{children}</div>;\n};\n\nexport default IconBox;\n","import { UttaksplanIkonProps } from 'app/components/uttaksplan-ikon/UttaksplanIkon';\n\nconst ArbeidIkon = (props: UttaksplanIkonProps) => {\n    const { title, ...rest } = props;\n    return (\n        <svg\n            focusable=\"false\"\n            role=\"img\"\n            aria-hidden=\"true\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            width={32}\n            height={32}\n            {...rest}\n        >\n            <title>{props.title}</title>\n            <defs>\n                <rect id=\"a\" width={32} height={32} rx={10} />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path\n                    fill=\"#FFF\"\n                    fillRule=\"nonzero\"\n                    d=\"M23.378 7.79l-.001-.002-1.666-1.665A.413.413 0 0 0 21.417 6H10.583a.417.417 0 0 0-.295.123L8.622 7.788l-.002.002a.463.463 0 0 0-.12.293v17.5c0 .23.187.417.417.417h5.416v-3.75c0-.23.187-.417.417-.417h2.5c.23 0 .417.187.417.417V26h5.416c.23 0 .417-.187.417-.417v-17.5a.46.46 0 0 0-.122-.293zM12.667 20.167h-2.5v-2.5h2.5v2.5zm0-4.167h-2.5v-2.5h2.5V16zm0-4.167h-2.5v-2.5h2.5v2.5zm5 8.334h-3.334v-2.5h3.334v2.5zm0-4.167h-3.334v-2.5h3.334V16zm0-4.167h-3.334v-2.5h3.334v2.5zm4.166 8.334h-2.5v-2.5h2.5v2.5zm0-4.167h-2.5v-2.5h2.5V16zm0-4.167h-2.5v-2.5h2.5v2.5zM9.923 7.667l.833-.834h10.488l.834.834H9.923z\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default ArbeidIkon;\n","const FerieIkon = (props: any) => {\n    const { title, ...rest } = props;\n    return (\n        <svg\n            focusable=\"false\"\n            role=\"presentation\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            width={32}\n            height={32}\n            {...rest}\n        >\n            <title>{props.title}</title>\n            <defs>\n                <rect id=\"a\" width={32} height={32} rx={10} />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <g stroke=\"#FFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M25.583 19.737h-5c-2.042 0-3.85.657-4.991 1.667m4.991-1.654l-2.763-6.973m-2.149-5.423l-.307-.774\" />\n                    <path\n                        fill=\"#FFF\"\n                        d=\"M15.671 7.354c-4.065 1.61-6.704 4.571-5.517 7.566l.306.775 1.937-.769.468-1.081 1.082.468 7.747-3.07.467-1.082 1.082.467 1.937-.768-.307-.775c-1.188-2.995-5.138-3.342-9.202-1.731z\"\n                    />\n                    <path d=\"M25.583 24.75c-.833 0-1.666-.747-1.666-1.667 0 .92-.834 1.667-1.667 1.667-.833 0-1.667-.747-1.667-1.667 0 .92-.833 1.667-1.666 1.667-.834 0-1.667-.747-1.667-1.667 0 .92-.833 1.667-1.667 1.667-.833 0-1.666-.747-1.666-1.667 0 .92-.834 1.667-1.667 1.667-.833 0-1.667-.747-1.667-1.667 0 .92-.833 1.667-1.666 1.667-.834 0-1.667-.747-1.667-1.667 0 .575-.386 1.083-.833 1.383\" />\n                </g>\n            </g>\n        </svg>\n    );\n};\n\nexport default FerieIkon;\n","const SykdomIkon = (props: any) => {\n    const { title, ...rest } = props;\n    return (\n        <svg\n            focusable=\"false\"\n            role=\"presentation\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            width={32}\n            height={32}\n            {...rest}\n        >\n            <title>{props.title}</title>\n            <defs>\n                <rect id=\"a\" width={32} height={32} rx={10} />\n                <path\n                    id=\"c\"\n                    d=\"M8.294 1.518l10.19 10.19c1.823 1.822 1.785 4.82-.086 6.69s-4.867 1.91-6.69.086L1.518 8.294c-1.823-1.822-1.786-4.818.086-6.69 1.872-1.871 4.867-1.91 6.69-.086zm6.27 7.4l-3.473-3.476-5.648 5.647 3.475 3.476 5.646-5.648zM3.258 6.65a.472.472 0 0 0-.138.339.499.499 0 0 0 .49.489A.472.472 0 0 0 4.085 7a.497.497 0 0 0-.489-.489.472.472 0 0 0-.34.138zM4.96 4.963a.47.47 0 0 0-.137.34.498.498 0 0 0 .488.488.47.47 0 0 0 .476-.476.496.496 0 0 0-.488-.488.466.466 0 0 0-.34.136zm-2.005-.31a.468.468 0 0 0-.138.338.499.499 0 0 0 .49.49.47.47 0 0 0 .476-.478.497.497 0 0 0-.489-.489.468.468 0 0 0-.34.138zm1.694-1.694a.472.472 0 0 0-.138.34.496.496 0 0 0 .488.487.467.467 0 0 0 .477-.477.496.496 0 0 0-.488-.488.472.472 0 0 0-.34.138zm.622 4.009a.47.47 0 0 0-.136.34.496.496 0 0 0 .489.488.466.466 0 0 0 .476-.476.498.498 0 0 0-.488-.489.474.474 0 0 0-.341.137zm1.694-1.693a.472.472 0 0 0-.138.34.496.496 0 0 0 .488.487.467.467 0 0 0 .477-.477.495.495 0 0 0-.488-.487.472.472 0 0 0-.34.137zM6.654 3.27a.472.472 0 0 0-.138.339.5.5 0 0 0 .49.49.47.47 0 0 0 .477-.477.5.5 0 0 0-.49-.49.472.472 0 0 0-.34.138zm5.993 12.771a.468.468 0 0 0-.138.34.498.498 0 0 0 .49.488.47.47 0 0 0 .337-.139.47.47 0 0 0 .14-.337.499.499 0 0 0-.49-.49.468.468 0 0 0-.34.138zm1.694-1.696a.473.473 0 0 0-.137.339c.002.268.22.486.489.489a.466.466 0 0 0 .476-.476.499.499 0 0 0-.49-.49.476.476 0 0 0-.338.138zm.31 2.006a.472.472 0 0 0-.137.339.499.499 0 0 0 .49.489.472.472 0 0 0 .476-.477.497.497 0 0 0-.489-.489.472.472 0 0 0-.34.138zm1.696-1.693a.469.469 0 0 0-.137.338c.002.267.22.485.489.49a.469.469 0 0 0 .476-.477.499.499 0 0 0-.49-.489.472.472 0 0 0-.338.138zm-4.011-.623a.469.469 0 0 0-.137.338.497.497 0 0 0 .489.49.469.469 0 0 0 .476-.477.499.499 0 0 0-.489-.489.472.472 0 0 0-.34.138zm1.694-1.694a.472.472 0 0 0-.138.339.499.499 0 0 0 .489.489.472.472 0 0 0 .476-.476.495.495 0 0 0-.489-.49.469.469 0 0 0-.338.138zm2.005.31a.472.472 0 0 0-.137.34.499.499 0 0 0 .489.489.466.466 0 0 0 .475-.476.495.495 0 0 0-.489-.488.466.466 0 0 0-.338.136z\"\n                />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(6 6)\">\n                    <mask id=\"d\" fill=\"#fff\">\n                        <use xlinkHref=\"#c\" />\n                    </mask>\n                    <g fill=\"#FFF\" mask=\"url(#d)\">\n                        <path d=\"M0 20h20V0H0z\" />\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n};\n\nexport default SykdomIkon;\n","const UttakIkon = (props: any) => {\n    const { title, ...rest } = props;\n    return (\n        <svg\n            focusable=\"false\"\n            role=\"presentation\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            width={32}\n            height={32}\n            {...rest}\n        >\n            <title>{props.title}</title>\n            <defs>\n                <rect id=\"a\" width={32} height={32} rx={10} />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(6 6)\">\n                    <circle cx={14.583} cy={17.083} r={1.083} stroke=\"#FFF\" strokeWidth={2} />\n                    <circle cx={7.083} cy={17.083} r={1.083} stroke=\"#FFF\" strokeWidth={2} />\n                    <path\n                        fill=\"#FFF\"\n                        d=\"M19.928 8.718c0 3.453-1.997 6.282-5.586 6.282H7.106c-2.586 0-4.682-2.21-4.682-4.936 0-.467.062-.918.176-1.346 3.038 0 14.084-.004 17.328 0zM13.886 2.5c3.734 0 6.042 2.836 6.042 5.385-1.835 0-4.85-.005-8.841-.005l2.8-5.38z\"\n                    />\n                    <path\n                        stroke=\"#FFF\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        d=\"M3.107 9.612c0-2.314-1.218-3.962-2.678-3.962\"\n                    />\n                </g>\n            </g>\n        </svg>\n    );\n};\n\nexport default UttakIkon;\n","import ArbeidIkon from 'assets/ArbeidIkon';\nimport FerieIkon from 'assets/FerieIkon';\nimport SykdomIkon from 'assets/SykdomIkon';\nimport UttakIkon from 'assets/UttakIkon';\nimport { SVGProps } from 'react';\n\nexport interface UttaksplanIkonProps extends SVGProps<any> {\n    title: string;\n}\n\nexport enum UttaksplanIkonKeys {\n    'arbeid' = 'arbeid',\n    'ferie' = 'ferie',\n    'sykdom' = 'sykdom',\n    'termin' = 'termin',\n    'uttak' = 'uttak',\n    'info' = 'info',\n    'advarsel' = 'advarsel',\n    'feil' = 'feil',\n}\n\nexport interface Props {\n    ikon: UttaksplanIkonKeys;\n    title: string;\n}\n\nconst UttaksplanIkon: React.FunctionComponent<Props> = ({ ikon, title }) => {\n    switch (ikon) {\n        case 'arbeid':\n            return <ArbeidIkon title={title} />;\n        case 'ferie':\n            return <FerieIkon title={title} />;\n        case 'sykdom':\n            return <SykdomIkon title={title} />;\n        default:\n            return <UttakIkon title={title} />;\n    }\n};\n\nexport default UttaksplanIkon;\n","import { MorsAktivitet } from 'app/types/MorsAktivitet';\nimport { PeriodeResultat } from 'app/types/PeriodeResultat';\nimport { StønadskontoType } from 'app/types/StønadskontoType';\nimport { getStønadskontoForelderNavn } from 'app/utils/periodeUtils';\nimport { NavnPåForeldre } from 'app/utils/personUtils';\nimport { getStønadskontoFarge } from 'app/utils/styleUtils';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport IconBox from '../icon-box/IconBox';\nimport UttaksplanIkon, { UttaksplanIkonKeys } from '../uttaksplan-ikon/UttaksplanIkon';\n\nexport interface Props {\n    erAleneOmOmsorg?: boolean;\n    erFarEllerMedmor?: boolean;\n    gradert?: boolean;\n    konto: StønadskontoType;\n    morsAktivitet: MorsAktivitet | undefined;\n    navnPåForeldre: NavnPåForeldre;\n    periodeResultat: PeriodeResultat | undefined;\n}\n\nconst StønadskontoIkon: FunctionComponent<Props> = ({\n    konto,\n    gradert,\n    navnPåForeldre,\n    periodeResultat,\n    morsAktivitet,\n    erFarEllerMedmor,\n    erAleneOmOmsorg,\n}) => {\n    const intl = useIntl();\n\n    return (\n        <IconBox color={getStønadskontoFarge(konto)} stripes={gradert}>\n            <UttaksplanIkon\n                ikon={UttaksplanIkonKeys.uttak}\n                title={getStønadskontoForelderNavn(\n                    intl,\n                    konto,\n                    navnPåForeldre,\n                    periodeResultat,\n                    morsAktivitet,\n                    erFarEllerMedmor,\n                    erAleneOmOmsorg,\n                )}\n            />\n        </IconBox>\n    );\n};\n\nexport default StønadskontoIkon;\n","import { intlUtils } from '@navikt/fp-common';\n\nimport { useIntl } from 'react-intl';\nimport IconBox from '../icon-box/IconBox';\nimport { UtsettelseÅrsakType } from 'app/types/UtsettelseÅrsakType';\nimport { finnTekstForUtsettelseÅrsak } from 'app/utils/periodeUtils';\nimport UttaksplanIkon, { UttaksplanIkonKeys } from '../uttaksplan-ikon/UttaksplanIkon';\nimport { UttaksplanColor } from 'app/types/UttaksplanColor';\n\nexport const getUtsettelseFarge = (): UttaksplanColor => {\n    return UttaksplanColor.green;\n};\n\nexport interface Props {\n    årsak: UtsettelseÅrsakType;\n}\n\nconst getIkonForÅrsak = (årsak: UtsettelseÅrsakType): UttaksplanIkonKeys => {\n    switch (årsak) {\n        case UtsettelseÅrsakType.Ferie:\n            return UttaksplanIkonKeys.ferie;\n        case UtsettelseÅrsakType.Arbeid:\n        case UtsettelseÅrsakType.HvØvelse:\n        case UtsettelseÅrsakType.NavTiltak:\n        case UtsettelseÅrsakType.Fri:\n            return UttaksplanIkonKeys.arbeid;\n        case UtsettelseÅrsakType.InstitusjonBarnet:\n        case UtsettelseÅrsakType.InstitusjonSøker:\n        case UtsettelseÅrsakType.Sykdom:\n            return UttaksplanIkonKeys.sykdom;\n    }\n};\n\nconst UtsettelseIkon: React.FunctionComponent<Props> = ({ årsak }) => {\n    const intl = useIntl();\n\n    return (\n        <IconBox color={getUtsettelseFarge()}>\n            <UttaksplanIkon\n                ikon={getIkonForÅrsak(årsak)}\n                title={\n                    årsak\n                        ? finnTekstForUtsettelseÅrsak(intl, årsak)\n                        : intlUtils(intl, 'uttaksplan.utsettelsesårsak.ukjent')\n                }\n            />\n        </IconBox>\n    );\n};\n\nexport default UtsettelseIkon;\n","import { BodyShort, Heading } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport StønadskontoIkon from 'app/components/stønadskonto-ikon/StønadskontoIkon';\nimport UtsettelseIkon from 'app/components/utsettelse-ikon/UtsettelseIkon';\nimport { Periode } from 'app/types/Periode';\nimport {\n    getAntallUttaksdagerITidsperiode,\n    getVarighetString,\n    ISOStringToDate,\n    måned3bokstaver,\n} from 'app/utils/dateUtils';\nimport {\n    getOverlappendePeriodeTittel,\n    getPeriodeTittel,\n    isAvslåttPeriode,\n    isOppholdsperiode,\n    isOverføringsperiode,\n    isUtsettelsesperiode,\n    isUttaksperiode,\n} from 'app/utils/periodeUtils';\nimport { NavnPåForeldre } from 'app/utils/personUtils';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport { useIntl } from 'react-intl';\n\nimport './periodeListeItem.css';\n\ninterface Props {\n    erAleneOmOmsorg: boolean;\n    erFarEllerMedmor: boolean;\n    navnPåForeldre: NavnPåForeldre;\n    overlappendePeriodeAnnenPart?: Periode;\n    periode: Periode;\n}\n\nconst PeriodeListeItem: React.FunctionComponent<Props> = ({\n    periode,\n    erFarEllerMedmor,\n    erAleneOmOmsorg,\n    navnPåForeldre,\n    overlappendePeriodeAnnenPart,\n}) => {\n    const bem = bemUtils('periode');\n    const intl = useIntl();\n    const { fom, tom } = periode;\n    const fomDate = ISOStringToDate(fom);\n    const tomDate = ISOStringToDate(tom);\n    const tittel = getPeriodeTittel(intl, periode, navnPåForeldre, erFarEllerMedmor, erAleneOmOmsorg);\n    const antallDagerIPeriode = getAntallUttaksdagerITidsperiode({\n        fom: dayjs(periode.fom).toDate(),\n        tom: dayjs(periode.tom).toDate(),\n    });\n    const navnSøker = erFarEllerMedmor ? navnPåForeldre.farMedmor : navnPåForeldre.mor;\n    const navnAnnenForelder = erFarEllerMedmor ? navnPåForeldre.mor : navnPåForeldre.farMedmor;\n    const navnPeriodeEier = periode.gjelderAnnenPart ? navnAnnenForelder : navnSøker;\n    const varighetString = getVarighetString(antallDagerIPeriode, intl);\n    const visStønadskontoIkon =\n        isUttaksperiode(periode) ||\n        isOverføringsperiode(periode) ||\n        isOppholdsperiode(periode) ||\n        isAvslåttPeriode(periode);\n    const visUtsettelsesIkon = !visStønadskontoIkon && isUtsettelsesperiode(periode);\n    return (\n        <div\n            className={classNames(\n                `${bem.block} ${bem.element('box')} ${\n                    isAvslåttPeriode(periode) || periode.gjelderAnnenPart ? bem.modifier('grå') : bem.modifier('hvit')\n                }`,\n            )}\n        >\n            <div>\n                <div className={bem.element('innhold')}>\n                    {visStønadskontoIkon && (\n                        <StønadskontoIkon\n                            konto={periode.kontoType!}\n                            gradert={!!periode.gradering}\n                            navnPåForeldre={navnPåForeldre}\n                            erFarEllerMedmor={erFarEllerMedmor}\n                            erAleneOmOmsorg={erAleneOmOmsorg}\n                            periodeResultat={periode.resultat}\n                            morsAktivitet={periode.morsAktivitet}\n                        />\n                    )}\n                    {visUtsettelsesIkon && <UtsettelseIkon årsak={periode.utsettelseÅrsak!} />}\n                    <div className={bem.element('innhold-tekst-periodetittel')}>\n                        <Heading size=\"small\" level=\"4\">\n                            {tittel}\n                        </Heading>\n                        <div className={bem.element('beskrivelse')}>\n                            <BodyShort size=\"small\">{`${varighetString} -`}</BodyShort>\n                            <BodyShort className={bem.modifier('eierNavn')} size=\"small\">\n                                {`${navnPeriodeEier}`}\n                            </BodyShort>\n                        </div>\n                    </div>\n                    <div className={bem.element('innhold-tekst-date')}>\n                        <BodyShort size=\"small\">\n                            {dayjs(fomDate).get('date')}. {måned3bokstaver(dayjs(fomDate))}.\n                        </BodyShort>\n                        <BodyShort size=\"small\" className={bem.modifier('year')}>\n                            {dayjs(fomDate).get('year')}\n                        </BodyShort>\n                    </div>\n                    <div className={bem.element('innhold-tekst-date')}>\n                        <BodyShort size=\"small\">\n                            {dayjs(tomDate).get('date')}. {måned3bokstaver(dayjs(tomDate))}.\n                        </BodyShort>\n                        <BodyShort size=\"small\" className={bem.modifier('year')}>\n                            {dayjs(tomDate).get('year')}\n                        </BodyShort>\n                    </div>\n                </div>\n                {overlappendePeriodeAnnenPart && (\n                    <div\n                        className={classNames(\n                            bem.element('samtidig-uttak'),\n                            bem.modifier(`bg-${erFarEllerMedmor ? 'mor' : 'farMedmor'}`),\n                        )}\n                    >\n                        <div className={bem.element('annen_part_innhold')}>\n                            <BodyShort size=\"small\" className={bem.modifier('samtidigUttakAnnenPart')}>\n                                {getOverlappendePeriodeTittel(\n                                    periode,\n                                    overlappendePeriodeAnnenPart,\n                                    intl,\n                                    navnPåForeldre,\n                                )}\n                            </BodyShort>\n                            <div className={bem.element('beskrivelse')}>\n                                <BodyShort size=\"small\">{`${varighetString} -`}</BodyShort>\n                                <BodyShort className={bem.modifier('eierNavn')} size=\"small\">\n                                    {`${navnAnnenForelder}`}\n                                </BodyShort>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n//color={getStønadskontoFarge(konto)}\nexport default PeriodeListeItem;\n","import { Periode } from 'app/types/Periode';\n\nimport PeriodeListeItem from '../periode-liste-item/PeriodeListeItem';\nimport { Heading } from '@navikt/ds-react';\nimport './periode-liste.css';\nimport { bemUtils, guid } from '@navikt/fp-common';\nimport { NavnPåForeldre } from 'app/utils/personUtils';\nimport { getTidsperiode, Tidsperioden } from 'app/utils/tidsperiodeUtils';\nimport { isUttaksperiode } from 'app/utils/periodeUtils';\n\ninterface Props {\n    erAleneOmOmsorg: boolean;\n    erFarEllerMedmor: boolean;\n    navnPåForeldre: NavnPåForeldre;\n    overlappendePerioderAnnenPart: Periode[] | undefined;\n    periodeListe: Periode[];\n    tittel: string;\n}\n\nconst PeriodeListe: React.FunctionComponent<Props> = ({\n    erAleneOmOmsorg,\n    erFarEllerMedmor,\n    navnPåForeldre,\n    periodeListe = [],\n    tittel,\n    overlappendePerioderAnnenPart: annenPartsOverlappendePerioder,\n}) => {\n    const bem = bemUtils('periode-liste');\n    return (\n        <>\n            <Heading size=\"xsmall\" level=\"3\" className={bem.element('title')}>\n                {tittel}\n            </Heading>\n            <div className={bem.element('block')}>\n                {periodeListe &&\n                    periodeListe.length > 0 &&\n                    periodeListe.map((periode) => {\n                        const overlappendePeriodeAnnenPartForVisning =\n                            !periode.gjelderAnnenPart &&\n                            periode.resultat &&\n                            periode.resultat.innvilget &&\n                            isUttaksperiode(periode) &&\n                            annenPartsOverlappendePerioder\n                                ? annenPartsOverlappendePerioder.find((p) =>\n                                      Tidsperioden(getTidsperiode(p)).overlapper(getTidsperiode(periode)),\n                                  )\n                                : undefined;\n                        return (\n                            <PeriodeListeItem\n                                key={guid()}\n                                periode={periode}\n                                erFarEllerMedmor={erFarEllerMedmor}\n                                erAleneOmOmsorg={erAleneOmOmsorg}\n                                navnPåForeldre={navnPåForeldre}\n                                overlappendePeriodeAnnenPart={overlappendePeriodeAnnenPartForVisning}\n                            />\n                        );\n                    })}\n            </div>\n        </>\n    );\n};\n\nexport default PeriodeListe;\n","import { Alert, Link } from '@navikt/ds-react';\nimport { bemUtils, intlUtils } from '@navikt/fp-common';\nimport { Periode } from 'app/types/Periode';\nimport { Foreldrepengesak } from 'app/types/Foreldrepengesak';\nimport { getNavnPåForeldre } from 'app/utils/personUtils';\n\nimport { useIntl } from 'react-intl';\nimport { RettighetType } from 'app/types/RettighetType';\nimport PeriodeListe from '../periode-liste/PeriodeListe';\nimport { Next } from '@navikt/ds-icons';\nimport { Link as RouterLink } from 'react-router-dom';\nimport OversiktRoutes from 'app/routes/routes';\nimport './periodeOversikt.css';\ninterface Props {\n    fremtidigePerioder?: Periode[];\n    navnAnnenForelder: string;\n    navnPåSøker: string;\n    nåværendePerioder?: Periode[];\n    overlappendePerioderAnnenPart: Periode[] | undefined;\n    sak: Foreldrepengesak;\n    tidligerePerioder?: Periode[];\n    visHelePlanen: boolean;\n}\n\nconst PeriodeOversikt: React.FunctionComponent<Props> = ({\n    tidligerePerioder = [],\n    nåværendePerioder = [],\n    fremtidigePerioder = [],\n    navnPåSøker,\n    navnAnnenForelder,\n    sak,\n    visHelePlanen,\n    overlappendePerioderAnnenPart: annenPartsOverlappendePerioder,\n}) => {\n    const intl = useIntl();\n    const erFarEllerMedmor = !sak.sakTilhørerMor;\n    const erAleneOmOmsorg = sak.rettighetType === RettighetType.ALENEOMSORG;\n    const navnPåForeldre = getNavnPåForeldre(sak, navnPåSøker, navnAnnenForelder);\n    const bem = bemUtils('periodeOversikt');\n    return (\n        <div className={bem.block}>\n            {[...nåværendePerioder, ...fremtidigePerioder].length === 0 && !visHelePlanen && (\n                <Alert className={bem.element('alert')} variant=\"info\">\n                    {intlUtils(intl, 'periodeOversikt.ingenPerioder.visKunNåværendeOgNeste')}\n                </Alert>\n            )}\n\n            {[...tidligerePerioder, ...nåværendePerioder, ...fremtidigePerioder].length === 0 && visHelePlanen && (\n                <Alert className={bem.element('alert')} variant=\"info\">\n                    {intlUtils(intl, 'periodeOversikt.ingenPerioder.visHelePlanen')}\n                </Alert>\n            )}\n\n            {tidligerePerioder.length > 0 && visHelePlanen && (\n                <PeriodeListe\n                    tittel={'Tidligere perioder'}\n                    periodeListe={tidligerePerioder}\n                    navnPåForeldre={navnPåForeldre}\n                    erFarEllerMedmor={erFarEllerMedmor}\n                    erAleneOmOmsorg={erAleneOmOmsorg}\n                    overlappendePerioderAnnenPart={annenPartsOverlappendePerioder}\n                />\n            )}\n            {nåværendePerioder.length > 0 && (\n                <PeriodeListe\n                    tittel={'Nåværende periode'}\n                    periodeListe={nåværendePerioder}\n                    navnPåForeldre={navnPåForeldre}\n                    erFarEllerMedmor={erFarEllerMedmor}\n                    erAleneOmOmsorg={erAleneOmOmsorg}\n                    overlappendePerioderAnnenPart={annenPartsOverlappendePerioder}\n                />\n            )}\n            {fremtidigePerioder.length > 0 && (\n                <PeriodeListe\n                    tittel={visHelePlanen ? 'Fremtidige perioder' : 'Neste periode'}\n                    periodeListe={visHelePlanen ? fremtidigePerioder : [fremtidigePerioder[0]]}\n                    navnPåForeldre={navnPåForeldre}\n                    erFarEllerMedmor={erFarEllerMedmor}\n                    erAleneOmOmsorg={erAleneOmOmsorg}\n                    overlappendePerioderAnnenPart={annenPartsOverlappendePerioder}\n                />\n            )}\n            {!visHelePlanen && (\n                <Link className={bem.element('seHelePlanen')} as={RouterLink} to={OversiktRoutes.DIN_PLAN}>\n                    Se hele planen <Next />\n                </Link>\n            )}\n        </div>\n    );\n};\nexport default PeriodeOversikt;\n","import { Periode } from 'app/types/Periode';\nimport dayjs from 'dayjs';\nimport { Uttaksdagen } from './Uttaksdagen';\n\nexport const slåSammenLikePerioder = (plan: Periode[]) => {\n    if (plan.length <= 0) {\n        return plan;\n    }\n\n    let forrigePeriode = plan[0];\n    const nyPlan: Periode[] = [];\n\n    plan.forEach((periode, index) => {\n        if (index === 0) {\n            return;\n        }\n\n        if (erPerioderLike(forrigePeriode, periode) && erPerioderSammenhengende(forrigePeriode, periode)) {\n            forrigePeriode = { ...forrigePeriode, tom: periode.tom };\n            return;\n        } else {\n            nyPlan.push(forrigePeriode);\n        }\n\n        forrigePeriode = periode;\n    });\n\n    nyPlan.push(forrigePeriode);\n\n    return nyPlan;\n};\n\nconst erPerioderSammenhengende = (p1: Periode, p2: Periode) => {\n    const p1NesteUttaksdato = Uttaksdagen(dayjs(p1.tom).toDate()).neste();\n    const p2Startdato = p2.fom;\n    return dayjs(p1NesteUttaksdato).isSame(p2Startdato, 'day');\n};\n\nconst erPerioderLike = (periodeA: Periode, periodeB: Periode) => {\n    const periodeFootprintA = getPeriodeFootprint(periodeA);\n    const periodeFootprintB = getPeriodeFootprint(periodeB);\n\n    return periodeFootprintA === periodeFootprintB;\n};\n\nconst getPeriodeFootprint = (periode: Periode) => {\n    const { fom, tom, ...rest } = periode;\n    const sortedPeriode: any = {};\n\n    Object.keys(rest)\n        .sort((a, b) => a.localeCompare(b))\n        .filter((key) => (rest as any)[key] !== undefined)\n        .forEach((key) => {\n            sortedPeriode[key] = (rest as any)[key];\n        });\n\n    return JSON.stringify({ ...sortedPeriode });\n};\n","import { BodyLong, Button, Link } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\n\nimport { Edit } from '@navikt/ds-icons';\nimport {\n    filtrerAnnenPartsUttakNårIkkeSamtidigUttak,\n    finnFremtidigePerioder,\n    finnNåværendePerioder,\n    finnTidligerePerioder,\n    getCleanedPlanForVisning,\n    getPerioderForVisning,\n    leggTilVisningsInfo,\n    normaliserPerioder,\n    Periodene,\n    skalAnnenPartsPeriodeVises,\n} from 'app/utils/periodeUtils';\nimport { NavRoutes } from 'app/routes/routes';\nimport './din-plan.css';\nimport PeriodeOversikt from 'app/components/periode-oversikt/PeriodeOversikt';\nimport { Foreldrepengesak } from 'app/types/Foreldrepengesak';\nimport { slåSammenLikePerioder } from 'app/utils/planUtils';\nimport { Periode } from 'app/types/Periode';\n\ninterface Props {\n    annenPartsPerioder: Periode[] | undefined;\n    navnAnnenForelder: string;\n    navnPåSøker: string;\n    sak: Foreldrepengesak;\n    visHelePlanen: boolean;\n    termindato: string | undefined;\n}\n\nconst DinPlan: React.FunctionComponent<Props> = ({\n    annenPartsPerioder,\n    sak,\n    visHelePlanen,\n    navnPåSøker,\n    navnAnnenForelder,\n    termindato,\n}) => {\n    const bem = bemUtils('din-plan');\n\n    let vedtattUttaksplan = undefined;\n    let søktePerioder = undefined;\n    if (sak.gjeldendeVedtak) {\n        vedtattUttaksplan = slåSammenLikePerioder(sak.gjeldendeVedtak.perioder);\n    }\n\n    if (sak.åpenBehandling && sak.åpenBehandling.søknadsperioder) {\n        søktePerioder = slåSammenLikePerioder(sak.åpenBehandling.søknadsperioder);\n    }\n    const erUttaksplanVedtatt = vedtattUttaksplan ? true : false;\n    const annenPartsPerioderForVisning =\n        annenPartsPerioder !== undefined\n            ? getPerioderForVisning(\n                  slåSammenLikePerioder(annenPartsPerioder).filter((p) => skalAnnenPartsPeriodeVises(p, termindato)),\n                  true,\n              )\n            : undefined;\n    let annenPartsPlan: Periode[] = [];\n    let søkersPlan = erUttaksplanVedtatt ? vedtattUttaksplan : søktePerioder;\n    if (søkersPlan && annenPartsPerioderForVisning) {\n        const { normaliserteEgnePerioder, normaliserteAnnenPartsPerioder } = normaliserPerioder(\n            søkersPlan,\n            annenPartsPerioderForVisning,\n        );\n        søkersPlan = normaliserteEgnePerioder;\n        const filtrerteAnnenPartsPerioder = filtrerAnnenPartsUttakNårIkkeSamtidigUttak(\n            normaliserteAnnenPartsPerioder,\n            søkersPlan,\n        );\n        annenPartsPlan = leggTilVisningsInfo(filtrerteAnnenPartsPerioder, søkersPlan);\n    }\n    const annenPartsPlanUtenOverlapp = annenPartsPlan ? annenPartsPlan.filter((p) => p.visIPlan) : [];\n    const annenPartsOverlappendePerioder = annenPartsPlan ? annenPartsPlan.filter((p) => !p.visIPlan) : [];\n    const allePerioderForVisning = søkersPlan\n        ? Periodene(søkersPlan.concat(annenPartsPlanUtenOverlapp)).sort()\n        : annenPartsPlan;\n    const filtrertPlan = getCleanedPlanForVisning(allePerioderForVisning, erUttaksplanVedtatt);\n    const tidligerePerioder = filtrertPlan ? finnTidligerePerioder(filtrertPlan) : undefined;\n    const nåværendePerioder = filtrertPlan ? finnNåværendePerioder(filtrertPlan) : undefined;\n    const fremtidligePerioder = filtrertPlan ? finnFremtidigePerioder(filtrertPlan) : undefined;\n    const kunTidligerePerioderFinnes =\n        (nåværendePerioder === undefined || nåværendePerioder.length === 0) &&\n        (fremtidligePerioder === undefined || fremtidligePerioder.length === 0);\n    let tekstForVedtattPlan = '';\n    if (visHelePlanen || !kunTidligerePerioderFinnes) {\n        tekstForVedtattPlan = 'Du har fått vedtatt planen nedenfor.';\n    }\n\n    return (\n        <>\n            <div className={bem.element('header')}>\n                <div className={bem.element('header-tekst')}>\n                    {erUttaksplanVedtatt && <BodyLong> {tekstForVedtattPlan} </BodyLong>}\n                    {!erUttaksplanVedtatt && <BodyLong> Du har søkt om planen nedenfor. </BodyLong>}\n                    {!erUttaksplanVedtatt && <BodyLong> Planen er ikke vedtatt av NAV ennå. </BodyLong>}\n                </div>\n                {(visHelePlanen || !kunTidligerePerioderFinnes) && (\n                    <Button\n                        as={Link}\n                        href={NavRoutes.FORELDREPENGESOKNAD}\n                        variant=\"secondary\"\n                        icon={<Edit aria-hidden />}\n                        iconPosition=\"right\"\n                    >\n                        Endre plan\n                    </Button>\n                )}\n            </div>\n            <PeriodeOversikt\n                tidligerePerioder={tidligerePerioder}\n                nåværendePerioder={nåværendePerioder}\n                fremtidigePerioder={fremtidligePerioder}\n                sak={sak}\n                visHelePlanen={visHelePlanen}\n                navnPåSøker={navnPåSøker}\n                navnAnnenForelder={navnAnnenForelder}\n                overlappendePerioderAnnenPart={annenPartsOverlappendePerioder}\n            />\n        </>\n    );\n};\n\nexport default DinPlan;\n","import { MinidialogInnslag } from 'app/types/MinidialogInnslag';\n\nimport { Link } from 'react-router-dom';\nimport './oppgaveLenkepanel.css';\nimport { bemUtils, Block, formatDate } from '@navikt/fp-common';\nimport { LinkPanel } from '@navikt/ds-react';\nimport { DialogReport } from '@navikt/ds-icons';\nimport OversiktRoutes from 'app/routes/routes';\n\ninterface Props {\n    minidialogInnslag: MinidialogInnslag;\n    tittel: React.ReactNode | string;\n}\n\nconst OppgaveLenkepanel: React.FunctionComponent<Props> = ({ tittel, minidialogInnslag }) => {\n    const bem = bemUtils('oppgave-lenkepanel');\n    return (\n        <Block padBottom=\"l\">\n            <LinkPanel\n                as={Link}\n                to={`${OversiktRoutes.OPPGAVER}/${minidialogInnslag.dialogId}`}\n                border={false}\n                className={bem.element('linkPanel')}\n            >\n                <div className={bem.element('content')}>\n                    <DialogReport className={bem.element('icon')}></DialogReport>\n                    <div>\n                        <LinkPanel.Title as=\"h3\" className={bem.element('title')}>\n                            {tittel}\n                        </LinkPanel.Title>\n                        <LinkPanel.Description>\n                            <div className={bem.block}>{formatDate(minidialogInnslag.opprettet)}</div>\n                        </LinkPanel.Description>\n                    </div>\n                </div>\n            </LinkPanel>\n        </Block>\n    );\n};\n\nexport default OppgaveLenkepanel;\n","import { BodyShort, Loader } from '@navikt/ds-react';\nimport { bemUtils, guid, intlUtils } from '@navikt/fp-common';\nimport { MinidialogInnslag } from 'app/types/MinidialogInnslag';\nimport { AxiosError } from 'axios';\n\nimport { useIntl } from 'react-intl';\nimport OppgaveLenkepanel from '../oppgave-lenkepanel/OppgaveLenkepanel';\nimport './oppgaver.css';\ninterface Props {\n    minidialogerData: MinidialogInnslag[] | undefined;\n    minidialogerError: AxiosError | null;\n    saksnummer: string;\n}\nconst Oppgaver: React.FunctionComponent<Props> = ({ minidialogerData, minidialogerError }) => {\n    const bem = bemUtils('oppgaver');\n    const intl = useIntl();\n    if (minidialogerError) {\n        return <BodyShort>{intlUtils(intl, 'oppgaver.feilVedHentingAvOppgaver')}</BodyShort>;\n    }\n\n    if (!minidialogerData) {\n        return <Loader size=\"large\" aria-label=\"Henter status for dine oppgaver\" />;\n    }\n\n    return (\n        <div className={bem.block}>\n            {minidialogerData.map((minidialog) => (\n                <OppgaveLenkepanel\n                    key={guid()}\n                    tittel={intlUtils(intl, 'oppgaver.tittel.tilbakebetaling')}\n                    minidialogInnslag={minidialog}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Oppgaver;\n","import { Dokument } from 'app/types/Dokument';\nimport Environment from 'app/Environment';\nimport dayjs from 'dayjs';\n\nexport const grupperDokumenterPåTidspunkt = (dokumenter: Dokument[]): Record<string, Dokument[]> => {\n    const gruppert: Record<string, Dokument[]> = {};\n\n    dokumenter.forEach((dokument) => {\n        const mottattTidspunkt = dayjs(dokument.mottatt).format();\n\n        if (!gruppert[mottattTidspunkt]) {\n            gruppert[mottattTidspunkt] = [dokument];\n        } else {\n            gruppert[mottattTidspunkt].push(dokument);\n        }\n    });\n\n    return gruppert;\n};\n\nexport const lagUrl = (dokument: Dokument): string => {\n    return dokument.url\n        ? dokument.url\n        : `${Environment.REST_API_URL}/dokument/hent-dokument/${dokument.journalpostId}/${dokument.dokumentId}`;\n};\n","import { Link } from '@navikt/ds-react';\n\nimport { FileContent } from '@navikt/ds-icons';\nimport { bemUtils } from '@navikt/fp-common';\nimport { Dokument } from 'app/types/Dokument';\nimport { lagUrl } from 'app/utils/dokumenterUtils';\n\nimport './dokument-hendelse.css';\nimport classNames from 'classnames';\n\ninterface Props {\n    dokument: Dokument;\n    visesITidslinjen: boolean;\n}\n\nconst DokumentHendelse: React.FunctionComponent<Props> = ({ dokument, visesITidslinjen }) => {\n    const bem = bemUtils('dokument-hendelse');\n    const { tittel } = dokument;\n    const url = lagUrl(dokument);\n\n    return (\n        <li className={classNames(`${bem.block} ${visesITidslinjen ? bem.modifier('medium') : bem.modifier('large')}`)}>\n            <FileContent className={bem.element('ikon')} />\n            <Link href={url} className={bem.element('ikon')} target=\"_blank\">\n                {tittel}\n            </Link>\n        </li>\n    );\n};\n\nexport default DokumentHendelse;\n","export enum TidslinjehendelseType {\n    FØRSTEGANGSSØKNAD = 'FØRSTEGANGSSØKNAD',\n    FØRSTEGANGSSØKNAD_NY = 'FØRSTEGANGSSØKNAD_NY',\n    ETTERSENDING = 'ETTERSENDING',\n    ENDRINGSSØKNAD = 'ENDRINGSSØKNAD',\n    INNTEKTSMELDING = 'INNTEKTSMELDING',\n    VEDTAK = 'VEDTAK',\n    VENTER_INNTEKTSMELDING = 'VENTER_INNTEKTSMELDING',\n    VENTER_PGA_TIDLIG_SØKNAD = 'VENTER_PGA_TIDLIG_SØKNAD',\n    VENTER_MELDEKORT = 'VENTER_MELDEKORT',\n    VENT_DOKUMENTASJON = 'VENT_DOKUMENTASJON',\n    UTGÅENDE_INNHENT_OPPLYSNINGER = 'UTGÅENDE_INNHENT_OPPLYSNINGER',\n    UTGÅENDE_ETTERLYS_INNTEKTSMELDING = 'UTGÅENDE_ETTERLYS_INNTEKTSMELDING',\n    UTGÅENDE_VARSEL_TILBAKEBETALING = 'UTGÅENDE_VARSEL_TILBAKEBETALING',\n    FAMILIEHENDELSE = 'FAMILIEHENDELSE',\n    BARNET_TRE_ÅR = 'BARNET_TRE_ÅR',\n    FREMTIDIG_VEDTAK = 'FREMTIDIG_VEDTAK',\n}\n","export enum AktørType {\n    BRUKER = 'BRUKER',\n    NAV = 'NAV',\n    ARBEIDSGIVER = 'ARBEIDSGIVER',\n}\n","export enum BehandlingTilstand {\n    TIDLIG_SØKNAD = 'VENT_TIDLIG_SØKNAD',\n    VENTER_PÅ_INNTEKTSMELDING = 'VENT_INNTEKTSMELDING',\n    VENTER_PÅ_DOKUMENTASJON = 'VENT_DOKUMENTASJON',\n    VENTER_PÅ_MELDEKORT = 'VENT_MELDEKORT',\n    UNDER_BEHANDLING = 'UNDER_BEHANDLING',\n}\n","export enum Tilretteleggingstype {\n    'INGEN' = 'INGEN',\n    'DELVIS' = 'DELVIS',\n    'HEL' = 'HEL',\n}\n\nexport interface TilretteleggingPeriodeSVP {\n    type: Tilretteleggingstype;\n    fom: string;\n    tom: string;\n}\n","import { formatDate, intlUtils } from '@navikt/fp-common';\nimport { AktørType } from 'app/types/AktørType';\nimport { ÅpenBehandling, ÅpenBehandlingFP, ÅpenBehandlingSVP } from 'app/types/ÅpenBehandling';\nimport { TidslinjehendelseType } from 'app/types/TidslinjehendelseType';\nimport { BehandlingTilstand } from 'app/types/BehandlingTilstand';\nimport { Tidslinjehendelse } from 'app/types/Tidslinjehendelse';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\nimport OversiktRoutes, { NavRoutes } from 'app/routes/routes';\nimport { Uttaksdagen, UTTAKSDAGER_PER_UKE } from 'app/utils/Uttaksdagen';\nimport { Skjemanummer } from '@navikt/fp-constants';\nimport { Ytelse } from 'app/types/Ytelse';\nimport { formaterDato } from './dateUtils';\nimport { Familiehendelse } from 'app/types/Familiehendelse';\nimport { getFamiliehendelseDato, getNavnPåBarna } from './sakerUtils';\nimport { BarnGruppering } from 'app/types/BarnGruppering';\nimport { Sak } from 'app/types/Sak';\nimport { Tilretteleggingstype } from 'app/types/TilretteleggingsperiodeSVP';\n\nexport const VENTEÅRSAKER = [\n    BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING,\n    BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON,\n    BehandlingTilstand.TIDLIG_SØKNAD,\n    BehandlingTilstand.VENTER_PÅ_MELDEKORT,\n];\n\nexport const TIDSLINJEHENDELSER_PÅ_VENT = [\n    TidslinjehendelseType.VENTER_INNTEKTSMELDING,\n    TidslinjehendelseType.VENTER_MELDEKORT,\n    TidslinjehendelseType.VENTER_PGA_TIDLIG_SØKNAD,\n    TidslinjehendelseType.VENT_DOKUMENTASJON,\n];\n\nexport const getTidligstDatoForInntektsmelding = (førsteUttaksdagISaken: Date | undefined): Date | undefined => {\n    return førsteUttaksdagISaken\n        ? dayjs(førsteUttaksdagISaken)\n              .subtract(4 * 7, 'day')\n              .toDate()\n        : undefined;\n};\n\nexport const getTidslinjetekstForAntallBarn = (\n    antallBarn: number,\n    intl: IntlShape,\n    gjelderAdopsjon: boolean | undefined,\n): string => {\n    if (antallBarn === 1 || antallBarn === 0) {\n        return intlUtils(intl, 'barnet');\n    } else if (antallBarn > 1 && gjelderAdopsjon) {\n        return intlUtils(intl, 'barna');\n    } else if (antallBarn === 2) {\n        return intlUtils(intl, 'tvillingene');\n    } else if (antallBarn === 3) {\n        return intlUtils(intl, 'trillingene');\n    }\n    return intlUtils(intl, 'flerlingene');\n};\n\nconst getTidslinjeTittelForBarnTreÅr = (\n    barnFraSak: BarnGruppering,\n    antallBarn: number,\n    omsorgsovertakelse: string | undefined,\n    intl: IntlShape,\n) => {\n    let barnNavnTekst = '';\n    if (omsorgsovertakelse) {\n        return intlUtils(intl, 'tidslinje.tittel.BARNET_TRE_ÅR.adopsjon', {\n            navn: barnNavnTekst,\n        });\n    }\n    if (barnFraSak.fornavn === undefined || barnFraSak.fornavn.length === 0 || !barnFraSak.alleBarnaLever) {\n        barnNavnTekst = getTidslinjetekstForAntallBarn(antallBarn, intl, false);\n    } else {\n        barnNavnTekst = getNavnPåBarna(barnFraSak.fornavn);\n    }\n    return intlUtils(intl, 'tidslinje.tittel.BARNET_TRE_ÅR.fødsel', {\n        navn: barnNavnTekst,\n    });\n};\n\nconst getTidslinjeTittelForAdopsjon = (navn: string, omsorgsovertakelse: string, intl: IntlShape) => {\n    if (dayjs(omsorgsovertakelse).isSameOrBefore(dayjs(), 'd')) {\n        return intlUtils(intl, 'tidslinje.tittel.FAMILIEHENDELSE.omsorgsovertakelse.tilbakeITid', {\n            navn,\n        });\n    } else {\n        return intlUtils(intl, 'tidslinje.tittel.FAMILIEHENDELSE.omsorgsovertakelse.fremITid', {\n            navn,\n        });\n    }\n};\n\nconst getTidslinjeTittelForFamiliehendelseForeldrepenger = (\n    barnFraSak: BarnGruppering,\n    antallBarn: number,\n    gjelderAdopsjon: boolean | undefined,\n    familiehendelse: Familiehendelse,\n    intl: IntlShape,\n) => {\n    let barnNavnTekst = '';\n    if (barnFraSak.fornavn === undefined || barnFraSak.fornavn.length === 0 || !barnFraSak.alleBarnaLever) {\n        barnNavnTekst = getTidslinjetekstForAntallBarn(antallBarn, intl, gjelderAdopsjon);\n    } else {\n        barnNavnTekst = getNavnPåBarna(barnFraSak.fornavn);\n    }\n    if (gjelderAdopsjon && familiehendelse.omsorgsovertakelse) {\n        return getTidslinjeTittelForAdopsjon(barnNavnTekst, familiehendelse.omsorgsovertakelse, intl);\n    } else if (familiehendelse.fødselsdato) {\n        return intlUtils(intl, 'tidslinje.tittel.FAMILIEHENDELSE.fødsel', { navn: barnNavnTekst });\n    } else {\n        return intlUtils(intl, 'tidslinje.tittel.FAMILIEHENDELSE.termindato');\n    }\n};\n\nconst getTidslinjeTittelForFamiliehendelse = (\n    familiehendelse: Familiehendelse,\n    gjelderAdopsjon: boolean | undefined,\n    barnFraSak: BarnGruppering,\n    antallBarn: number,\n    ytelse: Ytelse,\n    intl: IntlShape,\n): string => {\n    if (ytelse === Ytelse.FORELDREPENGER) {\n        return getTidslinjeTittelForFamiliehendelseForeldrepenger(\n            barnFraSak,\n            antallBarn,\n            gjelderAdopsjon,\n            familiehendelse,\n            intl,\n        );\n    } else {\n        if (familiehendelse.omsorgsovertakelse) {\n            return 'Adopsjonsdato';\n        } else if (familiehendelse.fødselsdato) {\n            return 'Barnet ble født';\n        } else {\n            return intlUtils(intl, 'tidslinje.tittel.FAMILIEHENDELSE.termindato');\n        }\n    }\n};\n\nconst finnTekstForTidslinjehendelse = (\n    intl: IntlShape,\n    hendelsetype: TidslinjehendelseType,\n    erOmsorgsovertakelse: boolean,\n) => {\n    switch (hendelsetype) {\n        case TidslinjehendelseType.BARNET_TRE_ÅR:\n            return erOmsorgsovertakelse\n                ? intl.formatMessage({ id: 'tidslinje.tittel.BARNET_TRE_ÅR.adopsjon' })\n                : intl.formatMessage({ id: 'tidslinje.tittel.BARNET_TRE_ÅR.fødsel' });\n        case TidslinjehendelseType.ENDRINGSSØKNAD:\n            return intl.formatMessage({ id: 'tidslinje.tittel.ENDRINGSSØKNAD' });\n        case TidslinjehendelseType.ETTERSENDING:\n            return intl.formatMessage({ id: 'tidslinje.tittel.ETTERSENDING' });\n        case TidslinjehendelseType.FAMILIEHENDELSE:\n            return intl.formatMessage({ id: 'tidslinje.tittel.FAMILIEHENDELSE' });\n        case TidslinjehendelseType.FREMTIDIG_VEDTAK:\n            return intl.formatMessage({ id: 'tidslinje.tittel.FREMTIDIG_VEDTAK' });\n        case TidslinjehendelseType.FØRSTEGANGSSØKNAD:\n            return intl.formatMessage({ id: 'tidslinje.tittel.FØRSTEGANGSSØKNAD' });\n        case TidslinjehendelseType.FØRSTEGANGSSØKNAD_NY:\n            return intl.formatMessage({ id: 'tidslinje.tittel.FØRSTEGANGSSØKNAD_NY' });\n        case TidslinjehendelseType.INNTEKTSMELDING:\n            return intl.formatMessage({ id: 'tidslinje.tittel.INNTEKTSMELDING' });\n        case TidslinjehendelseType.UTGÅENDE_ETTERLYS_INNTEKTSMELDING:\n            return intl.formatMessage({ id: 'tidslinje.tittel.UTGÅENDE_ETTERLYS_INNTEKTSMELDING' });\n        case TidslinjehendelseType.UTGÅENDE_INNHENT_OPPLYSNINGER:\n            return intl.formatMessage({ id: 'tidslinje.tittel.UTGÅENDE_INNHENT_OPPLYSNINGER' });\n        case TidslinjehendelseType.UTGÅENDE_VARSEL_TILBAKEBETALING:\n            return intl.formatMessage({ id: 'tidslinje.tittel.UTGÅENDE_VARSEL_TILBAKEBETALING' });\n        case TidslinjehendelseType.VEDTAK:\n            return intl.formatMessage({ id: 'tidslinje.tittel.VEDTAK' });\n        case TidslinjehendelseType.VENTER_INNTEKTSMELDING:\n            return intl.formatMessage({ id: 'tidslinje.tittel.VENTER_INNTEKTSMELDING' });\n        case TidslinjehendelseType.VENTER_MELDEKORT:\n            return intl.formatMessage({ id: 'tidslinje.tittel.VENTER_MELDEKORT' });\n        case TidslinjehendelseType.VENTER_PGA_TIDLIG_SØKNAD:\n            return intl.formatMessage({ id: 'tidslinje.tittel.VENTER_PGA_TIDLIG_SØKNAD' });\n        case TidslinjehendelseType.VENT_DOKUMENTASJON:\n            return intl.formatMessage({ id: 'tidslinje.tittel.VENT_DOKUMENTASJON' });\n    }\n};\n\nexport const getTidslinjehendelseTittel = (\n    hendelsetype: TidslinjehendelseType,\n    intl: IntlShape,\n    tidlistBehandlingsdato: Date | undefined,\n    manglendeVedleggData: Skjemanummer[] | undefined,\n    barnFraSak: BarnGruppering,\n    sak: Sak,\n): string => {\n    const { familiehendelse, ytelse, gjelderAdopsjon } = sak;\n    const antallBarn = familiehendelse?.antallBarn;\n    if (hendelsetype === TidslinjehendelseType.VENTER_PGA_TIDLIG_SØKNAD && tidlistBehandlingsdato !== undefined) {\n        return intlUtils(intl, 'tidslinje.tittel.VENTER_PGA_TIDLIG_SØKNAD', {\n            tidlistBehandlingsdato: formatDate(tidlistBehandlingsdato),\n        });\n    }\n    if (\n        hendelsetype === TidslinjehendelseType.VENT_DOKUMENTASJON &&\n        manglendeVedleggData &&\n        manglendeVedleggData.length === 1\n    ) {\n        const navnPåDokumentasjon = intlUtils(intl, `ettersendelse.${manglendeVedleggData[0]}`);\n        const dokumentasjonLowerCase = navnPåDokumentasjon.charAt(0).toLowerCase() + navnPåDokumentasjon.slice(1);\n        return intlUtils(intl, 'tidslinje.navVenterPå', { dokumentasjon: dokumentasjonLowerCase });\n    }\n    if (hendelsetype === TidslinjehendelseType.FØRSTEGANGSSØKNAD) {\n        return intlUtils(intl, 'tidslinje.tittel.FØRSTEGANGSSØKNAD', { ytelse });\n    }\n    if (hendelsetype === TidslinjehendelseType.FAMILIEHENDELSE && familiehendelse && antallBarn !== undefined) {\n        return getTidslinjeTittelForFamiliehendelse(\n            familiehendelse,\n            gjelderAdopsjon,\n            barnFraSak,\n            antallBarn,\n            ytelse,\n            intl,\n        );\n    }\n    if (\n        ytelse === Ytelse.FORELDREPENGER &&\n        (familiehendelse?.fødselsdato || familiehendelse?.omsorgsovertakelse) &&\n        antallBarn &&\n        hendelsetype === TidslinjehendelseType.BARNET_TRE_ÅR\n    ) {\n        return getTidslinjeTittelForBarnTreÅr(barnFraSak, antallBarn, familiehendelse?.omsorgsovertakelse, intl);\n    }\n    return finnTekstForTidslinjehendelse(intl, hendelsetype, !!familiehendelse?.omsorgsovertakelse);\n};\n\nexport const getTidslinjeHendelstypeAvVenteårsak = (venteårsak: BehandlingTilstand) => {\n    if (venteårsak === BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING) {\n        return TidslinjehendelseType.VENTER_INNTEKTSMELDING;\n    }\n    if (venteårsak === BehandlingTilstand.TIDLIG_SØKNAD) {\n        return TidslinjehendelseType.VENTER_PGA_TIDLIG_SØKNAD;\n    }\n    if (venteårsak === BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON) {\n        return TidslinjehendelseType.VENT_DOKUMENTASJON;\n    }\n    if (venteårsak === BehandlingTilstand.VENTER_PÅ_MELDEKORT) {\n        return TidslinjehendelseType.VENTER_MELDEKORT;\n    } else {\n        throw new Error('Ukjent venteårsak');\n    }\n};\n\nexport const getAktørtypeAvVenteårsak = (venteårsak: BehandlingTilstand): AktørType => {\n    if (venteårsak === BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING) {\n        return AktørType.ARBEIDSGIVER;\n    }\n    if (venteårsak === BehandlingTilstand.TIDLIG_SØKNAD) {\n        return AktørType.NAV;\n    }\n    return AktørType.BRUKER;\n};\n\nexport const getTidlinjeHendelseEksternUrl = (venteårsak: BehandlingTilstand): NavRoutes | undefined => {\n    if (venteårsak === BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING) {\n        return NavRoutes.VENT_INNTEKTSMELDING;\n    }\n    if (venteårsak === BehandlingTilstand.TIDLIG_SØKNAD) {\n        return NavRoutes.SØKNADSFRISTER;\n    }\n\n    if (venteårsak === BehandlingTilstand.VENTER_PÅ_MELDEKORT) {\n        return NavRoutes.VENT_MELDEKORT;\n    }\n    return undefined;\n};\n\nexport const getTidligstBehandlingsDatoForTidligSøknadFP = (åpenBehandling: ÅpenBehandlingFP): Date => {\n    const søknadsperioder = åpenBehandling.søknadsperioder;\n    const førsteUttaksdagISaken = dayjs(søknadsperioder![0].fom).toDate();\n    return Uttaksdagen(Uttaksdagen(førsteUttaksdagISaken).denneEllerNeste()).trekkFra(4 * UTTAKSDAGER_PER_UKE);\n};\n\nexport const getTidligstBehandlingsDatoForTidligSøknadSVP = (åpenBehandling: ÅpenBehandlingSVP): Date => {\n    const tilretteleggingerFomDatoer =\n        åpenBehandling.søknad.arbeidsforhold\n            .map((a) => {\n                const utenHelTilrettelegging = a.tilrettelegginger.filter((t) => t.type !== Tilretteleggingstype.HEL);\n                return utenHelTilrettelegging.map((periode) => dayjs(periode.fom));\n            })\n            .flat(1) || [];\n    const datoFørstePeriodeMedSVP = dayjs.min(tilretteleggingerFomDatoer)!.toDate();\n    return Uttaksdagen(Uttaksdagen(datoFørstePeriodeMedSVP).denneEllerNeste()).trekkFra(4 * UTTAKSDAGER_PER_UKE);\n};\n\nexport const getTidligstBehandlingsDatoForTidligSøknad = (ytelse: Ytelse, åpenBehandling: ÅpenBehandling): Date => {\n    if (ytelse === Ytelse.SVANGERSKAPSPENGER) {\n        return getTidligstBehandlingsDatoForTidligSøknadSVP(åpenBehandling as ÅpenBehandlingSVP);\n    }\n\n    return getTidligstBehandlingsDatoForTidligSøknadFP(åpenBehandling);\n};\n\nconst getDatoForInnsendingAvFørsteSøknad = (tidslinjeHendelser: Tidslinjehendelse[]): Date | undefined => {\n    const hendelseFørsteSøknad = tidslinjeHendelser.find(\n        (hendelse) => hendelse.tidslinjeHendelseType === TidslinjehendelseType.FØRSTEGANGSSØKNAD,\n    );\n    return hendelseFørsteSøknad ? hendelseFørsteSøknad.opprettet : undefined;\n};\n\nexport const getTidslinjehendelserDetaljer = (\n    tidslinjeHendelserData: Tidslinjehendelse[],\n    intl: IntlShape,\n): Tidslinjehendelse[] => {\n    return tidslinjeHendelserData.map((hendelse) => {\n        switch (hendelse.tidslinjeHendelseType) {\n            case TidslinjehendelseType.UTGÅENDE_INNHENT_OPPLYSNINGER:\n                return {\n                    ...hendelse,\n                    internalUrl: OversiktRoutes.ETTERSEND,\n                    linkTittel: intlUtils(intl, 'tidslinje.VENT_DOKUMENTASJON.linkTittel'),\n                };\n            case TidslinjehendelseType.FØRSTEGANGSSØKNAD_NY: {\n                const datoFørsteSøknad = getDatoForInnsendingAvFørsteSøknad(tidslinjeHendelserData);\n                return {\n                    ...hendelse,\n                    merInformasjon: datoFørsteSøknad\n                        ? intlUtils(intl, 'tidslinje.merInformasjon.FØRSTEGANGSSØKNAD_NY', {\n                              datoFørsteSøknad: formaterDato(datoFørsteSøknad, 'DD. MMM YYYY'),\n                          })\n                        : intlUtils(intl, 'tidslinje.merInformasjon.FØRSTEGANGSSØKNAD_NY.ukjentDatoFørstSøknad'),\n                };\n            }\n            default:\n                return hendelse;\n        }\n    });\n};\n\nexport const getTidslinjeFamiliehendelse = (familiehendelse: Familiehendelse): Tidslinjehendelse => {\n    const familiehendelsedato = getFamiliehendelseDato(familiehendelse);\n    return {\n        type: 'søknad',\n        opprettet: new Date(familiehendelsedato),\n        tidslinjeHendelseType: TidslinjehendelseType.FAMILIEHENDELSE,\n        aktørType: AktørType.BRUKER,\n        dokumenter: [],\n        manglendeVedlegg: [],\n    };\n};\n\nexport const getTidslinjeBarnTreÅrHendelse = (\n    fødselsdato: string | undefined,\n    omsorgsovertakelse: string | undefined,\n    antallBarn: number,\n    gjelderAdopsjon: boolean,\n    intl: IntlShape,\n): Tidslinjehendelse => {\n    let dato;\n    let merInformasjon = '';\n    if (gjelderAdopsjon) {\n        dato = dayjs(omsorgsovertakelse).add(3, 'y').toDate();\n        merInformasjon = intlUtils(intl, 'tidslinje.BARN_TRE_ÅR.adopsjon.informasjon', { antallBarn });\n    } else {\n        dato = dayjs(fødselsdato).add(3, 'y').toDate();\n        merInformasjon = intlUtils(intl, 'tidslinje.BARN_TRE_ÅR.fødsel.informasjon', { antallBarn });\n    }\n    return {\n        type: 'søknad',\n        opprettet: dato,\n        tidslinjeHendelseType: TidslinjehendelseType.BARNET_TRE_ÅR,\n        aktørType: AktørType.BRUKER,\n        dokumenter: [],\n        manglendeVedlegg: [],\n        merInformasjon,\n        linkTittel: intlUtils(intl, 'tidslinje.BARN_TRE_ÅR.linkTittel'),\n        eksternalUrl: NavRoutes.HVOR_LENGE,\n    };\n};\n\nexport const getTidslinjeVedtakHendelse = (intl: IntlShape, ytelse: Ytelse): Tidslinjehendelse => {\n    let url = NavRoutes.SAKSBEHANDLINGSTIDER_FP;\n    if (ytelse === Ytelse.SVANGERSKAPSPENGER) {\n        url = NavRoutes.SAKSBEHANDLINGSTIDER_SVP;\n    }\n    if (ytelse === Ytelse.ENGANGSSTØNAD) {\n        url = NavRoutes.SAKSBEHANDLINGSTIDER_ES;\n    }\n    return {\n        type: 'søknad',\n        opprettet: dayjs(new Date()).add(1, 'd').toDate(),\n        tidslinjeHendelseType: TidslinjehendelseType.FREMTIDIG_VEDTAK,\n        aktørType: AktørType.NAV,\n        dokumenter: [],\n        manglendeVedlegg: [],\n        merInformasjon: intlUtils(intl, 'tidslinje.FREMTIDIG_VEDTAK.informasjon'),\n        linkTittel: intlUtils(intl, 'tidslinje.FREMTIDIG_VEDTAK.linkTittel'),\n        eksternalUrl: url,\n    };\n};\n\nconst finnBehandlingstilstandInfoTekst = (intl: IntlShape, behandlingTilstand: BehandlingTilstand, ytelse: Ytelse) => {\n    switch (behandlingTilstand) {\n        case BehandlingTilstand.TIDLIG_SØKNAD:\n            return ytelse === Ytelse.FORELDREPENGER\n                ? intl.formatMessage({ id: 'tidslinje.VENT_TIDLIG_SØKNAD.informasjon.foreldrepenger' })\n                : intl.formatMessage({ id: 'tidslinje.VENT_TIDLIG_SØKNAD.informasjon.svangerskapspenger' });\n        case BehandlingTilstand.UNDER_BEHANDLING:\n            return intl.formatMessage({ id: 'tidslinje.UNDER_BEHANDLING.informasjon' });\n        case BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON:\n            return intl.formatMessage({ id: 'tidslinje.VENT_DOKUMENTASJON.informasjon' });\n        case BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING:\n            return intl.formatMessage({ id: 'tidslinje.VENT_INNTEKTSMELDING.informasjon' });\n        case BehandlingTilstand.VENTER_PÅ_MELDEKORT:\n            return intl.formatMessage({ id: 'tidslinje.VENT_MELDEKORT.informasjon' });\n    }\n};\n\nconst finnBehandlingstilstandLikTittelTekst = (intl: IntlShape, behandlingTilstand: BehandlingTilstand) => {\n    switch (behandlingTilstand) {\n        case BehandlingTilstand.TIDLIG_SØKNAD:\n            return intl.formatMessage({ id: 'tidslinje.VENT_TIDLIG_SØKNAD.linkTittel' });\n        case BehandlingTilstand.UNDER_BEHANDLING:\n            return intl.formatMessage({ id: 'tidslinje.UNDER_BEHANDLING.linkTittel' });\n        case BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON:\n            return intl.formatMessage({ id: 'tidslinje.VENT_DOKUMENTASJON.linkTittel' });\n        case BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING:\n            return intl.formatMessage({ id: 'tidslinje.VENT_INNTEKTSMELDING.linkTittel' });\n        case BehandlingTilstand.VENTER_PÅ_MELDEKORT:\n            return intl.formatMessage({ id: 'tidslinje.VENT_MELDEKORT.linkTittel' });\n    }\n};\n\nconst finnInfoTekstForYtelse = (intl: IntlShape, ytelse: Ytelse) =>\n    ytelse === Ytelse.FORELDREPENGER\n        ? intl.formatMessage({ id: 'tidslinje.VENT_TIDLIG_SØKNAD.informasjon.foreldrepenger' })\n        : intl.formatMessage({ id: 'tidslinje.VENT_TIDLIG_SØKNAD.informasjon.svangerskapspenger' });\n\nexport const getTidslinjehendelserFraBehandlingPåVent = (\n    åpenBehandling: ÅpenBehandling,\n    manglendeVedleggData: Skjemanummer[],\n    intl: IntlShape,\n    ytelse: Ytelse,\n): Tidslinjehendelse[] => {\n    let hendelseVenterPåDokumentasjon = undefined;\n    if (\n        åpenBehandling.tilstand === BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING &&\n        manglendeVedleggData &&\n        manglendeVedleggData.length > 0\n    ) {\n        hendelseVenterPåDokumentasjon = {\n            type: 'søknad',\n            opprettet: dayjs(new Date()).add(1, 'd').toDate(),\n            aktørType: getAktørtypeAvVenteårsak(BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON),\n            tidslinjeHendelseType: getTidslinjeHendelstypeAvVenteårsak(BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON),\n            dokumenter: [],\n            manglendeVedlegg: [],\n            merInformasjon: intl.formatMessage({ id: 'tidslinje.VENT_DOKUMENTASJON.informasjon' }),\n            linkTittel: intl.formatMessage({ id: 'tidslinje.VENT_DOKUMENTASJON.linkTittel' }),\n            eksternalUrl: getTidlinjeHendelseEksternUrl(BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON),\n            internalUrl: OversiktRoutes.ETTERSEND,\n            tidligstBehandlingsDato: undefined,\n        };\n    }\n    const merInfo =\n        åpenBehandling.tilstand === BehandlingTilstand.TIDLIG_SØKNAD\n            ? finnInfoTekstForYtelse(intl, ytelse)\n            : finnBehandlingstilstandInfoTekst(intl, åpenBehandling.tilstand, ytelse);\n    const tidslinjeHendelse = {\n        type: 'søknad',\n        opprettet: dayjs(new Date()).add(1, 'd').toDate(),\n        aktørType: getAktørtypeAvVenteårsak(åpenBehandling.tilstand),\n        tidslinjeHendelseType: getTidslinjeHendelstypeAvVenteårsak(åpenBehandling.tilstand),\n        dokumenter: [],\n        manglendeVedlegg: [],\n        merInformasjon: merInfo,\n        linkTittel: finnBehandlingstilstandLikTittelTekst(intl, åpenBehandling.tilstand),\n        eksternalUrl: getTidlinjeHendelseEksternUrl(åpenBehandling.tilstand),\n        internalUrl:\n            åpenBehandling.tilstand === BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON\n                ? OversiktRoutes.ETTERSEND\n                : undefined,\n        tidligstBehandlingsDato:\n            åpenBehandling.tilstand === BehandlingTilstand.TIDLIG_SØKNAD\n                ? getTidligstBehandlingsDatoForTidligSøknad(ytelse, åpenBehandling)\n                : undefined,\n    };\n\n    if (hendelseVenterPåDokumentasjon) {\n        return [hendelseVenterPåDokumentasjon, tidslinjeHendelse];\n    }\n\n    return [tidslinjeHendelse];\n};\n\nexport const sorterTidslinjehendelser = (h1: Tidslinjehendelse, h2: Tidslinjehendelse) => {\n    if (dayjs(h1.opprettet).isBefore(h2.opprettet)) {\n        return -1;\n    } else if (dayjs(h1.opprettet).isAfter(h2.opprettet)) {\n        return 1;\n    } else {\n        return 0;\n    }\n};\n\nconst getNesteHendelser = (sorterteHendelser: Tidslinjehendelse[]) => {\n    return sorterteHendelser.filter((hendelse) => dayjs(hendelse.opprettet).isAfter(dayjs(), 'd'));\n};\n\nconst getSisteHendelser = (sorterteHendelser: Tidslinjehendelse[]) => {\n    const dateNow = new Date();\n    const sisteHendelser = sorterteHendelser.filter((hendelse) =>\n        dayjs(hendelse.opprettet).isSameOrBefore(dateNow, 'd'),\n    );\n    if (sisteHendelser.length <= 3) {\n        return sisteHendelser;\n    } else {\n        const sisteTreHendelser = sisteHendelser.slice(Math.max(sisteHendelser.length - 3));\n        return sisteTreHendelser;\n    }\n};\n\nexport const getHendelserForVisning = (\n    visHeleTidslinjen: boolean,\n    sorterteHendelser: Tidslinjehendelse[],\n    erAvslåttForeldrepengesøknad: boolean,\n): Tidslinjehendelse[] => {\n    const hendelserForVisning = [] as Tidslinjehendelse[];\n    if (visHeleTidslinjen) {\n        hendelserForVisning.push(...sorterteHendelser);\n    } else if (erAvslåttForeldrepengesøknad) {\n        const sisteHendelser = getSisteHendelser(sorterteHendelser);\n        hendelserForVisning.push(...sisteHendelser);\n    } else {\n        const nesteHendelser = getNesteHendelser(sorterteHendelser);\n        if (nesteHendelser.length > 0) {\n            hendelserForVisning.push(...nesteHendelser);\n        }\n\n        if (hendelserForVisning.length === 0) {\n            const sisteHendelser = getSisteHendelser(sorterteHendelser);\n            hendelserForVisning.push(...sisteHendelser);\n        }\n    }\n    return hendelserForVisning;\n};\n\nexport const getAlleTidslinjehendelser = (\n    tidslinjeHendelserData: Tidslinjehendelse[],\n    åpenBehandlingPåVent: ÅpenBehandling | undefined,\n    manglendeVedleggData: Skjemanummer[],\n    sak: Sak,\n    barnFraSak: BarnGruppering,\n    erAvslåttForeldrepengesøknad: boolean,\n    intl: IntlShape,\n): Tidslinjehendelse[] => {\n    const tidslinjeHendelser = getTidslinjehendelserDetaljer(tidslinjeHendelserData, intl);\n    const venteHendelser = åpenBehandlingPåVent\n        ? getTidslinjehendelserFraBehandlingPåVent(åpenBehandlingPåVent, manglendeVedleggData, intl, sak.ytelse)\n        : undefined;\n    if (venteHendelser) {\n        tidslinjeHendelser.push(...venteHendelser);\n    }\n\n    if (sak.familiehendelse?.termindato || (sak.familiehendelse && barnFraSak.alleBarnaLever)) {\n        const familiehendelse = getTidslinjeFamiliehendelse(sak.familiehendelse);\n        tidslinjeHendelser.push(familiehendelse);\n    }\n\n    if (\n        barnFraSak.alleBarnaLever &&\n        !erAvslåttForeldrepengesøknad &&\n        sak.ytelse === Ytelse.FORELDREPENGER &&\n        !sak.sakAvsluttet &&\n        (sak.familiehendelse.omsorgsovertakelse || sak.familiehendelse.fødselsdato)\n    ) {\n        const barn3ÅrHendelse = getTidslinjeBarnTreÅrHendelse(\n            sak.familiehendelse.fødselsdato,\n            sak.familiehendelse.omsorgsovertakelse,\n            sak.familiehendelse.antallBarn,\n            sak.gjelderAdopsjon,\n\n            intl,\n        );\n        tidslinjeHendelser.push(barn3ÅrHendelse);\n    }\n\n    if (sak.åpenBehandling) {\n        const vedtakHendelse = getTidslinjeVedtakHendelse(intl, sak.ytelse);\n        tidslinjeHendelser.push(vedtakHendelse);\n    }\n\n    return [...tidslinjeHendelser].sort(sorterTidslinjehendelser);\n};\n","import { bemUtils } from '@navikt/fp-common';\nimport { BodyShort, Detail } from '@navikt/ds-react';\nimport { RecordFillIcon, RecordIcon } from '@navikt/aksel-icons';\nimport { formaterDato, formaterTid } from 'app/utils/dateUtils';\nimport './tidslinje-hendelse.css';\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\nimport { TidslinjehendelseType } from 'app/types/TidslinjehendelseType';\nimport { getTidligstDatoForInntektsmelding } from 'app/utils/tidslinjeUtils';\n\ninterface Props {\n    children: React.ReactNode;\n    date: Date;\n    title: string;\n    isActiveStep: boolean;\n    visKlokkeslett: boolean;\n    type: TidslinjehendelseType;\n    førsteUttaksdagISaken: Date | undefined;\n    tidligstBehandlingsDato: Date | undefined;\n    finnesHendelserFørAktivtSteg: boolean;\n    visHeleTidslinjen: boolean;\n}\n\nconst bem = bemUtils('tidslinje-hendelse');\n\nconst getIkonClassElement = (isActiveStep: boolean, opprettet: Date) => {\n    if (isActiveStep) {\n        return 'ikon_active';\n    } else if (dayjs(opprettet).isBefore(dayjs())) {\n        return 'ikon_completed';\n    }\n    return 'ikon_incomplete';\n};\n\nconst getTimelineClassModifier = (opprettet: Date, isActiveStep: boolean) => {\n    if (isActiveStep) {\n        return 'active';\n    }\n    if (dayjs(opprettet).isBefore(dayjs())) {\n        return 'complete';\n    }\n    return 'incomplete';\n};\n\nconst getDateTekst = (\n    type: TidslinjehendelseType,\n    date: Date,\n    førsteUttaksdagISaken: Date | undefined,\n    tidligstBehandlingsDato: Date | undefined,\n) => {\n    if (type === TidslinjehendelseType.VENTER_INNTEKTSMELDING) {\n        const tidligstDato = getTidligstDatoForInntektsmelding(førsteUttaksdagISaken);\n        if (dayjs(tidligstDato).isAfter(dayjs())) {\n            return tidligstDato ? `TIDLIGST ${formaterDato(tidligstDato, 'D. MMM YYYY').toUpperCase()}` : '';\n        } else {\n            return 'SNAREST';\n        }\n    } else if (type === TidslinjehendelseType.VENTER_PGA_TIDLIG_SØKNAD) {\n        return `TIDLIGST ${formaterDato(tidligstBehandlingsDato, 'D. MMM YYYY').toUpperCase()}`;\n    } else if ([TidslinjehendelseType.VENTER_MELDEKORT, TidslinjehendelseType.VENT_DOKUMENTASJON].includes(type)) {\n        return 'SNAREST';\n    } else if (type === TidslinjehendelseType.FREMTIDIG_VEDTAK) {\n        return 'SENERE';\n    } else if (dayjs(date).isSame(new Date(), 'd')) {\n        return 'I DAG';\n    } else if (dayjs(date).isSame(dayjs(new Date()).subtract(1, 'd'), 'd')) {\n        return 'I GÅR';\n    } else {\n        return formaterDato(date, 'D. MMM YYYY').toUpperCase();\n    }\n};\n\nconst TidslinjeHendelse: React.FunctionComponent<Props> = ({\n    date,\n    title,\n    children,\n    isActiveStep,\n    visKlokkeslett,\n    type,\n    førsteUttaksdagISaken,\n    tidligstBehandlingsDato,\n    finnesHendelserFørAktivtSteg,\n    visHeleTidslinjen,\n}) => {\n    const tidTekst = visKlokkeslett ? formaterTid(date) : '';\n    const dateTekst = getDateTekst(type, date, førsteUttaksdagISaken, tidligstBehandlingsDato);\n    return (\n        <div\n            className={classNames(\n                bem.block,\n                bem.modifier(`${getTimelineClassModifier(date, isActiveStep)}`),\n                bem.modifier(\n                    `${\n                        isActiveStep && finnesHendelserFørAktivtSteg && !visHeleTidslinjen\n                            ? 'aktiv_er_ikke_første_hendelse'\n                            : ''\n                    }`,\n                ),\n            )}\n        >\n            <div className={classNames(bem.element('ikon'), bem.element(getIkonClassElement(isActiveStep, date)))}>\n                {dayjs(date).isSameOrBefore(dayjs(), 'd') && <RecordFillIcon width=\"20\" height=\"20\" />}\n                {dayjs(date).isAfter(dayjs(), 'd') && <RecordIcon width=\"20\" height=\"20\" />}\n            </div>\n\n            <div className={bem.element('tekst')}>\n                <BodyShort size=\"small\" className={bem.element('tittle')}>\n                    {title}\n                </BodyShort>\n                <Detail className={bem.element('date')}>{`${dateTekst} ${tidTekst}`}</Detail>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default TidslinjeHendelse;\n","import { Alert } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\n\nimport './noe-gikk-galt.css';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst NoeGikkGalt: React.FunctionComponent<Props> = ({ children }) => {\n    const bem = bemUtils('noe-gikk-galt');\n\n    return (\n        <Alert className={bem.block} variant=\"info\">\n            {children}\n        </Alert>\n    );\n};\n\nexport default NoeGikkGalt;\n","import { BodyShort, Button, Link, ReadMore } from '@navikt/ds-react';\nimport { Link as LinkInternal, useParams } from 'react-router-dom';\nimport { bemUtils, guid, intlUtils } from '@navikt/fp-common';\n\nimport DokumentHendelse from './DokumentHendelse';\nimport TidslinjeHendelse from './TidslinjeHendelse';\nimport { ExternalLink } from '@navikt/ds-icons';\nimport {\n    VENTEÅRSAKER,\n    getTidslinjehendelseTittel,\n    getHendelserForVisning,\n    getAlleTidslinjehendelser,\n} from 'app/utils/tidslinjeUtils';\nimport './tidslinje-hendelse.css';\nimport { useIntl } from 'react-intl';\nimport { TidslinjehendelseType } from 'app/types/TidslinjehendelseType';\nimport NoeGikkGalt from 'app/components/noe-gikk-galt/NoeGikkGalt';\nimport dayjs from 'dayjs';\nimport { Ytelse } from 'app/types/Ytelse';\nimport { SøkerinfoDTOBarn } from 'app/types/SøkerinfoDTO';\nimport { getAlleYtelser, getBarnGrupperingFraSak, getFørsteUttaksdagIForeldrepengesaken } from 'app/utils/sakerUtils';\nimport { SakOppslag } from 'app/types/SakOppslag';\nimport OversiktRoutes from 'app/routes/routes';\nimport { AxiosError } from 'axios';\nimport { Tidslinjehendelse } from 'app/types/Tidslinjehendelse';\nimport { Skjemanummer } from '@navikt/fp-constants';\n\ninterface Params {\n    saker: SakOppslag;\n    visHeleTidslinjen: boolean;\n    søkersBarn: SøkerinfoDTOBarn[] | undefined;\n    tidslinjeHendelserError: AxiosError<any, any> | null;\n    manglendeVedleggError: AxiosError<any, any> | null;\n    tidslinjeHendelserData: Tidslinjehendelse[];\n    manglendeVedleggData: Skjemanummer[];\n}\n\nconst Tidslinje: React.FunctionComponent<Params> = ({\n    saker,\n    visHeleTidslinjen,\n    søkersBarn,\n    tidslinjeHendelserData,\n    tidslinjeHendelserError,\n    manglendeVedleggData,\n    manglendeVedleggError,\n}) => {\n    const params = useParams();\n    const intl = useIntl();\n    const sakPath = location.pathname.replace(`/${OversiktRoutes.TIDSLINJEN}`, '');\n\n    const bem = bemUtils('tidslinje-hendelse');\n    const alleSaker = getAlleYtelser(saker);\n    const sak = alleSaker.find((sak) => sak.saksnummer === params.saksnummer)!;\n    const førsteUttaksdagISaken =\n        sak.ytelse === Ytelse.FORELDREPENGER ? getFørsteUttaksdagIForeldrepengesaken(sak) : undefined;\n\n    const barnFraSak = getBarnGrupperingFraSak(sak, søkersBarn);\n    const erAvslåttForeldrepengesøknad =\n        sak.ytelse === Ytelse.FORELDREPENGER &&\n        !!sak.gjeldendeVedtak &&\n        (sak.gjeldendeVedtak.perioder.length === 0 ||\n            sak.gjeldendeVedtak.perioder.every((p) => p.resultat.innvilget === false));\n    if (tidslinjeHendelserError || manglendeVedleggError || sak === undefined) {\n        return (\n            <NoeGikkGalt>\n                Vi klarer ikke å vise informasjon om hva som skjer i saken din akkurat nå. Feilen er hos oss, ikke hos\n                deg. Prøv igjen senere.\n            </NoeGikkGalt>\n        );\n    }\n\n    if (!tidslinjeHendelserData || !manglendeVedleggData) {\n        return null;\n    }\n\n    const åpenBehandlingPåVent =\n        sak.åpenBehandling && VENTEÅRSAKER.includes(sak.åpenBehandling.tilstand) ? sak.åpenBehandling : undefined;\n\n    const alleSorterteHendelser = getAlleTidslinjehendelser(\n        tidslinjeHendelserData,\n        åpenBehandlingPåVent,\n        manglendeVedleggData,\n        sak,\n        barnFraSak,\n        erAvslåttForeldrepengesøknad,\n        intl,\n    );\n\n    const hendelserForVisning = getHendelserForVisning(\n        visHeleTidslinjen,\n        alleSorterteHendelser,\n        erAvslåttForeldrepengesøknad,\n    );\n    const aktivtStegIndex = hendelserForVisning.findIndex((hendelse) =>\n        dayjs(hendelse.opprettet).isAfter(dayjs(), 'd'),\n    );\n    const finnesHendelserFørAktivtSteg = alleSorterteHendelser.find((hendelse) =>\n        dayjs(hendelse.opprettet).isSameOrBefore(dayjs(), 'd'),\n    );\n    return (\n        <div>\n            {hendelserForVisning.map((hendelse, index) => {\n                const isActiveStep = index === aktivtStegIndex;\n                const alleDokumenter = hendelse.dokumenter.map((dokument) => {\n                    return <DokumentHendelse dokument={dokument} key={dokument.url} visesITidslinjen={true} />;\n                });\n                const visKlokkeslett =\n                    hendelse.tidslinjeHendelseType !== TidslinjehendelseType.FAMILIEHENDELSE &&\n                    dayjs(hendelse.opprettet).isSameOrBefore(dayjs());\n\n                return (\n                    <TidslinjeHendelse\n                        date={hendelse.opprettet}\n                        title={getTidslinjehendelseTittel(\n                            hendelse.tidslinjeHendelseType,\n                            intl,\n                            hendelse.tidligstBehandlingsDato,\n                            manglendeVedleggData,\n                            barnFraSak,\n                            sak,\n                        )}\n                        key={guid()}\n                        isActiveStep={isActiveStep}\n                        visKlokkeslett={visKlokkeslett}\n                        type={hendelse.tidslinjeHendelseType}\n                        førsteUttaksdagISaken={førsteUttaksdagISaken}\n                        tidligstBehandlingsDato={hendelse.tidligstBehandlingsDato}\n                        finnesHendelserFørAktivtSteg={!!finnesHendelserFørAktivtSteg}\n                        visHeleTidslinjen={visHeleTidslinjen}\n                    >\n                        <ul style={{ listStyle: 'none', padding: '0' }}>\n                            {hendelse.tidslinjeHendelseType === TidslinjehendelseType.VENT_DOKUMENTASJON &&\n                                manglendeVedleggData &&\n                                manglendeVedleggData.length > 1 && (\n                                    <div className={bem.element('manglende_vedlegg')}>\n                                        <div>{intlUtils(intl, 'tidslinje.VENT_DOKUMENTASJON.flereVedlegg.tittel')}</div>\n                                        <ul>\n                                            {manglendeVedleggData.map((skjemaId) => {\n                                                return (\n                                                    <li key={guid()}>{intlUtils(intl, `ettersendelse.${skjemaId}`)}</li>\n                                                );\n                                            })}\n                                        </ul>\n                                    </div>\n                                )}\n                            {hendelse.merInformasjon && (\n                                <BodyShort size=\"small\" className={bem.element('mer_informasjon')}>\n                                    {hendelse.merInformasjon}\n                                </BodyShort>\n                            )}\n                            {alleDokumenter.length > 0 && alleDokumenter.length <= 3 && alleDokumenter}\n                            {alleDokumenter.length > 0 && alleDokumenter.length > 3 && (\n                                <ReadMore\n                                    className={bem.element('medium_font')}\n                                    header={`Du sendte ${hendelse.dokumenter.length} dokumenter`}\n                                >\n                                    {alleDokumenter}\n                                </ReadMore>\n                            )}\n                            {hendelse.linkTittel && hendelse.eksternalUrl && (\n                                <Link href={hendelse.eksternalUrl}>\n                                    <BodyShort size=\"small\">{hendelse.linkTittel}</BodyShort>\n                                    <ExternalLink fontSize={'16px'}></ExternalLink>\n                                </Link>\n                            )}\n                            {hendelse.linkTittel && hendelse.internalUrl && (\n                                <LinkInternal\n                                    className={bem.element('medium_font')}\n                                    to={`${sakPath}/${hendelse.internalUrl}`}\n                                >\n                                    <Button>{hendelse.linkTittel}</Button>\n                                </LinkInternal>\n                            )}\n                        </ul>\n                    </TidslinjeHendelse>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Tidslinje;\n","import { LinkPanel } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport OversiktRoutes from 'app/routes/routes';\n\nimport { Link } from 'react-router-dom';\n\nimport './se-hele-prosessen.css';\n\nconst SeHeleProsessen = () => {\n    const bem = bemUtils('se-hele-prosessen');\n\n    return (\n        <LinkPanel as={Link} to={OversiktRoutes.TIDSLINJEN} border={false} className={bem.element('linkPanel')}>\n            <LinkPanel.Title as=\"h2\">\n                <div className={bem.block}>Se hele prosessen</div>\n            </LinkPanel.Title>\n        </LinkPanel>\n    );\n};\n\nexport default SeHeleProsessen;\n","import { BodyShort, HStack, VStack } from '@navikt/ds-react';\nimport { Block, bemUtils } from '@navikt/fp-common';\nimport { formatDate, formatTime } from '@navikt/fp-utils';\nimport './bekreftelse-sendt-søknad.css';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport { Tidslinjehendelse } from 'app/types/Tidslinjehendelse';\nimport { TidslinjehendelseType } from 'app/types/TidslinjehendelseType';\nimport DokumentHendelse from 'app/sections/tidslinje/DokumentHendelse';\nimport { CheckmarkIcon } from '@navikt/aksel-icons';\nimport { sorterTidslinjehendelser } from 'app/utils/tidslinjeUtils';\n\ninterface Props {\n    oppdatertData: boolean;\n    tidslinjehendelser: Tidslinjehendelse[] | undefined;\n}\n\nconst getTidspunktTekst = (mottattDato: Date | undefined): string | undefined => {\n    if (!mottattDato) {\n        return undefined;\n    }\n    if (mottattDato && dayjs(mottattDato).isSame(dayjs(), 'd')) {\n        return `Sendt i dag kl. ${formatTime(mottattDato)}`;\n    } else if (mottattDato && dayjs(mottattDato).isSame(dayjs().subtract(1, 'd'), 'd')) {\n        return `Sendt i går kl. ${formatTime(mottattDato)}`;\n    }\n    return `Sendt ${formatDate(mottattDato)} kl. ${formatTime(mottattDato)}`;\n};\n\nconst BekreftelseSendtSøknad: React.FunctionComponent<Props> = ({ oppdatertData, tidslinjehendelser }) => {\n    const bem = bemUtils('bekreftelse-sendt-søknad');\n    const søknadHendelser = [\n        TidslinjehendelseType.FØRSTEGANGSSØKNAD,\n        TidslinjehendelseType.FØRSTEGANGSSØKNAD_NY,\n        TidslinjehendelseType.ENDRINGSSØKNAD,\n    ];\n    const sorterteHendelser = tidslinjehendelser\n        ? [...tidslinjehendelser].sort(sorterTidslinjehendelser).reverse()\n        : undefined;\n    const relevantNyHendelse = sorterteHendelser\n        ? sorterteHendelser.find(\n              (hendelse) =>\n                  søknadHendelser.includes(hendelse.tidslinjeHendelseType) &&\n                  hendelse.dokumenter.find((dok) => dok.tittel.includes('Søknad')) &&\n                  dayjs(hendelse.opprettet).isSameOrAfter(dayjs().subtract(1, 'd')),\n          )\n        : undefined;\n\n    const relevantDokument = relevantNyHendelse?.dokumenter\n        ? relevantNyHendelse.dokumenter.find((dok) => dok.tittel.includes('Søknad'))\n        : undefined;\n    const mottattDato = relevantNyHendelse ? relevantNyHendelse.opprettet : undefined;\n    const sendtInfoTekst = getTidspunktTekst(mottattDato);\n    return (\n        <Block\n            className={classNames(\n                `${bem.block} ${oppdatertData ? bem.modifier('bigMargin') : bem.modifier('smallMargin')}`,\n            )}\n        >\n            <HStack>\n                <div className={bem.element('ikon-box')}>\n                    <CheckmarkIcon className={bem.element('ikon')}></CheckmarkIcon>\n                </div>\n                <VStack>\n                    <BodyShort\n                        size=\"medium\"\n                        className={classNames(\n                            `${bem.element('tittel')} ${\n                                sendtInfoTekst ? bem.modifier('titleAndInfo') : bem.modifier('justTitle')\n                            }`,\n                        )}\n                    >\n                        Søknaden din er sendt!\n                    </BodyShort>\n                    {sendtInfoTekst && <p className={bem.element('tidspunkt')}>{sendtInfoTekst}</p>}\n                </VStack>\n            </HStack>\n            {relevantDokument && (\n                <div className={bem.element('dokument')}>\n                    <DokumentHendelse dokument={relevantDokument} key={relevantDokument.url} visesITidslinjen={false} />\n                </div>\n            )}\n        </Block>\n    );\n};\n\nexport default BekreftelseSendtSøknad;\n","import { atom } from 'jotai';\n\nexport const isRedirectedFromSøknadAtom = atom<boolean>(false);\n","export enum RedirectSource {\n    REDIRECT_FROM_SØKNAD = 'redirectFromSoknad',\n}\n","import { isRedirectedFromSøknadAtom } from 'app/atoms/isRedirectedFromSøknadAtom';\nimport { RedirectSource } from 'app/types/RedirectSource';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { MutableRefObject, useEffect } from 'react';\n\nexport const useGetIsRedirectedFromSøknad = () => {\n    const isRedirected = useAtomValue(isRedirectedFromSøknadAtom);\n    return isRedirected;\n};\n\nexport const useSetIsRedirectedFromSøknad = (\n    redirectParam: string | undefined,\n    isFirstRender: MutableRefObject<boolean>,\n) => {\n    const setIsRedirectedFromSøknad = useSetAtom(isRedirectedFromSøknadAtom);\n    const isRedirected = redirectParam === RedirectSource.REDIRECT_FROM_SØKNAD;\n    useEffect(() => {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            setIsRedirectedFromSøknad(isRedirected);\n        }\n    }, [setIsRedirectedFromSøknad, isRedirected, isFirstRender]);\n};\n","import { Block, bemUtils, intlUtils } from '@navikt/fp-common';\nimport Api from 'app/api/api';\nimport ContentSection from 'app/components/content-section/ContentSection';\nimport SeDokumenter from 'app/components/se-dokumenter/SeDokumenter';\nimport { useSetBackgroundColor } from 'app/hooks/useBackgroundColor';\nimport { useSetSelectedRoute } from 'app/hooks/useSelectedRoute';\nimport { useSetSelectedSak } from 'app/hooks/useSelectedSak';\nimport OversiktRoutes from 'app/routes/routes';\nimport DinPlan from 'app/sections/din-plan/DinPlan';\nimport Oppgaver from 'app/sections/oppgaver/Oppgaver';\nimport Tidslinje from 'app/sections/tidslinje/Tidslinje';\nimport { MinidialogInnslag } from 'app/types/MinidialogInnslag';\nimport { SakOppslag } from 'app/types/SakOppslag';\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { Ytelse } from 'app/types/Ytelse';\nimport { getAlleYtelser, getFamiliehendelseDato, getNavnAnnenForelder } from 'app/utils/sakerUtils';\nimport { AxiosError } from 'axios';\n\nimport { useIntl } from 'react-intl';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Skjemanummer } from '@navikt/fp-constants';\n\nimport './saksoversikt.css';\nimport { RequestStatus } from 'app/types/RequestStatus';\nimport SeHeleProsessen from 'app/components/se-hele-prosessen/SeHeleProsessen';\nimport { Alert } from '@navikt/ds-react';\nimport BekreftelseSendtSøknad from 'app/components/bekreftelse-sendt-søknad/BekreftelseSendtSøknad';\nimport { useGetIsRedirectedFromSøknad, useSetIsRedirectedFromSøknad } from 'app/hooks/useIsRedirectedFromSøknad';\nimport React from 'react';\nimport { RedirectSource } from 'app/types/RedirectSource';\n\nconst EMPTY_ARRAY = [] as Skjemanummer[];\n\ninterface Props {\n    minidialogerData: MinidialogInnslag[] | undefined;\n    minidialogerError: AxiosError | null;\n    saker: SakOppslag;\n    søkerinfo: SøkerinfoDTO;\n    oppdatertData: any;\n    isFirstRender: React.MutableRefObject<boolean>;\n}\n\nconst Saksoversikt: React.FunctionComponent<Props> = ({\n    minidialogerData,\n    minidialogerError,\n    saker,\n    søkerinfo,\n    oppdatertData,\n    isFirstRender,\n}) => {\n    const intl = useIntl();\n    const bem = bemUtils('saksoversikt');\n    const params = useParams();\n    const navigate = useNavigate();\n\n    useSetIsRedirectedFromSøknad(params.redirect, isFirstRender);\n    useSetBackgroundColor('blue');\n    useSetSelectedRoute(OversiktRoutes.SAKSOVERSIKT);\n\n    const alleSaker = getAlleYtelser(saker);\n    console.log(alleSaker);\n    console.log(params);\n    const gjeldendeSak = alleSaker.find((sak) => sak.saksnummer === params.saksnummer)!;\n    console.log(gjeldendeSak);\n    useSetSelectedSak(gjeldendeSak);\n\n    const redirectedFromSoknad = useGetIsRedirectedFromSøknad();\n\n    const { tidslinjeHendelserData, tidslinjeHendelserError } = Api.useGetTidslinjeHendelser(params.saksnummer!);\n    const { manglendeVedleggData, manglendeVedleggError } = Api.useGetManglendeVedlegg(params.saksnummer!);\n\n    const planErVedtatt = gjeldendeSak?.åpenBehandling === undefined;\n    let familiehendelsesdato = undefined;\n    let annenPartFnr = undefined;\n    let barnFnr = undefined;\n    let annenPartVedtakIsSuspended = true;\n\n    if (gjeldendeSak?.ytelse === Ytelse.FORELDREPENGER) {\n        familiehendelsesdato = gjeldendeSak?.familiehendelse\n            ? getFamiliehendelseDato(gjeldendeSak.familiehendelse)\n            : undefined;\n        annenPartFnr = gjeldendeSak?.annenPart?.fnr;\n\n        const barnFraSak =\n            gjeldendeSak?.barn && gjeldendeSak?.barn.length > 0\n                ? gjeldendeSak.barn.find((barn) => barn.fnr !== undefined)\n                : undefined;\n        barnFnr = barnFraSak ? barnFraSak.fnr : undefined;\n        annenPartVedtakIsSuspended =\n            !planErVedtatt || annenPartFnr === undefined || annenPartFnr === '' || familiehendelsesdato === undefined;\n    }\n    const { annenPartsVedtakData, annenPartsVedtakError, annenPartsVedtakRequestStatus } = Api.useGetAnnenPartsVedtak(\n        annenPartFnr,\n        barnFnr,\n        familiehendelsesdato,\n        annenPartVedtakIsSuspended,\n    );\n\n    if (params.redirect === RedirectSource.REDIRECT_FROM_SØKNAD) {\n        navigate(`${OversiktRoutes.SAKSOVERSIKT}/${params.saksnummer}`);\n    }\n\n    if (!oppdatertData) {\n        return (\n            <div className={bem.block}>\n                {redirectedFromSoknad && (\n                    <BekreftelseSendtSøknad oppdatertData={oppdatertData} tidslinjehendelser={[]} />\n                )}\n                <Block padBottom=\"l\">\n                    <Alert variant=\"warning\">\n                        Det ser ut som det tar litt tid å opprette saken din akkurat i dag. Søknaden din er sendt, så du\n                        kan vente litt og komme tilbake senere for å se alle detaljene i saken din.\n                    </Alert>\n                </Block>\n                <Block padBottom=\"l\">\n                    <Link to={`${OversiktRoutes.HOVEDSIDE}`}>{intlUtils(intl, 'saksoversikt')}</Link>\n                </Block>\n            </div>\n        );\n    }\n\n    if (!gjeldendeSak) {\n        return <Alert variant=\"warning\">{`Vi finner ingen sak med saksnummer: ${params.saksnummer}.`}</Alert>;\n    }\n\n    const navnPåSøker = søkerinfo.søker.fornavn;\n    const navnAnnenForelder = getNavnAnnenForelder(søkerinfo, gjeldendeSak);\n    const aktiveMinidialogerForSaken = minidialogerData\n        ? minidialogerData.filter(({ saksnr }) => saksnr === gjeldendeSak.saksnummer)\n        : undefined;\n\n    return (\n        <div className={bem.block}>\n            {redirectedFromSoknad && (\n                <BekreftelseSendtSøknad oppdatertData={oppdatertData} tidslinjehendelser={tidslinjeHendelserData} />\n            )}\n            {((aktiveMinidialogerForSaken && aktiveMinidialogerForSaken.length > 0) || minidialogerError) && (\n                <ContentSection heading={intlUtils(intl, 'saksoversikt.oppgaver')} backgroundColor={'yellow'}>\n                    <Oppgaver\n                        minidialogerData={aktiveMinidialogerForSaken}\n                        minidialogerError={minidialogerError}\n                        saksnummer={gjeldendeSak.saksnummer}\n                    />\n                </ContentSection>\n            )}\n            <ContentSection\n                heading={intlUtils(intl, 'saksoversikt.tidslinje')}\n                showSkeleton={!tidslinjeHendelserData || !manglendeVedleggData}\n                skeletonProps={{ height: '250px', variant: 'rounded' }}\n                marginBottom=\"small\"\n            >\n                <Tidslinje\n                    saker={saker}\n                    visHeleTidslinjen={false}\n                    tidslinjeHendelserError={tidslinjeHendelserError}\n                    tidslinjeHendelserData={tidslinjeHendelserData!}\n                    manglendeVedleggData={manglendeVedleggData || EMPTY_ARRAY}\n                    manglendeVedleggError={manglendeVedleggError}\n                    søkersBarn={søkerinfo.søker.barn}\n                />\n            </ContentSection>\n            <ContentSection padding=\"none\">\n                <SeHeleProsessen />\n            </ContentSection>\n            <ContentSection padding=\"none\">\n                <SeDokumenter />\n            </ContentSection>\n            {gjeldendeSak.ytelse === Ytelse.FORELDREPENGER && (\n                <ContentSection\n                    heading={intlUtils(intl, 'saksoversikt.dinPlan')}\n                    showSkeleton={\n                        !annenPartVedtakIsSuspended &&\n                        annenPartsVedtakRequestStatus !== RequestStatus.FINISHED &&\n                        !annenPartsVedtakError\n                    }\n                    skeletonProps={{ height: '210px', variant: 'rounded' }}\n                >\n                    <DinPlan\n                        sak={gjeldendeSak}\n                        visHelePlanen={false}\n                        navnPåSøker={navnPåSøker}\n                        navnAnnenForelder={navnAnnenForelder}\n                        annenPartsPerioder={annenPartsVedtakData?.perioder}\n                        termindato={gjeldendeSak.familiehendelse.termindato}\n                    />\n                </ContentSection>\n            )}\n        </div>\n    );\n};\n\nexport default Saksoversikt;\n","import { Outlet } from 'react-router-dom';\n\nconst Sak: React.FunctionComponent = () => {\n    return <Outlet />;\n};\n\nexport default Sak;\n","import { Loader } from '@navikt/ds-react';\nimport Api from 'app/api/api';\nimport ContentSection from 'app/components/content-section/ContentSection';\nimport { useSetSelectedRoute } from 'app/hooks/useSelectedRoute';\nimport { useGetSelectedSak } from 'app/hooks/useSelectedSak';\nimport OversiktRoutes from 'app/routes/routes';\nimport DinPlan from 'app/sections/din-plan/DinPlan';\nimport { RequestStatus } from 'app/types/RequestStatus';\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { Ytelse } from 'app/types/Ytelse';\nimport { getFamiliehendelseDato, getNavnAnnenForelder } from 'app/utils/sakerUtils';\n\ninterface Props {\n    navnPåSøker: string;\n    søkerinfo: SøkerinfoDTO;\n}\n\nconst DinPlanPage: React.FunctionComponent<Props> = ({ navnPåSøker, søkerinfo }) => {\n    useSetSelectedRoute(OversiktRoutes.DIN_PLAN);\n    const sak = useGetSelectedSak();\n\n    const navnAnnenForelder = getNavnAnnenForelder(søkerinfo, sak);\n    const planErVedtatt = sak?.åpenBehandling === undefined;\n    let familiehendelsesdato = undefined;\n    let annenPartFnr = undefined;\n    let barnFnr = undefined;\n    let annenPartVedtakIsSuspended = true;\n\n    if (sak && sak.ytelse === Ytelse.FORELDREPENGER) {\n        familiehendelsesdato = getFamiliehendelseDato(sak.familiehendelse);\n        annenPartFnr = sak.annenPart?.fnr;\n        const barnFraSak =\n            sak.barn && sak.barn.length > 0 ? sak.barn.find((barn) => barn.fnr !== undefined) : undefined;\n        barnFnr = barnFraSak ? barnFraSak.fnr : undefined;\n        annenPartVedtakIsSuspended =\n            !planErVedtatt || annenPartFnr === undefined || annenPartFnr === '' || familiehendelsesdato === undefined;\n    }\n    const { annenPartsVedtakData, annenPartsVedtakError, annenPartsVedtakRequestStatus } = Api.useGetAnnenPartsVedtak(\n        annenPartFnr,\n        barnFnr,\n        familiehendelsesdato,\n        annenPartVedtakIsSuspended,\n    );\n\n    if (\n        !annenPartVedtakIsSuspended &&\n        annenPartsVedtakRequestStatus !== RequestStatus.FINISHED &&\n        !annenPartsVedtakError\n    ) {\n        return (\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n                <Loader type=\"XXL\" />\n            </div>\n        );\n    }\n    if (sak && sak.ytelse === Ytelse.FORELDREPENGER) {\n        return (\n            <ContentSection heading=\"Din plan\">\n                <DinPlan\n                    sak={sak}\n                    visHelePlanen={true}\n                    navnPåSøker={navnPåSøker}\n                    navnAnnenForelder={navnAnnenForelder}\n                    annenPartsPerioder={annenPartsVedtakData?.perioder}\n                    termindato={sak.familiehendelse.termindato}\n                ></DinPlan>\n            </ContentSection>\n        );\n    }\n    return <div></div>;\n};\n\nexport default DinPlanPage;\n","import { ExternalLink } from '@navikt/ds-icons';\nimport { Alert, BodyShort, Button, Heading, Link } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport { useSetBackgroundColor } from 'app/hooks/useBackgroundColor';\n\nimport ContentSection from '../content-section/ContentSection';\n\nimport './har-ikke-saker.css';\nimport { FunctionComponent } from 'react';\n\ninterface Props {\n    oppdatertData: boolean;\n}\n\nconst HarIkkeSaker: FunctionComponent<Props> = ({ oppdatertData }) => {\n    const bem = bemUtils('har-ikke-saker');\n    useSetBackgroundColor('blue');\n\n    return (\n        <>\n            {oppdatertData && (\n                <Alert variant=\"info\" className={bem.element('ingen-søknad')}>\n                    Vi finner ingen søknader fra deg. Hvis du har sendt en søknad i posten kan det ta to uker før\n                    søknaden registreres i NAVs systemer.\n                </Alert>\n            )}\n            <ContentSection>\n                <Heading level=\"2\" size=\"large\" className={bem.element('overskrift')}>\n                    Kort om foreldrepenger\n                </Heading>\n                <BodyShort className={bem.element('om-foreldrepenger')}>\n                    Foreldrepenger skal erstatte inntekten din når du skal være hjemme med barnet i forbindelse med\n                    fødsel eller adopsjon.\n                </BodyShort>\n                <div className={bem.element('link')}>\n                    <Link href=\"https://www.nav.no/foreldrepenger\">\n                        Les mer om foreldrepenger <ExternalLink />\n                    </Link>\n                </div>\n                <Button as=\"a\" href=\"https://foreldrepengesoknad.nav.no\">\n                    Søk om foreldrepenger\n                </Button>\n            </ContentSection>\n        </>\n    );\n};\n\nexport default HarIkkeSaker;\n","const EtBarn = () => (\n    <svg width={56} height={56} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx={28} cy={28} r={28} fill=\"#99DEAD\" />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M36.481 37.92v7.58H19.52v-7.58c0-2.168 2.771-4.644 4.626-5.663h7.71c1.872 1.037 4.626 3.52 4.626 5.663Z\"\n            fill=\"#007C2E\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M31.756 32.562a11.36 11.36 0 0 0 6.528-5.983l.08.002c1.041 0 1.885-.847 1.885-1.892v-1.892c0-.708-.388-1.326-.962-1.65-.362-5.941-5.276-10.647-11.286-10.647-6.009 0-10.923 4.705-11.286 10.645a1.892 1.892 0 0 0-.965 1.652v1.892a1.888 1.888 0 0 0 1.968 1.89 11.36 11.36 0 0 0 6.524 5.981 3.775 3.775 0 0 0 3.757 3.48 3.775 3.775 0 0 0 3.757-3.478Z\"\n            fill=\"#F1F1F1\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24.984 26.896c0 1.306-1.012 2.365-2.261 2.365-1.25 0-2.262-1.059-2.262-2.365 0-1.306 1.013-2.365 2.262-2.365s2.261 1.06 2.261 2.365ZM35.539 26.896c0 1.306-1.013 2.365-2.261 2.365-1.25 0-2.262-1.059-2.262-2.365 0-1.306 1.012-2.365 2.262-2.365 1.248 0 2.26 1.06 2.26 2.365Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            d=\"M28.62 23.375a.377.377 0 0 1-.447-.305.394.394 0 0 1 .291-.467c.507-.111.93-.025 1.164.384.453.796.295 1.713-.42 2.349-.415.369-.998.501-1.405.244a.404.404 0 0 1-.127-.541.368.368 0 0 1 .517-.134c.09.057.335 0 .527-.17.438-.389.523-.883.26-1.345-.024-.043-.134-.065-.36-.015ZM21.605 20.685a.396.396 0 0 1 .274-.478.376.376 0 0 1 .457.287c.213.891.583 1.278 1.143 1.278.559 0 .928-.387 1.142-1.278a.376.376 0 0 1 .457-.287.396.396 0 0 1 .274.478c-.29 1.211-.925 1.875-1.873 1.875-.95 0-1.584-.664-1.874-1.875ZM30.648 20.685a.396.396 0 0 1 .274-.478.376.376 0 0 1 .457.287c.213.891.583 1.278 1.142 1.278.56 0 .93-.387 1.142-1.278a.376.376 0 0 1 .458-.287.396.396 0 0 1 .274.478c-.29 1.211-.925 1.875-1.874 1.875-.948 0-1.583-.664-1.873-1.875Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M27.425 30.452a34.568 34.568 0 0 0-.556-.006c-1.874 0-3.392-1.224-3.392-2.734s1.004-2.392 2.261-2.392c.339 0 .678.138 1.05.29.458.187.966.394 1.589.394.622 0 1.13-.207 1.587-.394.373-.152.712-.29 1.051-.29 1.257 0 2.262.883 2.262 2.392 0 1.51-1.52 2.734-3.393 2.734-.19 0-.375.003-.556.006-.337.005-.656.01-.951-.004-.296.014-.615.009-.951.004Z\"\n            fill=\"#66C786\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M28.377 30.05c1.457 0 2.638-.883 2.638-1.97 0-1.09-1.181-1.972-2.638-1.972-1.457 0-2.639.883-2.639 1.971s1.182 1.97 2.639 1.97Z\"\n            fill=\"#fff\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M30.64 28.472a.386.386 0 0 0-.377-.394h-3.769a.386.386 0 0 0-.377.394v2.19c0 1.267 1.037 2.146 2.262 2.146 1.141 0 2.261-1.041 2.261-2.146v-2.19Zm-3.767 2.19v-1.795h3.015v1.795c0 .648-.764 1.358-1.508 1.358-.84 0-1.507-.567-1.507-1.358Z\"\n            fill=\"#fff\"\n        />\n        <path\n            d=\"M24.919 11.704a.47.47 0 1 1 .908.251c-.095.344-.003.494.608 1.047.62.56.764 1.294.42 2.087a.47.47 0 1 1-.864-.378c.185-.426.127-.723-.187-1.007-.859-.776-1.109-1.188-.885-2ZM27.685 11.445a.47.47 0 0 1 .66-.1c.209.156.253.452.099.662-.211.287-.18.46.194 1.196.378.746.25 1.483-.354 2.1a.47.47 0 0 1-.666.005.474.474 0 0 1-.005-.67c.325-.33.376-.629.185-1.006-.525-1.034-.611-1.508-.113-2.187ZM30.395 11.423a.47.47 0 0 1 .657.11.474.474 0 0 1-.11.66c-.288.207-.311.382-.183 1.197.13.827-.218 1.489-.982 1.887a.47.47 0 0 1-.636-.202.474.474 0 0 1 .202-.637c.41-.215.551-.482.485-.9-.18-1.146-.117-1.625.567-2.115Z\"\n            fill=\"#262626\"\n        />\n    </svg>\n);\n\nexport default EtBarn;\n","const ToBarn = () => (\n    <svg width={56} height={56} viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"32\" cy=\"32\" r=\"32\" fill=\"#99DEAD\" />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M29.4617 41.8535V49.0002H13.5386V41.8535C13.5386 39.8089 16.1397 37.4748 17.8812 36.5137H25.119C26.8764 37.4917 29.4617 39.8325 29.4617 41.8535Z\"\n            fill=\"#007C2E\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M25.0272 36.8004C27.7478 35.8344 29.9606 33.7823 31.1536 31.1605C31.1792 31.1616 31.2049 31.1622 31.2308 31.1622C32.2079 31.1622 33 30.3635 33 29.3784V27.5946C33 26.926 32.6352 26.3433 32.0952 26.0379C31.7548 20.4366 27.1413 16 21.5 16C15.8587 16 11.2452 20.4366 10.9048 26.0379C10.3648 26.3433 10 26.926 10 27.5946V29.3784C10 30.3635 10.7921 31.1622 11.7692 31.1622C11.7951 31.1622 11.8208 31.1616 11.8464 31.1605C13.0394 33.7823 15.2522 35.8344 17.9728 36.8004C18.1177 38.6366 19.6416 40.0811 21.5 40.0811C23.3584 40.0811 24.8823 38.6366 25.0272 36.8004Z\"\n            fill=\"#F1F1F1\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M18.669 31.4599C18.669 32.6916 17.7187 33.6899 16.5464 33.6899C15.3737 33.6899 14.4229 32.6916 14.4229 31.4599C14.4229 30.2288 15.3737 29.2305 16.5464 29.2305C17.7187 29.2305 18.669 30.2288 18.669 31.4599\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M28.5767 31.4599C28.5767 32.6916 27.6264 33.6899 26.4541 33.6899C25.2814 33.6899 24.3306 32.6916 24.3306 31.4599C24.3306 30.2288 25.2814 29.2305 26.4541 29.2305C27.6264 29.2305 28.5767 30.2288 28.5767 31.4599\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            d=\"M22.083 28.1406C21.8917 28.1828 21.7041 28.0542 21.6639 27.8533C21.6237 27.6525 21.7462 27.4554 21.9374 27.4132C22.4133 27.3082 22.8111 27.389 23.0301 27.7748C23.4555 28.5254 23.3073 29.3904 22.6364 29.9895C22.2465 30.3376 21.6991 30.4626 21.3168 30.2197C21.1495 30.1135 21.096 29.885 21.1971 29.7094C21.2983 29.5338 21.5158 29.4775 21.683 29.5837C21.7667 29.6369 21.9978 29.5841 22.178 29.4233C22.5889 29.0564 22.6687 28.5903 22.4221 28.1552C22.3989 28.1143 22.2963 28.0935 22.083 28.1406Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M15.495 25.6044C15.4476 25.4053 15.5629 25.2035 15.7525 25.1538C15.9421 25.104 16.1342 25.225 16.1816 25.4242C16.3816 26.2644 16.7289 26.6292 17.2537 26.6292C17.7785 26.6292 18.1258 26.2644 18.3258 25.4242C18.3732 25.225 18.5653 25.104 18.7549 25.1538C18.9445 25.2035 19.0598 25.4053 19.0124 25.6044C18.7406 26.7461 18.1443 27.3724 17.2537 27.3724C16.3631 27.3724 15.7668 26.7461 15.495 25.6044Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M23.9872 25.6044C23.9398 25.4053 24.0551 25.2035 24.2447 25.1538C24.4343 25.104 24.6264 25.225 24.6738 25.4242C24.8738 26.2644 25.2211 26.6292 25.7459 26.6292C26.2707 26.6292 26.618 26.2644 26.818 25.4242C26.8654 25.225 27.0575 25.104 27.2471 25.1538C27.4367 25.2035 27.5519 25.4053 27.5045 25.6044C27.2328 26.7461 26.6365 27.3724 25.7459 27.3724C24.8553 27.3724 24.259 26.7461 23.9872 25.6044Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M20.9606 34.8118C20.7906 34.8091 20.616 34.8063 20.438 34.8063C18.6792 34.8063 17.2534 33.6524 17.2534 32.2289C17.2534 30.8054 18.1963 29.9736 19.3765 29.9736C19.6946 29.9736 20.0127 30.1038 20.3629 30.2472C20.7919 30.4227 21.269 30.618 21.8534 30.618C22.4378 30.618 22.915 30.4227 23.3439 30.2472C23.6941 30.1038 24.0122 29.9736 24.3303 29.9736C25.5106 29.9736 26.4534 30.8054 26.4534 32.2289C26.4534 33.6524 25.0276 34.8063 23.2688 34.8063C23.0908 34.8063 22.9163 34.8091 22.7463 34.8118C22.4306 34.8168 22.1305 34.8216 21.8534 34.8079C21.5763 34.8216 21.2763 34.8168 20.9606 34.8118Z\"\n            fill=\"#66C786\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M21.8534 34.433C23.2214 34.433 24.3303 33.6011 24.3303 32.5749C24.3303 31.5487 23.2214 30.7168 21.8534 30.7168C20.4854 30.7168 19.3765 31.5487 19.3765 32.5749C19.3765 33.6011 20.4854 34.433 21.8534 34.433Z\"\n            fill=\"white\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M23.9766 32.9468C23.9766 32.7416 23.8182 32.5752 23.6228 32.5752H20.0843C19.8889 32.5752 19.7305 32.7416 19.7305 32.9468V35.0114C19.7305 36.2057 20.7033 37.0347 21.8535 37.0347C22.9249 37.0347 23.9766 36.0528 23.9766 35.0114V32.9468ZM20.4382 35.0114V33.3184H23.2689V35.0114C23.2689 35.6216 22.5514 36.2914 21.8535 36.2914C21.0654 36.2914 20.4382 35.7569 20.4382 35.0114Z\"\n            fill=\"white\"\n        />\n        <path\n            d=\"M18.6069 17.1342C18.6719 16.8968 18.9155 16.7575 19.1509 16.8231C19.3864 16.8886 19.5246 17.1342 19.4596 17.3716C19.3709 17.6955 19.4568 17.8375 20.0302 18.358C20.6126 18.8867 20.7476 19.5789 20.4243 20.3263C20.3266 20.552 20.066 20.6552 19.842 20.5567C19.6181 20.4583 19.5158 20.1954 19.6135 19.9697C19.7872 19.5681 19.7325 19.2879 19.4383 19.0208C18.6319 18.2888 18.397 17.9006 18.6069 17.1342Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M21.2028 16.891C21.3478 16.6928 21.6248 16.6508 21.8213 16.797C22.0178 16.9433 22.0595 17.2225 21.9145 17.4207C21.7165 17.691 21.7463 17.8546 22.0966 18.5478C22.4523 19.2517 22.3324 19.9467 21.7649 20.5276C21.5935 20.7031 21.3134 20.7052 21.1394 20.5324C20.9654 20.3596 20.9632 20.0772 21.1347 19.9018C21.4396 19.5896 21.4881 19.3083 21.3084 18.9527C20.8158 17.9779 20.7344 17.5306 21.2028 16.891Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M23.7452 16.8692C23.9439 16.726 24.2202 16.7723 24.3622 16.9726C24.5043 17.173 24.4584 17.4515 24.2597 17.5947C23.9886 17.7902 23.9667 17.955 24.0875 18.7234C24.21 19.5037 23.883 20.1274 23.1652 20.503C22.9484 20.6165 22.6814 20.5313 22.5688 20.3127C22.4563 20.0941 22.5408 19.8249 22.7576 19.7115C23.1433 19.5096 23.2757 19.2572 23.2137 18.8629C23.044 17.7824 23.1037 17.3316 23.7452 16.8692Z\"\n            fill=\"#262626\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M52.4617 41.8535V49.0002H36.5386V41.8535C36.5386 39.8089 39.1397 37.4748 40.8812 36.5137H48.119C49.8764 37.4917 52.4617 39.8325 52.4617 41.8535Z\"\n            fill=\"#007C2E\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M48.0272 36.8004C50.7478 35.8344 52.9606 33.7823 54.1536 31.1605C54.1792 31.1616 54.2049 31.1622 54.2308 31.1622C55.2079 31.1622 56 30.3635 56 29.3784V27.5946C56 26.926 55.6352 26.3433 55.0952 26.0379C54.7548 20.4366 50.1413 16 44.5 16C38.8587 16 34.2452 20.4366 33.9048 26.0379C33.3648 26.3433 33 26.926 33 27.5946V29.3784C33 30.3635 33.7921 31.1622 34.7692 31.1622C34.7951 31.1622 34.8208 31.1616 34.8464 31.1605C36.0394 33.7823 38.2522 35.8344 40.9728 36.8004C41.1177 38.6366 42.6416 40.0811 44.5 40.0811C46.3584 40.0811 47.8823 38.6366 48.0272 36.8004Z\"\n            fill=\"#F1F1F1\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M41.669 31.4599C41.669 32.6916 40.7187 33.6899 39.5464 33.6899C38.3737 33.6899 37.4229 32.6916 37.4229 31.4599C37.4229 30.2288 38.3737 29.2305 39.5464 29.2305C40.7187 29.2305 41.669 30.2288 41.669 31.4599\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M51.5767 31.4599C51.5767 32.6916 50.6264 33.6899 49.4541 33.6899C48.2814 33.6899 47.3306 32.6916 47.3306 31.4599C47.3306 30.2288 48.2814 29.2305 49.4541 29.2305C50.6264 29.2305 51.5767 30.2288 51.5767 31.4599\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            d=\"M45.083 28.1406C44.8917 28.1828 44.7041 28.0542 44.6639 27.8533C44.6237 27.6525 44.7462 27.4554 44.9374 27.4132C45.4133 27.3082 45.8111 27.389 46.0301 27.7748C46.4555 28.5254 46.3073 29.3904 45.6364 29.9895C45.2465 30.3376 44.6991 30.4626 44.3168 30.2197C44.1495 30.1135 44.096 29.885 44.1971 29.7094C44.2983 29.5338 44.5158 29.4775 44.683 29.5837C44.7667 29.6369 44.9978 29.5841 45.178 29.4233C45.5889 29.0564 45.6687 28.5903 45.4221 28.1552C45.3989 28.1143 45.2963 28.0935 45.083 28.1406Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M38.495 25.6044C38.4476 25.4053 38.5629 25.2035 38.7525 25.1538C38.9421 25.104 39.1342 25.225 39.1816 25.4242C39.3816 26.2644 39.7289 26.6292 40.2537 26.6292C40.7785 26.6292 41.1258 26.2644 41.3258 25.4242C41.3732 25.225 41.5653 25.104 41.7549 25.1538C41.9445 25.2035 42.0598 25.4053 42.0124 25.6044C41.7406 26.7461 41.1443 27.3724 40.2537 27.3724C39.3631 27.3724 38.7668 26.7461 38.495 25.6044Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M46.9872 25.6044C46.9398 25.4053 47.0551 25.2035 47.2447 25.1538C47.4343 25.104 47.6264 25.225 47.6738 25.4242C47.8738 26.2644 48.2211 26.6292 48.7459 26.6292C49.2707 26.6292 49.618 26.2644 49.818 25.4242C49.8654 25.225 50.0575 25.104 50.2471 25.1538C50.4367 25.2035 50.5519 25.4053 50.5045 25.6044C50.2328 26.7461 49.6365 27.3724 48.7459 27.3724C47.8553 27.3724 47.259 26.7461 46.9872 25.6044Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M43.9606 34.8118C43.7906 34.8091 43.616 34.8063 43.438 34.8063C41.6792 34.8063 40.2534 33.6524 40.2534 32.2289C40.2534 30.8054 41.1963 29.9736 42.3765 29.9736C42.6946 29.9736 43.0127 30.1038 43.3629 30.2472C43.7919 30.4227 44.269 30.618 44.8534 30.618C45.4378 30.618 45.915 30.4227 46.3439 30.2472C46.6941 30.1038 47.0122 29.9736 47.3303 29.9736C48.5106 29.9736 49.4534 30.8054 49.4534 32.2289C49.4534 33.6524 48.0276 34.8063 46.2688 34.8063C46.0908 34.8063 45.9163 34.8091 45.7463 34.8118C45.4306 34.8168 45.1305 34.8216 44.8534 34.8079C44.5763 34.8216 44.2763 34.8168 43.9606 34.8118Z\"\n            fill=\"#66C786\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.8534 34.433C46.2214 34.433 47.3303 33.6011 47.3303 32.5749C47.3303 31.5487 46.2214 30.7168 44.8534 30.7168C43.4854 30.7168 42.3765 31.5487 42.3765 32.5749C42.3765 33.6011 43.4854 34.433 44.8534 34.433Z\"\n            fill=\"white\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M46.9766 32.9468C46.9766 32.7416 46.8182 32.5752 46.6228 32.5752H43.0843C42.8889 32.5752 42.7305 32.7416 42.7305 32.9468V35.0114C42.7305 36.2057 43.7033 37.0347 44.8535 37.0347C45.9249 37.0347 46.9766 36.0528 46.9766 35.0114V32.9468ZM43.4382 35.0114V33.3184H46.2689V35.0114C46.2689 35.6216 45.5514 36.2914 44.8535 36.2914C44.0654 36.2914 43.4382 35.7569 43.4382 35.0114Z\"\n            fill=\"white\"\n        />\n        <path\n            d=\"M41.6069 17.1342C41.6719 16.8968 41.9155 16.7575 42.1509 16.8231C42.3864 16.8886 42.5246 17.1342 42.4596 17.3716C42.3709 17.6955 42.4568 17.8375 43.0302 18.358C43.6126 18.8867 43.7476 19.5789 43.4243 20.3263C43.3266 20.552 43.066 20.6552 42.842 20.5567C42.6181 20.4583 42.5158 20.1954 42.6135 19.9697C42.7872 19.5681 42.7325 19.2879 42.4383 19.0208C41.6319 18.2888 41.397 17.9006 41.6069 17.1342Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M44.2028 16.891C44.3478 16.6928 44.6248 16.6508 44.8213 16.797C45.0178 16.9433 45.0595 17.2225 44.9145 17.4207C44.7165 17.691 44.7463 17.8546 45.0966 18.5478C45.4523 19.2517 45.3324 19.9467 44.7649 20.5276C44.5935 20.7031 44.3134 20.7052 44.1394 20.5324C43.9654 20.3596 43.9632 20.0772 44.1347 19.9018C44.4396 19.5896 44.4881 19.3083 44.3084 18.9527C43.8158 17.9779 43.7344 17.5306 44.2028 16.891Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M46.7452 16.8692C46.9439 16.726 47.2202 16.7723 47.3622 16.9726C47.5043 17.173 47.4584 17.4515 47.2597 17.5947C46.9886 17.7902 46.9667 17.955 47.0875 18.7234C47.21 19.5037 46.883 20.1274 46.1652 20.503C45.9484 20.6165 45.6814 20.5313 45.5688 20.3127C45.4563 20.0941 45.5408 19.8249 45.7576 19.7115C46.1433 19.5096 46.2757 19.2572 46.2137 18.8629C46.044 17.7824 46.1037 17.3316 46.7452 16.8692Z\"\n            fill=\"#262626\"\n        />\n    </svg>\n);\n\nexport default ToBarn;\n","const TreBarn = () => (\n    <svg width={56} height={56} viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"32\" cy=\"32\" r=\"32\" fill=\"#99DEAD\" />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M21.9743 38.2356V43.0001H11.3589V38.2356C11.3589 36.8726 13.093 35.3166 14.254 34.6758H19.0792C20.2507 35.3278 21.9743 36.8883 21.9743 38.2356Z\"\n            fill=\"#007C2E\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M19.018 34.867C20.8319 34.223 22.3073 32.8549 23.1026 31.1068C23.1196 31.1076 23.1366 31.1079 23.1538 31.1079C23.8052 31.1079 24.3333 30.5755 24.3333 29.9187V28.7296C24.3333 28.2839 24.0901 27.8955 23.7303 27.6918C23.5032 23.9577 20.4276 21 16.6668 21C12.906 21 9.83039 23.9576 9.60329 27.6917C9.24328 27.8953 9 28.2838 9 28.7296V29.9187C9 30.5755 9.52807 31.1079 10.1795 31.1079C10.1967 31.1079 10.2139 31.1076 10.2309 31.1068C11.0262 32.8547 12.5014 34.2228 14.3151 34.8669C14.4117 36.091 15.4276 37.054 16.6666 37.054C17.9055 37.054 18.9214 36.0911 19.018 34.867Z\"\n            fill=\"#F1F1F1\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M14.779 31.3076C14.779 32.1287 14.1455 32.7943 13.3639 32.7943C12.5821 32.7943 11.9482 32.1287 11.9482 31.3076C11.9482 30.4869 12.5821 29.8213 13.3639 29.8213C14.1455 29.8213 14.779 30.4869 14.779 31.3076Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M21.384 31.3076C21.384 32.1287 20.7504 32.7943 19.9689 32.7943C19.1871 32.7943 18.5532 32.1287 18.5532 31.3076C18.5532 30.4869 19.1871 29.8213 19.9689 29.8213C20.7504 29.8213 21.384 30.4869 21.384 31.3076Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            d=\"M17.0548 29.094C16.9273 29.1222 16.8023 29.0364 16.7755 28.9025C16.7487 28.7686 16.8303 28.6373 16.9578 28.6091C17.275 28.5391 17.5402 28.593 17.6862 28.8502C17.9699 29.3506 17.8711 29.9272 17.4238 30.3267C17.1638 30.5588 16.7989 30.642 16.544 30.4801C16.4325 30.4093 16.3968 30.257 16.4643 30.1399C16.5317 30.0228 16.6767 29.9853 16.7882 30.0561C16.844 30.0916 16.998 30.0564 17.1182 29.9492C17.3921 29.7046 17.4453 29.3939 17.2809 29.1038C17.2654 29.0765 17.1971 29.0627 17.0548 29.094Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M12.6629 27.4036C12.6313 27.2709 12.7081 27.1363 12.8345 27.1032C12.9609 27.07 13.089 27.1507 13.1206 27.2834C13.2539 27.8436 13.4854 28.0868 13.8353 28.0868C14.1852 28.0868 14.4167 27.8436 14.55 27.2834C14.5816 27.1507 14.7097 27.07 14.8361 27.1032C14.9625 27.1363 15.0393 27.2709 15.0077 27.4036C14.8266 28.1647 14.429 28.5822 13.8353 28.5822C13.2416 28.5822 12.844 28.1647 12.6629 27.4036Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M18.3245 27.4036C18.2929 27.2709 18.3697 27.1363 18.4961 27.1032C18.6225 27.07 18.7506 27.1507 18.7822 27.2834C18.9155 27.8436 19.1471 28.0868 19.4969 28.0868C19.8468 28.0868 20.0783 27.8436 20.2117 27.2834C20.2433 27.1507 20.3713 27.07 20.4977 27.1032C20.6241 27.1363 20.701 27.2709 20.6694 27.4036C20.4882 28.1647 20.0906 28.5822 19.4969 28.5822C18.9032 28.5822 18.5057 28.1647 18.3245 27.4036Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M16.3069 33.5419C16.1935 33.5401 16.0772 33.5382 15.9585 33.5382C14.786 33.5382 13.8354 32.7689 13.8354 31.8199C13.8354 30.8709 14.464 30.3164 15.2508 30.3164C15.4629 30.3164 15.675 30.4032 15.9085 30.4988C16.1944 30.6158 16.5125 30.746 16.9021 30.746C17.2917 30.746 17.6098 30.6158 17.8958 30.4988C18.1293 30.4032 18.3413 30.3164 18.5534 30.3164C19.3402 30.3164 19.9688 30.8709 19.9688 31.8199C19.9688 32.7689 19.0182 33.5382 17.8457 33.5382C17.7271 33.5382 17.6107 33.5401 17.4973 33.5419C17.2869 33.5452 17.0869 33.5484 16.9021 33.5392C16.7174 33.5484 16.5173 33.5452 16.3069 33.5419Z\"\n            fill=\"#66C786\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M16.9023 33.289C17.8142 33.289 18.5535 32.7344 18.5535 32.0503C18.5535 31.3661 17.8142 30.8115 16.9023 30.8115C15.9903 30.8115 15.251 31.3661 15.251 32.0503C15.251 32.7344 15.9903 33.289 16.9023 33.289Z\"\n            fill=\"white\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M18.3176 32.2985C18.3176 32.1617 18.212 32.0508 18.0817 32.0508H15.7227C15.5924 32.0508 15.4868 32.1617 15.4868 32.2985V33.6749C15.4868 34.4711 16.1354 35.0238 16.9022 35.0238C17.6164 35.0238 18.3176 34.3692 18.3176 33.6749V32.2985ZM15.9585 33.6749V32.5462H17.8457V33.6749C17.8457 34.0817 17.3673 34.5282 16.9021 34.5282C16.3767 34.5282 15.9585 34.1719 15.9585 33.6749Z\"\n            fill=\"white\"\n        />\n        <path\n            d=\"M14.7378 21.7571C14.7811 21.5989 14.9435 21.506 15.1005 21.5497C15.2574 21.5934 15.3496 21.7571 15.3062 21.9154C15.2471 22.1313 15.3044 22.226 15.6867 22.573C16.0749 22.9254 16.1649 23.3869 15.9494 23.8851C15.8843 24.0356 15.7105 24.1044 15.5612 24.0388C15.4119 23.9732 15.3437 23.7979 15.4088 23.6474C15.5246 23.3797 15.4882 23.1929 15.292 23.0149C14.7544 22.5268 14.5978 22.268 14.7378 21.7571Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M16.4679 21.5943C16.5646 21.4622 16.7492 21.4342 16.8802 21.5317C17.0112 21.6292 17.039 21.8153 16.9423 21.9474C16.8104 22.1276 16.8302 22.2367 17.0637 22.6988C17.3009 23.1681 17.221 23.6315 16.8426 24.0187C16.7283 24.1357 16.5416 24.1372 16.4256 24.0219C16.3096 23.9067 16.3082 23.7185 16.4225 23.6015C16.6257 23.3934 16.6581 23.2059 16.5383 22.9688C16.2099 22.3189 16.1556 22.0207 16.4679 21.5943Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M18.1631 21.5798C18.2956 21.4843 18.4798 21.5152 18.5745 21.6487C18.6692 21.7823 18.6386 21.968 18.5061 22.0635C18.3254 22.1938 18.3108 22.3037 18.3913 22.8159C18.473 23.3362 18.255 23.7519 17.7765 24.0024C17.6319 24.078 17.4539 24.0212 17.3789 23.8755C17.3039 23.7297 17.3602 23.5503 17.5047 23.4746C17.7619 23.3401 17.8501 23.1718 17.8088 22.909C17.6957 22.1886 17.7355 21.8881 18.1631 21.5798Z\"\n            fill=\"#262626\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M37.3078 38.2356V43.0001H26.6924V38.2356C26.6924 36.8726 28.4265 35.3166 29.5875 34.6758H34.4127C35.5842 35.3278 37.3078 36.8883 37.3078 38.2356Z\"\n            fill=\"#007C2E\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M34.3515 34.867C36.1654 34.223 37.6407 32.8549 38.4361 31.1068C38.4531 31.1076 38.4701 31.1079 38.4873 31.1079C39.1387 31.1079 39.6668 30.5755 39.6668 29.9187V28.7296C39.6668 28.2839 39.4236 27.8955 39.0638 27.6918C38.8367 23.9577 35.7611 21 32.0003 21C28.2395 21 25.1639 23.9576 24.9368 27.6917C24.5768 27.8953 24.3335 28.2838 24.3335 28.7296V29.9187C24.3335 30.5755 24.8616 31.1079 25.513 31.1079C25.5302 31.1079 25.5474 31.1076 25.5644 31.1068C26.3597 32.8547 27.8349 34.2228 29.6486 34.8669C29.7452 36.091 30.7611 37.054 32.0001 37.054C33.239 37.054 34.2549 36.0911 34.3515 34.867Z\"\n            fill=\"#F1F1F1\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M30.1125 31.3076C30.1125 32.1287 29.479 32.7943 28.6974 32.7943C27.9156 32.7943 27.2817 32.1287 27.2817 31.3076C27.2817 30.4869 27.9156 29.8213 28.6974 29.8213C29.479 29.8213 30.1125 30.4869 30.1125 31.3076Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M36.7175 31.3076C36.7175 32.1287 36.0839 32.7943 35.3024 32.7943C34.5206 32.7943 33.8867 32.1287 33.8867 31.3076C33.8867 30.4869 34.5206 29.8213 35.3024 29.8213C36.0839 29.8213 36.7175 30.4869 36.7175 31.3076Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            d=\"M32.3883 29.094C32.2608 29.1222 32.1358 29.0364 32.109 28.9025C32.0822 28.7686 32.1638 28.6373 32.2913 28.6091C32.6085 28.5391 32.8737 28.593 33.0197 28.8502C33.3034 29.3506 33.2045 29.9272 32.7573 30.3267C32.4973 30.5588 32.1324 30.642 31.8775 30.4801C31.766 30.4093 31.7303 30.257 31.7978 30.1399C31.8652 30.0228 32.0102 29.9853 32.1217 30.0561C32.1775 30.0916 32.3315 30.0564 32.4517 29.9492C32.7256 29.7046 32.7788 29.3939 32.6144 29.1038C32.5989 29.0765 32.5305 29.0627 32.3883 29.094Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M27.9964 27.4036C27.9648 27.2709 28.0416 27.1363 28.168 27.1032C28.2944 27.07 28.4225 27.1507 28.4541 27.2834C28.5874 27.8436 28.8189 28.0868 29.1688 28.0868C29.5187 28.0868 29.7502 27.8436 29.8835 27.2834C29.9151 27.1507 30.0432 27.07 30.1696 27.1032C30.296 27.1363 30.3728 27.2709 30.3412 27.4036C30.1601 28.1647 29.7625 28.5822 29.1688 28.5822C28.5751 28.5822 28.1775 28.1647 27.9964 27.4036Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M33.658 27.4036C33.6264 27.2709 33.7032 27.1363 33.8296 27.1032C33.956 27.07 34.0841 27.1507 34.1157 27.2834C34.249 27.8436 34.4805 28.0868 34.8304 28.0868C35.1803 28.0868 35.4118 27.8436 35.5452 27.2834C35.5768 27.1507 35.7048 27.07 35.8312 27.1032C35.9576 27.1363 36.0345 27.2709 36.0029 27.4036C35.8217 28.1647 35.4241 28.5822 34.8304 28.5822C34.2367 28.5822 33.8392 28.1647 33.658 27.4036Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M31.6404 33.5419C31.527 33.5401 31.4107 33.5382 31.292 33.5382C30.1195 33.5382 29.1689 32.7689 29.1689 31.8199C29.1689 30.8709 29.7975 30.3164 30.5843 30.3164C30.7964 30.3164 31.0085 30.4032 31.242 30.4988C31.5279 30.6158 31.846 30.746 32.2356 30.746C32.6252 30.746 32.9433 30.6158 33.2293 30.4988C33.4628 30.4032 33.6748 30.3164 33.8869 30.3164C34.6737 30.3164 35.3023 30.8709 35.3023 31.8199C35.3023 32.7689 34.3517 33.5382 33.1792 33.5382C33.0606 33.5382 32.9442 33.5401 32.8308 33.5419C32.6204 33.5452 32.4204 33.5484 32.2356 33.5392C32.0509 33.5484 31.8508 33.5452 31.6404 33.5419Z\"\n            fill=\"#66C786\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M32.2358 33.289C33.1477 33.289 33.887 32.7344 33.887 32.0503C33.887 31.3661 33.1477 30.8115 32.2358 30.8115C31.3238 30.8115 30.5845 31.3661 30.5845 32.0503C30.5845 32.7344 31.3238 33.289 32.2358 33.289Z\"\n            fill=\"white\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M33.6511 32.2985C33.6511 32.1617 33.5455 32.0508 33.4152 32.0508H31.0562C30.9259 32.0508 30.8203 32.1617 30.8203 32.2985V33.6749C30.8203 34.4711 31.4689 35.0238 32.2357 35.0238C32.9499 35.0238 33.6511 34.3692 33.6511 33.6749V32.2985ZM31.292 33.6749V32.5462H33.1792V33.6749C33.1792 34.0817 32.7008 34.5282 32.2356 34.5282C31.7102 34.5282 31.292 34.1719 31.292 33.6749Z\"\n            fill=\"white\"\n        />\n        <path\n            d=\"M30.0712 21.7571C30.1146 21.5989 30.277 21.506 30.434 21.5497C30.5909 21.5934 30.6831 21.7571 30.6397 21.9154C30.5806 22.1313 30.6379 22.226 31.0202 22.573C31.4084 22.9254 31.4984 23.3869 31.2829 23.8851C31.2178 24.0356 31.044 24.1044 30.8947 24.0388C30.7454 23.9732 30.6772 23.7979 30.7423 23.6474C30.8581 23.3797 30.8217 23.1929 30.6255 23.0149C30.0879 22.5268 29.9313 22.268 30.0712 21.7571Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M31.8014 21.5943C31.8981 21.4622 32.0827 21.4342 32.2137 21.5317C32.3447 21.6292 32.3725 21.8153 32.2758 21.9474C32.1439 22.1276 32.1637 22.2367 32.3972 22.6988C32.6344 23.1681 32.5545 23.6315 32.1761 24.0187C32.0618 24.1357 31.8751 24.1372 31.7591 24.0219C31.6431 23.9067 31.6417 23.7185 31.7559 23.6015C31.9592 23.3934 31.9916 23.2059 31.8718 22.9688C31.5434 22.3189 31.4891 22.0207 31.8014 21.5943Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M33.4966 21.5798C33.6291 21.4843 33.8133 21.5152 33.908 21.6487C34.0027 21.7823 33.9721 21.968 33.8396 22.0635C33.6589 22.1938 33.6443 22.3037 33.7248 22.8159C33.8065 23.3362 33.5885 23.7519 33.11 24.0024C32.9654 24.078 32.7874 24.0212 32.7124 23.8755C32.6373 23.7297 32.6937 23.5503 32.8382 23.4746C33.0953 23.3401 33.1836 23.1718 33.1423 22.909C33.0292 22.1886 33.069 21.8881 33.4966 21.5798Z\"\n            fill=\"#262626\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M52.6408 38.2356V43.0001H42.0254V38.2356C42.0254 36.8726 43.7595 35.3166 44.9205 34.6758H49.7457C50.9173 35.3278 52.6408 36.8883 52.6408 38.2356Z\"\n            fill=\"#007C2E\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M49.6845 34.867C51.4984 34.223 52.9738 32.8549 53.7691 31.1068C53.7861 31.1076 53.8031 31.1079 53.8203 31.1079C54.4717 31.1079 54.9998 30.5755 54.9998 29.9187V28.7296C54.9998 28.2839 54.7566 27.8955 54.3968 27.6918C54.1697 23.9577 51.0941 21 47.3333 21C43.5725 21 40.4969 23.9576 40.2698 27.6917C39.9098 27.8953 39.6665 28.2838 39.6665 28.7296V29.9187C39.6665 30.5755 40.1946 31.1079 40.846 31.1079C40.8632 31.1079 40.8804 31.1076 40.8975 31.1068C41.6927 32.8547 43.1679 34.2228 44.9816 34.8669C45.0782 36.091 46.0941 37.054 47.3331 37.054C48.572 37.054 49.5879 36.0911 49.6845 34.867Z\"\n            fill=\"#F1F1F1\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M45.4455 31.3076C45.4455 32.1287 44.812 32.7943 44.0304 32.7943C43.2486 32.7943 42.6147 32.1287 42.6147 31.3076C42.6147 30.4869 43.2486 29.8213 44.0304 29.8213C44.812 29.8213 45.4455 30.4869 45.4455 31.3076Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M52.0505 31.3076C52.0505 32.1287 51.4169 32.7943 50.6354 32.7943C49.8536 32.7943 49.2197 32.1287 49.2197 31.3076C49.2197 30.4869 49.8536 29.8213 50.6354 29.8213C51.4169 29.8213 52.0505 30.4869 52.0505 31.3076Z\"\n            fill=\"#EFA89D\"\n        />\n        <path\n            d=\"M47.7213 29.094C47.5938 29.1222 47.4688 29.0364 47.442 28.9025C47.4152 28.7686 47.4968 28.6373 47.6243 28.6091C47.9415 28.5391 48.2067 28.593 48.3527 28.8502C48.6364 29.3506 48.5376 29.9272 48.0903 30.3267C47.8303 30.5588 47.4654 30.642 47.2105 30.4801C47.099 30.4093 47.0633 30.257 47.1308 30.1399C47.1982 30.0228 47.3432 29.9853 47.4547 30.0561C47.5105 30.0916 47.6645 30.0564 47.7847 29.9492C48.0586 29.7046 48.1118 29.3939 47.9474 29.1038C47.9319 29.0765 47.8636 29.0627 47.7213 29.094Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M43.3294 27.4036C43.2978 27.2709 43.3746 27.1363 43.501 27.1032C43.6274 27.07 43.7555 27.1507 43.7871 27.2834C43.9204 27.8436 44.1519 28.0868 44.5018 28.0868C44.8517 28.0868 45.0832 27.8436 45.2165 27.2834C45.2481 27.1507 45.3762 27.07 45.5026 27.1032C45.629 27.1363 45.7059 27.2709 45.6743 27.4036C45.4931 28.1647 45.0955 28.5822 44.5018 28.5822C43.9081 28.5822 43.5105 28.1647 43.3294 27.4036Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M48.991 27.4036C48.9594 27.2709 49.0362 27.1363 49.1626 27.1032C49.289 27.07 49.4171 27.1507 49.4487 27.2834C49.582 27.8436 49.8136 28.0868 50.1634 28.0868C50.5133 28.0868 50.7448 27.8436 50.8782 27.2834C50.9098 27.1507 51.0378 27.07 51.1642 27.1032C51.2906 27.1363 51.3675 27.2709 51.3359 27.4036C51.1547 28.1647 50.7571 28.5822 50.1634 28.5822C49.5697 28.5822 49.1722 28.1647 48.991 27.4036Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M46.9734 33.5419C46.86 33.5401 46.7437 33.5382 46.625 33.5382C45.4525 33.5382 44.502 32.7689 44.502 31.8199C44.502 30.8709 45.1305 30.3164 45.9173 30.3164C46.1294 30.3164 46.3415 30.4032 46.575 30.4988C46.8609 30.6158 47.179 30.746 47.5686 30.746C47.9582 30.746 48.2763 30.6158 48.5623 30.4988C48.7958 30.4032 49.0078 30.3164 49.2199 30.3164C50.0067 30.3164 50.6353 30.8709 50.6353 31.8199C50.6353 32.7689 49.6848 33.5382 48.5122 33.5382C48.3936 33.5382 48.2772 33.5401 48.1639 33.5419C47.9534 33.5452 47.7534 33.5484 47.5686 33.5392C47.3839 33.5484 47.1838 33.5452 46.9734 33.5419Z\"\n            fill=\"#66C786\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M47.5688 33.289C48.4807 33.289 49.22 32.7344 49.22 32.0503C49.22 31.3661 48.4807 30.8115 47.5688 30.8115C46.6568 30.8115 45.9175 31.3661 45.9175 32.0503C45.9175 32.7344 46.6568 33.289 47.5688 33.289Z\"\n            fill=\"white\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M48.9841 32.2985C48.9841 32.1617 48.8785 32.0508 48.7482 32.0508H46.3892C46.2589 32.0508 46.1533 32.1617 46.1533 32.2985V33.6749C46.1533 34.4711 46.8019 35.0238 47.5687 35.0238C48.2829 35.0238 48.9841 34.3692 48.9841 33.6749V32.2985ZM46.625 33.6749V32.5462H48.5122V33.6749C48.5122 34.0817 48.0338 34.5282 47.5686 34.5282C47.0432 34.5282 46.625 34.1719 46.625 33.6749Z\"\n            fill=\"white\"\n        />\n        <path\n            d=\"M45.4043 21.7571C45.4476 21.5989 45.61 21.506 45.767 21.5497C45.9239 21.5934 46.0161 21.7571 45.9727 21.9154C45.9136 22.1313 45.9709 22.226 46.3532 22.573C46.7414 22.9254 46.8314 23.3869 46.6159 23.8851C46.5508 24.0356 46.377 24.1044 46.2277 24.0388C46.0784 23.9732 46.0102 23.7979 46.0753 23.6474C46.1911 23.3797 46.1547 23.1929 45.9585 23.0149C45.4209 22.5268 45.2643 22.268 45.4043 21.7571Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M47.1344 21.5943C47.2311 21.4622 47.4157 21.4342 47.5467 21.5317C47.6777 21.6292 47.7056 21.8153 47.6088 21.9474C47.4769 22.1276 47.4967 22.2367 47.7303 22.6988C47.9674 23.1681 47.8875 23.6315 47.5091 24.0187C47.3948 24.1357 47.2081 24.1372 47.0921 24.0219C46.9761 23.9067 46.9747 23.7185 47.089 23.6015C47.2922 23.3934 47.3246 23.2059 47.2048 22.9688C46.8764 22.3189 46.8222 22.0207 47.1344 21.5943Z\"\n            fill=\"#262626\"\n        />\n        <path\n            d=\"M48.8296 21.5798C48.9621 21.4843 49.1463 21.5152 49.241 21.6487C49.3357 21.7823 49.3051 21.968 49.1726 22.0635C48.9919 22.1938 48.9773 22.3037 49.0578 22.8159C49.1395 23.3362 48.9215 23.7519 48.443 24.0024C48.2984 24.078 48.1204 24.0212 48.0454 23.8755C47.9704 23.7297 48.0267 23.5503 48.1712 23.4746C48.4284 23.3401 48.5166 23.1718 48.4753 22.909C48.3622 22.1886 48.402 21.8881 48.8296 21.5798Z\"\n            fill=\"#262626\"\n        />\n    </svg>\n);\n\nexport default TreBarn;\n","import { Tag } from '@navikt/ds-react';\nimport { BehandlingTilstand } from 'app/types/BehandlingTilstand';\nimport { Sak } from 'app/types/Sak';\n\ninterface Props {\n    className?: string;\n    sak: Sak;\n}\n\nconst StatusTag: React.FunctionComponent<Props> = ({ sak, className }) => {\n    if (sak.åpenBehandling) {\n        if (!sak.sakAvsluttet) {\n            if (sak.åpenBehandling.tilstand === BehandlingTilstand.UNDER_BEHANDLING) {\n                return (\n                    <Tag className={className} variant=\"warning\" size=\"xsmall\">\n                        Under behandling\n                    </Tag>\n                );\n            }\n\n            if (sak.åpenBehandling.tilstand === BehandlingTilstand.VENTER_PÅ_INNTEKTSMELDING) {\n                return (\n                    <Tag className={className} variant=\"warning\" size=\"xsmall\">\n                        Venter på inntektsmelding fra arbeidsgiver\n                    </Tag>\n                );\n            }\n\n            if (sak.åpenBehandling.tilstand === BehandlingTilstand.VENTER_PÅ_DOKUMENTASJON) {\n                return (\n                    <Tag className={className} variant=\"warning\" size=\"xsmall\">\n                        Du må sende dokumentasjon\n                    </Tag>\n                );\n            }\n\n            if (sak.åpenBehandling.tilstand === BehandlingTilstand.TIDLIG_SØKNAD) {\n                return (\n                    <Tag className={className} variant=\"warning\" size=\"xsmall\">\n                        Søknaden vil bli behandlet senere\n                    </Tag>\n                );\n            }\n\n            if (sak.åpenBehandling.tilstand === BehandlingTilstand.VENTER_PÅ_MELDEKORT) {\n                return (\n                    <Tag className={className} variant=\"warning\" size=\"xsmall\">\n                        Du må sende meldekort\n                    </Tag>\n                );\n            }\n        }\n    }\n\n    if (sak.sakAvsluttet) {\n        return (\n            <Tag className={className} variant=\"success\" size=\"xsmall\">\n                Avsluttet\n            </Tag>\n        );\n    }\n\n    return (\n        <Tag className={className} variant=\"success\" size=\"xsmall\">\n            Aktiv\n        </Tag>\n    );\n};\n\nexport default StatusTag;\n","import { Heading, LinkPanel } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport { Sak } from 'app/types/Sak';\nimport { Ytelse } from 'app/types/Ytelse';\n\nimport { Link } from 'react-router-dom';\nimport StatusTag from '../status-tag/StatusTag';\n\nimport './sak-link.css';\n\ninterface Props {\n    sak: Sak;\n}\n\nconst getHeading = (ytelse: Ytelse) => {\n    switch (ytelse) {\n        case Ytelse.ENGANGSSTØNAD:\n            return 'Engangsstønad';\n        case Ytelse.FORELDREPENGER:\n            return 'Foreldrepenger';\n        case Ytelse.SVANGERSKAPSPENGER:\n            return 'Svangerskapspenger';\n    }\n};\n\nconst SakLink: React.FunctionComponent<Props> = ({ sak }) => {\n    const bem = bemUtils('sak-link');\n\n    return (\n        <LinkPanel as={Link} to={`/sak/${sak.saksnummer}`} className={bem.block}>\n            <div className={bem.element('content')}>\n                <Heading level=\"3\" size=\"medium\">\n                    {getHeading(sak.ytelse)}\n                </Heading>\n                <StatusTag sak={sak} />\n            </div>\n        </LinkPanel>\n    );\n};\n\nexport default SakLink;\n","import { Heading } from '@navikt/ds-react';\nimport { bemUtils, guid } from '@navikt/fp-common';\nimport { useSetBackgroundColor } from 'app/hooks/useBackgroundColor';\nimport { GruppertSak } from 'app/types/GruppertSak';\nimport { ISOStringToDate } from 'app/utils/dateUtils';\nimport { getSakTittel } from 'app/utils/sakerUtils';\nimport EtBarn from 'assets/EtBarn';\nimport ToBarn from 'assets/ToBarn';\nimport TreBarn from 'assets/TreBarn';\n\nimport { useIntl } from 'react-intl';\nimport SakLink from '../sak-link/SakLink';\n\nimport './har-saker.css';\n\ninterface Props {\n    grupperteSaker: GruppertSak[];\n}\n\nconst getIkonForAntallBarn = (antallBarn: number) => {\n    switch (antallBarn) {\n        case 0:\n        case 1:\n            return <EtBarn />;\n        case 2:\n            return <ToBarn />;\n        default:\n            return <TreBarn />;\n    }\n};\n\nconst HarSaker: React.FunctionComponent<Props> = ({ grupperteSaker }) => {\n    const bem = bemUtils('har-saker');\n    const intl = useIntl();\n    useSetBackgroundColor('blue');\n\n    return (\n        <>\n            {grupperteSaker.map((gruppering) => {\n                const tittel = getSakTittel(\n                    gruppering.barn?.fornavn,\n                    gruppering.barn?.fødselsdatoer,\n                    ISOStringToDate(gruppering.familiehendelsedato)!,\n                    !!gruppering.barn?.alleBarnaLever,\n                    gruppering.antallBarn,\n                    intl,\n                    gruppering.type,\n                );\n                return (\n                    <div className={bem.block} key={gruppering.familiehendelsedato}>\n                        <Heading size=\"small\" level=\"2\" className={bem.element('tittel')}>\n                            {getIkonForAntallBarn(gruppering.antallBarn)}\n                            <div>\n                                <div>{tittel}</div>\n                            </div>\n                        </Heading>\n                        {gruppering.saker.map((sak) => {\n                            return <SakLink key={guid()} sak={sak} />;\n                        })}\n                    </div>\n                );\n            })}\n        </>\n    );\n};\n\nexport default HarSaker;\n","import HarIkkeSaker from 'app/components/har-ikke-saker/HarIkkeSaker';\nimport HarSaker from 'app/components/har-saker/HarSaker';\nimport { Block, bemUtils } from '@navikt/fp-common';\nimport { useSetSelectedRoute } from 'app/hooks/useSelectedRoute';\nimport OversiktRoutes from 'app/routes/routes';\nimport { GruppertSak } from 'app/types/GruppertSak';\nimport { Sak } from 'app/types/Sak';\nimport { SvangerskapspengeSak } from 'app/types/SvangerskapspengeSak';\nimport SakLink from 'app/components/sak-link/SakLink';\nimport { Alert, Heading } from '@navikt/ds-react';\n\nimport './forside.css';\nimport BekreftelseSendtSøknad from 'app/components/bekreftelse-sendt-søknad/BekreftelseSendtSøknad';\nimport { useGetIsRedirectedFromSøknad, useSetIsRedirectedFromSøknad } from 'app/hooks/useIsRedirectedFromSøknad';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { RedirectSource } from 'app/types/RedirectSource';\n\ninterface Props {\n    alleYtelser: Sak[];\n    grupperteSaker: GruppertSak[];\n    avslåttSvangerskapspengesak: SvangerskapspengeSak | undefined;\n    oppdatertData: boolean;\n    storageData: any;\n    isFirstRender: React.MutableRefObject<boolean>;\n}\n\nconst Forside: React.FunctionComponent<Props> = ({\n    alleYtelser,\n    grupperteSaker,\n    avslåttSvangerskapspengesak,\n    oppdatertData,\n    storageData,\n    isFirstRender,\n}) => {\n    const bem = bemUtils('forside');\n    useSetSelectedRoute(OversiktRoutes.HOVEDSIDE);\n\n    const params = useParams();\n    useSetIsRedirectedFromSøknad(params.redirect, isFirstRender);\n    const navigate = useNavigate();\n    if (params.redirect === RedirectSource.REDIRECT_FROM_SØKNAD) {\n        navigate(OversiktRoutes.HOVEDSIDE);\n    }\n    const redirectedFromSoknad = useGetIsRedirectedFromSøknad();\n    return (\n        <div className={bem.block}>\n            <Block padBottom=\"xl\">\n                {redirectedFromSoknad && (\n                    <BekreftelseSendtSøknad oppdatertData={oppdatertData} tidslinjehendelser={[]} />\n                )}\n                {!oppdatertData && (\n                    <Alert variant=\"warning\">\n                        Det ser ut som det tar litt tid å opprette saken din akkurat i dag. Søknaden din er sendt, så du\n                        kan vente litt og komme tilbake senere for å se alle detaljene i saken din.\n                    </Alert>\n                )}\n            </Block>\n            <Block>\n                {storageData?.søknad.harGodkjentVilkår && (\n                    <Heading level=\"1\" size=\"large\">\n                        Dette er en mellomlagret søknad av typen: {storageData.søknad.type}\n                    </Heading>\n                )}\n            </Block>\n            {alleYtelser.length > 0 ? (\n                <HarSaker grupperteSaker={grupperteSaker} />\n            ) : (\n                <HarIkkeSaker oppdatertData={oppdatertData} />\n            )}\n            {avslåttSvangerskapspengesak && <SakLink sak={avslåttSvangerskapspengesak} />}\n        </div>\n    );\n};\n\nexport default Forside;\n","const TåteflaskeBaby = () => (\n    <svg width={88} height={96} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"m48.293 33.93 13.54 19.927c7.387 10.87-.399 25.573-13.54 25.573-13.142 0-20.927-14.704-13.541-25.573l13.54-19.927Z\"\n            fill=\"#99DEAD\"\n        />\n        <path\n            d=\"M27.51 38.592a8.269 8.269 0 0 0 3.694-.87l6.803-3.398V23.209l-6.803-3.397a8.269 8.269 0 0 0-3.694-.87H12.368c-1.071 0-1.94.867-1.94 1.937v15.777c0 1.07.869 1.937 1.94 1.937H27.51Z\"\n            stroke=\"#262626\"\n            strokeWidth={2.438}\n        />\n        <circle\n            r={3.863}\n            transform=\"scale(1.0007 -.9993) rotate(45 59.901 46.33)\"\n            stroke=\"#262626\"\n            strokeWidth={2.438}\n        />\n        <path\n            d=\"M38.115 35.707c3.839 0 6.95-3.108 6.95-6.94 0-3.834-3.111-6.942-6.95-6.942\"\n            stroke=\"#262626\"\n            strokeWidth={2.438}\n        />\n        <path d=\"M37.156 37.145V20.387\" stroke=\"#262626\" strokeWidth={2.438} strokeLinecap=\"round\" />\n        <path stroke=\"#262626\" strokeWidth={2.438} d=\"M10.051 30.273h26.85\" />\n        <rect x={56.836} y={48.961} width={29.294} height={45.5} rx={14.647} stroke=\"#262626\" strokeWidth={2.438} />\n        <path\n            d=\"M84.148 61.724c0 7.057-5.678 12.763-12.664 12.763S58.82 68.781 58.82 61.724c0-7.057 5.678-12.763 12.664-12.763s12.664 5.706 12.664 12.763Z\"\n            stroke=\"#262626\"\n            strokeWidth={2.438}\n        />\n        <mask id=\"a\" fill=\"#fff\">\n            <ellipse cx={67.518} cy={61.724} rx={1.983} ry={1.997} />\n        </mask>\n        <ellipse cx={67.518} cy={61.724} rx={1.983} ry={1.997} fill=\"#262626\" />\n        <path\n            d=\"M67.064 61.724c0-.227.187-.44.454-.44v4.875c2.458 0 4.421-2.002 4.421-4.435h-4.875Zm.454-.44c.268 0 .455.213.455.44h-4.875c0 2.433 1.963 4.435 4.42 4.435v-4.875Zm.455.44c0 .227-.187.44-.455.44V57.29c-2.457 0-4.42 2.002-4.42 4.435h4.875Zm-.455.44a.447.447 0 0 1-.454-.44h4.875c0-2.433-1.963-4.435-4.42-4.435v4.875Z\"\n            fill=\"#262626\"\n            mask=\"url(#a)\"\n        />\n        <mask id=\"b\" fill=\"#fff\">\n            <ellipse cx={75.448} cy={61.724} rx={1.983} ry={1.997} />\n        </mask>\n        <ellipse cx={75.448} cy={61.724} rx={1.983} ry={1.997} fill=\"#262626\" />\n        <path\n            d=\"M74.994 61.724c0-.227.187-.44.454-.44v4.875c2.458 0 4.42-2.002 4.42-4.435h-4.874Zm.454-.44c.267 0 .454.213.454.44h-4.875c0 2.433 1.963 4.435 4.421 4.435v-4.875Zm.454.44c0 .227-.187.44-.454.44V57.29c-2.458 0-4.42 2.002-4.42 4.435h4.874Zm-.454.44a.447.447 0 0 1-.454-.44h4.875c0-2.433-1.963-4.435-4.42-4.435v4.875Z\"\n            fill=\"#262626\"\n            mask=\"url(#b)\"\n        />\n        <path d=\"M77.99 72.523 60.935 89.682\" stroke=\"#262626\" strokeWidth={2.438} />\n    </svg>\n);\n\nexport default TåteflaskeBaby;\n","export const assertUnreachable = (_x: never, errorMsg: string): never => {\n    throw new Error(errorMsg);\n};\n","import OversiktRoutes from 'app/routes/routes';\nimport { assertUnreachable } from 'app/utils/globalUtils';\n\nexport interface Breadcrumb {\n    displayName: string;\n    route: string;\n    isExternalLink: boolean;\n}\n\nexport interface BreadcrumbMap {\n    [key: string]: Breadcrumb[];\n}\n\nconst nav: Breadcrumb = {\n    displayName: 'nav.no',\n    route: 'https://nav.no',\n    isExternalLink: true,\n};\n\nconst minSide: Breadcrumb = {\n    displayName: 'Min side',\n    route: 'https://www.nav.no/minside',\n    isExternalLink: true,\n};\n\nconst hovedside: Breadcrumb = {\n    displayName: 'Foreldrepenger',\n    route: OversiktRoutes.HOVEDSIDE,\n    isExternalLink: false,\n};\n\nconst saksoversikt: Breadcrumb = {\n    displayName: 'Din sak',\n    route: OversiktRoutes.SAKSOVERSIKT,\n    isExternalLink: false,\n};\n\nconst dokumenter: Breadcrumb = {\n    displayName: 'Dokumenter',\n    route: OversiktRoutes.DOKUMENTER,\n    isExternalLink: false,\n};\n\nconst ettersend: Breadcrumb = {\n    displayName: 'Last opp',\n    route: OversiktRoutes.ETTERSEND,\n    isExternalLink: false,\n};\n\nconst tidslinjen: Breadcrumb = {\n    displayName: 'Hele prosessen',\n    route: OversiktRoutes.TIDSLINJEN,\n    isExternalLink: false,\n};\n\nconst dinPlan: Breadcrumb = {\n    displayName: 'Søknaden din',\n    route: OversiktRoutes.DIN_PLAN,\n    isExternalLink: false,\n};\n\nconst oppgaver: Breadcrumb = {\n    displayName: 'Din oppgave',\n    route: OversiktRoutes.OPPGAVER,\n    isExternalLink: false,\n};\n\nexport const getBreadcrumbs = (selectedRoute: OversiktRoutes) => {\n    switch (selectedRoute) {\n        case OversiktRoutes.HOVEDSIDE:\n            return [nav, minSide, hovedside];\n        case OversiktRoutes.SAKSOVERSIKT:\n            return [nav, minSide, hovedside, saksoversikt];\n        case OversiktRoutes.DOKUMENTER:\n            return [nav, minSide, hovedside, saksoversikt, dokumenter];\n        case OversiktRoutes.ETTERSEND:\n            return [nav, minSide, hovedside, saksoversikt, dokumenter, ettersend];\n        case OversiktRoutes.TIDSLINJEN:\n            return [nav, minSide, hovedside, saksoversikt, tidslinjen];\n        case OversiktRoutes.DIN_PLAN:\n            return [nav, minSide, hovedside, saksoversikt, dinPlan];\n        case OversiktRoutes.OPPGAVER:\n            return [nav, minSide, hovedside, saksoversikt, oppgaver];\n        default:\n            return assertUnreachable(selectedRoute, 'En rute mangler brødsmulesti');\n    }\n};\n","import { Home } from '@navikt/ds-icons';\nimport { BodyShort, Link as DSLink } from '@navikt/ds-react';\nimport { bemUtils, hasValue } from '@navikt/fp-common';\nimport { ChevronRightIcon } from '@navikt/aksel-icons';\nimport { Link } from 'react-router-dom';\n\nimport OversiktRoutes from 'app/routes/routes';\nimport { getBreadcrumbs } from 'app/types/Breadcrumb';\nimport { useGetSelectedSak } from 'app/hooks/useSelectedSak';\n\nimport './breadcrumb.css';\n\ninterface Props {\n    selectedRoute: OversiktRoutes;\n    oppgaveId: string | undefined;\n}\n\nconst getRoute = (route: string, saksnummer: string | undefined, oppgaveId: string | undefined): string => {\n    const sakRoute = `${OversiktRoutes.SAKSOVERSIKT}/${saksnummer}`;\n\n    if (route === OversiktRoutes.SAKSOVERSIKT && hasValue(saksnummer)) {\n        return sakRoute;\n    }\n\n    if (route === OversiktRoutes.OPPGAVER && hasValue(oppgaveId)) {\n        return `${OversiktRoutes.OPPGAVER}/${oppgaveId}`;\n    }\n\n    if (route === OversiktRoutes.DOKUMENTER) {\n        return `${sakRoute}/${OversiktRoutes.DOKUMENTER}`;\n    }\n\n    return route;\n};\n\nconst Breadcrumb: React.FunctionComponent<Props> = ({ selectedRoute, oppgaveId }) => {\n    const bem = bemUtils('breadcrumb');\n    const path = getBreadcrumbs(selectedRoute);\n\n    const sak = useGetSelectedSak();\n    const saksnummer = sak ? sak.saksnummer : undefined;\n\n    return (\n        <div className={bem.block}>\n            {path.map((p, index) => {\n                const lastBreadcrumb = index === path.length - 1;\n                const erNavHomeLink = p.displayName === 'nav.no';\n\n                if (lastBreadcrumb) {\n                    return (\n                        <BodyShort key={`${p.displayName}-short`} className={bem.element('flex-align')}>\n                            {p.displayName}\n                        </BodyShort>\n                    );\n                }\n\n                return (\n                    <div key={`${p.displayName}-content`} className={bem.element('flex-align')}>\n                        {p.isExternalLink ? (\n                            <DSLink key={p.displayName} className={bem.element('link-wrapper')} href={p.route}>\n                                {erNavHomeLink && <Home width=\"24\" height=\"24\" style={{ marginRight: '0.5rem' }} />}\n                                <BodyShort>{p.displayName}</BodyShort>\n                            </DSLink>\n                        ) : (\n                            <Link\n                                key={p.displayName}\n                                className={bem.element('link-wrapper')}\n                                to={getRoute(p.route, saksnummer, oppgaveId)}\n                            >\n                                <BodyShort>{p.displayName}</BodyShort>\n                            </Link>\n                        )}\n                        {!lastBreadcrumb && <ChevronRightIcon className={bem.element('chevron')} />}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Breadcrumb;\n","import { BodyShort, Heading } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport { useGetSelectedRoute } from 'app/hooks/useSelectedRoute';\nimport { useGetSelectedSak } from 'app/hooks/useSelectedSak';\nimport OversiktRoutes from 'app/routes/routes';\nimport { BarnGruppering } from 'app/types/BarnGruppering';\nimport { GruppertSak } from 'app/types/GruppertSak';\nimport { Sak } from 'app/types/Sak';\nimport { Ytelse } from 'app/types/Ytelse';\nimport { ISOStringToDate } from 'app/utils/dateUtils';\nimport { getFamiliehendelseDato, getSakTittel, utledFamiliesituasjon } from 'app/utils/sakerUtils';\nimport TåteflaskeBaby from 'assets/TåteflaskeBaby';\nimport classNames from 'classnames';\n\nimport { IntlShape, useIntl } from 'react-intl';\nimport Breadcrumb from '../breadcrumb/Breadcrumb';\nimport StatusTag from '../status-tag/StatusTag';\n\nimport './header.css';\n\nconst getSaksoversiktHeading = (ytelse: Ytelse) => {\n    if (ytelse === Ytelse.ENGANGSSTØNAD) {\n        return 'Engangsstønadsak';\n    }\n\n    if (ytelse === Ytelse.SVANGERSKAPSPENGER) {\n        return 'Svangerskapspengesak';\n    }\n\n    return 'Din sak';\n};\n\nconst renderHeaderContent = (\n    selectedRoute: OversiktRoutes,\n    sak: Sak | undefined,\n    barn: BarnGruppering | undefined,\n    intl: IntlShape,\n) => {\n    const bem = bemUtils('header');\n\n    if (selectedRoute === OversiktRoutes.TIDSLINJEN) {\n        return (\n            <div className={bem.element('content-fixed')}>\n                <div>\n                    <Heading size=\"large\">Hele prosessen</Heading>\n                    <div className={bem.element('text-with-bar')}>\n                        <BodyShort>{`SAKSNR ${sak?.saksnummer}`}</BodyShort>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    if (selectedRoute === OversiktRoutes.DOKUMENTER) {\n        return (\n            <div className={bem.element('content')}>\n                <div>\n                    <Heading size=\"large\">Dokumenter</Heading>\n                    <div className={bem.element('text-with-bar')}>\n                        <BodyShort>{`SAKSNR ${sak?.saksnummer}`}</BodyShort>\n                        <div className={bem.element('divider')}>|</div>\n                        <BodyShort className={bem.element('divider-text')}>\n                            Liste over dokumenter som tilhører saken\n                        </BodyShort>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    if (selectedRoute === OversiktRoutes.ETTERSEND) {\n        return (\n            <div className={bem.element('content')}>\n                <div>\n                    <Heading size=\"large\">Last opp dokumenter</Heading>\n                    <div className={bem.element('text-with-bar')}>\n                        <BodyShort>{`SAKSNR ${sak?.saksnummer}`}</BodyShort>\n                        <div className={bem.element('divider')}>|</div>\n                        <BodyShort className={bem.element('divider-text')}>\n                            Ettersend dokumenter som tilhører saken\n                        </BodyShort>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    if (selectedRoute === OversiktRoutes.SAKSOVERSIKT && sak) {\n        if (!sak.familiehendelse) {\n            return (\n                <div className={bem.element('content')}>\n                    <div className={bem.element('baby-ikonBox')}>\n                        <TåteflaskeBaby />\n                    </div>\n                    <div className={bem.element('title-with-status-saksnr')}>\n                        <Heading size=\"large\">{getSaksoversiktHeading(sak.ytelse)}</Heading>\n\n                        <StatusTag sak={sak} className={bem.element('tag')} />\n\n                        <div className={bem.element('text-with-bar')}>\n                            <BodyShort>{`SAKSNR ${sak?.saksnummer}`}</BodyShort>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const situasjon = utledFamiliesituasjon(sak.familiehendelse, sak.gjelderAdopsjon);\n        const familiehendelsedato = ISOStringToDate(getFamiliehendelseDato(sak.familiehendelse));\n        const barnTittel = getSakTittel(\n            barn?.fornavn,\n            barn?.fødselsdatoer,\n            familiehendelsedato!,\n            !!barn?.alleBarnaLever,\n            sak.ytelse === Ytelse.FORELDREPENGER ? sak.familiehendelse.antallBarn : 0,\n            intl,\n            situasjon,\n        );\n\n        return (\n            <div className={bem.element('content')}>\n                <div className={bem.element('baby-ikonBox')}>\n                    <TåteflaskeBaby />\n                </div>\n                <div className={bem.element('content-detaljer')}>\n                    <div className={bem.element('title-with-status-saksnr')}>\n                        <Heading size=\"large\">{getSaksoversiktHeading(sak.ytelse)}</Heading>\n                        <StatusTag sak={sak} className={bem.element('tag')} />\n                    </div>\n                    <div className={bem.element('text-with-bar')}>\n                        <BodyShort>{`SAKSNR ${sak?.saksnummer}`}</BodyShort>\n                        <hr className={classNames(bem.element('divider'))}></hr>\n                        <BodyShort className={bem.element('divider-text')}>{barnTittel}</BodyShort>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className={bem.element('content')}>\n            <div className={bem.element('baby-ikonBox')}>\n                <TåteflaskeBaby />\n            </div>\n            <div className={bem.element('title-container')}>\n                <Heading size=\"large\">Oversikt over foreldrepenger</Heading>\n                <div className={bem.element('text-with-bar')}>\n                    <BodyShort>PENGESTØTTE</BodyShort>\n                </div>\n            </div>\n        </div>\n    );\n};\n\ninterface Props {\n    grupperteSaker: GruppertSak[];\n    oppgaverIds: string[];\n}\n\nconst Header: React.FunctionComponent<Props> = ({ grupperteSaker, oppgaverIds }) => {\n    const bem = bemUtils('header');\n    const intl = useIntl();\n    const selectedRoute = useGetSelectedRoute();\n    const sak = useGetSelectedSak();\n    const sakIGrupperteSaker = sak\n        ? grupperteSaker.find((gruppe) => gruppe.saker.map((s) => s.saksnummer).includes(sak.saksnummer))\n        : undefined;\n    const barnGrupperingForSak = sakIGrupperteSaker?.barn;\n    const path = location.pathname;\n    const currentOppgaveId = oppgaverIds.find((id) => path.includes(id));\n    return (\n        <div className={bem.block}>\n            <Breadcrumb selectedRoute={selectedRoute} oppgaveId={currentOppgaveId} />\n            <div className={bem.element('wrapper')}>\n                {renderHeaderContent(selectedRoute, sak, barnGrupperingForSak, intl)}\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","export enum DokumentType {\n    'INNGÅENDE_DOKUMENT' = 'INNGÅENDE_DOKUMENT',\n    'UTGÅENDE_DOKUMENT' = 'UTGÅENDE_DOKUMENT',\n    'ARBEIDSGIVER' = 'ARBEIDSGIVER',\n}\n","import { BodyShort } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport { DokumentType } from 'app/types/DokumentType';\n\nimport './dokument-avsender.css';\n\ninterface Props {\n    type: DokumentType;\n}\n\nconst getAvsender = (type: DokumentType) => {\n    if (type === DokumentType.INNGÅENDE_DOKUMENT) {\n        return 'Du';\n    }\n\n    if (type === DokumentType.UTGÅENDE_DOKUMENT) {\n        return 'NAV';\n    }\n\n    return 'Arbeidsgiver';\n};\n\nconst DokumentAvsender: React.FunctionComponent<Props> = ({ type }) => {\n    const bem = bemUtils('dokument-avsender');\n\n    return (\n        <div className={bem.block}>\n            <BodyShort className={bem.element('text')}>{getAvsender(type)}</BodyShort>\n        </div>\n    );\n};\n\nexport default DokumentAvsender;\n","import { BodyShort, Link } from '@navikt/ds-react';\n\nimport { FileContent } from '@navikt/ds-icons';\nimport { bemUtils, formatDateExtended } from '@navikt/fp-common';\nimport { Dokument as DokumentType } from 'app/types/Dokument';\nimport DokumentAvsender from 'app/components/dokument-avsender/DokumentAvsender';\nimport { lagUrl } from 'app/utils/dokumenterUtils';\n\nimport './dokument.css';\n\ninterface Props {\n    dokument: DokumentType;\n}\n\nconst Dokument: React.FunctionComponent<Props> = ({ dokument }) => {\n    const bem = bemUtils('dokument');\n    const { tittel, type, mottatt } = dokument;\n    const url = lagUrl(dokument);\n\n    return (\n        <div className={bem.block}>\n            <div className={bem.element('content')}>\n                <FileContent className={bem.element('ikon')} />\n                <div className={bem.element('link-icon')}>\n                    <Link href={url} target=\"_blank\">\n                        {tittel}\n                    </Link>\n                </div>\n                <BodyShort>{formatDateExtended(mottatt)}</BodyShort>\n                <DokumentAvsender type={type} />\n            </div>\n        </div>\n    );\n};\n\nexport default Dokument;\n","import { Dokument as DokumentType } from 'app/types/Dokument';\nimport Dokument from '../dokument/Dokument';\nimport { bemUtils, guid } from '@navikt/fp-common';\nimport { Accordion, BodyShort } from '@navikt/ds-react';\n\nimport './grupperte-dokumenter.css';\nimport { Folder } from '@navikt/ds-icons';\n\ninterface Props {\n    dokumenter: DokumentType[];\n}\n\nconst GrupperteDokumenter: React.FunctionComponent<Props> = ({ dokumenter }) => {\n    const bem = bemUtils('grupperte-dokumenter');\n\n    return (\n        <Accordion className={bem.block}>\n            <Accordion.Item className={bem.element('item')}>\n                <Accordion.Header className={bem.element('header')}>\n                    <span className={bem.element('header-content')}>\n                        <Folder className={bem.element('ikon')} />\n                        <BodyShort>{dokumenter.length} dokumenter</BodyShort>\n                    </span>\n                </Accordion.Header>\n                <Accordion.Content className={bem.element('content')}>\n                    {dokumenter.map((dokument) => {\n                        return <Dokument key={guid()} dokument={dokument} />;\n                    })}\n                </Accordion.Content>\n            </Accordion.Item>\n        </Accordion>\n    );\n};\n\nexport default GrupperteDokumenter;\n","import { Alert, BodyLong, Heading, LinkPanel, Loader } from '@navikt/ds-react';\nimport { bemUtils, guid } from '@navikt/fp-common';\nimport Api from 'app/api/api';\nimport Dokument from 'app/components/dokument/Dokument';\n\nimport { grupperDokumenterPåTidspunkt } from 'app/utils/dokumenterUtils';\nimport GrupperteDokumenter from 'app/components/grupperte-dokumenter/GrupperteDokumenter';\nimport { useParams, Link } from 'react-router-dom';\nimport OversiktRoutes from 'app/routes/routes';\nimport { useSetBackgroundColor } from 'app/hooks/useBackgroundColor';\nimport { useSetSelectedRoute } from 'app/hooks/useSelectedRoute';\nimport NoeGikkGalt from 'app/components/noe-gikk-galt/NoeGikkGalt';\nimport { RequestStatus } from 'app/types/RequestStatus';\n\nimport './dokumenter-page.css';\n\nconst DokumenterPage: React.FunctionComponent = () => {\n    const bem = bemUtils('dokumenter-page');\n    useSetBackgroundColor('blue');\n    useSetSelectedRoute(OversiktRoutes.DOKUMENTER);\n    const params = useParams();\n\n    const { dokumenterData, dokumenterError, dokumenterStatus } = Api.useGetDokumenter(params.saksnummer!);\n\n    if (!dokumenterData && dokumenterStatus !== RequestStatus.FINISHED) {\n        return <Loader size=\"large\" aria-label=\"Henter dokumenter\" />;\n    }\n\n    const dokumenterGruppertPåTidspunkt = grupperDokumenterPåTidspunkt(dokumenterData || []);\n\n    return (\n        <>\n            <LinkPanel\n                as={Link}\n                to={`../${OversiktRoutes.ETTERSEND}`}\n                border={false}\n                className={bem.element('ettersend')}\n            >\n                <LinkPanel.Title as=\"h2\">Last opp dokumenter</LinkPanel.Title>\n            </LinkPanel>\n            {!dokumenterError && (\n                <>\n                    <div className={bem.element('dokumenter-liste')}>\n                        {Object.entries(dokumenterGruppertPåTidspunkt).map((dokument) => {\n                            const dokumenter = dokument[1];\n\n                            if (dokumenter.length === 1) {\n                                return <Dokument key={guid()} dokument={dokumenter[0]} />;\n                            } else {\n                                return <GrupperteDokumenter key={guid()} dokumenter={dokumenter} />;\n                            }\n                        })}\n                    </div>\n                    <Alert variant=\"info\" className={bem.element('ikke-alle-dokumenter')}>\n                        <Heading level=\"3\" size=\"small\">\n                            Er det noen dokumenter du savner?\n                        </Heading>\n                        <BodyLong>\n                            Vi har foreløpig ikke mulighet til å vise papirer du har sendt til NAV i posten, eller\n                            dokumenter som gjelder saken din, men som er sendt av andre på vegne av deg. Det kan for\n                            eksempel være en lege, advokat, verge eller fullmektig.\n                        </BodyLong>\n                    </Alert>\n                </>\n            )}\n            {dokumenterError && (\n                <div style={{ marginBottom: '2rem' }}>\n                    <NoeGikkGalt>\n                        Vi har problemer med å vise informasjon om dine dokumenter akkurat nå. Feilen er hos oss, ikke\n                        hos deg. Prøv igjen senere.\n                    </NoeGikkGalt>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default DokumenterPage;\n","import { useState } from 'react';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport { MinidialogInnslag } from 'app/types/MinidialogInnslag';\nimport MinidialogSkjema from 'app/components/minidialog-skjema/MinidialogSkjema';\nimport { SakOppslag } from 'app/types/SakOppslag';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport OversiktRoutes from 'app/routes/routes';\nimport { getAlleYtelser } from 'app/utils/sakerUtils';\nimport EttersendingDto from 'app/types/EttersendingDTO';\nimport { useIntl } from 'react-intl';\nimport ContentSection from 'app/components/content-section/ContentSection';\nimport Api from 'app/api/api';\nimport { Heading } from '@navikt/ds-react';\nimport { useSetBackgroundColor } from 'app/hooks/useBackgroundColor';\nimport { useSetSelectedRoute } from 'app/hooks/useSelectedRoute';\n\ninterface Props {\n    fnr: string;\n    minidialoger: MinidialogInnslag[] | undefined;\n    saker: SakOppslag;\n}\n\nconst MinidialogPage: React.FunctionComponent<Props> = ({ fnr, minidialoger, saker }) => {\n    const params = useParams();\n    const navigate = useNavigate();\n    useSetSelectedRoute(OversiktRoutes.OPPGAVER);\n    const alleSaker = getAlleYtelser(saker);\n    const sak = alleSaker.find((s) => s.saksnummer === params.saksnummer);\n    const minidialog = minidialoger ? minidialoger.find((d) => d.saksnr === params.saksnummer) : undefined;\n    const [isSendingEttersendelse, setIsSendingEttersendelse] = useState(false);\n    const [ettersendelseErSendt, setEttersendelseErSendt] = useState(false);\n    const [ettersendelseError, setEttersendelseError] = useState<string | undefined>(undefined);\n    useSetBackgroundColor('blue');\n    const intl = useIntl();\n\n    const sendEttersendelse = (ettersendelse: EttersendingDto) => {\n        setIsSendingEttersendelse(true);\n        Api.sendEttersending(ettersendelse, fnr)\n            .then(() => {\n                setIsSendingEttersendelse(false);\n                setEttersendelseErSendt(true);\n            })\n            .catch((_error) => {\n                setIsSendingEttersendelse(false);\n                setEttersendelseError(\n                    'Vi klarte ikke å sende inn informasjonen din. Prøv igjen senere og hvis problemet vedvarer kontakt brukerstøtte.',\n                );\n            });\n    };\n\n    if (!minidialog || !sak) {\n        navigate(`${OversiktRoutes.SAKSOVERSIKT}/${params.saksnummer}`);\n        return null;\n    }\n\n    const sakstype = sak ? sak.ytelse : undefined;\n\n    return (\n        <ContentSection>\n            <Block padBottom=\"xl\">\n                <Heading size=\"medium\" level=\"2\">\n                    {intlUtils(intl, 'miniDialog.tilbakekreving.undertittel')}\n                </Heading>\n            </Block>\n            <MinidialogSkjema\n                sakstype={sakstype!}\n                minidialog={minidialog}\n                onSubmit={sendEttersendelse}\n                isSendingEttersendelse={isSendingEttersendelse}\n                ettersendelseErSendt={ettersendelseErSendt}\n                ettersendelseError={ettersendelseError}\n            />\n        </ContentSection>\n    );\n};\n\nexport default MinidialogPage;\n","import { bemUtils, intlUtils } from '@navikt/fp-common';\n\nimport './snarveier.css';\nimport { useIntl } from 'react-intl';\nimport { Heading, LinkPanel } from '@navikt/ds-react';\nimport { NavRoutes } from 'app/routes/routes';\nimport { SakOppslag } from 'app/types/SakOppslag';\nimport { getAlleYtelser } from 'app/utils/sakerUtils';\nimport { Ytelse } from 'app/types/Ytelse';\n\nconst getLesMerLink = (stønadstype: Ytelse | undefined) => {\n    if (stønadstype === Ytelse.FORELDREPENGER) {\n        return NavRoutes.LES_MER_OM_FORELDREPENGER;\n    }\n    if (stønadstype === Ytelse.SVANGERSKAPSPENGER) {\n        return NavRoutes.LES_MER_OM_SVANGERSKAPSPENGER;\n    }\n    if (stønadstype === Ytelse.ENGANGSSTØNAD) {\n        return NavRoutes.LES_MER_OM_ENGANGSTØNAD;\n    }\n    return NavRoutes.LES_MER_OM_VÅRE_PENGESTØTTER;\n};\n\ninterface Props {\n    saker: SakOppslag;\n}\n\nconst getKlageLink = (ytelse: Ytelse | undefined) => {\n    if (ytelse === Ytelse.ENGANGSSTØNAD) {\n        return NavRoutes.KLAGERETTIGHETER_ES;\n    }\n\n    if (ytelse === Ytelse.SVANGERSKAPSPENGER) {\n        return NavRoutes.KLAGERETTIGHETER_SVP;\n    }\n\n    if (ytelse === Ytelse.FORELDREPENGER) {\n        return NavRoutes.KLAGERETTIGHETER_FP;\n    }\n\n    return NavRoutes.KLAGERETTIGHETER;\n};\n\nconst getSaksbehandlingstidLink = (ytelse: Ytelse | undefined) => {\n    if (ytelse === Ytelse.ENGANGSSTØNAD) {\n        return NavRoutes.SAKSBEHANDLINGSTIDER_ES;\n    }\n\n    if (ytelse === Ytelse.SVANGERSKAPSPENGER) {\n        return NavRoutes.SAKSBEHANDLINGSTIDER_SVP;\n    }\n\n    if (ytelse === Ytelse.FORELDREPENGER) {\n        return NavRoutes.SAKSBEHANDLINGSTIDER_FP;\n    }\n\n    return NavRoutes.SAKSBEHANDLINGSTIDER;\n};\n\nconst Snarveier: React.FunctionComponent<Props> = ({ saker }) => {\n    const bem = bemUtils('snarveier');\n    const intl = useIntl();\n    const path = location.pathname;\n    const alleSaker = getAlleYtelser(saker);\n    const currentSak = alleSaker.find((sak) => path.includes(sak.saksnummer));\n    const ytelse = currentSak ? currentSak.ytelse : undefined;\n    const ytelseTekst = currentSak !== undefined ? currentSak.ytelse : intlUtils(intl, 'snarveier.pengestøtter');\n    const lesMerLink = getLesMerLink(ytelse);\n    return (\n        <div className={bem.block}>\n            <div className={bem.element('wrapper')}>\n                <div className={bem.element('title')}>\n                    <Heading size=\"medium\">{intlUtils(intl, 'saksoversikt.snarveier')}</Heading>\n                </div>\n                <div className={bem.element('content')}>\n                    <LinkPanel href={lesMerLink} border={false} className={bem.element('linkPanel')}>\n                        <LinkPanel.Title className={bem.element('linkTitle')}>\n                            <div>{intlUtils(intl, 'snarveier.lesMerOm', { ytelse: ytelseTekst })}</div>\n                        </LinkPanel.Title>\n                    </LinkPanel>\n                    <LinkPanel\n                        href={getSaksbehandlingstidLink(ytelse)}\n                        border={false}\n                        className={bem.element('linkPanel')}\n                    >\n                        <LinkPanel.Title className={bem.element('linkTitle')}>\n                            <div>{intlUtils(intl, 'snarveier.saksbehandlingstider')}</div>\n                        </LinkPanel.Title>\n                    </LinkPanel>\n                    <LinkPanel\n                        href={NavRoutes.MELD_FRA_OM_ENDRINGER}\n                        border={false}\n                        className={bem.element('linkPanel')}\n                    >\n                        <LinkPanel.Title className={bem.element('linkTitle')}>\n                            <div>{intlUtils(intl, 'snarveier.endringerIDinSituasjon')}</div>\n                        </LinkPanel.Title>\n                    </LinkPanel>\n                    <LinkPanel href={getKlageLink(ytelse)} border={false} className={bem.element('linkPanel')}>\n                        <LinkPanel.Title className={bem.element('linkTitle')}>\n                            <div>{intlUtils(intl, 'snarveier.slikKlagerDu')}</div>\n                        </LinkPanel.Title>\n                    </LinkPanel>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Snarveier;\n","import { NavRoutes } from 'app/routes/routes';\nimport { bemUtils, intlUtils } from '@navikt/fp-common';\nimport './kontaktOss.css';\nimport { BodyShort, Heading, Link } from '@navikt/ds-react';\nimport { useIntl } from 'react-intl';\nimport { Dialog, Send, Telephone } from '@navikt/ds-icons';\n\nconst KontaktOss: React.FunctionComponent = () => {\n    const bem = bemUtils('kontaktOss');\n    const intl = useIntl();\n\n    return (\n        <div className={bem.block}>\n            <div className={bem.element('wrapper')}>\n                <div className={bem.element('title')}>\n                    <Heading size=\"medium\">{intlUtils(intl, 'saksoversikt.kontaktOss')}</Heading>\n                </div>\n                <div className={bem.element('content')}>\n                    <div className={bem.element('content_left')}>\n                        <Link href={NavRoutes.CHAT_MED_OSS} className={bem.element('link')}>\n                            <Dialog className={bem.element('linkIcon')}></Dialog>\n                            <BodyShort className={bem.element('linkTitle')}>\n                                {intlUtils(intl, 'kontaktOss.chatMedOss')}\n                            </BodyShort>\n                        </Link>\n                        <BodyShort size=\"medium\"> {intlUtils(intl, 'kontaktOss.informasjonOmChat')}</BodyShort>\n                    </div>\n                    <div className={bem.element('content_middle')}>\n                        <Link href={NavRoutes.SKRIV_TIL_OSS} className={bem.element('link')}>\n                            <Send className={bem.element('linkIcon')}></Send>\n                            <BodyShort className={bem.element('linkTitle')}>\n                                {intlUtils(intl, 'kontaktOss.skrivTilOss')}\n                            </BodyShort>\n                        </Link>\n                        <BodyShort size=\"medium\">{intlUtils(intl, 'kontaktOss.skrivTilOss.del1')}</BodyShort>\n                        <BodyShort size=\"medium\" className={bem.element('content_text')}>\n                            {intlUtils(intl, 'kontaktOss.skrivTilOss.del2')}\n                        </BodyShort>\n                    </div>\n                    <div className={bem.element('content_right')}>\n                        <Link href={NavRoutes.RING_OSS} className={bem.element('link')}>\n                            <Telephone className={bem.element('linkIcon')}></Telephone>\n                            <BodyShort className={bem.element('linkTitle')}>\n                                {intlUtils(intl, 'kontaktOss.ringOss')}\n                            </BodyShort>\n                        </Link>\n                        <BodyShort size=\"medium\">{intlUtils(intl, 'kontaktOss.ringOss.åpningstider')}</BodyShort>\n                        <Link href={NavRoutes.SE_FLERE_TLF_NR_OG_TASTEVALG}>\n                            <BodyShort size=\"medium\" className={bem.element('content_text')}>\n                                {intlUtils(intl, 'kontaktOss.ringOss.flereTelefonnummere')}\n                            </BodyShort>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default KontaktOss;\n","import OversiktRoutes from 'app/routes/routes';\nimport { useSetBackgroundColor } from 'app/hooks/useBackgroundColor';\nimport { useSetSelectedRoute } from 'app/hooks/useSelectedRoute';\n\nimport Tidslinje from 'app/sections/tidslinje/Tidslinje';\nimport './tidslinje-page.css';\nimport { bemUtils } from '@navikt/fp-common';\nimport { SøkerinfoDTOBarn } from 'app/types/SøkerinfoDTO';\nimport { SakOppslag } from 'app/types/SakOppslag';\nimport Api from 'app/api/api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '@navikt/ds-react';\ninterface Props {\n    søkersBarn: SøkerinfoDTOBarn[] | undefined;\n    saker: SakOppslag;\n}\n\nconst TidslinjePage: React.FunctionComponent<Props> = ({ søkersBarn, saker }) => {\n    const bem = bemUtils('tidslinje-page');\n    useSetBackgroundColor('white');\n    useSetSelectedRoute(OversiktRoutes.TIDSLINJEN);\n    const params = useParams();\n\n    const { tidslinjeHendelserData, tidslinjeHendelserError } = Api.useGetTidslinjeHendelser(params.saksnummer!);\n    const { manglendeVedleggData, manglendeVedleggError } = Api.useGetManglendeVedlegg(params.saksnummer!);\n\n    if (!tidslinjeHendelserData || !manglendeVedleggData) {\n        return <Loader size=\"large\" aria-label=\"Henter status for din søknad\" />;\n    }\n\n    return (\n        <div className={bem.element('div')}>\n            <Tidslinje\n                saker={saker}\n                visHeleTidslinjen={true}\n                søkersBarn={søkersBarn}\n                tidslinjeHendelserData={tidslinjeHendelserData}\n                tidslinjeHendelserError={tidslinjeHendelserError}\n                manglendeVedleggData={manglendeVedleggData}\n                manglendeVedleggError={manglendeVedleggError}\n            />\n        </div>\n    );\n};\n\nexport default TidslinjePage;\n","import { useEffect, useRef } from 'react';\nimport OversiktRoutes from './routes';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport Saksoversikt from 'app/pages/saksoversikt/Saksoversikt';\nimport { bemUtils } from '@navikt/fp-common';\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { default as SakComponent } from 'app/pages/Sak';\nimport DinPlanPage from 'app/pages/din-plan-page/DinPlanPage';\nimport Forside from 'app/pages/forside/Forside';\nimport Header from 'app/components/header/Header';\nimport DokumenterPage from 'app/pages/dokumenter-page/DokumenterPage';\nimport { SakOppslag } from 'app/types/SakOppslag';\n\nimport './routes-wrapper.css';\nimport { getAlleYtelser, getAntallSaker, grupperSakerPåBarn } from 'app/utils/sakerUtils';\nimport MinidialogPage from 'app/pages/minidialog-page/MinidialogPage';\nimport { MinidialogInnslag } from 'app/types/MinidialogInnslag';\nimport { AxiosError } from 'axios';\nimport EttersendingPage from 'app/pages/ettersending/EttersendingPage';\nimport Snarveier from 'app/components/snarveier/Snarveier';\nimport KontaktOss from 'app/sections/kontakt-oss/KontaktOss';\nimport TidslinjePage from 'app/pages/tidslinje-page/TidslinjePage';\n\ninterface Props {\n    minidialogerData: MinidialogInnslag[] | undefined;\n    minidialogerError: AxiosError | null;\n    saker: SakOppslag;\n    søkerinfo: SøkerinfoDTO;\n    oppdatertData: boolean;\n    storageData: any;\n}\n\nconst ForeldrepengeoversiktRoutes: React.FunctionComponent<Props> = ({\n    søkerinfo,\n    saker,\n    minidialogerData,\n    minidialogerError,\n    oppdatertData,\n    storageData,\n}) => {\n    const bem = bemUtils('routesWrapper');\n    const isFirstRender = useRef(true);\n    const hasNavigated = useRef(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!hasNavigated.current) {\n            hasNavigated.current = true;\n            const antallSaker = getAntallSaker(saker);\n            const { foreldrepenger, engangsstønad, svangerskapspenger } = saker;\n\n            if (antallSaker === 1) {\n                if (foreldrepenger.length === 1) {\n                    navigate(`${OversiktRoutes.SAKSOVERSIKT}/${foreldrepenger[0].saksnummer}`);\n                }\n\n                if (engangsstønad.length === 1) {\n                    navigate(`${OversiktRoutes.SAKSOVERSIKT}/${engangsstønad[0].saksnummer}`);\n                }\n\n                if (svangerskapspenger.length === 1) {\n                    navigate(`${OversiktRoutes.SAKSOVERSIKT}/${svangerskapspenger[0].saksnummer}`);\n                }\n            }\n        }\n    }, [navigate, saker]);\n\n    const oppgaverIds = minidialogerData ? minidialogerData.map((oppgave) => oppgave.dialogId) : [];\n    const grupperteSaker = grupperSakerPåBarn(søkerinfo.søker.barn, saker);\n    const alleYtelser = getAlleYtelser(saker);\n    // Super spesifikt case for avslåtte papirsøknad for svangerskapspenger. Bør fjernes\n    const avslåttSvangerskapspengesak =\n        grupperteSaker.length === 0 && alleYtelser.length === 1 && saker.svangerskapspenger.length === 1\n            ? saker.svangerskapspenger[0]\n            : undefined;\n\n    return (\n        <>\n            <Header grupperteSaker={grupperteSaker} oppgaverIds={oppgaverIds} />\n            <div className={bem.block}>\n                <Routes>\n                    <Route\n                        path={`${OversiktRoutes.HOVEDSIDE}${'/:redirect?'}`}\n                        element={\n                            <Forside\n                                alleYtelser={alleYtelser}\n                                grupperteSaker={grupperteSaker}\n                                avslåttSvangerskapspengesak={avslåttSvangerskapspengesak}\n                                oppdatertData={oppdatertData}\n                                storageData={storageData}\n                                isFirstRender={isFirstRender}\n                            />\n                        }\n                    />\n                    <Route path={`${OversiktRoutes.SAKSOVERSIKT}/:saksnummer/:redirect?`} element={<SakComponent />}>\n                        <Route\n                            index\n                            element={\n                                <Saksoversikt\n                                    minidialogerData={minidialogerData}\n                                    minidialogerError={minidialogerError}\n                                    saker={saker}\n                                    søkerinfo={søkerinfo}\n                                    oppdatertData={oppdatertData}\n                                    isFirstRender={isFirstRender}\n                                />\n                            }\n                        />\n                        <Route\n                            path={OversiktRoutes.DIN_PLAN}\n                            element={<DinPlanPage navnPåSøker={søkerinfo.søker.fornavn} søkerinfo={søkerinfo} />}\n                        />\n                        <Route path={OversiktRoutes.DOKUMENTER} element={<DokumenterPage />} />\n                        <Route\n                            path={OversiktRoutes.TIDSLINJEN}\n                            element={<TidslinjePage saker={saker} søkersBarn={søkerinfo.søker.barn} />}\n                        />\n                        <Route\n                            path={`${OversiktRoutes.OPPGAVER}/:oppgaveId`}\n                            element={\n                                <MinidialogPage\n                                    minidialoger={minidialogerData}\n                                    saker={saker}\n                                    fnr={søkerinfo.søker.fnr}\n                                />\n                            }\n                        />\n                        <Route path={OversiktRoutes.ETTERSEND} element={<EttersendingPage saker={saker} />} />\n                    </Route>\n                    <Route path=\"*\" element={<Navigate to={OversiktRoutes.HOVEDSIDE} />} />\n                </Routes>\n            </div>\n            <Snarveier saker={saker} />\n            <KontaktOss />\n        </>\n    );\n};\n\nexport default ForeldrepengeoversiktRoutes;\n","import { Loader } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\nimport classNames from 'classnames';\nimport { useEffect, useMemo } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Api from './api/api';\nimport ScrollToTop from './components/scroll-to-top/ScrollToTop';\nimport { useGetBackgroundColor } from './hooks/useBackgroundColor';\nimport ForeldrepengeoversiktRoutes from './routes/ForeldrepengeoversiktRoutes';\nimport { mapSakerDTOToSaker } from './utils/sakerUtils';\nimport { UseQueryResult, useQuery } from '@tanstack/react-query';\nimport Environment from './Environment';\nimport { MinidialogInnslag } from './types/MinidialogInnslag';\nimport { SakOppslag } from './types/SakOppslag';\n\nimport './styles/app.css';\n\nconst getSakerSuspended = (oppdatertQuery: UseQueryResult<boolean, unknown>) => {\n    if (oppdatertQuery.isLoading) {\n        return true;\n    }\n\n    return oppdatertQuery.data ? false : true;\n};\n\nconst Foreldrepengeoversikt: React.FunctionComponent = () => {\n    const bem = bemUtils('app');\n    const backgroundColor = useGetBackgroundColor();\n\n    const oppdatertQuery = useQuery<boolean>({\n        queryKey: ['oppdatert'],\n        queryFn: async () =>\n            await fetch(`${Environment.REST_API_URL}/innsyn/v2/saker/oppdatert`, { credentials: 'include' }).then(\n                (response) => response.json(),\n            ),\n        refetchInterval: (data) => {\n            if (data) {\n                return false;\n            }\n\n            return 15000;\n        },\n    });\n\n    const minidialogQuery = useQuery<MinidialogInnslag[]>({\n        queryKey: ['minidialog'],\n        queryFn: async () =>\n            await fetch(`${Environment.REST_API_URL}/minidialog`, { credentials: 'include' }).then((response) =>\n                response.json(),\n            ),\n    });\n\n    const sakerSuspended = getSakerSuspended(oppdatertQuery);\n\n    const { storageData } = Api.useGetMellomlagretSøknad();\n    const { søkerinfoData, søkerinfoError } = Api.useSøkerinfo();\n    const { sakerData, sakerError } = Api.useGetSaker(sakerSuspended);\n    const { minidialogError } = Api.useGetMinidialog();\n\n    useEffect(() => {\n        if (søkerinfoError) {\n            throw new Error(\n                'Vi klarte ikke å hente informasjon om deg. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.',\n            );\n        }\n\n        if (sakerError) {\n            throw new Error(\n                'Vi opplever problemer med å hente informasjon om din sak. Prøv igjen om noen minutter og hvis problemet vedvarer kontakt brukerstøtte.',\n            );\n        }\n    }, [søkerinfoError, sakerError]);\n\n    const saker = useMemo(() => {\n        if (sakerData) {\n            return mapSakerDTOToSaker(sakerData);\n        }\n\n        return undefined;\n    }, [sakerData]);\n\n    if (\n        !søkerinfoData ||\n        (!sakerData && !sakerSuspended) ||\n        (!saker && !sakerSuspended) ||\n        minidialogQuery.isLoading ||\n        oppdatertQuery.isLoading\n    ) {\n        return (\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n                <Loader type=\"XXL\" />\n            </div>\n        );\n    }\n\n    const defaultSaker: SakOppslag = {\n        engangsstønad: [],\n        foreldrepenger: [],\n        svangerskapspenger: [],\n    };\n\n    return (\n        <div\n            className={classNames(bem.block, backgroundColor === 'white' ? bem.element('white') : bem.element('blue'))}\n        >\n            <BrowserRouter>\n                <ScrollToTop />\n                <ForeldrepengeoversiktRoutes\n                    søkerinfo={søkerinfoData}\n                    saker={saker || defaultSaker}\n                    minidialogerData={minidialogQuery.data}\n                    minidialogerError={minidialogError}\n                    oppdatertData={oppdatertQuery.data === undefined ? true : oppdatertQuery.data}\n                    storageData={storageData}\n                />\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default Foreldrepengeoversikt;\n","import { FunctionComponent } from 'react';\nimport dayjs from 'dayjs';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { allCommonMessages } from '@navikt/fp-common';\nimport { IntlProvider } from '@navikt/fp-ui';\nimport ByttBrowserModal from './components/bytt-browser-modal/ByttBrowserModal';\nimport ErrorBoundary from './components/error-boundary/ErrorBoundary';\nimport Foreldrepengeoversikt from './Foreldrepengeoversikt';\nimport nbMessages from './intl/nb_NO.json';\n\nconst queryClient = new QueryClient();\n\nconst MESSAGES_GROUPED_BY_LOCALE = {\n    nb: { ...nbMessages, ...allCommonMessages.nb },\n};\n\ndayjs.locale('nb');\n\nconst AppContainer: FunctionComponent = () => {\n    return (\n        <ErrorBoundary>\n            <QueryClientProvider client={queryClient}>\n                <IntlProvider locale=\"nb\" messagesGroupedByLocale={MESSAGES_GROUPED_BY_LOCALE}>\n                    <ByttBrowserModal />\n                    <Foreldrepengeoversikt />\n                </IntlProvider>\n            </QueryClientProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default AppContainer;\n"],"names":["__rest","this","s","e","t","p","i","SvgDialog","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","Dialog","SvgDialogReport","DialogReport","SvgEdit","Edit","SvgExternalLink","ExternalLink","SvgFileContent","FileContent","SvgFolder","Folder","SvgHome","Home","SvgNext","Next","SvgSend","Send","SvgTelephone","Telephone","SvgWarning","Warning","__spreadArray","to","from","pack","l","ar","BrowserInfo","name","version","os","NodeInfo","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","getNodeVersion","matchUserAgent","ua","matched","browser","regex","uaMatch","matchedRule","match","versionParts","createVersionParts","detectOS","searchBotMatch","ii","count","isNode","output","shouldChangeBrowser","browserInfo","ByttBrowserModal","isOpen","toggleIsOpen","useState","intl","useIntl","cls","bemUtils","jsxs","Modal","intlUtils","jsx","Heading","FormattedMessage","BodyShort","Button","ErrorBoundary","Component","error","errorInfo","Sentry.withScope","scope","Sentry.captureException","backgroundColorAtom","atom","useGetBackgroundColor","useAtomValue","useSetBackgroundColor","color","setBackgroundColor","useSetAtom","useEffect","ContentSection","heading","children","backgroundColor","cornerStyle","padding","showSkeleton","marginBottom","skeletonProps","bem","Skeleton","classNames","SeDokumenter","LinkPanel","Link","OversiktRoutes","selectedSakAtom","useGetSelectedSak","useSetSelectedSak","sak","setSelectedSak","StønadskontoType","UtsettelseÅrsakType","capitalizeFirstLetter","countries.registerLocale","langNB","langNN","dayjs","isBetween","isSameOrBefore","isSameOrAfter","formatDate","date","DDMMYYYY_DATE_FORMAT","formatDateIso","ISO_DATE_FORMAT","formatTime","TIME_FORMAT","MorsAktivitet","PeriodeResultatÅrsak","isValidTidsperiode","tidsperiode","Tidsperioden","dato","inneholderTidsperiodeDato","tidsperiode2","erTidsperiodeOmsluttetAvTidsperiode","overlapperTidsperioder","tidsperiode1","t1","t2","getTidsperiode","periode","ISOStringToDate","isoWeek","utc","UTTAKSDAGER_PER_UKE","Uttaksdagen","erUttaksdag","getUttaksdagFørDato","getUttaksdagEtterDato","getUttaksdagFraOgMedDato","getUttaksdagTilOgMedDato","uttaksdager","trekkUttaksdagerFraDato","getUkedag","nyDato","dagteller","uttaksdageteller","tellerdato","Periodene","perioder","sorterPerioder","p1","p2","isUttaksperiode","isUtsettelsesperiode","isOverføringsperiode","isOppholdsperiode","isAvslåttPeriode","finnTidligerePerioder","tom","finnNåværendePerioder","fom","finnFremtidigePerioder","gyldigePerioderForVisning","erPlanVedtatt","filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode","index","likePerioder","periode2","index_periode2","innvilgedePerioder","periodeErInnvilget","getCleanedPlanForVisning","plan","filtrertPlan","isValidStillingsprosent","pst","prettifyProsent","nbr","getStønadskontoForelderNavn","konto","navnPåForeldre","periodeResultat","morsAktivitet","erFarEllerMedmor","erAleneOmOmsorg","navn","getNavnGenitivEierform","finnTekstForStønadskontoType","getUttaksprosentFromStillingsprosent","stillingsPst","samtidigUttakPst","prosent","finnTekstForUtsettelseÅrsak","utsettelseÅrsak","getPeriodeTittel","tittel","graderingsProsent","samtidigUttaksProsent","splittPeriodePåDatoer","alleDatoer","datoerIPerioden","datoWrapper","oppsplittetPeriode","guid","normaliserPerioder","søkersPerioder","annenPartsPerioder","perioderTidsperioder","res","annenPartsUttakTidsperioder","d1","d2","normaliserteEgnePerioder","normaliserteAnnenPartsPerioder","filtrerAnnenPartsUttakNårIkkeSamtidigUttak","søkerensPerioder","overlappendeSøkersPeriode","leggTilVisningsInfo","getPerioderForVisning","erAnnenPartsPeriode","getOverlappendePeriodeTittel","søkerensPeriode","overlappendePeriodeAnnenPart","erAnnenPartsPrematurePeriode","annenPartsPeriode","termindato","skalAnnenPartsPeriodeVises","RettighetType","UttaksplanColor","getStønadskontoFarge","IconBox","ArbeidIkon","rest","FerieIkon","SykdomIkon","UttakIkon","UttaksplanIkonKeys","UttaksplanIkonKeys2","UttaksplanIkon","ikon","StønadskontoIkon","gradert","getUtsettelseFarge","getIkonForÅrsak","årsak","UtsettelseIkon","PeriodeListeItem","fomDate","tomDate","antallDagerIPeriode","getAntallUttaksdagerITidsperiode","navnSøker","navnAnnenForelder","navnPeriodeEier","varighetString","getVarighetString","visStønadskontoIkon","visUtsettelsesIkon","måned3bokstaver","PeriodeListe","periodeListe","annenPartsOverlappendePerioder","Fragment","overlappendePeriodeAnnenPartForVisning","PeriodeOversikt","tidligerePerioder","nåværendePerioder","fremtidigePerioder","navnPåSøker","visHelePlanen","getNavnPåForeldre","Alert","RouterLink","slåSammenLikePerioder","forrigePeriode","nyPlan","erPerioderLike","erPerioderSammenhengende","p1NesteUttaksdato","p2Startdato","periodeA","periodeB","periodeFootprintA","getPeriodeFootprint","periodeFootprintB","sortedPeriode","a","b","key","DinPlan","vedtattUttaksplan","søktePerioder","erUttaksplanVedtatt","annenPartsPerioderForVisning","annenPartsPlan","søkersPlan","filtrerteAnnenPartsPerioder","annenPartsPlanUtenOverlapp","allePerioderForVisning","fremtidligePerioder","kunTidligerePerioderFinnes","tekstForVedtattPlan","BodyLong","NavRoutes","OppgaveLenkepanel","minidialogInnslag","Block","Oppgaver","minidialogerData","minidialogerError","minidialog","Loader","grupperDokumenterPåTidspunkt","dokumenter","gruppert","dokument","mottattTidspunkt","lagUrl","Environment","DokumentHendelse","visesITidslinjen","url","TidslinjehendelseType","AktørType","BehandlingTilstand","Tilretteleggingstype","VENTEÅRSAKER","getTidligstDatoForInntektsmelding","førsteUttaksdagISaken","getTidslinjetekstForAntallBarn","antallBarn","gjelderAdopsjon","getTidslinjeTittelForBarnTreÅr","barnFraSak","omsorgsovertakelse","barnNavnTekst","getNavnPåBarna","getTidslinjeTittelForAdopsjon","getTidslinjeTittelForFamiliehendelseForeldrepenger","familiehendelse","getTidslinjeTittelForFamiliehendelse","ytelse","Ytelse","finnTekstForTidslinjehendelse","hendelsetype","erOmsorgsovertakelse","getTidslinjehendelseTittel","tidlistBehandlingsdato","manglendeVedleggData","navnPåDokumentasjon","dokumentasjonLowerCase","getTidslinjeHendelstypeAvVenteårsak","venteårsak","getAktørtypeAvVenteårsak","getTidlinjeHendelseEksternUrl","getTidligstBehandlingsDatoForTidligSøknadFP","åpenBehandling","søknadsperioder","getTidligstBehandlingsDatoForTidligSøknadSVP","tilretteleggingerFomDatoer","datoFørstePeriodeMedSVP","getTidligstBehandlingsDatoForTidligSøknad","getDatoForInnsendingAvFørsteSøknad","tidslinjeHendelser","hendelseFørsteSøknad","hendelse","getTidslinjehendelserDetaljer","tidslinjeHendelserData","datoFørsteSøknad","formaterDato","getTidslinjeFamiliehendelse","familiehendelsedato","getFamiliehendelseDato","getTidslinjeBarnTreÅrHendelse","fødselsdato","merInformasjon","getTidslinjeVedtakHendelse","finnBehandlingstilstandInfoTekst","behandlingTilstand","finnBehandlingstilstandLikTittelTekst","finnInfoTekstForYtelse","getTidslinjehendelserFraBehandlingPåVent","hendelseVenterPåDokumentasjon","merInfo","tidslinjeHendelse","sorterTidslinjehendelser","h1","h2","getNesteHendelser","sorterteHendelser","getSisteHendelser","dateNow","sisteHendelser","getHendelserForVisning","visHeleTidslinjen","erAvslåttForeldrepengesøknad","hendelserForVisning","nesteHendelser","getAlleTidslinjehendelser","åpenBehandlingPåVent","venteHendelser","barn3ÅrHendelse","vedtakHendelse","getIkonClassElement","isActiveStep","opprettet","getTimelineClassModifier","getDateTekst","type","tidligstBehandlingsDato","tidligstDato","TidslinjeHendelse","visKlokkeslett","finnesHendelserFørAktivtSteg","tidTekst","formaterTid","dateTekst","RecordFillIcon","RecordIcon","Detail","NoeGikkGalt","Tidslinje","saker","søkersBarn","tidslinjeHendelserError","manglendeVedleggError","params","useParams","sakPath","getAlleYtelser","sak2","getFørsteUttaksdagIForeldrepengesaken","getBarnGrupperingFraSak","alleSorterteHendelser","aktivtStegIndex","alleDokumenter","skjemaId","ReadMore","LinkInternal","SeHeleProsessen","getTidspunktTekst","mottattDato","BekreftelseSendtSøknad","oppdatertData","tidslinjehendelser","søknadHendelser","relevantNyHendelse","dok","relevantDokument","sendtInfoTekst","HStack","CheckmarkIcon","VStack","isRedirectedFromSøknadAtom","RedirectSource","useGetIsRedirectedFromSøknad","useSetIsRedirectedFromSøknad","redirectParam","isFirstRender","setIsRedirectedFromSøknad","isRedirected","EMPTY_ARRAY","Saksoversikt","søkerinfo","navigate","useNavigate","useSetSelectedRoute","alleSaker","gjeldendeSak","redirectedFromSoknad","Api","planErVedtatt","familiehendelsesdato","annenPartFnr","barnFnr","annenPartVedtakIsSuspended","barn","annenPartsVedtakData","annenPartsVedtakError","annenPartsVedtakRequestStatus","getNavnAnnenForelder","aktiveMinidialogerForSaken","saksnr","RequestStatus","Sak","Outlet","DinPlanPage","HarIkkeSaker","EtBarn","ToBarn","TreBarn","StatusTag","className","Tag","getHeading","SakLink","getIkonForAntallBarn","HarSaker","grupperteSaker","gruppering","getSakTittel","_b","_c","Forside","alleYtelser","avslåttSvangerskapspengesak","storageData","TåteflaskeBaby","assertUnreachable","_x","errorMsg","nav","minSide","hovedside","saksoversikt","ettersend","tidslinjen","dinPlan","oppgaver","getBreadcrumbs","selectedRoute","getRoute","route","saksnummer","oppgaveId","sakRoute","hasValue","Breadcrumb","path","lastBreadcrumb","erNavHomeLink","DSLink","ChevronRightIcon","getSaksoversiktHeading","renderHeaderContent","situasjon","utledFamiliesituasjon","barnTittel","Header","oppgaverIds","useGetSelectedRoute","sakIGrupperteSaker","gruppe","barnGrupperingForSak","currentOppgaveId","id","DokumentType","getAvsender","DokumentAvsender","Dokument","mottatt","formatDateExtended","GrupperteDokumenter","Accordion","DokumenterPage","dokumenterData","dokumenterError","dokumenterStatus","dokumenterGruppertPåTidspunkt","MinidialogPage","fnr","minidialoger","d","isSendingEttersendelse","setIsSendingEttersendelse","ettersendelseErSendt","setEttersendelseErSendt","ettersendelseError","setEttersendelseError","sendEttersendelse","ettersendelse","_error","sakstype","MinidialogSkjema","getLesMerLink","stønadstype","getKlageLink","getSaksbehandlingstidLink","Snarveier","currentSak","ytelseTekst","lesMerLink","KontaktOss","TidslinjePage","ForeldrepengeoversiktRoutes","useRef","hasNavigated","antallSaker","getAntallSaker","foreldrepenger","engangsstønad","svangerskapspenger","oppgave","grupperSakerPåBarn","Routes","Route","SakComponent","EttersendingPage","Navigate","getSakerSuspended","oppdatertQuery","Foreldrepengeoversikt","useQuery","response","data","minidialogQuery","sakerSuspended","søkerinfoData","søkerinfoError","sakerData","sakerError","minidialogError","useMemo","mapSakerDTOToSaker","defaultSaker","BrowserRouter","ScrollToTop","queryClient","QueryClient","MESSAGES_GROUPED_BY_LOCALE","nbMessages","allCommonMessages","AppContainer","QueryClientProvider","IntlProvider","AppContainer$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}