{"version":3,"file":"Forside-e778b797.js","sources":["../../../../node_modules/.pnpm/@navikt+sif-common-question-config@0.0.7/node_modules/@navikt/sif-common-question-config/lib/index.js","../../src/app/pages/forside/forsideFormConfig.ts","../../src/app/pages/forside/forsideValidation.ts","../../src/app/utils/hooks/useOnValidSubmit.ts","../../src/app/pages/forside/Forside.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.questionValueIsOk = (value) => {\n    return value !== undefined && value !== '';\n};\nconst isQuestionVisible = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    if (config.isIncluded && config.isIncluded(payload) === false) {\n        return false;\n    }\n    if (config.visibilityFilter && config.visibilityFilter(payload) === false) {\n        return false;\n    }\n    if (config.parentQuestion !== undefined) {\n        const parentQuestion = questions[config.parentQuestion];\n        return isQuestionVisible(questions, config.parentQuestion, payload) && parentQuestion.isAnswered(payload);\n    }\n    return true;\n};\nconst isQuestionAnswered = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.isAnswered) {\n        return false;\n    }\n    return config.isAnswered(payload);\n};\nconst isQuestionIncluded = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    return config.isIncluded ? config.isIncluded(payload) : true;\n};\nconst areAllQuestionsAnswered = (questions, payload) => {\n    let allQuestionsHasAnswers = true;\n    Object.keys(questions).forEach((key) => {\n        const question = questions[key];\n        if (isQuestionVisible(questions, key, payload)) {\n            const isOptional = question.isOptional !== undefined ? question.isOptional(payload) === true : false;\n            allQuestionsHasAnswers = allQuestionsHasAnswers === true && (question.isAnswered(payload) || isOptional);\n        }\n    });\n    return allQuestionsHasAnswers;\n};\nconst getIncludedQuestions = (questions, payload) => {\n    const keys = Object.keys(questions).filter((key) => {\n        return isQuestionIncluded(questions, key, payload);\n    });\n    return keys;\n};\nconst validateQuestion = (value, questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.validate) {\n        return undefined;\n    }\n    return config.validate(payload);\n};\nexports.Questions = (questions) => ({\n    getVisbility: (payload) => ({\n        validate: (key) => (value) => validateQuestion(value, questions, key, payload),\n        isVisible: (key) => isQuestionVisible(questions, key, payload),\n        isAnswered: (key) => isQuestionAnswered(questions, key, payload),\n        isIncluded: (key) => isQuestionIncluded(questions, key, payload),\n        areAllQuestionsAnswered: () => areAllQuestionsAnswered(questions, payload),\n        getIncludedQuestions: () => getIncludedQuestions(questions, payload),\n    }),\n    getQuestionVisbilityInfo: (key, payload) => {\n        const info = {\n            validate: (value) => validateQuestion(value, questions, key, payload),\n            isVisible: () => isQuestionVisible(questions, key, payload),\n            isAnswered: () => isQuestionAnswered(questions, key, payload),\n        };\n        return info;\n    },\n});\n","import { Questions, QuestionConfig } from '@navikt/sif-common-question-config/lib';\nimport { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum ForsideFormField {\n    harForståttRettigheterOgPlikter = 'harForståttRettigheterOgPlikter',\n}\n\nexport interface ForsideFormData {\n    [ForsideFormField.harForståttRettigheterOgPlikter]: boolean;\n}\n\nexport const getInitialForsideValues = (harForståttRettigheterOgPlikter: boolean): ForsideFormData => ({\n    [ForsideFormField.harForståttRettigheterOgPlikter]: harForståttRettigheterOgPlikter,\n});\n\nexport const ForsideFormConfig: QuestionConfig<ForsideFormData, ForsideFormField> = {\n    [ForsideFormField.harForståttRettigheterOgPlikter]: {\n        isAnswered: ({ harForståttRettigheterOgPlikter }) => harForståttRettigheterOgPlikter === true,\n    },\n};\n\nexport const ForsideFormComponents = getTypedFormComponents<ForsideFormField, ForsideFormData, string>();\n\nexport const forsideFormQuestions = Questions<ForsideFormData, ForsideFormField>(ForsideFormConfig);\n","import { intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\n\nexport const validateHarForståttRettigheterOgPlikter = (intl: IntlShape) => (value: boolean) => {\n    if (value !== true) {\n        return intlUtils(intl, 'forside.valideringsfeil.harForståttRettigheterOgPlikter');\n    }\n\n    return undefined;\n};\n","import actionCreator, { SvangerskapspengerContextAction } from 'app/context/action/actionCreator';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport SøknadRoutes from 'app/routes/routes';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst useOnValidSubmit = <T>(submitHandler: (values: T) => SvangerskapspengerContextAction[], nextRoute: string) => {\n    const { dispatch, state } = useSvangerskapspengerContext();\n    const navigate = useNavigate();\n    const [harSubmitted, setSubmitted] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    useEffect(() => {\n        if (harSubmitted) {\n            setIsSubmitting(false);\n            navigate(state.currentRoute);\n        }\n    }, [harSubmitted, navigate, nextRoute, state]);\n\n    const handleSubmit = (values: T) => {\n        setIsSubmitting(true);\n        const actions = submitHandler(values);\n        const dispatchRouteChange =\n            nextRoute === SøknadRoutes.SØKNAD_SENDT ? undefined : dispatch(actionCreator.setCurrentRoute(nextRoute));\n        Promise.all([dispatchRouteChange, ...actions.map((a) => dispatch(a))]).then(() => setSubmitted(true));\n    };\n\n    return { handleSubmit, isSubmitting };\n};\n\nexport default useOnValidSubmit;\n","import { Alert, BodyShort, Button, GuidePanel, Heading } from '@navikt/ds-react';\nimport { Block, LanguageToggle, bemUtils, intlUtils } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    ForsideFormComponents,\n    ForsideFormData,\n    ForsideFormField,\n    forsideFormQuestions,\n    getInitialForsideValues,\n} from './forsideFormConfig';\nimport links from 'app/links/links';\nimport './forside.css';\nimport { validateHarForståttRettigheterOgPlikter } from './forsideValidation';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport actionCreator, { SvangerskapspengerContextAction } from 'app/context/action/actionCreator';\nimport SøknadRoutes from 'app/routes/routes';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { useEffect } from 'react';\nimport { LocaleNo } from '@navikt/fp-types';\n\nexport interface Props {\n    onChangeLocale: (locale: LocaleNo) => void;\n    locale: LocaleNo;\n}\n\nconst Forside: React.FunctionComponent<Props> = ({ locale, onChangeLocale }) => {\n    const intl = useIntl();\n    const bem = bemUtils('forside');\n    const { dispatch, state } = useSvangerskapspengerContext();\n\n    useEffect(() => {\n        if (state.søknad.søker.språkkode !== locale) {\n            dispatch(actionCreator.setSpråkkode(locale));\n        }\n    }, [dispatch, locale, state.søknad.søker.språkkode]);\n\n    const onValidSubmitHandler = (values: Partial<ForsideFormData>) => {\n        const actionsToDispatch: SvangerskapspengerContextAction[] = [\n            actionCreator.setHarGodkjentVilkår(values.harForståttRettigheterOgPlikter!),\n        ];\n        return actionsToDispatch;\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.BARNET);\n    return (\n        <ForsideFormComponents.FormikWrapper\n            initialValues={getInitialForsideValues(false)}\n            onSubmit={handleSubmit}\n            renderForm={({ values }) => {\n                const visibility = forsideFormQuestions.getVisbility({\n                    ...values,\n                } as ForsideFormData);\n                return (\n                    <ForsideFormComponents.Form includeButtons={false}>\n                        <Block padBottom=\"l\">\n                            <LanguageToggle\n                                locale={locale}\n                                availableLocales={['nb', 'nn']}\n                                toggle={(l: LocaleNo) => onChangeLocale(l)}\n                            />\n                        </Block>\n                        <div className={bem.block}>\n                            <Block>\n                                <Heading size=\"xlarge\" className={`${bem.element('tittel')}`}>\n                                    {intlUtils(intl, 'forside.tittel')}\n                                </Heading>\n                            </Block>\n                            <Block padBottom=\"xl\">\n                                <GuidePanel poster>\n                                    <BodyShort size=\"medium\">{intlUtils(intl, 'forside.guidepanel')}</BodyShort>\n                                    <ul className={`${bem.element('liste')}`}>\n                                        <li>{intlUtils(intl, 'forside.guidepanel.punkt1')}</li>\n                                        <li>{intlUtils(intl, 'forside.guidepanel.punkt2')}</li>\n                                        <li>{intlUtils(intl, 'forside.guidepanel.punkt3')}</li>\n                                    </ul>\n                                    <FormattedMessage\n                                        id=\"forside.guidepanel.lesMer\"\n                                        values={{\n                                            a: (msg: any) => (\n                                                <a\n                                                    className=\"lenke\"\n                                                    rel=\"noopener noreferrer\"\n                                                    href={links.svangerskapspenger}\n                                                    target=\"_blank\"\n                                                >\n                                                    {msg}\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </GuidePanel>\n                            </Block>\n                            <Block\n                                padBottom=\"xl\"\n                                visible={visibility.isVisible(ForsideFormField.harForståttRettigheterOgPlikter)}\n                            >\n                                <Alert variant=\"info\">\n                                    <Block padBottom=\"l\">\n                                        <FormattedMessage\n                                            id=\"forside.tilrettelegging.info.del1\"\n                                            values={{\n                                                a: (msg: any) => (\n                                                    <a\n                                                        className=\"lenke\"\n                                                        rel=\"noopener noreferrer\"\n                                                        href={links.tilretteleggingsskjema}\n                                                        target=\"_blank\"\n                                                    >\n                                                        {msg}\n                                                    </a>\n                                                ),\n                                            }}\n                                        />\n                                    </Block>\n                                    <Block>\n                                        <FormattedMessage\n                                            id=\"forside.tilrettelegging.info.del2\"\n                                            values={{\n                                                a: (msg: any) => (\n                                                    <a\n                                                        className=\"lenke\"\n                                                        rel=\"noopener noreferrer\"\n                                                        href={links.slikSøkerDu}\n                                                        target=\"_blank\"\n                                                    >\n                                                        {msg}\n                                                    </a>\n                                                ),\n                                            }}\n                                        />\n                                    </Block>\n                                </Alert>\n                            </Block>\n                            <Block\n                                padBottom=\"xl\"\n                                visible={visibility.isVisible(ForsideFormField.harForståttRettigheterOgPlikter)}\n                            >\n                                <ForsideFormComponents.ConfirmationCheckbox\n                                    name={ForsideFormField.harForståttRettigheterOgPlikter}\n                                    label={intlUtils(intl, 'forside.samtykke')}\n                                    validate={validateHarForståttRettigheterOgPlikter(intl)}\n                                >\n                                    <BodyShort size=\"medium\">{intlUtils(intl, 'forside.samtykkeIntro')}</BodyShort>\n                                    <ul className={`${bem.element('liste')}`}>\n                                        <li>{intlUtils(intl, 'forside.samtykkeIntro.punkt1')}</li>\n                                        <li>\n                                            <FormattedMessage\n                                                id=\"forside.samtykkeIntro.punkt2\"\n                                                values={{\n                                                    a: (msg: any) => (\n                                                        <a\n                                                            className=\"lenke\"\n                                                            rel=\"noopener noreferrer\"\n                                                            href={links.rettOgPlikt}\n                                                            target=\"_blank\"\n                                                        >\n                                                            {msg}\n                                                        </a>\n                                                    ),\n                                                }}\n                                            />\n                                        </li>\n                                    </ul>\n                                </ForsideFormComponents.ConfirmationCheckbox>\n                            </Block>\n                            <Block padBottom=\"xl\">\n                                <div style={{ textAlign: 'center' }}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"primary\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                    >\n                                        {intlUtils(intl, 'forside.begynnMedSøknad')}\n                                    </Button>\n                                </div>\n                            </Block>\n                        </div>\n                    </ForsideFormComponents.Form>\n                );\n            }}\n        />\n    );\n};\n\nexport default Forside;\n"],"names":["lib","value","isQuestionVisible","questions","question","payload","config","parentQuestion","isQuestionAnswered","isQuestionIncluded","areAllQuestionsAnswered","allQuestionsHasAnswers","key","isOptional","getIncludedQuestions","validateQuestion","Questions","ForsideFormField","getInitialForsideValues","harForståttRettigheterOgPlikter","ForsideFormConfig","ForsideFormComponents","getTypedFormComponents","forsideFormQuestions","validateHarForståttRettigheterOgPlikter","intl","intlUtils","useOnValidSubmit","submitHandler","nextRoute","dispatch","state","useSvangerskapspengerContext","navigate","useNavigate","harSubmitted","setSubmitted","useState","isSubmitting","setIsSubmitting","useEffect","values","actions","dispatchRouteChange","SøknadRoutes","actionCreator","a","Forside","locale","onChangeLocale","useIntl","bem","bemUtils","onValidSubmitHandler","handleSubmit","jsx","visibility","jsxs","Block","LanguageToggle","Heading","GuidePanel","BodyShort","FormattedMessage","msg","links","Alert","Button"],"mappings":"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","x_google_ignoreList":[0]}