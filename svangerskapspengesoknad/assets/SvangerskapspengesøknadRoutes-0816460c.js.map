{"version":3,"file":"SvangerskapspengesøknadRoutes-0816460c.js","sources":["../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/bind.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/utils.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/AxiosError.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/null.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/toFormData.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/buildURL.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/InterceptorManager.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/defaults/transitional.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/classes/FormData.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/classes/Blob.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/index.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/common/utils.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/index.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/toURLEncodedForm.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/formDataToJSON.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/defaults/index.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/parseHeaders.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/AxiosHeaders.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/transformData.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/cancel/isCancel.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/cancel/CanceledError.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/settle.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/cookies.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/combineURLs.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/buildFullPath.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/parseProtocol.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/speedometer.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/adapters/xhr.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/adapters/adapters.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/dispatchRequest.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/mergeConfig.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/env/data.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/validator.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/Axios.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/cancel/CancelToken.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/spread.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/isAxiosError.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/HttpStatusCode.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/axios.js","../../src/app/Environment.ts","../../src/app/api/apiInterceptor.ts","../../../../packages/fp-common/src/common/utils/numberUtils.ts","../../../../packages/fp-common/src/common/utils/stringUtils.ts","../../../../packages/fp-common/src/common/utils/formUtils.ts","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/uniqBy.js","../../../../packages/ui/src/contentWrapper/ContentWrapper.tsx","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/is.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/worldwide.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/logger.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/object.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/misc.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/env.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/node.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/syncpromise.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/time.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/constants.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/session.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/scope.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/hub.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/exports.js","../../../../packages/constants/src/links.ts","../../../../packages/constants/src/dates.ts","../../../../packages/ui/src/i18n/ui/UiIntlProvider.tsx","../../../../packages/ui/src/error/ErrorPage.tsx","../../../../packages/ui/src/error/ErrorBoundary.tsx","../../../../packages/ui/src/error/ErrorSummaryFp.tsx","../../../../packages/ui/src/fileUploader/input/FileInput.tsx","../../../../packages/ui/src/i18n/useCustomI18n.ts","../../../../packages/ui/src/fileUploader/fileUtils.ts","../../../../packages/ui/src/fileUploader/liste/AttachmentInfo.tsx","../../../../packages/ui/src/fileUploader/liste/AttachmentList.tsx","../../../../packages/ui/src/fileUploader/typer/FileUploadError.ts","../../../../packages/ui/src/fileUploader/liste/FailedAttachment.tsx","../../../../packages/ui/src/fileUploader/liste/FailedAttachmentList.tsx","../../../../packages/ui/src/fileUploader/FileUploader.tsx","../../../../packages/ui/src/step/StepButtons.tsx","../../../../packages/ui/src/i18n/ui/useUiIntl.ts","../../../../packages/ui/src/scanDocumentInfo/ScanDocumentInfo.tsx","../../../../packages/metrics/src/amplitude.ts","../../../../packages/ui/src/umyndig/Umyndig.tsx","../../../../packages/ui/src/i18n/IntlProvider.tsx","../../src/app/utils/errorUtils.ts","../../src/app/routes/isAvailable.ts","../../src/app/steps/barnet/barnetFormConfig.ts","../../src/app/utils/dateUtils.ts","../../src/app/utils/validationUtils.ts","../../src/app/steps/barnet/barnetUtils.ts","../../src/app/steps/barnet/barnetQuestionsConfig.ts","../../src/app/types/Tilrettelegging.ts","../../src/app/types/EgenNæring.ts","../../src/app/types/Frilans.ts","../../src/app/steps/velg-arbeidsforhold/velgArbeidFormUtils.ts","../../src/app/utils/arbeidsforholdUtils.ts","../../src/app/steps/tilrettelegging/tilretteleggingStepFormConfig.ts","../../src/app/steps/perioder/perioderStepFormConfig.ts","../../src/app/utils/tilretteleggingUtils.ts","../../src/app/utils/numberUtils.ts","../../src/app/steps/perioder/perioderStepUtils.ts","../../src/app/steps/tilrettelegging/tilretteleggingStepUtils.ts","../../src/app/steps/skjema/skjemaFormTypes.ts","../../src/app/steps/skjema/skjemaFormUtils.ts","../../src/app/steps/stepsConfig.ts","../../src/app/steps/barnet/barnetValidering.ts","../../src/app/utils/hooks/useSøknad.ts","../../src/app/utils/hooks/useAvbrytSøknad.ts","../../src/app/utils/hooks/useSøkerinfo.ts","../../src/app/steps/barnet/Barnet.tsx","../../src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarIkkeArbeidsforhold.tsx","../../src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarArbeidsforhold.tsx","../../src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon.tsx","../../src/app/steps/inntektsinformasjon/inntektsinformasjonFormConfig.ts","../../src/app/steps/inntektsinformasjon/inntektsinformasjonFormUtils.ts","../../src/app/steps/inntektsinformasjon/components/info-til-fiskere/InfoTilFiskere.tsx","../../src/app/steps/inntektsinformasjon/components/info-om-førstegangstjeneste/InfoOmFørstegangstjeneste.tsx","../../src/app/steps/inntektsinformasjon/components/hvem-kan-drive-egen-næring/HvemKanDriveMedEgenNæring.tsx","../../src/app/steps/inntektsinformasjon/components/bruker-kan-ikke-søke/BrukerKanIkkeSøke.tsx","../../src/app/steps/inntektsinformasjon/components/info-om-arbeid-i-utlandet/InfoOmArbeidIUtlandet.tsx","../../src/app/steps/inntektsinformasjon/components/hvem-kan-være-frilanser/HvemKanVæreFrilanser.tsx","../../src/app/steps/inntektsinformasjon/Inntektsinformasjon.tsx","../../src/app/steps/utenlandsopphold/utenlandsoppholdFormTypes.ts","../../src/app/steps/utenlandsopphold/utenlandsoppholdFormUtils.ts","../../src/app/steps/utenlandsopphold/utenlandsoppholdFormQuestions.ts","../../src/app/steps/utenlandsopphold/components/InformasjonOmUtenlandsopphold.tsx","../../src/app/steps/utenlandsopphold/Utenlandsopphold.tsx","../../src/app/utils/hooks/useUpdateCurrentTilretteleggingId.ts","../../src/app/steps/tilrettelegging/tilretteleggingStepQuestionsConfig.ts","../../src/app/steps/tilrettelegging/tilretteleggingValidation.ts","../../src/app/components/bedriftsbanner/Bedriftsbanner.tsx","../../src/app/steps/tilrettelegging/TilretteleggingStep.tsx","../../src/app/steps/oppsummering/oppsummeringFormConfig.ts","../../src/app/steps/oppsummering/validation/oppsummeringValidation.ts","../../src/app/types/RequestStatus.ts","../../src/app/utils/redirectUtils.ts","../../src/app/utils/hooks/useGetRequest.ts","../../src/app/api/api.ts","../../src/app/steps/egen-næring/egenNæringFormConfig.ts","../../src/app/steps/egen-næring/egenNæringFormUtils.ts","../../src/app/types/ArbeidIUtlandet.ts","../../src/app/types/Søknad.ts","../../src/app/utils/apiUtils.ts","../../src/app/steps/oppsummering/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummeringListe.tsx","../../src/app/steps/oppsummering/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummering.tsx","../../src/app/components/frilans-visning/FrilansVisning.tsx","../../src/app/components/egen-næring-visning/EgenNæringVisning.tsx","../../src/app/components/arbeid-i-utlandet-visning/ArbeidIUtlandetVisning.tsx","../../src/app/components/periode-visning/PeriodeVisning.tsx","../../src/app/steps/oppsummering/periode-oppsummering/PeriodeOppsummering.tsx","../../src/app/components/accordion/AccordionItem.tsx","../../src/app/components/accordion/AccordionContent.tsx","../../../../packages/api/src/useAbortSignal.ts","../../../../packages/api/src/attachmentApi.ts","../../src/app/steps/oppsummering/Oppsummering.tsx","../../src/app/components/attachment-visning.tsx/AttachmentVisning.tsx","../../src/app/components/attachment-list/AttachmentList.tsx","../../src/app/types/AttachmentType.ts","../../src/app/types/Skjemanummer.ts","../../src/app/steps/skjema/components/SkjemaopplastningTekstFrilansSN.tsx","../../src/app/steps/skjema/components/SkjemaopplastningTekstArbeidsgiver.tsx","../../src/app/utils/attachmentUtils.ts","../../src/app/api/attachmentApi.ts","../../src/app/components/formik-file-uploader/FormikFileUploader.tsx","../../src/app/steps/skjema/Skjema.tsx","../../src/app/steps/frilans/frilansFormConfig.ts","../../src/app/steps/frilans/frilansFormUtils.ts","../../src/app/steps/frilans/frilansFormQuestionsConfig.ts","../../src/app/steps/frilans/frilansValidation.ts","../../src/app/steps/frilans/FrilansStep.tsx","../../src/app/steps/arbeid-i-utlandet/arbeidIUtlandetFormConfig.ts","../../src/app/steps/arbeid-i-utlandet/arbeidIUtlandetFormUtils.ts","../../../../packages/utils/src/countryUtils.ts","../../../../packages/utils/src/dateUtils.ts","../../src/app/steps/arbeid-i-utlandet/arbeidIUtlandetValidation.ts","../../src/app/components/horizontal-line/HorizontalLine.tsx","../../src/app/steps/arbeid-i-utlandet/ArbeidIUtlandetStep.tsx","../../src/app/steps/velg-arbeidsforhold/velgArbeidFormConfig.ts","../../src/app/steps/velg-arbeidsforhold/components/guidepanel/FlereArbeidsforholdGuidePanel.tsx","../../src/app/steps/velg-arbeidsforhold/VelgArbeid.tsx","../../src/app/steps/egen-næring/egenNæringFormQuestions.ts","../../../../packages/fp-common/src/common/utils/organisasjonUtils.ts","../../src/app/steps/egen-næring/egenNæringValidation.ts","../../src/app/components/egen-næring-visning/OrgnummerEllerLand.tsx","../../src/app/steps/egen-næring/components/VarigEndringSpørsmål.tsx","../../src/app/steps/egen-næring/EgenNæringStep.tsx","../../src/app/steps/bo-i-utlandet/boIUtlandetFormUtils.ts","../../src/app/steps/bo-i-utlandet/boIUtlandetFormConfig.ts","../../src/app/steps/bo-i-utlandet/boIUtlandetValidering.ts","../../src/app/steps/bo-i-utlandet/BoIUtlandet.tsx","../../src/app/pages/søknad-sendt/SøknadSendt.tsx","../../src/app/utils/tidsperiodeUtils.ts","../../src/app/steps/perioder/perioderValidation.ts","../../src/app/utils/perioderUtils.ts","../../src/app/steps/perioder/PerioderStep.tsx","../../src/app/routes/SvangerskapspengesøknadRoutes.tsx"],"sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.hasStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.1\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","const Environment = () => {\n    const settingsNode = document.getElementById('nav:appSettings') as HTMLScriptElement;\n    const appSettings = JSON.parse(settingsNode.text);\n\n    return {\n        REST_API_URL: appSettings.REST_API_URL,\n        LOGIN_URL: appSettings.LOGIN_URL,\n        LOG_VALIDATION: appSettings.LOG_VALIDATION,\n        INNSYN: appSettings.INNSYN,\n    };\n};\n\nexport default Environment();\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport Environment from 'app/Environment';\n\nconst apiBaseUrl = Environment.REST_API_URL;\n\nexport const AxiosInstance = axios.create({ baseURL: apiBaseUrl });\n\nconst getAxiosInstance = (fnr?: string) => {\n    AxiosInstance.interceptors.request.use((config) => {\n        config.timeout = 60 * 1000;\n\n        if (process.env.NODE_ENV !== 'development' && fnr) {\n            config.headers!.fnr = fnr;\n        }\n        return config;\n    });\n\n    AxiosInstance.interceptors.response.use(\n        (response: AxiosResponse) => {\n            return response;\n        },\n        (response: AxiosError) => {\n            return Promise.reject(response);\n        }\n    );\n\n    return AxiosInstance;\n};\n\nexport default getAxiosInstance;\n","import { hasValue } from './validationUtils';\n\nconst onlyNumbersRegExp = /^[0-9]*$/;\n\nexport const getMod11 = (strValue: string): number => {\n    let checkNbr = 2;\n    let mod = 0;\n\n    for (let i = strValue.length - 2; i >= 0; --i) {\n        mod += parseInt(strValue.charAt(i), 10) * checkNbr;\n        if (++checkNbr > 7) {\n            checkNbr = 2;\n        }\n    }\n    const result = 11 - (mod % 11);\n    return result === 11 ? 0 : result;\n};\n\nconst er9Tall = (orgnr: string): boolean => {\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\n};\n\nconst starterPå8Eller9 = (orgnr: string): boolean => {\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\n};\n\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\n    if (!orgnr || er9Tall(orgnr) === false || starterPå8Eller9(orgnr) === false || orgnr === '999999999') {\n        return false;\n    }\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\n};\n\nexport const numberHasValue = (num: string): boolean => {\n    if (!hasValue(num) || num.trim().length === 0) {\n        return false;\n    }\n\n    return true;\n};\n\nconst numberRegExp = RegExp(/^[-]?[0-9,.\\s]*$/);\n\nexport const trimNumberValue = (value: string): string => {\n    return value.replace(/,/g, '.').replace(/\\s/g, '').replace(/%/g, '');\n};\n\nexport const getFloatFromString = (value: string | undefined): number | undefined => {\n    if (value !== undefined && value !== null && value.length > 0 && numberRegExp.test(value)) {\n        const trimmedValue = trimNumberValue(value);\n        const numberOfPoints = (trimmedValue.match(/\\./g) || []).length;\n        if (numberOfPoints > 1) {\n            return undefined;\n        }\n        return parseFloat(trimmedValue);\n    }\n    return undefined;\n};\n","import { usynligeCharsRegex } from './validationUtils';\n\nexport const replaceInvisibleCharsWithSpace = (inputString: string): string => {\n    return inputString.replace(usynligeCharsRegex, '\\u0020');\n};\n\nexport const capitalizeFirstLetter = (s: string): string => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport const convertBooleanOrUndefinedToYesOrNo = (value: boolean | undefined): YesOrNo => {\n    if (value === true) {\n        return YesOrNo.YES;\n    }\n\n    if (value === false) {\n        return YesOrNo.NO;\n    }\n\n    return YesOrNo.UNANSWERED;\n};\n\nexport const convertYesOrNoOrUndefinedToBoolean = (value: YesOrNo | undefined) => {\n    if (value === YesOrNo.YES) {\n        return true;\n    }\n\n    if (value === YesOrNo.UNANSWERED) {\n        return undefined;\n    }\n\n    return false;\n};\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","import { bemUtils } from '@navikt/fp-common';\n\nimport './contentWrapper.less';\n\ninterface Props {\n    children: React.ReactElement | React.ReactElement[];\n}\n\nconst ContentWrapper: React.FunctionComponent<Props> = ({ children }) => {\n    const bem = bemUtils('content');\n    return <div className={bem.block}>{children}</div>;\n};\n\nexport default ContentWrapper;\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton, uuid4 } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: false,\n  };\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      // eslint-disable-next-line no-console\n      console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { logger, uuid4 } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, flush, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","export const links = {\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    brukerstøtte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    kontaktOss: 'https://www.nav.no/person/kontakt-oss/nb/tilbakemeldinger/feil-og-mangler',\n    dittNav: 'https://tjenester.nav.no/dittnav/oversikt',\n    foreldrepenger: 'https://foreldrepenger.nav.no',\n    nav: 'https://www.nav.no',\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    personvernerklæring:\n        'https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten',\n    plikter: 'https://nav.no/rettOgPlikt',\n    søknadsveileder: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    veiviser: 'https://familie.nav.no/veiviser',\n    innsyn: 'https://foreldrepenger.nav.no',\n    engangsstonad: 'https://www.nav.no/engangsstonad',\n    farMedmor: 'https://www.nav.no/engangsstonad#far_medmor',\n    barn: 'https://www.nav.no/barn',\n    foreldrepengerUtland: 'https://www.nav.no/foreldrepenger#utland',\n    engangsstonadHvem: 'https://www.nav.no/engangsstonad#hvem',\n    scanneDokument: 'https://www.nav.no/brukerstotte#bilde-vedlegg',\n};\n","import dayjs from 'dayjs';\n\nexport const ISO_DATE_FORMAT = 'YYYY-MM-DD';\nexport const DDMMYYYY_DATE_FORMAT = 'DD.MM.YYYY';\nexport const TIME_FORMAT = 'HH:mm';\n\n// TODO Er dette greie datoar eller bør ein velga noko anna?\nexport const TIDENES_MORGEN = dayjs('1000-01-01').toDate();\nexport const TIDENES_ENDE = dayjs('9999-31-12').toDate();\n\nexport const DATE_TODAY = dayjs().toDate();\nexport const SIX_MONTHS_AGO = dayjs().subtract(6, 'month').startOf('day').toDate();\nexport const DATE_1_YEAR_FROM_NOW = dayjs().add(1, 'years').toDate();\nexport const DATE_1_YEAR_AGO = dayjs().subtract(1, 'years').toDate();\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UiIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UiIntlProvider;\n","import { FunctionComponent } from 'react';\nimport { links } from '@navikt/fp-constants';\nimport { Alert, BodyShort, Button, HStack, Heading, Label, Link, VStack } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appName: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    errorMessage: string;\n    retryCallback: () => void;\n}\n\nconst ErrorPage: FunctionComponent<Props> = ({ appName, errorMessage, retryCallback }) => {\n    //TODO Bytt ut div under med Box frå ds-react når oppdatert til siste versjon\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"20\">\n                    <Heading size=\"large\">\n                        {appName === 'Engangsstønad' && <FormattedMessage id=\"ErrorPage.Engangsstønad\" />}\n                        {appName === 'Foreldrepenger' && <FormattedMessage id=\"ErrorPage.Foreldrepenger\" />}\n                        {appName === 'Svangerskapspenger' && <FormattedMessage id=\"ErrorPage.Svangerskapspenger\" />}\n                    </Heading>\n                    <VStack gap=\"10\">\n                        <Alert variant=\"warning\">\n                            <VStack gap=\"4\">\n                                <Heading size=\"small\">\n                                    <FormattedMessage id=\"ErrorPage.Heading\" />\n                                </Heading>\n                                <BodyShort>\n                                    <FormattedMessage id=\"ErrorPage.Message\" />\n                                </BodyShort>\n                            </VStack>\n                        </Alert>\n                        <HStack gap=\"4\" justify=\"center\">\n                            <Link href={links.kontaktOss} target=\"_blank\">\n                                <Button type=\"button\" variant=\"secondary\">\n                                    <FormattedMessage id=\"ErrorPage.Contact\" />\n                                </Button>\n                            </Link>\n                            <Button type=\"button\" variant=\"primary\" onClick={retryCallback}>\n                                <FormattedMessage id=\"ErrorPage.TryAgain\" />\n                            </Button>\n                        </HStack>\n                        <div style={{ backgroundColor: 'var(--a-gray-200)', padding: '16px', borderRadius: '4px' }}>\n                            <VStack gap=\"2\">\n                                <Label>\n                                    <FormattedMessage id=\"ErrorPage.ErrorMessage\" />\n                                </Label>\n                                <BodyShort>Error: {errorMessage}</BodyShort>\n                            </VStack>\n                        </div>\n                    </VStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorPage;\n","import * as Sentry from '@sentry/browser';\nimport { Component } from 'react';\nimport ErrorPage from './ErrorPage';\n\ninterface Props {\n    appName: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n    children: React.ReactNode;\n    retryCallback: () => void;\n}\n\ninterface State {\n    eventId: string | null;\n    hasError: boolean;\n    errorInfo: any;\n    errorMessage: string | undefined;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = { eventId: null, hasError: false, errorInfo: null, errorMessage: undefined };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any) {\n        Sentry.withScope((scope: any) => {\n            scope.setExtras(errorInfo);\n            const eventId = Sentry.captureException(error);\n            this.setState({ eventId, errorInfo });\n        });\n        this.setState({ hasError: true, errorMessage: error?.message });\n    }\n\n    render() {\n        const { appName, retryCallback } = this.props;\n        const { errorMessage, errorInfo } = this.state;\n\n        if (this.state.hasError) {\n            return errorMessage ? (\n                <ErrorPage appName={appName} errorMessage={errorMessage} retryCallback={retryCallback} />\n            ) : (\n                <div>{errorMessage || errorInfo}</div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { FunctionComponent } from 'react';\nimport { ErrorSummary } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nexport type ErrorSummaryError = {\n    message?: string;\n    focus?: () => void;\n};\n\ninterface Props {\n    errorRef: React.RefObject<HTMLDivElement>;\n    errors: ErrorSummaryError[];\n}\n\n//TODO Fjern FP postfix. Er litt misvisande da det kan sjå ut som denne er spesifikk for FP-appen\n\nconst ErrorSummaryFp: FunctionComponent<Props> = ({ errorRef, errors }) => {\n    return (\n        <UiIntlProvider>\n            <ErrorSummary size=\"small\" ref={errorRef} heading={<FormattedMessage id={'ErrorSummaryFp.Tittel'} />}>\n                {Object.values(errors).map((error) => (\n                    <ErrorSummary.Item\n                        key={error.message}\n                        onClick={() => {\n                            if (error.focus) {\n                                error.focus();\n                            }\n                        }}\n                    >\n                        {error.message}\n                    </ErrorSummary.Item>\n                ))}\n            </ErrorSummary>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorSummaryFp;\n","import React, { useCallback, useRef } from 'react';\nimport { Button } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport { UploadIcon } from '@navikt/aksel-icons';\n\nimport './fileInput.less';\nimport { bemUtils } from '@navikt/fp-common';\n\ninterface Props {\n    onFilesSelect: (files: File[]) => void;\n    multiple: boolean;\n    accept: string;\n    hasUplodedAttachements: boolean;\n}\n\nconst FileInput: React.FunctionComponent<Props> = ({ multiple, accept, onFilesSelect, hasUplodedAttachements }) => {\n    const bem = bemUtils('fileInput');\n    const onFileSelect = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.files) {\n                const files = Array.from(e.target.files) as File[];\n                onFilesSelect(files);\n                e.target.value = '';\n            }\n        },\n        [onFilesSelect],\n    );\n\n    const inputElement = useRef<HTMLInputElement>(null);\n\n    const openFileDialog = useCallback(() => {\n        if (inputElement.current) {\n            inputElement.current.click();\n        }\n    }, []);\n\n    return (\n        <>\n            <input\n                ref={inputElement}\n                className={bem.element('input')}\n                type=\"file\"\n                accept={accept}\n                onChange={(e) => onFileSelect(e)}\n                multiple={multiple === true}\n                data-testid=\"file-upload\"\n            />\n            <Button\n                className={bem.element('upload_button')}\n                variant={hasUplodedAttachements ? 'secondary' : 'primary'}\n                type=\"button\"\n                onClick={openFileDialog}\n                icon={<UploadIcon />}\n                iconPosition=\"right\"\n            >\n                {hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp.Flere\" />}\n                {!hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp\" />}\n            </Button>\n        </>\n    );\n};\n\nexport default FileInput;\n","import { PrimitiveType, useIntl } from 'react-intl';\nimport { FormatXMLElementFn } from 'intl-messageformat';\n\nexport type I18nFn = (\n    i18nId: string,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>,\n) => string;\n\nexport type CustomIntlShape = {\n    i18n: I18nFn;\n};\n\nexport const useCustomIntl = (): CustomIntlShape => {\n    const intl = useIntl();\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n","import Bytes from 'bytes';\nimport { Attachment } from '@navikt/fp-types';\nimport { Skjemanummer, AttachmentType } from '@navikt/fp-constants';\n\nconst s4 = (): string =>\n    Math.floor((1 + Math.random()) * 0x10000)\n        .toString()\n        .substring(1);\n\n//TODO Denne ligg sikkert ein annan stad (evt flytt ut)\nconst guid = (): string => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const getTotalFileSize = (files: File[]): number => {\n    return files.reduce(\n        (a, b) =>\n            ({\n                size: a.size + b.size,\n            }) as any,\n        { size: 0 },\n    ).size;\n};\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\n    return {\n        id: generateAttachmentId(),\n        file,\n        filename: file.name,\n        filesize: file.size,\n        uploaded: false,\n        pending: false,\n        type,\n        skjemanummer,\n    };\n};\n","import { VStack, Link, Loader, HStack, Spacer } from '@navikt/ds-react';\nimport { XMarkIcon, FileCheckmarkIcon } from '@navikt/aksel-icons';\n\nimport { useCustomIntl } from '../../i18n/useCustomI18n';\nimport { Attachment } from '@navikt/fp-types';\nimport { bytesString } from '../fileUtils';\n\nimport './attachmentInfo.less';\n\ninterface OwnProps {\n    attachment: Attachment;\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\ntype Props = OwnProps;\n\nconst AttachmentInfo: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const { i18n } = useCustomIntl();\n\n    return (\n        <div className=\"attachmentPanel\">\n            <HStack gap=\"4\">\n                {attachment.pending && <Loader type=\"S\" />}\n                {!attachment.pending && <FileCheckmarkIcon width={24} height={24} />}\n                <VStack gap=\"1\">\n                    {attachment.url ? (\n                        <Link href={attachment.url} target=\"_blank\">\n                            {attachment.filename}\n                        </Link>\n                    ) : (\n                        <span>{attachment.filename}</span>\n                    )}\n                    {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n                </VStack>\n                {onDelete && (\n                    <>\n                        <Spacer />\n                        <XMarkIcon\n                            onClick={() => onDelete(attachment)}\n                            height={24}\n                            width={24}\n                            cursor=\"pointer\"\n                            aria-label={i18n('Attachment.Vedlegg.Slett', { navn: attachment.filename })}\n                        />\n                    </>\n                )}\n            </HStack>\n        </div>\n    );\n};\n\nexport default AttachmentInfo;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport AttachmentInfo from './AttachmentInfo';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    attachments: Attachment[];\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { attachments, showFileSize, onDelete } = props;\n\n    return (\n        <>\n            {attachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {attachments.map((attachment) => (\n                        <Fragment key={guid()}>\n                            <AttachmentInfo attachment={attachment} onDelete={onDelete} showFileSize={showFileSize} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default AttachmentList;\n","export enum FileUploadError {\n    GENERAL = 'GENERAL',\n    TIMEOUT = 'TIMEOUT',\n    VALID_EXTENSION = 'VALID_EXTENSION',\n    MAX_SIZE = 'MAX_SIZE',\n}\n","import { Alert } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Attachment } from '@navikt/fp-types';\nimport { FileUploadError } from '../typer/FileUploadError';\n\nconst MAX_FIL_STØRRELSE_KB = 16777;\n\ninterface OwnProps {\n    failedAttachment: Attachment;\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachment: React.FunctionComponent<OwnProps> = ({ failedAttachment, onDelete }) => {\n    return (\n        <Alert variant=\"warning\" closeButton onClose={() => onDelete(failedAttachment)}>\n            {failedAttachment.error === FileUploadError.GENERAL && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Opplasting.Feilet\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.TIMEOUT && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Timeout\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.MAX_SIZE && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Størrelse\"\n                    values={{ filename: failedAttachment.filename, maxStørrelse: MAX_FIL_STØRRELSE_KB }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.VALID_EXTENSION && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Type\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n        </Alert>\n    );\n};\n\nexport default FailedAttachment;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport FailedAttachment from './FailedAttachment';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    failedAttachments: Attachment[];\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { failedAttachments, onDelete } = props;\n    return (\n        <>\n            {failedAttachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {failedAttachments.map((failedAttachment) => (\n                        <Fragment key={guid()}>\n                            <FailedAttachment failedAttachment={failedAttachment} onDelete={onDelete} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default FailedAttachmentList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { AttachmentType, Skjemanummer } from '@navikt/fp-constants';\n\nimport FileInput from './input/FileInput';\nimport AttachmentList from './liste/AttachmentList';\nimport { Attachment } from '@navikt/fp-types';\nimport { mapFileToAttachment } from './fileUtils';\nimport FailedAttachmentList from './liste/FailedAttachmentList';\nimport { FileUploadError } from './typer/FileUploadError';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_STØRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\n// TODO Fjern any her utan å måtte dra inn axios i denne pakka\ntype SaveAttachment = (attachment: Attachment) => Promise<any>;\n\nconst getPendingAttachmentFromFile = (\n    file: File,\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer,\n): Attachment => {\n    const newAttachment = mapFileToAttachment(file, attachmentType, skjemanummer);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return ext ? VALID_EXTENSIONS.includes(`.${ext.toLowerCase()}`) : false;\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_STØRRELSE_KB;\n};\n\nconst uploadAttachment = async (attachment: Attachment, saveAttachment: SaveAttachment): Promise<void> => {\n    if (!fileExtensionIsValid(attachment.file.name)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.VALID_EXTENSION;\n        return;\n    }\n    if (!fileSizeIsValid(attachment.filesize)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.MAX_SIZE;\n        return;\n    }\n\n    try {\n        const response = await saveAttachment(attachment);\n        attachment.pending = false;\n        attachment.url = response.headers.location;\n        attachment.uploaded = true;\n        attachment.uuid = response.data;\n    } catch (error) {\n        // TODO Burde få ut feilmelding frå backend og vise denne\n        attachment.pending = false;\n\n        // @ts-ignore TODO Fix typing her (Mogleg  mykje av logikken her bør ligga inne i saveAttachment, så slepp ein da inn Axios her)\n        if (error?.response?.status === 408) {\n            attachment.error = FileUploadError.TIMEOUT;\n        } else {\n            attachment.error = FileUploadError.GENERAL;\n        }\n    }\n};\n\nconst EMPTY_ATTACHMENT_LIST = [] as Attachment[];\n\nexport interface Props {\n    updateAttachments: (attachments: Attachment[]) => void;\n    attachmentType: AttachmentType;\n    skjemanummer: Skjemanummer;\n    existingAttachments?: Attachment[];\n    saveAttachment: SaveAttachment;\n    multiple?: boolean;\n}\n\nconst FileUploader: React.FunctionComponent<Props> = ({\n    existingAttachments = EMPTY_ATTACHMENT_LIST,\n    updateAttachments,\n    attachmentType,\n    skjemanummer,\n    saveAttachment,\n    multiple = true,\n}) => {\n    const [attachments, setAttachments] = useState(existingAttachments);\n\n    useEffect(() => {\n        updateAttachments(attachments.filter((a) => !a.error && a.pending === false));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [attachments]);\n\n    const saveFiles = useCallback(\n        (files: File[]) => {\n            const uploadAttachments = async (allPendingAttachments: Attachment[]) => {\n                for (const pendingAttachment of allPendingAttachments) {\n                    await uploadAttachment(pendingAttachment, saveAttachment);\n                    setAttachments((currentAttachments) =>\n                        currentAttachments.map((a) =>\n                            a.filename === pendingAttachment.filename ? pendingAttachment : a,\n                        ),\n                    );\n                }\n            };\n\n            const allPendingAttachments = files.map((file) =>\n                getPendingAttachmentFromFile(file, attachmentType, skjemanummer),\n            );\n            setAttachments((currentAttachments) => {\n                const otherAttachments = currentAttachments.filter(\n                    (ca) => !allPendingAttachments.some((pa) => pa.filename === ca.filename),\n                );\n                return otherAttachments.concat(allPendingAttachments);\n            });\n            uploadAttachments(allPendingAttachments);\n        },\n        [attachmentType, skjemanummer, saveAttachment],\n    );\n\n    const deleteAttachment = useCallback((file: Attachment) => {\n        setAttachments((currentAttachments) => currentAttachments.filter((a) => a.filename !== file.filename));\n    }, []);\n\n    const uploadedAttachments = useMemo(() => attachments.filter((a) => !a.error), [attachments]);\n    const failedAttachments = useMemo(() => attachments.filter((a) => !!a.error), [attachments]);\n\n    return (\n        <UiIntlProvider>\n            <VStack gap=\"6\">\n                <AttachmentList attachments={uploadedAttachments} showFileSize={true} onDelete={deleteAttachment} />\n                <FileInput\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={saveFiles}\n                    hasUplodedAttachements={uploadedAttachments.length > 0}\n                    multiple={multiple}\n                />\n                <FailedAttachmentList failedAttachments={failedAttachments} onDelete={deleteAttachment} />\n            </VStack>\n        </UiIntlProvider>\n    );\n};\n\nexport default FileUploader;\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\ninterface Props {\n    goToPreviousStep: () => void;\n    nextButtonText?: string;\n    nextButtonOnClick?: (setButtonsDisabled: (isDisabled: boolean) => void) => void;\n    isSubmitting: boolean;\n}\n\nconst StepButtons: FunctionComponent<Props> = ({\n    goToPreviousStep,\n    nextButtonText,\n    nextButtonOnClick,\n    isSubmitting,\n}) => {\n    const [disabled, setDisabled] = useState(false);\n\n    const onClickNextButton = useCallback(() => {\n        if (nextButtonOnClick) {\n            nextButtonOnClick((d: boolean) => setDisabled(d));\n        }\n    }, [nextButtonOnClick]);\n\n    return (\n        <UiIntlProvider>\n            <StepButtonWrapper>\n                <Button type=\"button\" variant=\"secondary\" onClick={goToPreviousStep}>\n                    <FormattedMessage id=\"StepButtons.Forrige\" />\n                </Button>\n                <Button\n                    type={nextButtonOnClick ? 'button' : 'submit'}\n                    onClick={onClickNextButton}\n                    disabled={disabled}\n                    loading={isSubmitting}\n                >\n                    {nextButtonText !== undefined && nextButtonText}\n                    {!nextButtonText && <FormattedMessage id={'StepButtons.Neste'} />}\n                </Button>\n            </StepButtonWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default StepButtons;\n","import { useMemo } from 'react';\nimport { useIntl, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUiIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return intl;\n};\n\nexport default useUiIntl;\n","import { FormattedMessage } from 'react-intl';\nimport { BodyLong, ExpansionCard, Link, VStack } from '@navikt/ds-react';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\n\nconst ScanDocumentInfo = () => (\n    <UiIntlProvider>\n        <ExpansionCard size=\"small\" aria-label={useUiIntl().formatMessage({ id: 'ScanDocumentInfo.Tittel' })}>\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"ScanDocumentInfo.Tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <VStack gap=\"5\">\n                    <BodyLong>\n                        <FormattedMessage id=\"ScanDocumentInfo.Del1\" />\n                    </BodyLong>\n                    <ul>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt1\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt2\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt3\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt4\" />\n                        </BodyLong>\n                    </ul>\n                    <BodyLong>\n                        <FormattedMessage id=\"ScanDocumentInfo.Del2\" />\n                    </BodyLong>\n                    <BodyLong>\n                        <Link href={links.scanneDokument} target=\"_blank\">\n                            <FormattedMessage id=\"ScanDocumentInfo.Link\" />\n                        </Link>\n                    </BodyLong>\n                </VStack>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    </UiIntlProvider>\n);\n\nexport default ScanDocumentInfo;\n","import amplitude from 'amplitude-js';\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = false) => {\n    if (logToConsoleOnly) {\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            // tslint:disable-next-line\n            console.error(error);\n        }\n    });\n};\n","import { FormattedMessage, IntlShape } from 'react-intl';\nimport { useDocumentTitle } from '@navikt/fp-common';\nimport { logAmplitudeEvent } from '@navikt/fp-metrics';\nimport { Button, GuidePanel, Heading, VStack, HStack } from '@navikt/ds-react';\nimport { ArrowRightIcon } from '@navikt/aksel-icons';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsstønad' | 'Svangerskapspenger';\n}\n\nconst getTitleText = (appnavn: Props['appnavn'], intl: IntlShape): string => {\n    switch (appnavn) {\n        case 'Engangsstønad':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Engangsstonad' });\n        case 'Foreldrepenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Foreldrepenger' });\n        case 'Svangerskapspenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Svangerskapspenger' });\n    }\n};\n\nconst Umyndig: React.FunctionComponent<Props> = ({ appnavn }) => {\n    const intl = useUiIntl();\n\n    const titleText = getTitleText(appnavn, intl);\n    useDocumentTitle(titleText);\n\n    logAmplitudeEvent('sidevisning', {\n        app: appnavn,\n        team: 'foreldrepenger',\n        pageKey: 'umyndig',\n    });\n\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"10\">\n                    <Heading level=\"1\" size=\"xlarge\">\n                        {titleText}\n                    </Heading>\n                    <GuidePanel poster>\n                        <VStack gap=\"8\">\n                            <Heading level=\"2\" size=\"small\">\n                                <FormattedMessage id=\"Umyndig.Tittel\" />\n                            </Heading>\n                            <FormattedMessage id=\"Umyndig.Tekst\" />\n                        </VStack>\n                    </GuidePanel>\n                    <HStack justify=\"center\">\n                        <Button as=\"a\" icon={<ArrowRightIcon />} iconPosition=\"right\" href={links.papirsøknad}>\n                            <FormattedMessage id=\"Umyndig.Knapp.Papirsøknad\" />\n                        </Button>\n                    </HStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default Umyndig;\n","import { IntlProvider as Provider } from 'react-intl';\nimport { LocaleAll } from '@navikt/fp-types';\n\ninterface Props<T extends LocaleAll> {\n    locale: T;\n    messagesGroupedByLocale: Record<T, Record<string, string>>;\n    children: React.ReactNode;\n}\n\nconst IntlProvider = <T extends LocaleAll>({ locale, messagesGroupedByLocale, children }: Props<T>) => {\n    const messages = messagesGroupedByLocale[locale];\n    return (\n        <Provider locale={locale} messages={messages || {}}>\n            {children}\n        </Provider>\n    );\n};\n\nexport default IntlProvider;\n","import { AxiosError } from 'axios';\nimport * as Sentry from '@sentry/browser';\n\nexport const UKJENT_UUID = 'ukjent uuid';\nexport const FEIL_VED_INNSENDING =\n    'Det har oppstått et problem med innsending av søknaden. Vennligst prøv igjen senere. Hvis problemet vedvarer, kontakt oss og oppgi feil id: ';\n\nexport const getErrorCallId = (error: AxiosError<any>): string => {\n    return error.response && error.response.data && error.response.data.uuid ? error.response.data.uuid : UKJENT_UUID;\n};\n\nexport const getErrorTimestamp = (error: AxiosError<any>): string => {\n    return error.response && error.response.data && error.response.data.timestamp ? error.response.data.timestamp : '';\n};\n\nexport const sendErrorMessageToSentry = (error: AxiosError<any>) => {\n    const errorCallId = getErrorCallId(error) + '. ';\n    const errorTimestamp = getErrorTimestamp(error) + '. ';\n    const hideNumbersAndTrim = (tekst: string): string => {\n        return tekst.replace(/\\d/g, '*').slice(0, 250) + '...';\n    };\n\n    let errorString = errorCallId + errorTimestamp;\n    if (error.request && error.request.data && error.request.data.messages) {\n        errorString = errorString + hideNumbersAndTrim(error.request.data.messages);\n    } else if (error.response && error.response.data && error.response.data.messages) {\n        errorString = errorString + hideNumbersAndTrim(error.response.data.messages);\n    }\n    if (error.message) {\n        errorString = errorString + error.message;\n    }\n    Sentry.captureMessage(errorString);\n};\n","import SøknadRoutes from './routes';\n\nconst isAvailable = (route: SøknadRoutes, harGodkjentVilkår: boolean): boolean => {\n    if (route === SøknadRoutes.BARNET) {\n        return harGodkjentVilkår === true;\n    }\n\n    return true;\n};\n\nexport default isAvailable;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum BarnetFormField {\n    erBarnetFødt = 'erBarnetFødt',\n    termindato = 'termindato',\n    fødselsdato = 'fødselsdato',\n}\n\nexport interface BarnetFormData {\n    [BarnetFormField.erBarnetFødt]: YesOrNo;\n    [BarnetFormField.termindato]: string;\n    [BarnetFormField.fødselsdato]: string | undefined;\n}\n\nexport const BarnetFormComponents = getTypedFormComponents<BarnetFormField, BarnetFormData>();\n","import dayjs from 'dayjs';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { Barn } from 'app/types/Barn';\n\ndayjs.extend(isBetween);\ndayjs.extend(isSameOrAfter);\n\nexport const niMånederFremITid = (dato: Date) => dayjs(dato).startOf('day').add(9, 'months').toDate();\nexport const etÅrSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(1, 'year').add(1, 'day').toDate();\nexport const enMånedSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(1, 'month').toDate();\nexport const tiMånederSidenDato = (dato: Date) => dayjs(dato).startOf('day').subtract(10, 'month').toDate();\nexport const halvannetÅrSiden = (dato: Date) =>\n    dayjs(dato).startOf('day').subtract(1, 'year').subtract(6, 'months').toDate();\nexport const date4YearsAgo = dayjs().subtract(4, 'year').startOf('day').toDate();\nexport const treUkerSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(3, 'weeks').toDate();\nexport const fireUkerSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(4, 'weeks').toDate();\nexport const femMånederSiden = () => dayjs().startOf('day').subtract(5, 'month').toDate();\nexport const dagenFør = (dato: Date) => dayjs(dato).startOf('day').toDate();\n\nexport const getDagenFørTreUkerFørTermin = (termindato: string) => {\n    return dayjs(treUkerSiden(new Date(termindato))).subtract(1, 'd');\n};\n\nexport const getKanHaSvpFremTilTreUkerFørTermin = (barn: Barn): boolean => {\n    if (barn.erBarnetFødt && barn.fødselsdato) {\n        const dagenFørTreUkerFørTermin = getDagenFørTreUkerFørTermin(barn.termindato);\n        const dagenFørFødsel = dagenFør(new Date(barn.fødselsdato));\n        return dayjs(dagenFørTreUkerFørTermin).isSameOrBefore(dagenFørFødsel);\n    }\n    return true;\n};\n\nexport const getSisteDagForSvangerskapspenger = (barn: Barn): Date => {\n    const dagenFørTreUkerFørTermin = getDagenFørTreUkerFørTermin(barn.termindato);\n    if (getKanHaSvpFremTilTreUkerFørTermin(barn) || !barn.fødselsdato) {\n        return dagenFørTreUkerFørTermin.toDate();\n    }\n    const dagenFørFødsel = dagenFør(new Date(barn.fødselsdato));\n    return dagenFørFødsel;\n};\n\nexport const getDefaultMonth = (minDato: Date, maxDato: Date): Date => {\n    return dayjs().isBetween(dayjs(minDato), dayjs(maxDato), 'd') ? dayjs().toDate() : maxDato;\n};\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport dayjs from 'dayjs';\nimport minMax from 'dayjs/plugin/minMax';\nimport { IntlShape } from 'react-intl';\nimport { intlUtils } from '@navikt/fp-common';\n\ndayjs.extend(minMax);\n\nexport const TEXT_INPUT_MIN_LENGTH = 10;\nexport const TEXT_INPUT_MAX_LENGTH = 1000;\n\nexport const hasValue = (v: any) => v !== '' && v !== undefined && v !== null && v !== YesOrNo.UNANSWERED;\n\nexport const getMinInputTilOgMedValue = (fom: string | undefined, otherMinDate: Date) => {\n    let min = otherMinDate;\n    if (fom && hasValue(fom)) {\n        const minDayjs = dayjs.max([dayjs(otherMinDate), dayjs(fom)]);\n        min = minDayjs ? minDayjs.toDate() : otherMinDate;\n    }\n    return min;\n};\n\nexport const getSlutteTekst = (sluttDatoArbeid: string, intl: IntlShape) => {\n    return dayjs().isBefore(dayjs(sluttDatoArbeid), 'd') ? intlUtils(intl, 'slutter') : intlUtils(intl, 'sluttet');\n};\n","import { QuestionVisibility, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { BarnetFormData, BarnetFormField } from './barnetFormConfig';\nimport { Barn } from 'app/types/Barn';\nimport { enMånedSiden } from 'app/utils/dateUtils';\nimport { isValidDate } from '@navikt/ds-react/esm/date/utils';\nimport { hasValue } from 'app/utils/validationUtils';\n\nconst getInitValues = (): Readonly<BarnetFormData> => ({\n    [BarnetFormField.erBarnetFødt]: YesOrNo.UNANSWERED,\n    [BarnetFormField.fødselsdato]: undefined,\n    [BarnetFormField.termindato]: '',\n});\n\nexport const cleanupOmBarnetFormData = (\n    values: BarnetFormData,\n    visibility: QuestionVisibility<BarnetFormField, undefined>,\n): BarnetFormData => {\n    const cleanedData: BarnetFormData = {\n        erBarnetFødt: visibility.isVisible(BarnetFormField.erBarnetFødt) ? values.erBarnetFødt : YesOrNo.UNANSWERED,\n        termindato: visibility.isVisible(BarnetFormField.termindato) ? values.termindato : '',\n        fødselsdato: visibility.isVisible(BarnetFormField.fødselsdato) ? values.fødselsdato : '',\n    };\n\n    return cleanedData;\n};\n\nexport const getBarnetInitialValues = (barn: Barn | undefined): BarnetFormData => {\n    const initialOmBarnetValues = getInitValues();\n    if (!barn) {\n        return initialOmBarnetValues;\n    }\n    return {\n        ...initialOmBarnetValues,\n        erBarnetFødt: convertBooleanOrUndefinedToYesOrNo(barn.erBarnetFødt),\n        termindato: barn.termindato,\n        fødselsdato: barn.fødselsdato,\n    };\n};\n\nexport const mapOmBarnetFormDataToState = (values: Partial<BarnetFormData>): Barn => {\n    return {\n        erBarnetFødt: !!convertYesOrNoOrUndefinedToBoolean(values.erBarnetFødt),\n        termindato: values.termindato!,\n        fødselsdato: values.fødselsdato,\n    };\n};\n\nexport const getMinDatoTermin = (erBarnetFødt: YesOrNo, fødselsdato: string): Date => {\n    if (erBarnetFødt === YesOrNo.YES)\n        if (hasValue(fødselsdato) && isValidDate(new Date(fødselsdato))) {\n            return enMånedSiden(new Date(fødselsdato));\n        }\n    return enMånedSiden(new Date());\n};\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { BarnetFormData, BarnetFormField } from './barnetFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\n\nconst BarnetFormConfig: QuestionConfig<BarnetFormData, BarnetFormField> = {\n    [BarnetFormField.erBarnetFødt]: {\n        isIncluded: () => true,\n        isAnswered: ({ erBarnetFødt }) => erBarnetFødt !== YesOrNo.UNANSWERED,\n    },\n    [BarnetFormField.termindato]: {\n        isIncluded: () => true,\n        isAnswered: ({ termindato }) => hasValue(termindato),\n    },\n    [BarnetFormField.fødselsdato]: {\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.YES,\n        isAnswered: ({ fødselsdato }) => hasValue(fødselsdato),\n    },\n};\n\nconst barnetQuestionsConfig = Questions<BarnetFormData, BarnetFormField>(BarnetFormConfig);\n\nexport default barnetQuestionsConfig;\n","import { DelivisTilretteleggingPeriodeType } from 'app/steps/tilrettelegging/tilretteleggingStepFormConfig';\nimport { ArbeidsforholdDTO } from './Arbeidsforhold';\nimport { Attachment } from './Attachment';\n\nexport enum TilretteleggingstypeOptions {\n    'INGEN' = 'ingen',\n    'DELVIS' = 'delvis',\n}\n\nexport enum Tilretteleggingstype {\n    'INGEN' = 'ingen',\n    'DELVIS' = 'delvis',\n    'HEL' = 'hel',\n}\n\nexport enum Arbeidsforholdstype {\n    'VIRKSOMHET' = 'virksomhet',\n    'SELVSTENDIG' = 'selvstendig',\n    'FRILANSER' = 'frilanser',\n    'PRIVAT' = 'privat',\n}\n\nexport interface Stilling {\n    fom: string;\n    tom?: string;\n    stillingsprosent: number;\n}\n\nexport interface ArbeidsforholdForTilrettelegging {\n    arbeidsgiverId?: string;\n    type: Arbeidsforholdstype;\n    navn: string;\n    stillinger: Stilling[];\n    startdato: string;\n    sluttdato?: string;\n}\n\nexport enum TilOgMedDatoType {\n    VALGFRI_DATO = 'VALGFRI_DATO',\n    SISTE_DAG_MED_SVP = 'SISTE_DAG_MED_SVP',\n}\n\nexport interface TilretteleggingPeriode {\n    type: Tilretteleggingstype;\n    behovForTilretteleggingFom: string;\n    fom: string;\n    tom: string;\n    stillingsprosent: number;\n    arbeidsforhold: ArbeidsforholdForTilrettelegging;\n    vedlegg: string[];\n    risikofaktorer?: string;\n    tilretteleggingstiltak?: string;\n}\n\nexport interface PeriodeMedVariasjon {\n    type: TilretteleggingstypeOptions;\n    tomType: TilOgMedDatoType;\n    fom: string;\n    tom?: string;\n    stillingsprosent: string;\n}\n\nexport interface Tilrettelegging {\n    id: string;\n    behovForTilretteleggingFom: string;\n    arbeidsforhold: ArbeidsforholdForTilrettelegging;\n    type: TilretteleggingstypeOptions;\n    enPeriodeMedTilretteleggingFom?: string;\n    enPeriodeMedTilretteleggingStillingsprosent?: string;\n    enPeriodeMedTilretteleggingTomType?: TilOgMedDatoType;\n    enPeriodeMedTilretteleggingTilbakeIJobbDato?: string;\n    vedlegg: Attachment[];\n    delvisTilretteleggingPeriodeType?: DelivisTilretteleggingPeriodeType;\n    varierendePerioder?: PeriodeMedVariasjon[];\n    risikofaktorer?: string;\n    tilretteleggingstiltak?: string;\n}\n\ninterface TilretteleggingDTOBase {\n    type: Tilretteleggingstype;\n    behovForTilretteleggingFom: Date;\n    arbeidsforhold: ArbeidsforholdDTO;\n    vedlegg: string[];\n}\nexport interface DelvisTilretteleggingDTO extends TilretteleggingDTOBase {\n    type: Tilretteleggingstype.DELVIS;\n    tilrettelagtArbeidFom: Date;\n    stillingsprosent: number;\n}\n\nexport interface IngenTilretteleggingDTO extends TilretteleggingDTOBase {\n    type: Tilretteleggingstype.INGEN;\n    slutteArbeidFom: Date;\n}\n\nexport interface HelTilretteleggingDTO extends TilretteleggingDTOBase {\n    type: Tilretteleggingstype.HEL;\n    tilrettelagtArbeidFom: Date;\n}\n\nexport type TilretteleggingDTO = DelvisTilretteleggingDTO | IngenTilretteleggingDTO | HelTilretteleggingDTO;\n\nexport default Tilrettelegging;\n","import { Tidsperiode } from '@navikt/fp-common';\nimport { TidsperiodeDTOMedValgfriSluttdato } from './TidsperiodeDTO';\n\nexport const egenNæringId = 'næring';\n\nexport enum Næringstype {\n    FISKER = 'FISKE',\n    JORDBRUK = 'JORDBRUK_SKOGBRUK',\n    DAGMAMMA = 'DAGMAMMA',\n    ANNET = 'ANNEN',\n}\n\nexport interface EndringAvNæringsinntektInformasjonDTO {\n    dato: Date;\n    næringsinntektEtterEndring: number;\n    forklaring: string;\n}\n\nexport interface EgenNæring {\n    næringstyper: Næringstype[];\n    tidsperiode: Tidsperiode;\n    næringsinntekt?: string;\n    pågående: boolean;\n    navnPåNæringen: string;\n    organisasjonsnummer?: string;\n    registrertINorge: boolean;\n    registrertILand?: string;\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene?: boolean;\n    oppstartsdato?: string;\n    hattVarigEndringAvNæringsinntektSiste4Kalenderår?: boolean;\n    varigEndringDato?: string;\n    varigEndringInntektEtterEndring?: string;\n    varigEndringBeskrivelse?: string;\n}\n\nexport interface EgenNæringDTO\n    extends Omit<\n        EgenNæring,\n        | 'tidsperiode'\n        | 'pågående'\n        | 'endringAvNæringsinntektInformasjon'\n        | 'varigEndringDato'\n        | 'varigEndringInntektEtterEndring'\n        | 'varigEndringBeskrivelse'\n        | 'næringsinntekt'\n    > {\n    tidsperiode: Partial<TidsperiodeDTOMedValgfriSluttdato>;\n    endringAvNæringsinntektInformasjon?: EndringAvNæringsinntektInformasjonDTO;\n    næringsinntekt?: number;\n}\n","export const frilansId = 'frilans';\n\nexport interface Frilans {\n    jobberFremdelesSomFrilans: boolean;\n    oppstart: string;\n    // sluttDato: string | undefined;\n}\n\nexport interface FrilansDTO {\n    jobberFremdelesSomFrilans: boolean;\n    oppstart: Date;\n    // sluttDato: Date | undefined;\n}\n","import { VelgArbeidFormData } from './velgArbeidFormConfig';\nimport { Søker } from 'app/types/Søker';\nimport { intlUtils } from '@navikt/fp-common';\nimport Tilrettelegging, { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport Arbeidsforhold, { UnikArbeidsforhold } from 'app/types/Arbeidsforhold';\nimport { getUnikeArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\nimport { IntlShape } from 'react-intl';\nimport { EgenNæring, egenNæringId } from 'app/types/EgenNæring';\nimport { Frilans, frilansId } from 'app/types/Frilans';\n\nexport const getInitialVelgArbeidFormValues = (tilretteleggingsBehov: Tilrettelegging[]): VelgArbeidFormData => {\n    return {\n        arbeidMedTilrettelegging: tilretteleggingsBehov.map((t) => t.id),\n    };\n};\n\nexport const getNæringTilretteleggingOption = (\n    tilrettelegginger: Tilrettelegging[],\n    næring: EgenNæring,\n): Tilrettelegging => {\n    const næringTilretteleggingFraState = tilrettelegginger.find((t) => t.id == egenNæringId);\n    return {\n        id: egenNæringId,\n        arbeidsforhold: {\n            arbeidsgiverId: næring.organisasjonsnummer || `${næring.navnPåNæringen}${næring.registrertILand}`,\n            type: Arbeidsforholdstype.SELVSTENDIG,\n            navn: næring.navnPåNæringen,\n            startdato: næring.tidsperiode.fom,\n            sluttdato: næring.tidsperiode.tom,\n            stillinger: [{ fom: næring.tidsperiode.fom, tom: næring.tidsperiode.tom, stillingsprosent: 100 }],\n        },\n        vedlegg: næringTilretteleggingFraState?.vedlegg || [],\n        behovForTilretteleggingFom: næringTilretteleggingFraState?.behovForTilretteleggingFom || undefined!,\n        varierendePerioder: næringTilretteleggingFraState?.varierendePerioder || [],\n        type: næringTilretteleggingFraState?.type || undefined!,\n        enPeriodeMedTilretteleggingFom: næringTilretteleggingFraState?.enPeriodeMedTilretteleggingFom || undefined,\n        enPeriodeMedTilretteleggingStillingsprosent:\n            næringTilretteleggingFraState?.enPeriodeMedTilretteleggingStillingsprosent || undefined,\n        delvisTilretteleggingPeriodeType: næringTilretteleggingFraState?.delvisTilretteleggingPeriodeType || undefined,\n        risikofaktorer: næringTilretteleggingFraState?.risikofaktorer || undefined,\n        tilretteleggingstiltak: næringTilretteleggingFraState?.tilretteleggingstiltak || undefined,\n        enPeriodeMedTilretteleggingTomType:\n            næringTilretteleggingFraState?.enPeriodeMedTilretteleggingTomType || undefined,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato:\n            næringTilretteleggingFraState?.enPeriodeMedTilretteleggingTilbakeIJobbDato || undefined,\n    };\n};\n\nexport const getFrilansTilretteleggingOption = (\n    tilrettelegginger: Tilrettelegging[],\n    frilans: Frilans,\n): Tilrettelegging => {\n    const frilansTilretteleggingFraState = tilrettelegginger.find((t) => t.id == frilansId);\n    return {\n        id: frilansId,\n        arbeidsforhold: {\n            arbeidsgiverId: frilansId,\n            navn: frilansId,\n            type: Arbeidsforholdstype.FRILANSER,\n            startdato: frilans.oppstart,\n            stillinger: [{ fom: frilans.oppstart, tom: undefined, stillingsprosent: 100 }],\n        },\n        vedlegg: frilansTilretteleggingFraState?.vedlegg || [],\n        behovForTilretteleggingFom: frilansTilretteleggingFraState?.behovForTilretteleggingFom || undefined!,\n        varierendePerioder: frilansTilretteleggingFraState?.varierendePerioder || [],\n        type: frilansTilretteleggingFraState?.type || undefined!,\n        enPeriodeMedTilretteleggingFom: frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingFom || undefined,\n        enPeriodeMedTilretteleggingStillingsprosent:\n            frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingStillingsprosent || undefined,\n        delvisTilretteleggingPeriodeType: frilansTilretteleggingFraState?.delvisTilretteleggingPeriodeType || undefined,\n        risikofaktorer: frilansTilretteleggingFraState?.risikofaktorer || undefined,\n        tilretteleggingstiltak: frilansTilretteleggingFraState?.tilretteleggingstiltak || undefined,\n        enPeriodeMedTilretteleggingTomType:\n            frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingTomType || undefined,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato:\n            frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingTilbakeIJobbDato || undefined,\n    };\n};\n\nexport const getArbeidsforholdTilretteleggingOptions = (\n    arbeidsforhold: Arbeidsforhold[],\n    tilrettelegginger: Tilrettelegging[],\n    termindato: string,\n    intl: IntlShape,\n): Tilrettelegging[] => {\n    const unikeArbeidsforhold = getUnikeArbeidsforhold(arbeidsforhold, termindato);\n    const arbeidsforholdOptions = unikeArbeidsforhold.map((forhold: UnikArbeidsforhold) => {\n        const tilretteleggingFraState = tilrettelegginger.find((t) => t.id == forhold.id);\n        return {\n            id: tilretteleggingFraState?.id ?? forhold.id,\n            arbeidsforhold: tilretteleggingFraState?.arbeidsforhold ?? {\n                arbeidsgiverId: forhold.arbeidsgiverId,\n                type:\n                    forhold.arbeidsgiverIdType === 'orgnr'\n                        ? Arbeidsforholdstype.VIRKSOMHET\n                        : Arbeidsforholdstype.PRIVAT,\n                navn:\n                    forhold.arbeidsgiverIdType === 'orgnr' || forhold.arbeidsgiverNavn\n                        ? forhold.arbeidsgiverNavn\n                        : intlUtils(intl, 'privat.arbeidsgiver'),\n                stillinger: forhold.stillinger,\n                startdato: forhold.fom,\n                sluttdato: forhold.tom,\n            },\n            varierendePerioder: tilretteleggingFraState?.varierendePerioder || [],\n            vedlegg: tilretteleggingFraState?.vedlegg || [],\n            behovForTilretteleggingFom: tilretteleggingFraState?.behovForTilretteleggingFom || undefined!,\n            type: tilretteleggingFraState?.type || undefined!,\n            enPeriodeMedTilretteleggingFom: tilretteleggingFraState?.enPeriodeMedTilretteleggingFom || undefined,\n            enPeriodeMedTilretteleggingStillingsprosent:\n                tilretteleggingFraState?.enPeriodeMedTilretteleggingStillingsprosent || undefined,\n            delvisTilretteleggingPeriodeType: tilretteleggingFraState?.delvisTilretteleggingPeriodeType || undefined,\n            enPeriodeMedTilretteleggingTomType:\n                tilretteleggingFraState?.enPeriodeMedTilretteleggingTomType || undefined,\n            enPeriodeMedTilretteleggingTilbakeIJobbDato:\n                tilretteleggingFraState?.enPeriodeMedTilretteleggingTilbakeIJobbDato || undefined,\n        };\n    });\n    return arbeidsforholdOptions;\n};\n\nexport const mapArbeidsforholdToVelgArbeidOptions = (\n    tilrettelegginger: Tilrettelegging[],\n    søker: Søker,\n    arbeidsforhold: Arbeidsforhold[],\n    termindato: string,\n    intl: IntlShape,\n): Tilrettelegging[] => {\n    const harNæring = søker.harJobbetSomSelvstendigNæringsdrivende;\n    const erFrilanser = søker.harJobbetSomFrilans;\n    const næring = søker.selvstendigNæringsdrivendeInformasjon;\n    const frilans = søker.frilansInformasjon;\n    const unikeArbeidsforhold = getArbeidsforholdTilretteleggingOptions(\n        arbeidsforhold,\n        tilrettelegginger,\n        termindato,\n        intl,\n    );\n\n    const næringValg = harNæring && næring ? [getNæringTilretteleggingOption(tilrettelegginger, næring)] : [];\n\n    const frilansValg =\n        erFrilanser && frilans !== undefined ? [getFrilansTilretteleggingOption(tilrettelegginger, frilans)] : [];\n    return [...unikeArbeidsforhold, ...næringValg, ...frilansValg];\n};\n\nexport const validateVelgArbeidIsAnswered = (value: string, intl: IntlShape) => {\n    if (value.length === 0) {\n        return intlUtils(intl, 'valideringsfeil.tilrettelegging.påkrevd');\n    }\n    return undefined;\n};\n\nexport const cleanupOmValgArbeidFormData = (\n    values: VelgArbeidFormData,\n    options: Tilrettelegging[],\n): VelgArbeidFormData => {\n    const filteredValues = values.arbeidMedTilrettelegging.filter((val) =>\n        options.find((tilrettelegging) => tilrettelegging.id === val),\n    );\n    return { arbeidMedTilrettelegging: filteredValues };\n};\n","import { intlUtils } from '@navikt/fp-common';\nimport Arbeidsforhold, { UnikArbeidsforhold } from 'app/types/Arbeidsforhold';\nimport { Søker } from 'app/types/Søker';\nimport dayjs from 'dayjs';\nimport uniqBy from 'lodash/uniqBy';\nimport { IntlShape } from 'react-intl';\nimport { hasValue } from './validationUtils';\nimport { InntektsinformasjonFormData } from 'app/steps/inntektsinformasjon/inntektsinformasjonFormConfig';\nimport { convertYesOrNoOrUndefinedToBoolean } from '@navikt/fp-common/src/common/utils/formUtils';\nimport { getArbeidsforholdTilretteleggingOptions } from 'app/steps/velg-arbeidsforhold/velgArbeidFormUtils';\nimport Tilrettelegging, { Stilling } from 'app/types/Tilrettelegging';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { isISODateString } from '@navikt/ds-datepicker';\n\nexport const getAktiveArbeidsforhold = (arbeidsforhold: Arbeidsforhold[], termindato?: string): Arbeidsforhold[] => {\n    if (termindato === undefined) {\n        return arbeidsforhold;\n    }\n\n    return arbeidsforhold.filter((arb) =>\n        arb.tom ? dayjs(arb.tom).isSameOrAfter(dayjs(termindato).subtract(9, 'months'), 'day') : true,\n    );\n};\n\nconst getArbeidsgiverId = (arbeidsforhold: Arbeidsforhold): string => {\n    return arbeidsforhold.arbeidsgiverId || '';\n};\n\nexport const getTotalStillingsprosentPåSkjæringstidspunktet = (\n    stillinger: Stilling[],\n    skjæringstidspunkt: string | undefined,\n): number => {\n    if (hasValue(skjæringstidspunkt) && isISODateString(skjæringstidspunkt)) {\n        const perioderISkjæringstidspunktet = stillinger.filter((p) => {\n            if (!p.tom) {\n                return dayjs(skjæringstidspunkt).isSameOrAfter(dayjs(p.fom), 'd');\n            } else {\n                return dayjs(skjæringstidspunkt).isBetween(dayjs(p.fom), dayjs(p.tom), 'day', '[]');\n            }\n        });\n\n        if (perioderISkjæringstidspunktet) {\n            if (perioderISkjæringstidspunktet.some((p) => p.stillingsprosent === 0)) {\n                return 100;\n            }\n            const totalProsent = perioderISkjæringstidspunktet.reduce(\n                (ar, { stillingsprosent }) => ar + stillingsprosent,\n                0,\n            );\n            return totalProsent || 100;\n        }\n    }\n    return 100;\n};\n\nexport const getStillingerForLikeArbeidsforhold = (likeArbeidsforhold: Arbeidsforhold[]): Stilling[] => {\n    const perioderMedStillingsprosent = likeArbeidsforhold.map((p) => {\n        return {\n            fom: p.fom,\n            tom: p.tom,\n            stillingsprosent: p.stillingsprosent,\n        };\n    });\n    return perioderMedStillingsprosent;\n};\n\nexport const getUnikeArbeidsforhold = (\n    arbeidsforhold: Arbeidsforhold[] | undefined,\n    termindato: string,\n): UnikArbeidsforhold[] => {\n    if (arbeidsforhold !== undefined && arbeidsforhold.length > 0) {\n        const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, termindato);\n\n        const unike = uniqBy(aktiveArbeidsforhold, getArbeidsgiverId).map((forhold) => ({\n            id: forhold.id,\n            fom: forhold.fom,\n            tom: forhold.tom,\n            guid: forhold.id,\n            arbeidsgiverNavn: forhold.arbeidsgiverNavn,\n            arbeidsgiverId: forhold.arbeidsgiverId,\n            arbeidsgiverIdType: forhold.arbeidsgiverIdType,\n            stillinger: [{ fom: forhold.fom, tom: forhold.tom, stillingsprosent: forhold.stillingsprosent }],\n        }));\n        const unikeMedStillinger = unike.map((arbeid) => {\n            const likeArbeidsforhold = aktiveArbeidsforhold.filter(\n                (a) => getArbeidsgiverId(a) === arbeid.arbeidsgiverId,\n            );\n            if (likeArbeidsforhold && likeArbeidsforhold.length > 1) {\n                const alleTom = likeArbeidsforhold.map((a) => a.tom);\n                return {\n                    ...arbeid,\n                    fom: dateToISOString(dayjs.min(likeArbeidsforhold.map((a) => dayjs(a.fom)))!.toDate()),\n                    tom: alleTom.includes(undefined)\n                        ? undefined\n                        : dateToISOString(dayjs.max(alleTom.map((tom) => dayjs(tom)))!.toDate()),\n                    stillinger: getStillingerForLikeArbeidsforhold(likeArbeidsforhold),\n                };\n            } else {\n                return arbeid;\n            }\n        });\n        return unikeMedStillinger;\n    }\n\n    return [];\n};\n\nexport const søkerHarKunEtAktivtArbeid = (\n    termindato: string,\n    arbeidsforhold: Arbeidsforhold[],\n    erFrilanser: boolean,\n    harEgenNæring: boolean,\n) => {\n    const aktiveUnikeArbeidsforhold = getUnikeArbeidsforhold(arbeidsforhold, termindato);\n    return (\n        (aktiveUnikeArbeidsforhold.length === 1 && !erFrilanser && !harEgenNæring) ||\n        (aktiveUnikeArbeidsforhold.length === 0 && erFrilanser && !harEgenNæring) ||\n        (aktiveUnikeArbeidsforhold.length === 0 && !erFrilanser && harEgenNæring)\n    );\n};\n\nexport const søkerHarKunEttARegArbeidsforholdForTilrettelegging = (\n    formValues: Partial<InntektsinformasjonFormData>,\n    aktiveArbeidsforhold: Arbeidsforhold[],\n    termindato: string,\n) => {\n    return (\n        hasValue(formValues.hattInntektSomFrilans) &&\n        hasValue(formValues.hattInntektSomNæringsdrivende) &&\n        søkerHarKunEtAktivtArbeid(\n            termindato,\n            aktiveArbeidsforhold,\n            !!convertYesOrNoOrUndefinedToBoolean(formValues.hattInntektSomFrilans),\n            !!convertYesOrNoOrUndefinedToBoolean(formValues.hattInntektSomNæringsdrivende),\n        ) &&\n        aktiveArbeidsforhold.length > 0\n    );\n};\n\nexport const getAutomatiskValgtTilretteleggingHvisKunEtArbeid = (\n    formValues: Partial<InntektsinformasjonFormData>,\n    aktiveArbeidsforhold: Arbeidsforhold[],\n    termindato: string,\n    tilrettelegging: Tilrettelegging[],\n    intl: IntlShape,\n) => {\n    let automatiskValgtTilrettelegging = undefined;\n    const kunEtAregArbeidsforholdForTilrettelegging = søkerHarKunEttARegArbeidsforholdForTilrettelegging(\n        formValues,\n        aktiveArbeidsforhold,\n        termindato,\n    );\n    if (kunEtAregArbeidsforholdForTilrettelegging) {\n        automatiskValgtTilrettelegging = getArbeidsforholdTilretteleggingOptions(\n            aktiveArbeidsforhold,\n            tilrettelegging,\n            termindato,\n            intl,\n        )[0];\n    }\n    return automatiskValgtTilrettelegging;\n};\n\nexport const getTekstOmManglendeArbeidsforhold = (søker: Søker, intl: IntlShape): string => {\n    const erFrilanser = søker.harJobbetSomFrilans;\n    const harNæring = søker.harJobbetSomSelvstendigNæringsdrivende;\n    const harJobbetIUtlandet = søker.harHattAnnenInntekt;\n    if (erFrilanser && !harNæring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.harIkkeNæringEllerJobbIUtlandet');\n    }\n    if (!erFrilanser && harNæring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.erIkkeFrilanserEllerJobbIUtlandet');\n    }\n    if (!erFrilanser && !harNæring && harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.erIkkeFrilanserEllerNæringsdrivende');\n    }\n    if (erFrilanser && harNæring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.harIkkeJobbIUtlandet');\n    }\n    if (erFrilanser && !harNæring && harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.harIkkeNæring');\n    }\n    if (!erFrilanser && !harNæring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.erIkkeFrilanserHarIkkeNæringJobbetIkkeIUtlandet');\n    }\n    return intlUtils(intl, 'oppsummering.erIkkeFrilanser');\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { TilOgMedDatoType, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\n\nexport enum DelivisTilretteleggingPeriodeType {\n    'SAMMME_PERIODE_FREM_TIL_TERMIN' = 'SAMMME_PERIODE_FREM_TIL_TERMIN',\n    'VARIERTE_PERIODER' = 'VARIERTE_PERIODER',\n}\n\nexport enum TilretteleggingFormField {\n    behovForTilretteleggingFom = 'behovForTilretteleggingFom',\n    tilretteleggingType = 'tilretteleggingType',\n    delvisTilretteleggingPeriodeType = 'delvisTilretteleggingPeriodeType',\n    enPeriodeMedTilretteleggingFom = 'enPeriodeMedTilretteleggingFom',\n    enPeriodeMedTilretteleggingStillingsprosent = 'enPeriodeMedTilretteleggingStillingsprosent',\n    enPeriodeMedTilretteleggingTomType = 'enPeriodeMedTilretteleggingTomType',\n    enPeriodeMedTilretteleggingTilbakeIJobbDato = 'enPeriodeMedTilretteleggingTilbakeIJobbDato',\n    tilretteleggingstiltak = 'tilretteleggingstiltak',\n    risikofaktorer = 'risikofaktorer',\n}\n\nexport interface TilretteleggingFormData {\n    [TilretteleggingFormField.behovForTilretteleggingFom]: string;\n    [TilretteleggingFormField.tilretteleggingType]: TilretteleggingstypeOptions;\n    [TilretteleggingFormField.delvisTilretteleggingPeriodeType]: DelivisTilretteleggingPeriodeType | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingFom]: string | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent]: string | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTomType]: TilOgMedDatoType | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato]: string | undefined;\n    [TilretteleggingFormField.tilretteleggingstiltak]: string | undefined;\n    [TilretteleggingFormField.risikofaktorer]: string | undefined;\n}\n\nexport const TilretteleggingFormComponents = getTypedFormComponents<\n    TilretteleggingFormField,\n    TilretteleggingFormData\n>();\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { PeriodeMedVariasjon } from 'app/types/Tilrettelegging';\n\nexport enum PerioderFormField {\n    varierendePerioder = 'varierendePerioder',\n}\n\nexport interface PerioderFormData {\n    [PerioderFormField.varierendePerioder]: PeriodeMedVariasjon[];\n}\n\nexport const PerioderFormComponents = getTypedFormComponents<PerioderFormField | string, PerioderFormData>();\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { getFloatFromString } from '@navikt/fp-common';\nimport Tilrettelegging, {\n    PeriodeMedVariasjon,\n    Stilling,\n    TilOgMedDatoType,\n    TilretteleggingPeriode,\n    Tilretteleggingstype,\n    TilretteleggingstypeOptions,\n} from 'app/types/Tilrettelegging';\nimport dayjs from 'dayjs';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { PerioderFormData } from 'app/steps/perioder/perioderStepFormConfig';\nimport { getTotalStillingsprosentPåSkjæringstidspunktet } from './arbeidsforholdUtils';\n\nexport const getValgtTilrettelegging = (\n    allTilretteleggingOptions: Tilrettelegging[],\n    valgtTilrettelegging: string[],\n) => {\n    const selectedTilrettelegging = allTilretteleggingOptions.filter((o) =>\n        valgtTilrettelegging.find((t) => t === o.id),\n    );\n    return selectedTilrettelegging;\n};\n\nconst mapTilretteleggingTilPeriode = (\n    tilrettelegging: Tilrettelegging,\n    type: Tilretteleggingstype,\n    stillingsprosent: number,\n    fom: string,\n    tom: string,\n): TilretteleggingPeriode => {\n    return {\n        type,\n        behovForTilretteleggingFom: tilrettelegging.behovForTilretteleggingFom,\n        arbeidsforhold: tilrettelegging.arbeidsforhold,\n        vedlegg: tilrettelegging.vedlegg.map((v) => v.id),\n        fom,\n        tom,\n        stillingsprosent,\n        risikofaktorer: tilrettelegging.risikofaktorer,\n        tilretteleggingstiltak: tilrettelegging.tilretteleggingstiltak,\n    };\n};\n\nconst getPeriodeMedHelTilretteleggingFremTilSisteSvpDag = (\n    sistePeriode: TilretteleggingPeriode,\n    sisteDagForSvangerskapspenger: Date,\n    opprinneligStillingsprosent: number,\n): TilretteleggingPeriode => {\n    return {\n        type: Tilretteleggingstype.HEL,\n        behovForTilretteleggingFom: sistePeriode.behovForTilretteleggingFom,\n        fom: dateToISOString(dayjs(sistePeriode.tom).add(1, 'd').toDate()),\n        tom: dateToISOString(sisteDagForSvangerskapspenger),\n        arbeidsforhold: sistePeriode.arbeidsforhold,\n        vedlegg: sistePeriode.vedlegg,\n        risikofaktorer: sistePeriode.risikofaktorer,\n        tilretteleggingstiltak: sistePeriode.tilretteleggingstiltak,\n        stillingsprosent: opprinneligStillingsprosent,\n    };\n};\n\nconst mappedTilretteleggingMedEnPeriode = (\n    tilrettelegging: Tilrettelegging,\n    sisteDagForSvangerskapspenger: Date,\n    opprinneligstillingsprosent: number,\n): TilretteleggingPeriode[] => {\n    const perioder = [] as TilretteleggingPeriode[];\n    const stillingsprosent =\n        tilrettelegging.type === TilretteleggingstypeOptions.DELVIS\n            ? getFloatFromString(tilrettelegging.enPeriodeMedTilretteleggingStillingsprosent)\n            : 0;\n    const fom = tilrettelegging.enPeriodeMedTilretteleggingFom!;\n    const tom =\n        tilrettelegging.enPeriodeMedTilretteleggingTomType === TilOgMedDatoType.VALGFRI_DATO\n            ? dayjs(tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato).subtract(1, 'day').toString()!\n            : dateToISOString(sisteDagForSvangerskapspenger);\n    const type =\n        tilrettelegging.type === TilretteleggingstypeOptions.DELVIS && stillingsprosent && stillingsprosent > 0\n            ? Tilretteleggingstype.DELVIS\n            : Tilretteleggingstype.INGEN;\n    const mappedPeriode = mapTilretteleggingTilPeriode(tilrettelegging, type, stillingsprosent!, fom, tom);\n    perioder.push(mappedPeriode);\n    if (!dayjs(mappedPeriode.tom).isSame(sisteDagForSvangerskapspenger, 'day')) {\n        perioder.push(\n            getPeriodeMedHelTilretteleggingFremTilSisteSvpDag(\n                mappedPeriode,\n                sisteDagForSvangerskapspenger,\n                opprinneligstillingsprosent,\n            ),\n        );\n    }\n    return perioder;\n};\n\nconst mappedTilretteleggingMedVarierendePerioder = (\n    tilrettelegging: Tilrettelegging,\n    sisteDagForSvangerskapspenger: Date,\n    opprinneligStillingsprosent: number,\n): TilretteleggingPeriode[] => {\n    const allePerioder = tilrettelegging.varierendePerioder!.map((periode) => {\n        const stillingsprosent = getFloatFromString(periode.stillingsprosent);\n        let type =\n            periode.type === TilretteleggingstypeOptions.DELVIS\n                ? Tilretteleggingstype.DELVIS\n                : Tilretteleggingstype.INGEN;\n        if (stillingsprosent === 0) {\n            type = Tilretteleggingstype.INGEN;\n        } else if (opprinneligStillingsprosent === 0 && stillingsprosent === 100) {\n            type = Tilretteleggingstype.HEL;\n        } else if (stillingsprosent === opprinneligStillingsprosent) {\n            type = Tilretteleggingstype.HEL;\n        }\n        const tom =\n            periode.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP\n                ? dateToISOString(sisteDagForSvangerskapspenger)\n                : periode.tom!;\n        return mapTilretteleggingTilPeriode(tilrettelegging, type, stillingsprosent!, periode.fom, tom);\n    });\n    const sistePeriode = allePerioder[allePerioder.length - 1];\n    if (!dayjs(sistePeriode.tom).isSame(sisteDagForSvangerskapspenger, 'day')) {\n        allePerioder.push(\n            getPeriodeMedHelTilretteleggingFremTilSisteSvpDag(\n                sistePeriode,\n                sisteDagForSvangerskapspenger,\n                opprinneligStillingsprosent,\n            ),\n        );\n    }\n    return allePerioder;\n};\n\nexport const sorterTilretteleggingsperioder = (\n    p1: TilretteleggingPeriode | PeriodeMedVariasjon,\n    p2: TilretteleggingPeriode | PeriodeMedVariasjon,\n) => {\n    if (dayjs(p1.fom).isBefore(p2.fom, 'day')) {\n        return -1;\n    }\n    if (dayjs(p1.fom).isSame(p2.fom, 'day')) {\n        return dayjs(p1.tom).isBefore(p2.tom, 'day') ? -1 : 1;\n    }\n    return 1;\n};\n\nexport const mapTilretteleggingTilPerioder = (\n    tilrettelegging: Tilrettelegging[],\n    sisteDagForSvangerskapspenger: Date,\n): TilretteleggingPeriode[] => {\n    const tilretteleggingMedEnPeriode = tilrettelegging.filter(\n        (t) => !t.varierendePerioder || t.varierendePerioder.length === 0,\n    );\n    const tilretteleggingMedVarierendePerioder = tilrettelegging.filter(\n        (t) => t.varierendePerioder && t.varierendePerioder.length > 0,\n    );\n    const mappedTilretteleggingerMedEnPeriode = tilretteleggingMedEnPeriode.map((t) => {\n        const opprinneligStillingsprosent = getTotalStillingsprosentPåSkjæringstidspunktet(\n            t.arbeidsforhold.stillinger,\n            t.enPeriodeMedTilretteleggingFom,\n        );\n        return mappedTilretteleggingMedEnPeriode(t, sisteDagForSvangerskapspenger, opprinneligStillingsprosent);\n    });\n    const mappedTilretteleggingAvFlerePerioder = tilretteleggingMedVarierendePerioder.map((t) => {\n        const opprinneligStillingsprosent = getOpprinneligStillingsprosent(\n            t.varierendePerioder,\n            t.arbeidsforhold.stillinger,\n        );\n        return mappedTilretteleggingMedVarierendePerioder(\n            t,\n            sisteDagForSvangerskapspenger,\n            opprinneligStillingsprosent,\n        );\n    });\n    const allePerioder = [\n        ...mappedTilretteleggingerMedEnPeriode.flat(1),\n        ...mappedTilretteleggingAvFlerePerioder.flat(1),\n    ];\n    return [...allePerioder].sort(sorterTilretteleggingsperioder);\n};\n\nexport const getNesteDagEtterSistePeriode = (\n    formvalues: Partial<PerioderFormData>,\n    sisteDagForSvangerskapspenger: Date,\n): string => {\n    if (!formvalues.varierendePerioder || formvalues.varierendePerioder.length === 0) {\n        return '';\n    }\n    const alleTomDatoer = formvalues.varierendePerioder\n        .filter((p) => isISODateString(p.tom) || p.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP)\n        .map((periode) => {\n            if (periode.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP) {\n                return dayjs(sisteDagForSvangerskapspenger).add(1, 'd');\n            } else {\n                return dayjs(periode.tom);\n            }\n        });\n\n    const maxTomDato = alleTomDatoer.length > 0 ? dayjs.max(alleTomDatoer) : undefined;\n    return maxTomDato ? dateToISOString(maxTomDato.add(1, 'd').toDate()) : '';\n};\n\nexport const getOpprinneligStillingsprosent = (\n    allePerioder: PeriodeMedVariasjon[] | undefined,\n    stillinger: Stilling[],\n) => {\n    const sorterePerioder = allePerioder ? [...allePerioder].sort(sorterTilretteleggingsperioder) : undefined;\n    const førstePeriodeFom = sorterePerioder && sorterePerioder.length > 0 ? sorterePerioder[0].fom : undefined;\n    return førstePeriodeFom ? getTotalStillingsprosentPåSkjæringstidspunktet(stillinger, førstePeriodeFom) : 100;\n};\n","const numberRegExp = RegExp(/^[-]?[0-9,.\\s]*$/);\n\nexport const trimNumberValue = (value: string): string => {\n    return value.replace(/,/g, '.').replace(/\\s/g, '').replace(/%/g, '');\n};\n\nexport const getFloatFromString = (value: string | undefined): number | undefined => {\n    if (value !== undefined && value !== null && value.length > 0 && numberRegExp.test(value)) {\n        const trimmedValue = trimNumberValue(value);\n        const numberOfPoints = (trimmedValue.match(/\\./g) || []).length;\n        if (numberOfPoints > 1) {\n            return undefined;\n        }\n        return parseFloat(trimmedValue.replace(',', '.'));\n    }\n    return undefined;\n};\n","import { PeriodeMedVariasjon, Tilrettelegging, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport { PerioderFormData, PerioderFormField } from './perioderStepFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { getNesteDagEtterSistePeriode } from 'app/utils/tilretteleggingUtils';\nimport { ISOStringToDate, intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\nimport { isISODateString } from '@navikt/ds-datepicker';\nimport { getFloatFromString } from 'app/utils/numberUtils';\n\nexport const getMåSendeNySøknad = (\n    periodeDerSøkerErTilbakeIOpprinneligStilling: PeriodeMedVariasjon | undefined,\n    currentPeriode: PeriodeMedVariasjon,\n    opprinneligStillingsprosent: number,\n): boolean => {\n    return (\n        !!periodeDerSøkerErTilbakeIOpprinneligStilling &&\n        hasValue(currentPeriode.fom) &&\n        hasValue(currentPeriode.stillingsprosent) &&\n        dayjs(currentPeriode.fom).isAfter(periodeDerSøkerErTilbakeIOpprinneligStilling.fom, 'day') &&\n        ((opprinneligStillingsprosent > 0 &&\n            getFloatFromString(currentPeriode.stillingsprosent)! < opprinneligStillingsprosent) ||\n            (opprinneligStillingsprosent === 0 && getFloatFromString(currentPeriode.stillingsprosent)! < 100))\n    );\n};\n\nexport const getInitPerioderFormDataValues = (): Readonly<PerioderFormData> => ({\n    [PerioderFormField.varierendePerioder]: [\n        {\n            type: TilretteleggingstypeOptions.DELVIS,\n            fom: '',\n            tom: '',\n            stillingsprosent: '',\n            tomType: undefined!,\n        },\n    ],\n});\n\nexport const getPerioderInitialValues = (tilrettelegging: Tilrettelegging): PerioderFormData => {\n    const initValues = getInitPerioderFormDataValues();\n    return {\n        varierendePerioder:\n            tilrettelegging.varierendePerioder && tilrettelegging.varierendePerioder.length > 0\n                ? tilrettelegging.varierendePerioder\n                : initValues.varierendePerioder,\n    };\n};\n\nexport const mapPerioderFormDataToState = (\n    id: string,\n    values: Partial<PerioderFormData>,\n    tilretteleggingFraState: Tilrettelegging[],\n): Tilrettelegging[] => {\n    const tilretteleggingForOppdatering = tilretteleggingFraState.find((t) => t.id === id);\n    const oppdatert = {\n        ...tilretteleggingForOppdatering,\n        varierendePerioder: values.varierendePerioder,\n    } as Tilrettelegging;\n\n    const nyTilretteleggingISøknad = tilretteleggingFraState.map((t) => {\n        return t.id === id ? oppdatert : t;\n    });\n    return nyTilretteleggingISøknad;\n};\n\nexport const getPeriodeDerSøkerErTilbakeIFullStilling = (\n    varierendePerioder: PeriodeMedVariasjon[] | undefined,\n    opprinneligStillingsprosent: number,\n): PeriodeMedVariasjon | undefined => {\n    return varierendePerioder\n        ? varierendePerioder.find((p) => {\n              if (opprinneligStillingsprosent > 0) {\n                  return (\n                      hasValue(p.stillingsprosent) &&\n                      getFloatFromString(p.stillingsprosent) === opprinneligStillingsprosent\n                  );\n              } else {\n                  return hasValue(p.stillingsprosent) && getFloatFromString(p.stillingsprosent) === 100;\n              }\n          })\n        : undefined;\n};\n\nexport const getUferdigPeriodeInput = (\n    formValues: Partial<PerioderFormData>,\n    sisteDagForSvangerskapspenger: Date,\n): PeriodeMedVariasjon => {\n    return {\n        fom: getNesteDagEtterSistePeriode(formValues, sisteDagForSvangerskapspenger),\n        tom: '',\n        stillingsprosent: '',\n        tomType: undefined!,\n        type: TilretteleggingstypeOptions.DELVIS,\n    } as PeriodeMedVariasjon;\n};\n\nexport const getPeriodeSideTittel = (erFlereTilrettelegginger: boolean, navn: string, intl: IntlShape): string => {\n    return erFlereTilrettelegginger\n        ? intlUtils(intl, 'steps.label.periode.flere', { navn })\n        : intlUtils(intl, 'steps.label.periode.en');\n};\n\nexport const getDescriptionTekst = (kanHaSVPFremTilTreUkerFørTermin: boolean, intl: IntlShape): string => {\n    return kanHaSVPFremTilTreUkerFørTermin\n        ? intlUtils(intl, 'perioder.varierende.description.termin')\n        : intlUtils(intl, 'perioder.varierende.description.fødsel');\n};\n\nexport const getMinDatoTom = (fom: string | undefined, minDatoFom: Date): Date => {\n    return hasValue(fom) && isISODateString(fom) ? ISOStringToDate(fom)! : minDatoFom;\n};\n","import {\n    DelivisTilretteleggingPeriodeType,\n    TilretteleggingFormData,\n    TilretteleggingFormField,\n} from './tilretteleggingStepFormConfig';\nimport {\n    Arbeidsforholdstype,\n    TilOgMedDatoType,\n    Tilrettelegging,\n    TilretteleggingstypeOptions,\n} from 'app/types/Tilrettelegging';\nimport { replaceInvisibleCharsWithSpace } from '@navikt/fp-common/src/common/utils/stringUtils';\nimport { QuestionVisibility } from '@navikt/sif-common-formik-ds/lib';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\n\nexport const getInitTilretteleggingFormDataValues = (): Readonly<TilretteleggingFormData> => ({\n    [TilretteleggingFormField.behovForTilretteleggingFom]: undefined!,\n    [TilretteleggingFormField.tilretteleggingType]: undefined!,\n    [TilretteleggingFormField.delvisTilretteleggingPeriodeType]: undefined,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingFom]: undefined,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent]: undefined,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTomType]: undefined!,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato]: undefined,\n    [TilretteleggingFormField.risikofaktorer]: undefined,\n    [TilretteleggingFormField.tilretteleggingstiltak]: undefined,\n});\n\nexport const getTilretteleggingInitialValues = (tilrettelegging: Tilrettelegging): TilretteleggingFormData => {\n    const initValues = getInitTilretteleggingFormDataValues();\n    return {\n        behovForTilretteleggingFom: tilrettelegging.behovForTilretteleggingFom || initValues.behovForTilretteleggingFom,\n        tilretteleggingType: tilrettelegging.type || initValues.tilretteleggingType,\n        delvisTilretteleggingPeriodeType:\n            tilrettelegging.delvisTilretteleggingPeriodeType || initValues.delvisTilretteleggingPeriodeType,\n        risikofaktorer: tilrettelegging.risikofaktorer || initValues.risikofaktorer,\n        tilretteleggingstiltak: tilrettelegging.tilretteleggingstiltak || initValues.tilretteleggingstiltak,\n        enPeriodeMedTilretteleggingFom:\n            tilrettelegging.enPeriodeMedTilretteleggingFom || initValues.enPeriodeMedTilretteleggingFom,\n        enPeriodeMedTilretteleggingStillingsprosent:\n            tilrettelegging.enPeriodeMedTilretteleggingStillingsprosent ||\n            initValues.enPeriodeMedTilretteleggingStillingsprosent,\n        enPeriodeMedTilretteleggingTomType:\n            tilrettelegging.enPeriodeMedTilretteleggingTomType || initValues.enPeriodeMedTilretteleggingTomType,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato:\n            tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato ||\n            initValues.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n    };\n};\n\nexport const mapOmTilretteleggingFormDataToState = (\n    id: string,\n    values: Partial<TilretteleggingFormData>,\n    tilretteleggingFraState: Tilrettelegging[],\n    tilretteleggingForOppdatering: Tilrettelegging,\n): Tilrettelegging[] => {\n    const harVariertePerioder =\n        values.tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n        values.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER;\n    const oppdaterteVarierendePerioder = harVariertePerioder ? tilretteleggingForOppdatering?.varierendePerioder : [];\n    const oppdatert = {\n        ...tilretteleggingForOppdatering,\n        varierendePerioder: oppdaterteVarierendePerioder,\n        behovForTilretteleggingFom: values.behovForTilretteleggingFom,\n        arbeidsforhold: {\n            ...tilretteleggingForOppdatering.arbeidsforhold,\n        },\n        type: values.tilretteleggingType,\n        enPeriodeMedTilretteleggingFom: harVariertePerioder ? undefined : values.enPeriodeMedTilretteleggingFom,\n        enPeriodeMedTilretteleggingStillingsprosent: harVariertePerioder\n            ? undefined\n            : values.enPeriodeMedTilretteleggingStillingsprosent,\n        enPeriodeMedTilretteleggingTomType: harVariertePerioder ? undefined : values.enPeriodeMedTilretteleggingTomType,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato: harVariertePerioder\n            ? undefined\n            : values.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n        delvisTilretteleggingPeriodeType: values.delvisTilretteleggingPeriodeType,\n        risikofaktorer: hasValue(values.risikofaktorer)\n            ? replaceInvisibleCharsWithSpace(values.risikofaktorer!)\n            : undefined,\n        tilretteleggingstiltak: hasValue(values.tilretteleggingstiltak)\n            ? replaceInvisibleCharsWithSpace(values.tilretteleggingstiltak!)\n            : undefined,\n    } as Tilrettelegging;\n\n    const nyTilretteleggingISøknad = tilretteleggingFraState.map((t) => {\n        return t.id === id ? oppdatert : t;\n    });\n    return nyTilretteleggingISøknad;\n};\n\nexport const cleanUpTilretteleggingStepFormValues = (\n    values: TilretteleggingFormData,\n    visibility: QuestionVisibility<TilretteleggingFormField>,\n): TilretteleggingFormData => {\n    const initValues = getInitTilretteleggingFormDataValues();\n    const cleanedData: TilretteleggingFormData = {\n        ...values,\n        risikofaktorer: visibility.isVisible(TilretteleggingFormField.risikofaktorer)\n            ? values.risikofaktorer\n            : initValues.risikofaktorer,\n        tilretteleggingstiltak: visibility.isVisible(TilretteleggingFormField.tilretteleggingstiltak)\n            ? values.tilretteleggingstiltak\n            : initValues.tilretteleggingstiltak,\n        delvisTilretteleggingPeriodeType: visibility.isVisible(\n            TilretteleggingFormField.delvisTilretteleggingPeriodeType,\n        )\n            ? values.delvisTilretteleggingPeriodeType\n            : initValues.delvisTilretteleggingPeriodeType,\n        enPeriodeMedTilretteleggingFom: visibility.isVisible(TilretteleggingFormField.enPeriodeMedTilretteleggingFom)\n            ? values.enPeriodeMedTilretteleggingFom\n            : initValues.enPeriodeMedTilretteleggingFom,\n        enPeriodeMedTilretteleggingStillingsprosent: visibility.isVisible(\n            TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent,\n        )\n            ? values.enPeriodeMedTilretteleggingStillingsprosent\n            : initValues.enPeriodeMedTilretteleggingStillingsprosent,\n        enPeriodeMedTilretteleggingTomType: visibility.isVisible(\n            TilretteleggingFormField.enPeriodeMedTilretteleggingTomType,\n        )\n            ? values.enPeriodeMedTilretteleggingTomType\n            : initValues.enPeriodeMedTilretteleggingTomType,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato: visibility.isVisible(\n            TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n        )\n            ? values.enPeriodeMedTilretteleggingTilbakeIJobbDato\n            : initValues.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n    };\n\n    return cleanedData;\n};\n\nexport const getLabelPeriodeFom = (\n    tilretteleggingType: TilretteleggingstypeOptions | undefined,\n    intl: IntlShape,\n): string => {\n    return tilretteleggingType === TilretteleggingstypeOptions.INGEN\n        ? intlUtils(intl, 'tilrettelegging.sammePeriodeFremTilTerminFom.label.ingen')\n        : intlUtils(intl, 'tilrettelegging.sammePeriodeFremTilTerminFom.label.delvis');\n};\n\nexport const getLabelPeriodeTomType = (\n    tilretteleggingType: TilretteleggingstypeOptions | undefined,\n    intl: IntlShape,\n): string => {\n    return tilretteleggingType === TilretteleggingstypeOptions.INGEN\n        ? intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTomType.label.ingen')\n        : intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTomType.label.delvis');\n};\n\nexport const getLabelPeriodeTom = (\n    tilretteleggingType: TilretteleggingstypeOptions | undefined,\n    intl: IntlShape,\n): string => {\n    return tilretteleggingType === TilretteleggingstypeOptions.INGEN\n        ? intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato.label.ingen')\n        : intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato.label.delvis');\n};\n\nexport const getMinDatoPeriodeFom = (formValues: Partial<TilretteleggingFormData>, minDatoBehovFom: Date): Date => {\n    return hasValue(formValues.behovForTilretteleggingFom)\n        ? new Date(formValues.behovForTilretteleggingFom!)\n        : minDatoBehovFom;\n};\n\nexport const getMinDatoTilbakeIJobb = (formValues: Partial<TilretteleggingFormData>): Date => {\n    return hasValue(formValues.enPeriodeMedTilretteleggingFom)\n        ? dayjs(formValues.enPeriodeMedTilretteleggingFom).add(1, 'day').toDate()\n        : new Date(formValues.behovForTilretteleggingFom!);\n};\n\nexport const getTilretteleggingTypeLabel = (\n    erFlereTilrettelegginger: boolean,\n    typeArbeid: Arbeidsforholdstype,\n    navnArbeidsgiver: string,\n    intl: IntlShape,\n): string => {\n    if (erFlereTilrettelegginger && typeArbeid !== Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.label.flere', {\n            navnArbeidsgiver,\n        });\n    }\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.label.frilanser');\n    }\n    return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.label.en');\n};\n\nexport const getBehovForTilretteleggingFomLabel = (\n    erFlereTilrettelegginger: boolean,\n    typeArbeid: Arbeidsforholdstype,\n    navnArbeidsgiver: string,\n    intl: IntlShape,\n): string => {\n    if (erFlereTilrettelegginger && typeArbeid !== Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.label.flere', {\n            navnArbeidsgiver,\n        });\n    }\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.label.frilanser');\n    }\n    return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.label.en');\n};\n\nexport const getRadioOptionsTomType = (intl: IntlShape, kanHaSVPFremTilTreUkerFørTermin: boolean) => {\n    return [\n        {\n            label: intlUtils(intl, 'perioder.varierende.tomType.valgfriDato'),\n            value: TilOgMedDatoType.VALGFRI_DATO,\n        },\n        {\n            label: kanHaSVPFremTilTreUkerFørTermin\n                ? intlUtils(intl, 'perioder.varierende.tomType.treUkerFørTermin')\n                : intlUtils(intl, 'perioder.varierende.tomType.dagenFørFødsel'),\n            value: TilOgMedDatoType.SISTE_DAG_MED_SVP,\n        },\n    ];\n};\n\nexport const getTilretteleggingSideTittel = (\n    erFlereTilrettelegginger: boolean,\n    intl: IntlShape,\n    navn: string,\n): string => {\n    return erFlereTilrettelegginger\n        ? intlUtils(intl, 'steps.label.tilrettelegging.flere', { navn })\n        : intlUtils(intl, 'steps.label.tilrettelegging.en');\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { Attachment } from 'app/types/Attachment';\n\nexport enum SkjemaFormField {\n    vedlegg = 'vedlegg',\n}\n\nexport interface SkjemaFormData {\n    [SkjemaFormField.vedlegg]: Attachment[];\n}\n\nexport const initialSkjemaFormData: SkjemaFormData = {\n    [SkjemaFormField.vedlegg]: [],\n};\n\nexport const SkjemaFormComponents = getTypedFormComponents<SkjemaFormField, SkjemaFormData>();\n","import { intlUtils } from '@navikt/fp-common';\nimport { SkjemaFormData, initialSkjemaFormData } from './skjemaFormTypes';\nimport Tilrettelegging, { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { IntlShape } from 'react-intl';\n\nexport const getInitialSkjemaValuesFromState = (currentTilrettelegging: Tilrettelegging): SkjemaFormData => {\n    const vedleggForTilrettelegging = currentTilrettelegging.vedlegg;\n    return {\n        ...initialSkjemaFormData,\n        vedlegg: vedleggForTilrettelegging,\n    };\n};\n\nexport const mapTilretteleggingMedSkjema = (\n    tilretteleggingFraState: Tilrettelegging[],\n    currentTilrettelegging: Tilrettelegging,\n    values: SkjemaFormData,\n): Tilrettelegging[] => {\n    const oppdatert = {\n        ...currentTilrettelegging,\n        vedlegg: values.vedlegg,\n    } as Tilrettelegging;\n\n    const nyTilretteleggingISøknad = tilretteleggingFraState.map((t) => {\n        return t.id === currentTilrettelegging.id ? oppdatert : t;\n    });\n    return nyTilretteleggingISøknad;\n};\n\nexport const getSkjemaLegend = (typeArbeid: Arbeidsforholdstype, intl: IntlShape) => {\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'skjema.legend.frilanser');\n    }\n    if (typeArbeid === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'skjema.legend.selvstendig');\n    }\n    return intlUtils(intl, 'skjema.legend.virksomhet');\n};\n\nexport const getSkjemaSideTittel = (erFlereTilrettelegginger: boolean, intl: IntlShape, navn: string): string => {\n    return erFlereTilrettelegginger\n        ? intlUtils(intl, 'steps.label.skjema.flere', { navn })\n        : intlUtils(intl, 'steps.label.skjema.en');\n};\n","import { assertUnreachable, intlUtils } from '@navikt/fp-common';\nimport { getForrigeTilrettelegging, getNesteTilretteleggingId } from 'app/routes/SvangerskapspengesøknadRoutes';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Søker } from 'app/types/Søker';\nimport Tilrettelegging, { TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport { IntlShape } from 'react-intl';\nimport { InntektsinformasjonFormData } from './inntektsinformasjon/inntektsinformasjonFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport { søkerHarKunEtAktivtArbeid } from 'app/utils/arbeidsforholdUtils';\nimport { UtenlandsoppholdFormData } from './utenlandsopphold/utenlandsoppholdFormTypes';\nimport InformasjonOmUtenlandsopphold from 'app/types/InformasjonOmUtenlandsopphold';\nimport {\n    DelivisTilretteleggingPeriodeType,\n    TilretteleggingFormData,\n} from './tilrettelegging/tilretteleggingStepFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { frilansId } from 'app/types/Frilans';\nimport { egenNæringId } from 'app/types/EgenNæring';\nimport { Søknad } from 'app/types/Søknad';\nimport { getPeriodeSideTittel } from './perioder/perioderStepUtils';\nimport { getTilretteleggingSideTittel } from './tilrettelegging/tilretteleggingStepUtils';\nimport { getSkjemaSideTittel } from './skjema/skjemaFormUtils';\n\ntype BarnetStepId = 'barnet';\ntype InntektsinformasjonStepId = 'arbeid';\ntype FrilansStepId = 'frilans';\ntype NæringStepId = 'næring';\ntype ArbeidIUtlandetStepId = 'arbeidIUtlandet';\ntype TilretteleggingStepId = 'tilrettelegging';\ntype PeriodeStepId = 'periode';\ntype VelgArbeidStepId = 'velgArbeid';\ntype SkjemaStepId = 'skjema';\ntype UtenlandsoppholdStepId = 'utenlandsopphold';\ntype BoIUtlandetIFortidStepId = 'boIUtlandetIFortid';\ntype BoIUtlandetIFremtidStepId = 'boIUtlandetIFremtid';\ntype OppsummeringStepId = 'oppsummering';\n\ntype StepIdWithSetBackHref = UtenlandsoppholdStepId | BoIUtlandetIFortidStepId | FrilansStepId;\n\ntype StepIdWithComputedBackHref =\n    | BoIUtlandetIFremtidStepId\n    | InntektsinformasjonStepId\n    | NæringStepId\n    | ArbeidIUtlandetStepId\n    | VelgArbeidStepId\n    | SkjemaStepId\n    | TilretteleggingStepId\n    | PeriodeStepId\n    | OppsummeringStepId;\n\nexport type StepId = BarnetStepId | StepIdWithSetBackHref | StepIdWithComputedBackHref;\n\ninterface StepConfig {\n    id: StepId | string;\n    index: number;\n    label: string;\n}\n\nconst stepConfigFørstegangssøknad = (\n    intl: IntlShape,\n    søknad: Søknad,\n    arbeidsforhold: Arbeidsforhold[],\n): StepConfig[] => {\n    const steps = [\n        {\n            id: 'barnet',\n            index: 0,\n            label: intlUtils(intl, 'steps.label.barnet'),\n        },\n        {\n            id: 'utenlandsopphold',\n            index: 1,\n            label: intlUtils(intl, 'steps.label.utenlandsopphold'),\n        },\n    ] as StepConfig[];\n\n    if (søknad.informasjonOmUtenlandsopphold.iNorgeSiste12Mnd === false) {\n        steps.push({\n            id: 'boIUtlandetIFortid',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.boIUtlandetIFortid'),\n        });\n    }\n    if (søknad.informasjonOmUtenlandsopphold.iNorgeNeste12Mnd === false) {\n        steps.push({\n            id: 'boIUtlandetIFremtid',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.boIUtlandetIFremtid'),\n        });\n    }\n\n    steps.push({\n        id: 'arbeid',\n        index: steps.length,\n        label: intlUtils(intl, 'steps.label.arbeid'),\n    });\n\n    if (søknad.søker.harJobbetSomFrilans) {\n        steps.push({\n            id: 'frilans',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.frilans'),\n        });\n    }\n\n    if (søknad.søker.harJobbetSomSelvstendigNæringsdrivende) {\n        steps.push({\n            id: 'næring',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.næring'),\n        });\n    }\n\n    if (søknad.søker.harHattAnnenInntekt) {\n        steps.push({\n            id: 'arbeidIUtlandet',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.arbeidIUtlandet'),\n        });\n    }\n\n    const harKunEtArbeid =\n        søknad.barn && søknad.barn.termindato\n            ? søkerHarKunEtAktivtArbeid(\n                  søknad.barn.termindato,\n                  arbeidsforhold,\n                  søknad.søker.harJobbetSomFrilans,\n                  søknad.søker.harJobbetSomSelvstendigNæringsdrivende,\n              )\n            : true;\n\n    if (!harKunEtArbeid) {\n        steps.push({\n            id: 'velgArbeid',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.velgArbeid'),\n        });\n    }\n\n    if (søknad.tilrettelegging.length > 0) {\n        const erFlereTilrettelegginger = søknad.tilrettelegging.length > 1;\n        søknad.tilrettelegging.forEach((tilrettelegging: Tilrettelegging) => {\n            const navn = tilrettelegging.arbeidsforhold.navn;\n            steps.push({\n                id: `skjema-${tilrettelegging.id}`,\n                index: steps.length,\n                label: getSkjemaSideTittel(erFlereTilrettelegginger, intl, navn),\n            });\n            steps.push({\n                id: `tilrettelegging-${tilrettelegging.id}`,\n                index: steps.length,\n                label: getTilretteleggingSideTittel(erFlereTilrettelegginger, intl, navn),\n            });\n            if (\n                tilrettelegging.type === TilretteleggingstypeOptions.DELVIS &&\n                tilrettelegging.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n            ) {\n                steps.push({\n                    id: `periode-${tilrettelegging.id}`,\n                    index: steps.length,\n                    label: getPeriodeSideTittel(erFlereTilrettelegginger, navn, intl),\n                });\n            }\n        });\n    } else {\n        steps.push({\n            id: 'skjema',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.skjema.en'),\n        });\n        steps.push({\n            id: 'tilrettelegging',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.tilrettelegging.en'),\n        });\n    }\n\n    steps.push({\n        id: 'oppsummering',\n        index: steps.length,\n        label: intlUtils(intl, 'steps.label.oppsummering'),\n    });\n\n    return steps;\n};\n\nconst stepConfig = (intl: IntlShape, søknad: Søknad, arbeidsforhold: Arbeidsforhold[]): StepConfig[] => {\n    return stepConfigFørstegangssøknad(intl, søknad, arbeidsforhold);\n};\n\nexport const getNæringRouteIfNæring = (søker: Søker): SøknadRoutes | undefined => {\n    if (søker.harJobbetSomSelvstendigNæringsdrivende) {\n        return SøknadRoutes.NÆRING;\n    }\n    return undefined;\n};\n\nexport const getFrilansRouteIfFrilans = (søker: Søker): SøknadRoutes | undefined => {\n    if (søker.harJobbetSomFrilans) {\n        return SøknadRoutes.FRILANS;\n    }\n    return undefined;\n};\n\nexport const getArbeidUtlandRouteIfArbeidUtland = (søker: Søker): SøknadRoutes | undefined => {\n    if (søker.harHattAnnenInntekt) {\n        return SøknadRoutes.ARBEID_I_UTLANDET;\n    }\n    return undefined;\n};\n\nexport const getBackLinkForTilretteleggingSteg = (currentTilretteleggingId: string | undefined) => {\n    return `${SøknadRoutes.SKJEMA}/${currentTilretteleggingId}`;\n};\n\nexport const getBackLinkForOppsummeringSteg = (tilrettelegging: Tilrettelegging[]) => {\n    const sisteTilrettelegging = tilrettelegging[tilrettelegging?.length - 1];\n    if (\n        sisteTilrettelegging.type === TilretteleggingstypeOptions.DELVIS &&\n        sisteTilrettelegging.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n    ) {\n        return `${SøknadRoutes.PERIODER}/${sisteTilrettelegging.id}`;\n    }\n    return `${SøknadRoutes.TILRETTELEGGING}/${sisteTilrettelegging.id}`;\n};\n\nexport const getBackLinkForSkjemaSteg = (\n    termindato: string,\n    arbeidsforhold: Arbeidsforhold[],\n    søker: Søker,\n    tilrettelegginger: Tilrettelegging[] | undefined,\n    currentTilretteleggingId: string | undefined,\n) => {\n    if (!tilrettelegginger) {\n        return SøknadRoutes.ARBEID;\n    }\n    const forrigeTilrettelegging = getForrigeTilrettelegging(tilrettelegginger, currentTilretteleggingId);\n    if (forrigeTilrettelegging) {\n        if (\n            forrigeTilrettelegging.type === TilretteleggingstypeOptions.DELVIS &&\n            forrigeTilrettelegging.delvisTilretteleggingPeriodeType ===\n                DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n        ) {\n            return `${SøknadRoutes.PERIODER}/${forrigeTilrettelegging.id}`;\n        }\n        return `${SøknadRoutes.TILRETTELEGGING}/${forrigeTilrettelegging.id}`;\n    }\n    const harKunEtArbeid = søkerHarKunEtAktivtArbeid(\n        termindato,\n        arbeidsforhold,\n        søker.harJobbetSomFrilans,\n        søker.harJobbetSomSelvstendigNæringsdrivende,\n    );\n    if (harKunEtArbeid) {\n        return getBackLinkForVelgArbeidSteg(søker);\n    }\n    return SøknadRoutes.VELG_ARBEID;\n};\n\nexport const getBackLinkPerioderSteg = (currentTilretteleggingId: string | undefined) => {\n    return `${SøknadRoutes.TILRETTELEGGING}/${currentTilretteleggingId}`;\n};\n\nexport const getBackLinkForNæringSteg = (søker: Søker | undefined) => {\n    if (!søker) {\n        return SøknadRoutes.ARBEID;\n    }\n    return getFrilansRouteIfFrilans(søker) ?? SøknadRoutes.ARBEID;\n};\n\nexport const getBackLinkForArbeidIUtlandetSteg = (søker: Søker | undefined) => {\n    if (!søker) {\n        return SøknadRoutes.ARBEID;\n    }\n    return getNæringRouteIfNæring(søker) ?? getFrilansRouteIfFrilans(søker) ?? SøknadRoutes.ARBEID;\n};\n\nexport const getBackLinkForVelgArbeidSteg = (søker: Søker | undefined) => {\n    if (!søker) {\n        return SøknadRoutes.ARBEID;\n    }\n    return (\n        getArbeidUtlandRouteIfArbeidUtland(søker) ??\n        getNæringRouteIfNæring(søker) ??\n        getFrilansRouteIfFrilans(søker) ??\n        SøknadRoutes.ARBEID\n    );\n};\n\nexport const getBackLinkForBostedIFremtid = (informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold) => {\n    if (!informasjonOmUtenlandsopphold.iNorgeSiste12Mnd) {\n        return SøknadRoutes.HAR_BODD_I_UTLANDET;\n    }\n    return SøknadRoutes.UTENLANDSOPPHOLD;\n};\n\nexport const getBackLinkForArbeidSteg = (informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold) => {\n    if (!informasjonOmUtenlandsopphold.iNorgeNeste12Mnd) {\n        return SøknadRoutes.SKAL_BO_I_UTLANDET;\n    }\n    if (!informasjonOmUtenlandsopphold.iNorgeSiste12Mnd) {\n        return SøknadRoutes.HAR_BODD_I_UTLANDET;\n    }\n    return SøknadRoutes.UTENLANDSOPPHOLD;\n};\n\nexport const getPreviousSetStepHref = (id: StepIdWithSetBackHref): string => {\n    let href;\n    switch (id) {\n        case 'utenlandsopphold':\n            href = SøknadRoutes.BARNET;\n            break;\n        case 'boIUtlandetIFortid':\n            href = SøknadRoutes.UTENLANDSOPPHOLD;\n            break;\n        case 'frilans':\n            href = SøknadRoutes.ARBEID;\n            break;\n        default:\n            return assertUnreachable(id, `Forsøkt å nå en side som ikke er tilgjengelig i søknaden: ${id}`);\n    }\n\n    return href;\n};\n\nexport default stepConfig;\n\nexport const getNextRouteForTilretteleggingSteg = (\n    values: Partial<TilretteleggingFormData>,\n    tilrettelegging: Tilrettelegging[],\n    currentTilretteleggingId: string,\n): string => {\n    const nesteTilretteleggingId = getNesteTilretteleggingId(tilrettelegging, currentTilretteleggingId);\n\n    let nextRoute = SøknadRoutes.OPPSUMMERING.toString();\n    if (\n        values.tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n        values.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n    ) {\n        nextRoute = `${SøknadRoutes.PERIODER}/${currentTilretteleggingId}`;\n    } else if (nesteTilretteleggingId) {\n        nextRoute = `${SøknadRoutes.SKJEMA}/${nesteTilretteleggingId}`;\n    }\n    return nextRoute;\n};\n\nexport const getNextRouteForInntektsinformasjon = (\n    automatiskValgtTilrettelegging: Tilrettelegging | undefined,\n    values: Partial<InntektsinformasjonFormData>,\n): string => {\n    if (hasValue(values.hattInntektSomFrilans) && values.hattInntektSomFrilans === YesOrNo.YES) {\n        return SøknadRoutes.FRILANS.toString();\n    }\n    if (hasValue(values.hattInntektSomNæringsdrivende) && values.hattInntektSomNæringsdrivende === YesOrNo.YES) {\n        return SøknadRoutes.NÆRING.toString();\n    }\n    if (hasValue(values.hattArbeidIUtlandet) && values.hattArbeidIUtlandet === YesOrNo.YES) {\n        return SøknadRoutes.ARBEID_I_UTLANDET.toString();\n    }\n    if (automatiskValgtTilrettelegging) {\n        return `${SøknadRoutes.SKJEMA}/${automatiskValgtTilrettelegging.id}`;\n    }\n    return SøknadRoutes.VELG_ARBEID.toString();\n};\n\nexport const getNextRouteForUtenlandsopphold = (values: Partial<UtenlandsoppholdFormData>) => {\n    if (hasValue(values.harBoddINorgeSiste12Mnd) && values.harBoddINorgeSiste12Mnd === YesOrNo.NO) {\n        return SøknadRoutes.HAR_BODD_I_UTLANDET;\n    }\n    if (hasValue(values.skalBoINorgeNeste12Mnd) && values.skalBoINorgeNeste12Mnd === YesOrNo.NO) {\n        return SøknadRoutes.SKAL_BO_I_UTLANDET;\n    }\n    return SøknadRoutes.ARBEID;\n};\n\nexport const getNextRouteForBostedIFortid = (informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold) => {\n    if (!informasjonOmUtenlandsopphold.iNorgeNeste12Mnd) {\n        return SøknadRoutes.SKAL_BO_I_UTLANDET;\n    }\n    return SøknadRoutes.ARBEID;\n};\n\nexport const getNextRouteValgAvArbeidEllerSkjema = (\n    termindato: string,\n    arbeidsforhold: Arbeidsforhold[],\n    søker: Søker,\n) => {\n    const harKunEtArbeid = søkerHarKunEtAktivtArbeid(\n        termindato,\n        arbeidsforhold,\n        søker.harJobbetSomFrilans,\n        søker.harJobbetSomSelvstendigNæringsdrivende,\n    );\n    if (harKunEtArbeid) {\n        if (arbeidsforhold.length === 0) {\n            const frilansEllerNæringId = søker.harJobbetSomFrilans ? frilansId : egenNæringId;\n            return `${SøknadRoutes.SKJEMA}/${frilansEllerNæringId}`;\n        } else {\n            return `${SøknadRoutes.SKJEMA}/${arbeidsforhold[0].id}`;\n        }\n    }\n    return SøknadRoutes.VELG_ARBEID;\n};\n\nexport const getNextRouteForFrilans = (søker: Søker, termindato: string, arbeidsforhold: Arbeidsforhold[]) => {\n    return (\n        getNæringRouteIfNæring(søker) ??\n        getArbeidUtlandRouteIfArbeidUtland(søker) ??\n        getNextRouteValgAvArbeidEllerSkjema(termindato, arbeidsforhold, søker)\n    );\n};\n\nexport const getNextRouteForNæring = (søker: Søker, termindato: string, arbeidsforhold: Arbeidsforhold[]) => {\n    return (\n        getArbeidUtlandRouteIfArbeidUtland(søker) ??\n        getNextRouteValgAvArbeidEllerSkjema(termindato, arbeidsforhold, søker)\n    );\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { etterDagensDato, intlUtils } from '@navikt/fp-common';\nimport { niMånederFremITid, etÅrSiden, enMånedSiden, halvannetÅrSiden } from 'app/utils/dateUtils';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validateTermindato = (intl: IntlShape, fødselsdato: string | undefined) => (termindato: string) => {\n    if (!hasValue(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.duMåOppgi');\n    }\n\n    if (!isISODateString(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.ugyldigDatoFormat');\n    }\n\n    if (dayjs(termindato).isSameOrAfter(niMånederFremITid(new Date()), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.forLangtFremITid');\n    }\n    if (dayjs(termindato).isBefore(enMånedSiden(new Date()), 'day') && !fødselsdato) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.vennligstOppgiBarnetsFødselsDato');\n    }\n    if (dayjs(termindato).isBefore(etÅrSiden(new Date()), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.forLangtTilbakeITid');\n    }\n    if (fødselsdato && !dayjs(termindato).subtract(6, 'months').isSameOrBefore(dayjs(fødselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.6mndEtterFødsel');\n    }\n    if (fødselsdato && !dayjs(termindato).add(1, 'months').isSameOrAfter(dayjs(fødselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.1mndFørFødsel');\n    }\n\n    return undefined;\n};\n\nexport const validateFødselsdato = (intl: IntlShape) => (fødselsdato: string) => {\n    if (!hasValue(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.fødselsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.fødselsdato.ugyldigDatoFormat');\n    }\n\n    if (etterDagensDato(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.fødselsdato.måVæreIdagEllerTidligere');\n    }\n\n    if (dayjs(fødselsdato).isBefore(halvannetÅrSiden(new Date()), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.forLangtTilbakeITid');\n    }\n\n    return undefined;\n};\n","import { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { Søknad } from 'app/types/Søknad';\n\nconst useSøknad = (): Søknad => {\n    const { state } = useSvangerskapspengerContext();\n    return state.søknad;\n};\n\nexport default useSøknad;\n","import { useNavigate } from 'react-router-dom';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useCallback } from 'react';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\n\nconst useAvbrytSøknad = () => {\n    const navigate = useNavigate();\n    const { dispatch } = useSvangerskapspengerContext();\n\n    const avbrytSøknadHandler = useCallback(() => {\n        logAmplitudeEvent('applikasjon-hendelse', {\n            app: 'svangerskapspengesoknad',\n            team: 'foreldrepenger',\n            hendelse: 'avbrutt',\n        });\n\n        dispatch(actionCreator.avbrytSøknad());\n        navigate('/');\n    }, [navigate, dispatch]);\n\n    return avbrytSøknadHandler;\n};\n\nexport default useAvbrytSøknad;\n","import { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\n\nconst useSøkerinfo = (): Søkerinfo => {\n    const { state } = useSvangerskapspengerContext();\n    return state.søkerinfo;\n};\n\nexport default useSøkerinfo;\n","import { Block, Step, StepButtonWrapper, intlUtils, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { BarnetFormComponents, BarnetFormData, BarnetFormField } from './barnetFormConfig';\nimport {\n    cleanupOmBarnetFormData,\n    getBarnetInitialValues,\n    getMinDatoTermin,\n    mapOmBarnetFormDataToState,\n} from './barnetUtils';\nimport barnetQuestionsConfig from './barnetQuestionsConfig';\nimport stepConfig from '../stepsConfig';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { BodyShort, Button, ReadMore } from '@navikt/ds-react';\nimport { validateFødselsdato, validateTermindato } from './barnetValidering';\nimport dayjs from 'dayjs';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport { niMånederFremITid, halvannetÅrSiden } from 'app/utils/dateUtils';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\n\nconst Barnet: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const søknad = useSøknad();\n    const { barn } = søknad;\n    const { arbeidsforhold } = useSøkerinfo();\n    const onValidSubmitHandler = (values: Partial<BarnetFormData>) => {\n        const barn = mapOmBarnetFormDataToState(values);\n        return [actionCreator.setBarn(barn)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, SøknadRoutes.UTENLANDSOPPHOLD);\n    const onAvbrytSøknad = useAvbrytSøknad();\n\n    return (\n        <BarnetFormComponents.FormikWrapper\n            initialValues={getBarnetInitialValues(barn)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = barnetQuestionsConfig.getVisbility({\n                    ...formValues,\n                } as BarnetFormData);\n                const minDatoTermin = getMinDatoTermin(formValues.erBarnetFødt!, formValues.fødselsdato!);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"barnet\"\n                        pageTitle={intlUtils(intl, 'steps.label.barnet')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <BarnetFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupOmBarnetFormData(values, visibility)}\n                        >\n                            <Block padBottom=\"xxl\">\n                                <Block padBottom=\"m\">\n                                    <BarnetFormComponents.YesOrNoQuestion\n                                        name={BarnetFormField.erBarnetFødt}\n                                        legend={intlUtils(intl, 'barnet.erBarnetFødt')}\n                                        validate={(value) =>\n                                            validateYesOrNoIsAnswered(\n                                                value,\n                                                intlUtils(intl, 'valideringsfeil.barnet.erBarnetFødt.påkrevd'),\n                                            )\n                                        }\n                                    />\n                                </Block>\n                                <ReadMore header={intlUtils(intl, 'barnet.erBarnetFødt.merInfo.tittel')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"barnet.erBarnetFødt.merInfo.tekst\" />\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(BarnetFormField.fødselsdato)}>\n                                <BarnetFormComponents.DatePicker\n                                    name={BarnetFormField.fødselsdato}\n                                    label={intlUtils(intl, 'barnet.fødselsdato')}\n                                    minDate={halvannetÅrSiden(new Date())}\n                                    maxDate={dayjs().toDate()}\n                                    validate={validateFødselsdato(intl)}\n                                    placeholder={'dd.mm.åååå'}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={true}>\n                                <Block padBottom=\"l\">\n                                    <BarnetFormComponents.DatePicker\n                                        name={BarnetFormField.termindato}\n                                        label={intlUtils(intl, 'barnet.termindato')}\n                                        placeholder={'dd.mm.åååå'}\n                                        minDate={minDatoTermin}\n                                        maxDate={niMånederFremITid(new Date())}\n                                        validate={validateTermindato(intl, formValues.fødselsdato)}\n                                    />\n                                </Block>\n                                <ReadMore header={intlUtils(intl, 'barnet.termindato.merInfo.tittel')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"barnet.termindato.merInfo.tekst\" />\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </BarnetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Barnet;\n","import { BodyShort } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\n\ninterface Props {\n    harArbeidsforhold: boolean;\n}\n\nconst HarIkkeArbeidsforhold: FunctionComponent<Props> = ({ harArbeidsforhold }) => {\n    const intl = useIntl();\n\n    if (harArbeidsforhold) {\n        return null;\n    }\n\n    return (\n        <div className=\"arbeidsforholdInfoBox\" style={{ marginBottom: '1rem' }}>\n            <BodyShort>\n                {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.ingenRegistrerteArbeidsforhold')}\n            </BodyShort>\n        </div>\n    );\n};\n\nexport default HarIkkeArbeidsforhold;\n","import { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Block, bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport { BodyShort, Label } from '@navikt/ds-react';\n\ninterface Props {\n    arbeidsforhold: Arbeidsforhold[];\n    harArbeidsforhold: boolean;\n}\n\nconst HarArbeidsforhold: FunctionComponent<Props> = ({ arbeidsforhold, harArbeidsforhold }: Props) => {\n    const intl = useIntl();\n\n    if (!harArbeidsforhold) {\n        return null;\n    }\n\n    const bem = bemUtils('arbeidsforholdInfoBox');\n\n    return (\n        <ul className={bem.element('arbeidsforholdList')}>\n            {arbeidsforhold.map((arbforhold: Arbeidsforhold) => (\n                <li key={arbforhold.arbeidsgiverId + arbforhold.fom + arbforhold.tom}>\n                    <div className={bem.block}>\n                        <div className={bem.element('topRow')}>\n                            <Label>\n                                {arbforhold.arbeidsgiverIdType === 'orgnr' || arbforhold.arbeidsgiverNavn\n                                    ? arbforhold.arbeidsgiverNavn\n                                    : intlUtils(intl, 'privat.arbeidsgiver')}\n                            </Label>\n                            <BodyShort className={bem.element('stillingsprosent')}>\n                                {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.stillingsprosent', {\n                                    stillingsprosent: arbforhold.stillingsprosent,\n                                })}\n                            </BodyShort>\n                        </div>\n                        <Block padBottom=\"m\">\n                            {arbforhold.arbeidsgiverIdType === 'orgnr' && (\n                                <BodyShort>\n                                    {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.organisasjonsnummer', {\n                                        organisasjonsnummer: arbforhold.arbeidsgiverId,\n                                    })}\n                                </BodyShort>\n                            )}\n                        </Block>\n                        <BodyShort>\n                            {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.periode', {\n                                fom: formatDate(arbforhold.fom),\n                                tom: arbforhold.tom ? formatDate(arbforhold.tom) : intlUtils(intl, 'pågående'),\n                            })}\n                        </BodyShort>\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n};\nexport default HarArbeidsforhold;\n","import Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport HarIkkeArbeidsforhold from './HarIkkeArbeidsforhold';\nimport HarArbeidsforhold from './HarArbeidsforhold';\nimport { BodyShort, ReadMore } from '@navikt/ds-react';\n\nimport './arbeidsforholdInformasjon.css';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { intlUtils } from '@navikt/fp-common';\n\ninterface Props {\n    arbeidsforhold: Arbeidsforhold[];\n    visManglerInfo?: boolean;\n}\nconst ArbeidsforholdInformasjon: React.FunctionComponent<Props> = ({ arbeidsforhold, visManglerInfo = true }) => {\n    const harArbeidsforhold = arbeidsforhold !== undefined && arbeidsforhold.length > 0;\n    const intl = useIntl();\n\n    return (\n        <div style={{ marginTop: '1rem' }}>\n            <HarIkkeArbeidsforhold harArbeidsforhold={harArbeidsforhold} />\n            <HarArbeidsforhold harArbeidsforhold={harArbeidsforhold} arbeidsforhold={arbeidsforhold} />\n            {visManglerInfo && (\n                <ReadMore header={intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.info')}>\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.arbeidsforhold.tekst\" />\n                    </BodyShort>\n                </ReadMore>\n            )}\n        </div>\n    );\n};\n\nexport default ArbeidsforholdInformasjon;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum InntektsinformasjonFormField {\n    hattInntektSomFrilans = 'hattInntektSomFrilans',\n    hattInntektSomNæringsdrivende = 'hattInntektSomNæringsdrivende',\n    hattArbeidIUtlandet = 'hattArbeidIUtlandet',\n}\n\nexport interface InntektsinformasjonFormData {\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: YesOrNo;\n    [InntektsinformasjonFormField.hattInntektSomNæringsdrivende]: YesOrNo;\n    [InntektsinformasjonFormField.hattArbeidIUtlandet]: YesOrNo;\n}\n\nexport const InntektsinformasjonFormComponents = getTypedFormComponents<\n    InntektsinformasjonFormField,\n    InntektsinformasjonFormData\n>();\n","import { InntektsinformasjonFormData, InntektsinformasjonFormField } from './inntektsinformasjonFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { Søker, Søkerrolle } from 'app/types/Søker';\n\nexport const initialInntektsinformasjonFormValues: InntektsinformasjonFormData = {\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: YesOrNo.UNANSWERED,\n    [InntektsinformasjonFormField.hattInntektSomNæringsdrivende]: YesOrNo.UNANSWERED,\n    [InntektsinformasjonFormField.hattArbeidIUtlandet]: YesOrNo.UNANSWERED,\n};\n\nexport const mapInntektsinformasjonFormDataToState = (\n    values: Partial<InntektsinformasjonFormData>,\n    søker: Søker,\n): Søker => {\n    const oppdatertFrilansInfo = values.hattInntektSomFrilans === YesOrNo.YES ? søker.frilansInformasjon : undefined;\n    const oppdatertNæringInfo =\n        values.hattInntektSomNæringsdrivende === YesOrNo.YES ? søker.selvstendigNæringsdrivendeInformasjon : undefined;\n    const oppdatertArbeidUtlandInfo = values.hattArbeidIUtlandet === YesOrNo.YES ? søker.andreInntekter : undefined;\n    return {\n        ...søker,\n        rolle: Søkerrolle.MOR,\n        harHattAnnenInntekt: convertYesOrNoOrUndefinedToBoolean(values.hattArbeidIUtlandet)!,\n        harJobbetSomFrilans: convertYesOrNoOrUndefinedToBoolean(values.hattInntektSomFrilans)!,\n        harJobbetSomSelvstendigNæringsdrivende: convertYesOrNoOrUndefinedToBoolean(\n            values.hattInntektSomNæringsdrivende,\n        )!,\n        frilansInformasjon: oppdatertFrilansInfo,\n        selvstendigNæringsdrivendeInformasjon: oppdatertNæringInfo,\n        andreInntekter: oppdatertArbeidUtlandInfo,\n    };\n};\n\nexport const getInitialInntektsinformasjonFormValues = (søker: Søker): InntektsinformasjonFormData => {\n    const init = {\n        ...initialInntektsinformasjonFormValues,\n        hattArbeidIUtlandet: convertBooleanOrUndefinedToYesOrNo(søker.harHattAnnenInntekt),\n        hattInntektSomNæringsdrivende: convertBooleanOrUndefinedToYesOrNo(søker.harJobbetSomSelvstendigNæringsdrivende),\n        hattInntektSomFrilans: convertBooleanOrUndefinedToYesOrNo(søker.harJobbetSomFrilans),\n    };\n    return init;\n};\n","import { FormattedMessage } from 'react-intl';\nimport { Block } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { BodyLong, ExpansionCard, Label } from '@navikt/ds-react';\n\nconst InfoTilFiskere = () => {\n    return (\n        <ExpansionCard size=\"small\" aria-label=\"Info til fiskere\">\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del1\" />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.hyre\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del2\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoTilFiskere.del3\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a\n                                        href={links.hvordanSendeInntektsmelding}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        className=\"lenke\"\n                                    >\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.lott\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del4\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoTilFiskere.del5\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a href={links.omLottOgHyre} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.egenBåt\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del6\" />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.lottOgHyre\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del7\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del8\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del9\" />\n                    </BodyLong>\n                </Block>\n                <Block margin=\"none\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoTilFiskere.del10\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a href={links.omLottOgHyre} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    );\n};\n\nexport default InfoTilFiskere;\n","import { FormattedMessage } from 'react-intl';\nimport { Block } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { BodyLong, ExpansionCard } from '@navikt/ds-react';\n\nconst InfoOmFørstegangstjeneste = () => {\n    return (\n        <ExpansionCard size=\"small\" aria-label=\"Er du i førstegangstjeneste?\">\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"inntektsinformasjon.infoOmFørstegangstjeneste.tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoOmFørstegangstjeneste.content.del1\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoOmFørstegangstjeneste.content.del2\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a href={links.papirsøknad} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\n                                        {msg}\n                                    </a>\n                                ),\n                                b: (msg: any) => (\n                                    <a\n                                        href={links.arbeidstilsynetSkjema}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        className=\"lenke\"\n                                    >\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    );\n};\n\nexport default InfoOmFørstegangstjeneste;\n","import { BodyShort, Link, ReadMore } from '@navikt/ds-react';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport links from 'app/links/links';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst HvemKanDriveMedEgenNæring = () => {\n    const intl = useIntl();\n\n    return (\n        <ReadMore header={intlUtils(intl, 'inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivende.apneLabel')}>\n            <div>\n                <Block padBottom=\"l\">\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivende.infoboks.del1\" />\n                    </BodyShort>\n                </Block>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivende.infoboks.del2\"\n                        values={{\n                            a: (msg: any) => (\n                                <Link href={links.næringsdrivendeInfoBoks} rel=\"noreferrer\" target=\"_blank\">\n                                    {msg}\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </div>\n        </ReadMore>\n    );\n};\n\nexport default HvemKanDriveMedEgenNæring;\n","import { Alert } from '@navikt/ds-react';\nimport { Block } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\n\nconst BrukerKanIkkeSøke = () => {\n    return (\n        <Alert variant=\"warning\">\n            <div>\n                <Block>\n                    <FormattedMessage\n                        id=\"inntektsinformasjon.alert.ingenArbeidsforhold.tittel\"\n                        values={{\n                            b: (msg: any) => <b>{msg}</b>,\n                        }}\n                    />\n                </Block>\n                <FormattedMessage\n                    id=\"inntektsinformasjon.alert.ingenArbeidsforhold\"\n                    values={{\n                        a: (msg: any) => (\n                            <a\n                                className=\"lenke\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://familie.nav.no/om-svangerskapspenger\"\n                            >\n                                {msg}\n                            </a>\n                        ),\n                    }}\n                />\n                <FormattedMessage\n                    id=\"inntektsinformasjon.alert.ingenArbeidsforhold.forsettelse\"\n                    values={{\n                        a: (msg: any) => (\n                            <a\n                                className=\"lenke\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Relatert+informasjon/chat-med-oss-om-foreldrepenger\"\n                            >\n                                {msg}\n                            </a>\n                        ),\n                    }}\n                />\n            </div>\n        </Alert>\n    );\n};\n\nexport default BrukerKanIkkeSøke;\n","import { ReadMore } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport { useIntl } from 'react-intl';\n\nconst InfoOmArbeidIUtlandet = () => {\n    const intl = useIntl();\n    return (\n        <ReadMore header={intlUtils(intl, 'arbeidIUtlandet.apneLabel')}>\n            <div> {intlUtils(intl, 'arbeidIUtlandet.innhold')}</div>\n        </ReadMore>\n    );\n};\n\nexport default InfoOmArbeidIUtlandet;\n","import { BodyShort, Link, ReadMore } from '@navikt/ds-react';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport links from 'app/links/links';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst HvemKanVæreFrilanser = () => {\n    const intl = useIntl();\n\n    return (\n        <ReadMore header={intlUtils(intl, 'inntektsinformasjon.harDuJobbetSomFrilans.apneLabel')}>\n            <div>\n                <Block padBottom=\"l\">\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilans.infoboksTekst.del1\" />\n                    </BodyShort>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilans.infoboksTekst.del2\" />\n                    </BodyShort>\n                </Block>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"inntektsinformasjon.harDuJobbetSomFrilans.infoboksTekst.del3\"\n                        values={{\n                            a: (msg) => (\n                                <Link href={links.frilanserInfoBoks} rel=\"noreferrer\" target=\"_blank\">\n                                    {msg}\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </div>\n        </ReadMore>\n    );\n};\n\nexport default HvemKanVæreFrilanser;\n","import { Block, intlUtils, Step, StepButtonWrapper, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport stepConfig, { getBackLinkForArbeidSteg, getNextRouteForInntektsinformasjon } from '../stepsConfig';\nimport ArbeidsforholdInformasjon from './components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon';\nimport {\n    InntektsinformasjonFormComponents,\n    InntektsinformasjonFormData,\n    InntektsinformasjonFormField,\n} from './inntektsinformasjonFormConfig';\nimport {\n    getInitialInntektsinformasjonFormValues,\n    mapInntektsinformasjonFormDataToState,\n} from './inntektsinformasjonFormUtils';\n\nimport { BodyShort, Button, Label } from '@navikt/ds-react';\nimport { Link } from 'react-router-dom';\nimport {\n    getAktiveArbeidsforhold,\n    getAutomatiskValgtTilretteleggingHvisKunEtArbeid,\n} from 'app/utils/arbeidsforholdUtils';\nimport InfoTilFiskere from './components/info-til-fiskere/InfoTilFiskere';\nimport InfoOmFørstegangstjeneste from './components/info-om-førstegangstjeneste/InfoOmFørstegangstjeneste';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport HvemKanDriveMedEgenNæring from './components/hvem-kan-drive-egen-næring/HvemKanDriveMedEgenNæring';\nimport BrukerKanIkkeSøke from './components/bruker-kan-ikke-søke/BrukerKanIkkeSøke';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport SøknadRoutes from 'app/routes/routes';\nimport { useState } from 'react';\nimport InfoOmArbeidIUtlandet from './components/info-om-arbeid-i-utlandet/InfoOmArbeidIUtlandet';\nimport HvemKanVæreFrilanser from './components/hvem-kan-være-frilanser/HvemKanVæreFrilanser';\nimport Tilrettelegging from 'app/types/Tilrettelegging';\n\nconst Inntektsinformasjon: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useSøkerinfo();\n    const søknad = useSøknad();\n    const { søker, barn, tilrettelegging, informasjonOmUtenlandsopphold } = søknad;\n    const [nextRoute, setNextRoute] = useState(SøknadRoutes.ARBEID.toString());\n    const [autoValgtTilrettelegging, setAutoValgtTilrettelegging] = useState<Tilrettelegging | undefined>(undefined);\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const { termindato } = barn;\n    const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, termindato);\n    const onValidSubmitHandler = (values: Partial<InntektsinformasjonFormData>) => {\n        const updatedSøker = mapInntektsinformasjonFormDataToState(values, søker);\n        if (autoValgtTilrettelegging) {\n            return [actionCreator.setSøker(updatedSøker), actionCreator.setTilrettelegging([autoValgtTilrettelegging])];\n        }\n\n        return [actionCreator.setSøker(updatedSøker)];\n    };\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    return (\n        <InntektsinformasjonFormComponents.FormikWrapper\n            initialValues={getInitialInntektsinformasjonFormValues(søker)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const kanIkkeSøke =\n                    arbeidsforhold.length === 0 &&\n                    formValues.hattInntektSomFrilans === YesOrNo.NO &&\n                    formValues.hattInntektSomNæringsdrivende === YesOrNo.NO;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"arbeid\"\n                        pageTitle={intlUtils(intl, 'steps.label.arbeid')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <InntektsinformasjonFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block padBottom=\"xl\">\n                                <BodyShort>\n                                    {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.utbetalingerFraNAV')}\n                                </BodyShort>\n                            </Block>\n                            <Block padBottom=\"m\">\n                                <Label>{intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.label')}</Label>\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <ArbeidsforholdInformasjon arbeidsforhold={aktiveArbeidsforhold} />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InntektsinformasjonFormComponents.YesOrNoQuestion\n                                    name={InntektsinformasjonFormField.hattInntektSomFrilans}\n                                    legend={intlUtils(intl, 'inntektsinformasjon.harDuJobbetSomFrilans')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.frilans.påkrevd'),\n                                        )\n                                    }\n                                />\n                                <HvemKanVæreFrilanser />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InntektsinformasjonFormComponents.YesOrNoQuestion\n                                    name={InntektsinformasjonFormField.hattInntektSomNæringsdrivende}\n                                    legend={intlUtils(\n                                        intl,\n                                        'inntektsinformasjon.harJobbetSomSelvstendigNæringsdrivende',\n                                    )}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.hattInntektSomNæringsdrivende.påkrevd'),\n                                        )\n                                    }\n                                />\n                                <HvemKanDriveMedEgenNæring />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InntektsinformasjonFormComponents.YesOrNoQuestion\n                                    name={InntektsinformasjonFormField.hattArbeidIUtlandet}\n                                    legend={intlUtils(intl, 'inntektsinformasjon.annenInntekt')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.hattArbeidIUtlandet.påkrevd'),\n                                        )\n                                    }\n                                />\n                                <InfoOmArbeidIUtlandet />\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <InfoOmFørstegangstjeneste />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InfoTilFiskere />\n                            </Block>\n                            <Block padBottom=\"l\" visible={kanIkkeSøke}>\n                                <BrukerKanIkkeSøke />\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkForArbeidSteg(informasjonOmUtenlandsopphold)}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    {!kanIkkeSøke && (\n                                        <Button\n                                            type=\"submit\"\n                                            disabled={isSubmitting}\n                                            loading={isSubmitting}\n                                            onClick={() => {\n                                                const automatiskValgtTilrettelegging =\n                                                    getAutomatiskValgtTilretteleggingHvisKunEtArbeid(\n                                                        formValues,\n                                                        aktiveArbeidsforhold,\n                                                        termindato,\n                                                        tilrettelegging,\n                                                        intl,\n                                                    );\n                                                setAutoValgtTilrettelegging(automatiskValgtTilrettelegging);\n                                                setNextRoute(\n                                                    getNextRouteForInntektsinformasjon(\n                                                        automatiskValgtTilrettelegging,\n                                                        formValues,\n                                                    ),\n                                                );\n                                            }}\n                                        >\n                                            {intlUtils(intl, 'søknad.gåVidere')}\n                                        </Button>\n                                    )}\n                                </StepButtonWrapper>\n                            </Block>\n                        </InntektsinformasjonFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Inntektsinformasjon;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum UtenlandsoppholdField {\n    harBoddINorgeSiste12Mnd = 'harBoddINorgeSiste12Mnd',\n    utenlandsoppholdSiste12Mnd = 'utenlandsoppholdSiste12Mnd',\n    skalBoINorgeNeste12Mnd = 'skalBoINorgeNeste12Mnd',\n    utenlandsoppholdNeste12Mnd = 'utenlandsoppholdNeste12Mnd',\n}\n\nexport interface UtenlandsoppholdFormData {\n    [UtenlandsoppholdField.harBoddINorgeSiste12Mnd]: YesOrNo;\n    [UtenlandsoppholdField.skalBoINorgeNeste12Mnd]: YesOrNo;\n}\n\nexport const initialUtenlandsoppholdFormData: UtenlandsoppholdFormData = {\n    [UtenlandsoppholdField.harBoddINorgeSiste12Mnd]: YesOrNo.UNANSWERED,\n    [UtenlandsoppholdField.skalBoINorgeNeste12Mnd]: YesOrNo.UNANSWERED,\n};\n\nexport const UtenlandsoppholdFormComponents = getTypedFormComponents<UtenlandsoppholdField, UtenlandsoppholdFormData>();\n","import InformasjonOmUtenlandsopphold from 'app/types/InformasjonOmUtenlandsopphold';\nimport { UtenlandsoppholdFormData, initialUtenlandsoppholdFormData } from './utenlandsoppholdFormTypes';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport const getInitialUtenlandsoppholdValuesFromState = (\n    init: InformasjonOmUtenlandsopphold,\n): UtenlandsoppholdFormData => {\n    return {\n        ...initialUtenlandsoppholdFormData,\n        harBoddINorgeSiste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeSiste12Mnd),\n        skalBoINorgeNeste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeNeste12Mnd),\n    };\n};\n\nexport const mapUtenlandsoppholdFormDataToState = (\n    formValues: Partial<UtenlandsoppholdFormData>,\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold,\n): InformasjonOmUtenlandsopphold => {\n    const { harBoddINorgeSiste12Mnd, skalBoINorgeNeste12Mnd } = formValues;\n    const oppdaterteTidligereOpphold =\n        harBoddINorgeSiste12Mnd === YesOrNo.YES ? [] : informasjonOmUtenlandsopphold.tidligereOpphold;\n    const oppdaterteSenereOpphold =\n        skalBoINorgeNeste12Mnd === YesOrNo.YES ? [] : informasjonOmUtenlandsopphold.senereOpphold;\n    const iNorgePåHendelsestidspunktet =\n        harBoddINorgeSiste12Mnd === YesOrNo.YES && skalBoINorgeNeste12Mnd === YesOrNo.YES;\n\n    return {\n        ...informasjonOmUtenlandsopphold,\n        iNorgeSiste12Mnd: convertYesOrNoOrUndefinedToBoolean(harBoddINorgeSiste12Mnd)!,\n        iNorgeNeste12Mnd: convertYesOrNoOrUndefinedToBoolean(skalBoINorgeNeste12Mnd)!,\n        tidligereOpphold: oppdaterteTidligereOpphold,\n        senereOpphold: oppdaterteSenereOpphold,\n        iNorgePåHendelsestidspunktet: iNorgePåHendelsestidspunktet,\n    };\n};\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\nimport { UtenlandsoppholdFormData, UtenlandsoppholdField } from './utenlandsoppholdFormTypes';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nconst UtenlandsoppholdFormConfig: QuestionConfig<UtenlandsoppholdFormData, UtenlandsoppholdField> = {\n    [UtenlandsoppholdField.harBoddINorgeSiste12Mnd]: {\n        isAnswered: ({ harBoddINorgeSiste12Mnd }) => harBoddINorgeSiste12Mnd !== YesOrNo.UNANSWERED,\n        isIncluded: () => true,\n    },\n    [UtenlandsoppholdField.skalBoINorgeNeste12Mnd]: {\n        isAnswered: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd !== YesOrNo.UNANSWERED,\n        isIncluded: () => true,\n    },\n};\n\nexport const utenlandsoppholdFormQuestions = Questions<UtenlandsoppholdFormData, UtenlandsoppholdField>(\n    UtenlandsoppholdFormConfig\n);\n","import { BodyLong, BodyShort, ExpansionCard, Heading, Link } from '@navikt/ds-react';\nimport { Block } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { FormattedMessage } from 'react-intl';\n\nconst InformasjonOmUtenlandsopphold = () => {\n    return (\n        <ExpansionCard size=\"small\" aria-label=\"Informasjon om utenlandsopphold\">\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.header.tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.header.ingress\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.seksjon1\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.seksjon2\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"xl\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.seksjon3\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <Heading as=\"h4\" size=\"small\">\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.undertittel\" />\n                    </Heading>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgStøtte.seksjon4\" />\n                    </BodyLong>\n                </Block>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"utenlandsopphold.oppholdOgStøtte.seksjon5\"\n                        values={{\n                            a: (msg: any) => (\n                                <Link href={links.utenlandsinformasjon} rel=\"noreferrer\" target=\"_blank\">\n                                    {msg}\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    );\n};\n\nexport default InformasjonOmUtenlandsopphold;\n","import { Block, intlUtils, Step, StepButtonWrapper, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport stepConfig, { getNextRouteForUtenlandsopphold, getPreviousSetStepHref } from '../stepsConfig';\nimport { BodyShort, Button } from '@navikt/ds-react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n    UtenlandsoppholdField,\n    UtenlandsoppholdFormComponents,\n    UtenlandsoppholdFormData,\n} from './utenlandsoppholdFormTypes';\nimport {\n    getInitialUtenlandsoppholdValuesFromState,\n    mapUtenlandsoppholdFormDataToState,\n} from './utenlandsoppholdFormUtils';\nimport { utenlandsoppholdFormQuestions } from './utenlandsoppholdFormQuestions';\nimport InformasjonOmUtenlandsopphold from './components/InformasjonOmUtenlandsopphold';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport SøknadRoutes from 'app/routes/routes';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { useState } from 'react';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\n\nconst Utenlandsopphold: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useSøkerinfo();\n    const søknad = useSøknad();\n    const { informasjonOmUtenlandsopphold } = søknad;\n    const [nextRoute, setNextRoute] = useState(SøknadRoutes.ARBEID);\n\n    const onAvbrytSøknad = useAvbrytSøknad();\n\n    const onValidSubmitHandler = (values: Partial<UtenlandsoppholdFormData>) => {\n        const utenlandsopphold = mapUtenlandsoppholdFormDataToState(values, informasjonOmUtenlandsopphold);\n        return [actionCreator.setUtenlandsopphold(utenlandsopphold)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    return (\n        <UtenlandsoppholdFormComponents.FormikWrapper\n            initialValues={getInitialUtenlandsoppholdValuesFromState(informasjonOmUtenlandsopphold)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = utenlandsoppholdFormQuestions.getVisbility(formValues as UtenlandsoppholdFormData);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"utenlandsopphold\"\n                        pageTitle={intlUtils(intl, 'steps.label.utenlandsopphold')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <UtenlandsoppholdFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block padBottom=\"xxl\">\n                                <BodyShort size=\"medium\">{intlUtils(intl, 'utenlandsopphold.infotekst')}</BodyShort>\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(UtenlandsoppholdField.harBoddINorgeSiste12Mnd)}\n                            >\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\n                                    legend={intlUtils(intl, 'utenlandsopphold.siste12Måneder.spørsmål')}\n                                    name={UtenlandsoppholdField.harBoddINorgeSiste12Mnd}\n                                    labels={{\n                                        yes: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddINorge',\n                                        ),\n                                        no: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddIUtlandet',\n                                        ),\n                                    }}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.utenlandsopphold.harBoddINorge.påkrevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block\n                                visible={visibility.isVisible(UtenlandsoppholdField.skalBoINorgeNeste12Mnd)}\n                                padBottom=\"xxl\"\n                            >\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\n                                    legend={intlUtils(intl, 'utenlandsopphold.neste12Måneder.spørsmål')}\n                                    name={UtenlandsoppholdField.skalBoINorgeNeste12Mnd}\n                                    labels={{\n                                        yes: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddINorge',\n                                        ),\n                                        no: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddIUtlandet',\n                                        ),\n                                    }}\n                                    validate={(skalBoINorgeNeste12Mnd) =>\n                                        validateYesOrNoIsAnswered(\n                                            skalBoINorgeNeste12Mnd,\n                                            intlUtils(intl, 'valideringsfeil.utenlandsopphold.skalBoINorge.påkrevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n\n                            <Block padBottom=\"xxl\">\n                                <InformasjonOmUtenlandsopphold />\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={RouterLink}\n                                        to={getPreviousSetStepHref('utenlandsopphold')}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                        onClick={() => {\n                                            setNextRoute(getNextRouteForUtenlandsopphold(formValues));\n                                        }}\n                                    >\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </UtenlandsoppholdFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Utenlandsopphold;\n","import actionCreator from '../../context/action/actionCreator';\nimport { useEffect } from 'react';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\n\nconst useUpdateCurrentTilretteleggingId = (currentTilretteleggingId: string | undefined) => {\n    const { dispatch, state } = useSvangerskapspengerContext();\n\n    useEffect(() => {\n        if (state.currentTilretteleggingId !== currentTilretteleggingId) {\n            dispatch(actionCreator.setCurrentTilretteleggingId(currentTilretteleggingId));\n        }\n    }, [currentTilretteleggingId, dispatch, state]);\n};\n\nexport default useUpdateCurrentTilretteleggingId;\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport {\n    DelivisTilretteleggingPeriodeType,\n    TilretteleggingFormData,\n    TilretteleggingFormField,\n} from './tilretteleggingStepFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { Arbeidsforholdstype, TilOgMedDatoType, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\n\nexport interface TilretteleggingFormQuestionsPayload extends TilretteleggingFormData {\n    arbeidsType: Arbeidsforholdstype;\n}\n\nexport const TilretteleggingFormConfig: QuestionConfig<TilretteleggingFormQuestionsPayload, TilretteleggingFormField> =\n    {\n        [TilretteleggingFormField.behovForTilretteleggingFom]: {\n            isIncluded: () => true,\n            isAnswered: ({ behovForTilretteleggingFom }) => behovForTilretteleggingFom !== YesOrNo.UNANSWERED,\n        },\n        [TilretteleggingFormField.tilretteleggingType]: {\n            isIncluded: () => true,\n            isAnswered: ({ tilretteleggingType }) => hasValue(tilretteleggingType),\n        },\n        [TilretteleggingFormField.delvisTilretteleggingPeriodeType]: {\n            isIncluded: ({ tilretteleggingType }) =>\n                hasValue(tilretteleggingType) && tilretteleggingType === TilretteleggingstypeOptions.DELVIS,\n            isAnswered: ({ delvisTilretteleggingPeriodeType }) => hasValue(delvisTilretteleggingPeriodeType),\n        },\n\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingFom]: {\n            isIncluded: ({ tilretteleggingType, delvisTilretteleggingPeriodeType }) =>\n                (tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                    delvisTilretteleggingPeriodeType ===\n                        DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN) ||\n                tilretteleggingType === TilretteleggingstypeOptions.INGEN,\n            isAnswered: ({ enPeriodeMedTilretteleggingFom }) => hasValue(enPeriodeMedTilretteleggingFom),\n        },\n\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent]: {\n            isIncluded: ({ tilretteleggingType, delvisTilretteleggingPeriodeType }) =>\n                tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN,\n            isAnswered: ({ enPeriodeMedTilretteleggingStillingsprosent }) =>\n                hasValue(enPeriodeMedTilretteleggingStillingsprosent),\n        },\n\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingTomType]: {\n            isIncluded: ({ tilretteleggingType, delvisTilretteleggingPeriodeType }) =>\n                tilretteleggingType === TilretteleggingstypeOptions.INGEN ||\n                (tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                    delvisTilretteleggingPeriodeType ===\n                        DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN),\n            isAnswered: ({ enPeriodeMedTilretteleggingTomType }) => hasValue(enPeriodeMedTilretteleggingTomType),\n        },\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato]: {\n            isIncluded: ({\n                tilretteleggingType,\n                delvisTilretteleggingPeriodeType,\n                enPeriodeMedTilretteleggingTomType,\n            }) =>\n                (tilretteleggingType === TilretteleggingstypeOptions.INGEN ||\n                    (tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                        delvisTilretteleggingPeriodeType ===\n                            DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN)) &&\n                enPeriodeMedTilretteleggingTomType === TilOgMedDatoType.VALGFRI_DATO,\n            isAnswered: ({ enPeriodeMedTilretteleggingTilbakeIJobbDato }) =>\n                hasValue(enPeriodeMedTilretteleggingTilbakeIJobbDato),\n        },\n        [TilretteleggingFormField.tilretteleggingstiltak]: {\n            isIncluded: ({ arbeidsType }) =>\n                arbeidsType === Arbeidsforholdstype.FRILANSER || arbeidsType === Arbeidsforholdstype.SELVSTENDIG,\n            isAnswered: ({ tilretteleggingstiltak }) => hasValue(tilretteleggingstiltak),\n        },\n        [TilretteleggingFormField.risikofaktorer]: {\n            isIncluded: ({ arbeidsType }) =>\n                arbeidsType === Arbeidsforholdstype.FRILANSER || arbeidsType === Arbeidsforholdstype.SELVSTENDIG,\n            isAnswered: ({ risikofaktorer }) => hasValue(risikofaktorer),\n        },\n    };\n\nconst tilretteleggingQuestionsConfig = Questions<TilretteleggingFormQuestionsPayload, TilretteleggingFormField>(\n    TilretteleggingFormConfig,\n);\n\nexport default tilretteleggingQuestionsConfig;\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { SkjemaelementFeil, formatDate, intlUtils, validateTextInputField } from '@navikt/fp-common';\nimport {\n    Arbeidsforholdstype,\n    PeriodeMedVariasjon,\n    Stilling,\n    TilOgMedDatoType,\n    TilretteleggingstypeOptions,\n} from 'app/types/Tilrettelegging';\nimport { getTotalStillingsprosentPåSkjæringstidspunktet } from 'app/utils/arbeidsforholdUtils';\nimport { dagenFør, tiMånederSidenDato } from 'app/utils/dateUtils';\nimport { getFloatFromString } from 'app/utils/numberUtils';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH, getSlutteTekst, hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validerStillingsprosentInput = (intl: IntlShape, value: string) => {\n    if (!hasValue(value) || value.trim() === '') {\n        return intlUtils(intl, 'valideringsfeil.stillingsprosent.required');\n    }\n    const stillingsprosent = getFloatFromString(value);\n\n    if (stillingsprosent === undefined) {\n        return intlUtils(intl, 'valideringsfeil.stillingsprosent.måVæreEtTall');\n    }\n\n    return undefined;\n};\n\nexport const validateStillingsprosentPåPerioder =\n    (\n        intl: IntlShape,\n        måSøkeSendeNySøknad: boolean,\n        periodeDerTilbakeIFullJobb: PeriodeMedVariasjon | undefined,\n        allePerioder: PeriodeMedVariasjon[] | undefined,\n        opprinneligStillingsProsent: number,\n    ) =>\n    (value: string) => {\n        const valideringsFeil = validerStillingsprosentInput(intl, value);\n        if (valideringsFeil) {\n            return valideringsFeil;\n        }\n        const stillingsprosent = getFloatFromString(value);\n        if (stillingsprosent && opprinneligStillingsProsent > 0 && stillingsprosent > opprinneligStillingsProsent) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.måVæreMindreEllerLikOpprinneligStillingsprosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n\n        if (stillingsprosent && opprinneligStillingsProsent === 0 && stillingsprosent > 100) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.måVæreMindreEllerLik100Prosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n\n        if (\n            opprinneligStillingsProsent > 0 &&\n            allePerioder &&\n            allePerioder?.every(\n                (periode) =>\n                    hasValue(periode.stillingsprosent) &&\n                    getFloatFromString(periode.stillingsprosent) === opprinneligStillingsProsent,\n            )\n        ) {\n            return intlUtils(intl, 'valideringsfeil.periode.stillingsprosent.kunFullTilrettelegging', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n        if (\n            opprinneligStillingsProsent === 0 &&\n            allePerioder &&\n            allePerioder?.every(\n                (periode) => hasValue(periode.stillingsprosent) && getFloatFromString(periode.stillingsprosent) === 100,\n            )\n        ) {\n            return intlUtils(intl, 'valideringsfeil.periode.stillingsprosent.kun100Prosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n\n        if (måSøkeSendeNySøknad && periodeDerTilbakeIFullJobb) {\n            return intlUtils(intl, 'valideringsfeil.periode.stillingsprosent.nySøknad', {\n                fom: formatDate(periodeDerTilbakeIFullJobb.fom),\n            });\n        }\n        return undefined;\n    };\n\nexport const validateStillingsprosentEnDelvisPeriode =\n    (intl: IntlShape, fom: string | undefined, stillinger: Stilling[]) => (value: string) => {\n        const initValidering = validerStillingsprosentInput(intl, value);\n        if (initValidering) {\n            return initValidering;\n        }\n\n        const stillingsprosent = getFloatFromString(value)!;\n        if (stillingsprosent <= 0) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.måVæreStørreEnn0');\n        }\n        const opprinneligStillingsProsent = getTotalStillingsprosentPåSkjæringstidspunktet(stillinger, fom);\n        if (opprinneligStillingsProsent === 0 && stillingsprosent >= 100) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.måVæreMindreEnn100Prosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n        if (opprinneligStillingsProsent > 0 && stillingsprosent >= opprinneligStillingsProsent) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.måVæreMindreEnnOpprinneligStillingsprosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n        return undefined;\n    };\nexport const validateTilretteleggingstiltak = (intl: IntlShape, label: string) => (value: string) => {\n    if (!hasValue(value) || value.trim() === '') {\n        return intlUtils(intl, 'valideringsfeil.tilretteleggingstiltak.påkrevd');\n    }\n\n    if (value.length > TEXT_INPUT_MAX_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.tilretteleggingstiltak.forLang');\n    }\n\n    if (value.length < TEXT_INPUT_MIN_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.tilretteleggingstiltak.forKort');\n    }\n\n    return validateTextInputField(value, label, intl);\n};\n\nexport const validateSammePeriodeFremTilTerminFom =\n    (\n        intl: IntlShape,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        tilretteleggingstype: TilretteleggingstypeOptions,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerFørTermin: boolean,\n    ) =>\n    (value: string) => {\n        const erDelvis = tilretteleggingstype === TilretteleggingstypeOptions.DELVIS;\n        if (!hasValue(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.påkrevd.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.påkrevd.ingen');\n        }\n        if (hasValue(value) && !isISODateString(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.gyldigDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.gyldigDato.ingen');\n        }\n\n        if (\n            hasValue(value) &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(value).isBefore(dayjs(behovForTilretteleggingFom), 'd')\n        ) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.førBehovForTilretteleggingFom.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.førBehovForTilretteleggingFom.ingen');\n        }\n\n        if (hasValue(value) && dayjs(value).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            if (kanHaSVPFremTilTreUkerFørTermin) {\n                return erDelvis\n                    ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterTreUkerFørTermin.delvis')\n                    : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterTreUkerFørTermin.ingen');\n            }\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterFødsel.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterFødsel.ingen');\n        }\n        if (\n            sluttDatoArbeid &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(behovForTilretteleggingFom).isSameOrBefore(dayjs(sluttDatoArbeid), 'd') &&\n            dayjs(value).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterSluttDatoArbeid.delvis', {\n                      dato: formatDate(sluttDatoArbeid),\n                      navn: arbeidNavn,\n                      slutteTekst,\n                  })\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterSluttDatoArbeid.ingen', {\n                      dato: formatDate(sluttDatoArbeid),\n                      navn: arbeidNavn,\n                      slutteTekst,\n                  });\n        }\n        return undefined;\n    };\n\nexport const validateSammePeriodeFremTilTerminTilbakeIJobbDato =\n    (\n        intl: IntlShape,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        fom: string | undefined,\n        type: TilretteleggingstypeOptions,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerFørTermin: boolean,\n    ) =>\n    (value: string) => {\n        const erDelvis = type === TilretteleggingstypeOptions.DELVIS;\n        if (!hasValue(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.påkrevd.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.påkrevd.ingen');\n        }\n        if (hasValue(value) && !isISODateString(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.gyldigDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.gyldigDato.ingen');\n        }\n\n        if (\n            hasValue(value) &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(value).isBefore(dayjs(behovForTilretteleggingFom), 'd')\n        ) {\n            return intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.førBehovForTilretteleggingFom');\n        }\n        if (hasValue(fom) && dayjs(value).isBefore(dayjs(fom), 'd')) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.førFomDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.førFomDato.ingen');\n        }\n        if (hasValue(fom) && dayjs(value).isSame(dayjs(fom), 'd')) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.sammeSomFomDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.sammeSomFomDato.ingen');\n        }\n\n        if (hasValue(value) && dayjs(value).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            if (kanHaSVPFremTilTreUkerFørTermin) {\n                return erDelvis\n                    ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterTreUkerFørTermin.delvis')\n                    : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterTreUkerFørTermin.ingen');\n            }\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterFødsel.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterFødsel.ingen');\n        }\n        if (\n            sluttDatoArbeid &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(behovForTilretteleggingFom).isSameOrBefore(dayjs(sluttDatoArbeid), 'd') &&\n            dayjs(value).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n        return undefined;\n    };\n\nexport const validateBehovForTilretteleggingFom =\n    (\n        intl: IntlShape,\n        sisteDagForSvangerskapspenger: Date,\n        termindato: Date,\n        arbeidNavn: string,\n        startDatoArbeid: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSvpFremTilTreUkerFørTermin: boolean,\n        erFrilansTilrettelegging: boolean,\n    ) =>\n    (fom: string): SkjemaelementFeil => {\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.mangler');\n        }\n        if (!isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.gyldigDato');\n        }\n\n        if (dayjs(fom).isBefore(tiMånederSidenDato(termindato), 'd')) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.tiMndSidenTermin');\n        }\n        if (dayjs(fom).isAfter(dagenFør(sisteDagForSvangerskapspenger), 'd')) {\n            return kanHaSvpFremTilTreUkerFørTermin\n                ? intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.måVæreMerEnnTreUkerFørTermin')\n                : intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.måVæreFørFødsel');\n        }\n\n        if (dayjs(fom).isBefore(dayjs(startDatoArbeid), 'd')) {\n            const navnTekst = erFrilansTilrettelegging ? intlUtils(intl, 'somFrilanser') : `i ${arbeidNavn}`;\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.førStartDatoArbeid', {\n                dato: formatDate(startDatoArbeid),\n                navnTekst,\n            });\n        }\n\n        if (sluttDatoArbeid && dayjs(fom).isAfter(dayjs(sluttDatoArbeid), 'd')) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n        return undefined;\n    };\n\nexport const validateTilrettelagtArbeidType =\n    (intl: IntlShape) =>\n    (type: TilretteleggingstypeOptions): SkjemaelementFeil => {\n        if (!hasValue(type)) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidType.mangler');\n        }\n        return undefined;\n    };\n\nexport const validerTilretteleggingTomType =\n    (\n        intl: IntlShape,\n        tilretteleggingType: TilretteleggingstypeOptions,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerFørTermin: boolean,\n    ) =>\n    (value: TilOgMedDatoType): SkjemaelementFeil => {\n        const erDelvis = tilretteleggingType === TilretteleggingstypeOptions.DELVIS;\n        if (!hasValue(value)) {\n            if (erDelvis) {\n                return kanHaSVPFremTilTreUkerFørTermin\n                    ? intlUtils(intl, 'valideringsfeil.tomType.påkrevd.delvis.tilTermin')\n                    : intlUtils(intl, 'valideringsfeil.tomType.påkrevd.delvis.tilFødsel');\n            } else {\n                return kanHaSVPFremTilTreUkerFørTermin\n                    ? intlUtils(intl, 'valideringsfeil.tomType.påkrevd.ingen.tilTermin')\n                    : intlUtils(intl, 'valideringsfeil.tomType.påkrevd.ingen.tilFødsel');\n            }\n        }\n        if (\n            sluttDatoArbeid &&\n            hasValue(behovForTilretteleggingFom) &&\n            value === TilOgMedDatoType.SISTE_DAG_MED_SVP &&\n            dayjs(behovForTilretteleggingFom).isSameOrBefore(dayjs(sluttDatoArbeid), 'd') &&\n            dayjs(sisteDagForSvangerskapspenger).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.tomType.etterSluttDatoArbeid.delvis', {\n                      slutteTekst,\n                      navn: arbeidNavn,\n                  })\n                : intlUtils(intl, 'valideringsfeil.tomType.etterSluttDatoArbeid.ingen', {\n                      slutteTekst,\n                      navn: arbeidNavn,\n                  });\n        }\n        return undefined;\n    };\n\nexport const validateTilretteleggingPeriodetype =\n    (intl: IntlShape) =>\n    (type: TilretteleggingstypeOptions): SkjemaelementFeil => {\n        if (!hasValue(type)) {\n            return intlUtils(intl, 'valideringsfeil.tilretteleggingPeriodeType.mangler');\n        }\n        return undefined;\n    };\n\nconst finnFeilmeldingForPåkrevd = (intl: IntlShape, type: Arbeidsforholdstype) => {\n    if (type === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.frilanser.påkrevd');\n    }\n    if (type === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.selvstendig.påkrevd');\n    }\n    if (type === Arbeidsforholdstype.VIRKSOMHET) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.virksomhet.påkrevd');\n    }\n    throw Error('Ingen påkrevd-tekst for type: ' + type);\n};\n\nconst finnFeilmeldingForOverMakslengde = (intl: IntlShape, type: Arbeidsforholdstype) => {\n    if (type === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.frilanser.forLang');\n    }\n    if (type === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.selvstendig.forLang');\n    }\n    throw Error('Ingen makslengde-tekst for type: ' + type);\n};\n\nconst finnFeilmeldingForUnderMinLengde = (intl: IntlShape, type: Arbeidsforholdstype) => {\n    if (type === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.frilanser.forKort');\n    }\n    if (type === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.selvstendig.forKort');\n    }\n    throw Error('Ingen tekst for type: ' + type);\n};\n\nexport const validateRisikofaktorer =\n    (intl: IntlShape, label: string, type: Arbeidsforholdstype) => (value: string) => {\n        if (!hasValue(value) || value.trim() === '') {\n            return finnFeilmeldingForPåkrevd(intl, type);\n        }\n\n        if (value.length > TEXT_INPUT_MAX_LENGTH) {\n            return finnFeilmeldingForOverMakslengde(intl, type);\n        }\n\n        if (value.length < TEXT_INPUT_MIN_LENGTH) {\n            return finnFeilmeldingForUnderMinLengde(intl, type);\n        }\n\n        return validateTextInputField(value, label, intl);\n    };\n","import { HStack, Label, VStack } from '@navikt/ds-react';\nimport { bemUtils, intlUtils } from '@navikt/fp-common';\nimport { ArbeidsforholdForTilrettelegging, Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { useIntl } from 'react-intl';\nimport './bedriftsbanner.css';\nimport { Buldings3Icon } from '@navikt/aksel-icons';\n\ninterface Props {\n    arbeid: ArbeidsforholdForTilrettelegging;\n}\n\nconst Bedriftsbanner: React.FunctionComponent<Props> = ({ arbeid }) => {\n    const bem = bemUtils('bedriftsbanner');\n    const intl = useIntl();\n    const navn =\n        arbeid.type !== Arbeidsforholdstype.FRILANSER\n            ? arbeid.navn\n            : intlUtils(intl, 'bedriftsbanner.tittel.frilansarbeid');\n    const detailTekst =\n        arbeid.type !== Arbeidsforholdstype.FRILANSER\n            ? intlUtils(intl, 'bedriftsbanner.detail')\n            : intlUtils(intl, 'bedriftsbanner.detail.frilans');\n    return (\n        <div className={bem.block}>\n            <HStack gap=\"5\">\n                <div className={bem.element('ikon')}>\n                    <Buldings3Icon height={'24px'} width={'24px'} />\n                </div>\n                <div className={bem.element('tekst')}>\n                    <VStack gap=\"1\">\n                        <Label size=\"small\">{detailTekst}</Label>\n                        <Label size=\"medium\">{navn}</Label>\n                    </VStack>\n                </div>\n            </HStack>\n        </div>\n    );\n};\n\nexport default Bedriftsbanner;\n","import { Block, ISOStringToDate, Step, StepButtonWrapper, intlUtils } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport stepConfig, { getBackLinkForTilretteleggingSteg, getNextRouteForTilretteleggingSteg } from '../stepsConfig';\nimport { BodyLong, BodyShort, Button, ExpansionCard, ReadMore } from '@navikt/ds-react';\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\nimport {\n    TilretteleggingFormComponents,\n    TilretteleggingFormData,\n    TilretteleggingFormField,\n    DelivisTilretteleggingPeriodeType,\n} from './tilretteleggingStepFormConfig';\nimport {\n    cleanUpTilretteleggingStepFormValues,\n    getBehovForTilretteleggingFomLabel,\n    getLabelPeriodeFom,\n    getLabelPeriodeTom,\n    getLabelPeriodeTomType,\n    getMinDatoPeriodeFom,\n    getMinDatoTilbakeIJobb,\n    getRadioOptionsTomType,\n    getTilretteleggingInitialValues,\n    getTilretteleggingSideTittel,\n    getTilretteleggingTypeLabel,\n    mapOmTilretteleggingFormDataToState,\n} from './tilretteleggingStepUtils';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport { Arbeidsforholdstype, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport { Link } from 'react-router-dom';\nimport { FunctionComponent, useState } from 'react';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport {\n    getSisteDagForSvangerskapspenger,\n    getKanHaSvpFremTilTreUkerFørTermin,\n    tiMånederSidenDato,\n    getDefaultMonth,\n} from 'app/utils/dateUtils';\nimport tilretteleggingQuestionsConfig, {\n    TilretteleggingFormQuestionsPayload,\n} from './tilretteleggingStepQuestionsConfig';\nimport {\n    validateRisikofaktorer,\n    validateSammePeriodeFremTilTerminFom,\n    validateSammePeriodeFremTilTerminTilbakeIJobbDato,\n    validateStillingsprosentEnDelvisPeriode,\n    validateTilretteleggingstiltak,\n    validateBehovForTilretteleggingFom,\n    validateTilrettelagtArbeidType,\n    validateTilretteleggingPeriodetype,\n    validerTilretteleggingTomType,\n} from './tilretteleggingValidation';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH } from 'app/utils/validationUtils';\nimport Bedriftsbanner from 'app/components/bedriftsbanner/Bedriftsbanner';\nimport dayjs from 'dayjs';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\n\nconst finnRisikofaktorLabel = (intl: IntlShape, typeArbeid: Arbeidsforholdstype) => {\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'skjema.risikofaktorer.frilanser');\n    } else {\n        return intlUtils(intl, 'skjema.risikofaktorer.selvstendig');\n    }\n};\n\ninterface Props {\n    id: string;\n    typeArbeid: Arbeidsforholdstype;\n    navn: string;\n}\n\nconst TilretteleggingStep: FunctionComponent<Props> = ({ navn, id, typeArbeid }) => {\n    useUpdateCurrentTilretteleggingId(id);\n    const intl = useIntl();\n    const [nextRoute, setNextRoute] = useState(SøknadRoutes.OPPSUMMERING.toString());\n    const { arbeidsforhold } = useSøkerinfo();\n    const søknad = useSøknad();\n    const { tilrettelegging: tilretteleggingFraState, barn } = søknad;\n    const { termindato } = barn;\n    const { state } = useSvangerskapspengerContext();\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const currentTilrettelegging = tilretteleggingFraState.find((t) => t.id === id);\n    const sisteDagForSvangerskapspenger = getSisteDagForSvangerskapspenger(barn);\n    const termindatoDate = ISOStringToDate(termindato);\n    const navnArbeidsgiver = currentTilrettelegging!.arbeidsforhold.navn;\n    const onValidSubmitHandler = (values: Partial<TilretteleggingFormData>) => {\n        const mappedTilrettelegging = mapOmTilretteleggingFormDataToState(\n            id,\n            values,\n            tilretteleggingFraState,\n            currentTilrettelegging!,\n        );\n        return [actionCreator.setTilrettelegging(mappedTilrettelegging)];\n    };\n\n    const erFlereTilrettelegginger = tilretteleggingFraState.length > 1;\n    const sideTittel = getTilretteleggingSideTittel(erFlereTilrettelegginger, intl, navn);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    const risikofaktorerLabel = finnRisikofaktorLabel(intl, typeArbeid);\n\n    const tilretteleggingTypeLabel = getTilretteleggingTypeLabel(\n        erFlereTilrettelegginger,\n        typeArbeid,\n        navnArbeidsgiver,\n        intl,\n    );\n    const behovForTilretteleggingFomLabel = getBehovForTilretteleggingFomLabel(\n        erFlereTilrettelegginger,\n        typeArbeid,\n        navnArbeidsgiver,\n        intl,\n    );\n    const labelTiltak = intlUtils(intl, 'tilrettelegging.tilretteleggingstiltak.label');\n    const harSkjema = typeArbeid === Arbeidsforholdstype.VIRKSOMHET || typeArbeid === Arbeidsforholdstype.PRIVAT;\n    const stillinger = currentTilrettelegging!.arbeidsforhold.stillinger;\n    const sluttDatoArbeid = currentTilrettelegging!.arbeidsforhold.sluttdato;\n    const startDatoArbeid = currentTilrettelegging!.arbeidsforhold.startdato;\n    const minDatoBehovFom = dayjs.max(dayjs(tiMånederSidenDato(termindatoDate!)), dayjs(startDatoArbeid))!.toDate();\n    const maxDatoBehovFom = sluttDatoArbeid\n        ? dayjs.min(dayjs(sisteDagForSvangerskapspenger), dayjs(sluttDatoArbeid))!.toDate()\n        : sisteDagForSvangerskapspenger;\n    const kanHaSVPFremTilTreUkerFørTermin = getKanHaSvpFremTilTreUkerFørTermin(barn);\n    const defaultMonthBehovFomDato = getDefaultMonth(minDatoBehovFom, maxDatoBehovFom);\n    return (\n        <TilretteleggingFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getTilretteleggingInitialValues(currentTilrettelegging!)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = tilretteleggingQuestionsConfig.getVisbility({\n                    ...formValues,\n                    arbeidsType: typeArbeid,\n                } as TilretteleggingFormQuestionsPayload);\n                const labelPeriodeFomTekst = getLabelPeriodeFom(formValues.tilretteleggingType, intl);\n                const labelPeriodeTomTypeTekst = getLabelPeriodeTomType(formValues.tilretteleggingType, intl);\n                const labelPeriodeTomTekst = getLabelPeriodeTom(formValues.tilretteleggingType, intl);\n                const minDatoPeriodeFom = getMinDatoPeriodeFom(formValues, minDatoBehovFom);\n                const defaultMonthPeriodeFom = getDefaultMonth(minDatoPeriodeFom, maxDatoBehovFom);\n                const minDatoTilbakeIJobb = getMinDatoTilbakeIJobb(formValues);\n                const defaultMonthTilbakeIJobb = getDefaultMonth(minDatoTilbakeIJobb, maxDatoBehovFom);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId={`tilrettelegging-${id}`}\n                        pageTitle={sideTittel}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <TilretteleggingFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanUpTilretteleggingStepFormValues(values, visibility)}\n                        >\n                            {erFlereTilrettelegginger && (\n                                <Block padBottom=\"xxl\">\n                                    <Bedriftsbanner arbeid={currentTilrettelegging!.arbeidsforhold} />\n                                </Block>\n                            )}\n                            <Block padBottom=\"xxl\">\n                                <TilretteleggingFormComponents.DatePicker\n                                    name={TilretteleggingFormField.behovForTilretteleggingFom}\n                                    label={behovForTilretteleggingFomLabel}\n                                    placeholder={'dd.mm.åååå'}\n                                    description={\n                                        harSkjema\n                                            ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.description')\n                                            : ''\n                                    }\n                                    minDate={minDatoBehovFom}\n                                    maxDate={maxDatoBehovFom}\n                                    validate={validateBehovForTilretteleggingFom(\n                                        intl,\n                                        sisteDagForSvangerskapspenger,\n                                        termindatoDate!,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        startDatoArbeid,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerFørTermin,\n                                        typeArbeid === Arbeidsforholdstype.FRILANSER,\n                                    )}\n                                    dayPickerProps={{ defaultMonth: defaultMonthBehovFomDato }}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(TilretteleggingFormField.risikofaktorer)}\n                            >\n                                <TilretteleggingFormComponents.Textarea\n                                    name={TilretteleggingFormField.risikofaktorer}\n                                    label={risikofaktorerLabel}\n                                    minLength={TEXT_INPUT_MIN_LENGTH}\n                                    maxLength={TEXT_INPUT_MAX_LENGTH}\n                                    validate={validateRisikofaktorer(intl, risikofaktorerLabel, typeArbeid)}\n                                    description={intlUtils(intl, 'skjema.risikofaktorer.description')}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(TilretteleggingFormField.tilretteleggingstiltak)}\n                            >\n                                <Block padBottom=\"m\">\n                                    <TilretteleggingFormComponents.Textarea\n                                        name={TilretteleggingFormField.tilretteleggingstiltak}\n                                        label={labelTiltak}\n                                        minLength={TEXT_INPUT_MIN_LENGTH}\n                                        maxLength={TEXT_INPUT_MAX_LENGTH}\n                                        validate={validateTilretteleggingstiltak(intl, labelTiltak)}\n                                    />\n                                </Block>\n                                <ReadMore size=\"small\" header={intlUtils(intl, 'tilrettelegging.tiltak.info.title')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"tilrettelegging.tiltak.info.description\"></FormattedMessage>\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <Block padBottom=\"m\">\n                                    <TilretteleggingFormComponents.RadioGroup\n                                        name={TilretteleggingFormField.tilretteleggingType}\n                                        legend={tilretteleggingTypeLabel}\n                                        description={\n                                            harSkjema\n                                                ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                                : ''\n                                        }\n                                        radios={[\n                                            {\n                                                label: intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.delvis'),\n                                                value: TilretteleggingstypeOptions.DELVIS,\n                                            },\n                                            {\n                                                label: intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.ingen'),\n                                                value: TilretteleggingstypeOptions.INGEN,\n                                            },\n                                        ]}\n                                        validate={validateTilrettelagtArbeidType(intl)}\n                                    />\n                                </Block>\n                                <ReadMore\n                                    header={intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.info.tittel')}\n                                >\n                                    <BodyShort>\n                                        <FormattedMessage id=\"tilrettelegging.tilrettelagtArbeidType.info.tekst\"></FormattedMessage>\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.delvisTilretteleggingPeriodeType,\n                                )}\n                            >\n                                <TilretteleggingFormComponents.RadioGroup\n                                    name={TilretteleggingFormField.delvisTilretteleggingPeriodeType}\n                                    legend={intlUtils(intl, 'tilrettelegging.tilretteleggingPeriodetype.label')}\n                                    description={\n                                        harSkjema\n                                            ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                            : ''\n                                    }\n                                    radios={[\n                                        {\n                                            label: intlUtils(intl, 'tilrettelegging.tilretteleggingPeriodetype.en'),\n                                            value: DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN,\n                                        },\n                                        {\n                                            label: intlUtils(\n                                                intl,\n                                                'tilrettelegging.tilretteleggingPeriodetype.variert',\n                                            ),\n                                            value: DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER,\n                                        },\n                                    ]}\n                                    validate={validateTilretteleggingPeriodetype(intl)}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent,\n                                )}\n                            >\n                                <Block padBottom=\"m\">\n                                    <TilretteleggingFormComponents.NumberInput\n                                        name={TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent}\n                                        label={intlUtils(intl, 'tilrettelegging.stillingsprosent.label')}\n                                        description={\n                                            harSkjema\n                                                ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                                : ''\n                                        }\n                                        validate={validateStillingsprosentEnDelvisPeriode(\n                                            intl,\n                                            formValues.enPeriodeMedTilretteleggingFom,\n                                            stillinger,\n                                        )}\n                                    />\n                                </Block>\n                                <ReadMore\n                                    header={intlUtils(\n                                        intl,\n                                        'tilrettelegging.varierendePerioderStillingsprosent.info.tittel',\n                                    )}\n                                >\n                                    <Block padBottom=\"l\">\n                                        <BodyShort>\n                                            <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del1\"></FormattedMessage>\n                                        </BodyShort>\n                                    </Block>\n                                    <Block>\n                                        <BodyShort>\n                                            <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del2\"></FormattedMessage>\n                                        </BodyShort>\n                                    </Block>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(TilretteleggingFormField.enPeriodeMedTilretteleggingFom)}\n                            >\n                                <TilretteleggingFormComponents.DatePicker\n                                    name={TilretteleggingFormField.enPeriodeMedTilretteleggingFom}\n                                    label={labelPeriodeFomTekst}\n                                    description={\n                                        harSkjema\n                                            ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                            : ''\n                                    }\n                                    minDate={new Date(minDatoPeriodeFom)}\n                                    maxDate={maxDatoBehovFom}\n                                    validate={validateSammePeriodeFremTilTerminFom(\n                                        intl,\n                                        formValues.behovForTilretteleggingFom,\n                                        sisteDagForSvangerskapspenger,\n                                        formValues.tilretteleggingType!,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerFørTermin,\n                                    )}\n                                    dayPickerProps={{ defaultMonth: defaultMonthPeriodeFom }}\n                                />\n                            </Block>\n\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.enPeriodeMedTilretteleggingTomType,\n                                )}\n                            >\n                                <TilretteleggingFormComponents.RadioGroup\n                                    name={TilretteleggingFormField.enPeriodeMedTilretteleggingTomType}\n                                    legend={labelPeriodeTomTypeTekst}\n                                    radios={getRadioOptionsTomType(intl, kanHaSVPFremTilTreUkerFørTermin)}\n                                    validate={validerTilretteleggingTomType(\n                                        intl,\n                                        formValues.tilretteleggingType!,\n                                        formValues.behovForTilretteleggingFom,\n                                        sisteDagForSvangerskapspenger,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerFørTermin,\n                                    )}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n                                )}\n                            >\n                                <TilretteleggingFormComponents.DatePicker\n                                    name={TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato}\n                                    label={labelPeriodeTomTekst}\n                                    minDate={minDatoTilbakeIJobb}\n                                    maxDate={maxDatoBehovFom}\n                                    validate={validateSammePeriodeFremTilTerminTilbakeIJobbDato(\n                                        intl,\n                                        formValues.behovForTilretteleggingFom,\n                                        sisteDagForSvangerskapspenger,\n                                        formValues.enPeriodeMedTilretteleggingFom,\n                                        formValues.tilretteleggingType!,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerFørTermin,\n                                    )}\n                                    dayPickerProps={{ defaultMonth: defaultMonthTilbakeIJobb }}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <ExpansionCard size=\"small\" aria-label=\"\">\n                                    <ExpansionCard.Header>\n                                        <ExpansionCard.Title size=\"small\" as=\"h2\">\n                                            <FormattedMessage id=\"tilrettelegging.expansion.tittel\" />\n                                        </ExpansionCard.Title>\n                                    </ExpansionCard.Header>\n                                    <ExpansionCard.Content>\n                                        <Block padBottom=\"l\">\n                                            <BodyLong>\n                                                <FormattedMessage\n                                                    id=\"tilrettelegging.expansion.tekst\"\n                                                    values={{\n                                                        em: (msg: any) => <em>{msg}</em>,\n                                                    }}\n                                                />\n                                            </BodyLong>\n                                        </Block>\n                                    </ExpansionCard.Content>\n                                </ExpansionCard>\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkForTilretteleggingSteg(state.currentTilretteleggingId)}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                        onClick={() =>\n                                            setNextRoute(\n                                                getNextRouteForTilretteleggingSteg(\n                                                    formValues,\n                                                    tilretteleggingFraState,\n                                                    currentTilrettelegging!.id,\n                                                ),\n                                            )\n                                        }\n                                    >\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </TilretteleggingFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default TilretteleggingStep;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum OppsummeringFormField {\n    harGodkjentOppsummering = 'harGodkjentOppsummering',\n}\n\nexport interface OppsummeringFormData {\n    [OppsummeringFormField.harGodkjentOppsummering]: boolean;\n}\n\nconst initialOppsummeringValues: OppsummeringFormData = {\n    [OppsummeringFormField.harGodkjentOppsummering]: false,\n};\n\nexport const getInitialOppsummeringValues = (): OppsummeringFormData => {\n    return initialOppsummeringValues;\n};\n\nexport const OppsummeringFormComponents = getTypedFormComponents<OppsummeringFormField, OppsummeringFormData>();\n","import { intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\n\nexport const validateHarGodkjentOppsummering = (intl: IntlShape) => (value: boolean) => {\n    if (value !== true) {\n        return intlUtils(intl, 'valideringsfeil.oppsummering.harGodkjentOppsummering.påkrevd');\n    }\n\n    return undefined;\n};\n","export enum RequestStatus {\n    'UNFETCHED' = 'Unfetched',\n    'IN_PROGRESS' = 'InProgress',\n    'FINISHED' = 'Finished',\n}\n","import Environment from 'app/Environment';\n\nexport const redirect = (url: string) => {\n    window.location.href = url;\n};\n\nexport const redirectToLogin = () => {\n    window.location.replace(Environment.LOGIN_URL + '?redirect=' + window.location.origin);\n};\n","import getAxiosInstance from 'app/api/apiInterceptor';\nimport { RequestStatus } from 'app/types/RequestStatus';\nimport { AxiosError, AxiosRequestConfig } from 'axios';\nimport { useEffect, useState } from 'react';\nimport { redirectToLogin } from '../redirectUtils';\n\ntype Options = {\n    config?: AxiosRequestConfig;\n    fnr?: string;\n    isSuspended?: boolean;\n};\n\nconst DEFAULT_OPTIONS: Options = {\n    config: {},\n    isSuspended: false,\n};\n\nexport const useGetRequest = <T>(url: string, options: Options = DEFAULT_OPTIONS) => {\n    const [data, setData] = useState<T>();\n    const [error, setError] = useState<AxiosError<any> | null>(null);\n    const [requestStatus, setRequestStatus] = useState<RequestStatus>(RequestStatus.UNFETCHED);\n    const axiosInstance = options.fnr ? getAxiosInstance(options.fnr) : getAxiosInstance();\n\n    useEffect(() => {\n        if (!options.isSuspended && requestStatus === RequestStatus.UNFETCHED) {\n            setRequestStatus(RequestStatus.IN_PROGRESS);\n\n            axiosInstance\n                .get(url, options.config)\n                .then((res) => {\n                    res.data === '' ? setData(undefined) : setData(res.data);\n                    setRequestStatus(RequestStatus.FINISHED);\n                })\n                .catch((err) => {\n                    if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setError(err);\n                    }\n                    setRequestStatus(RequestStatus.FINISHED);\n                });\n        }\n    }, [options, url, axiosInstance, requestStatus]);\n\n    return { data, error, requestStatus };\n};\n","import Environment from 'app/Environment';\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { useGetRequest } from 'app/utils/hooks/useGetRequest';\nimport axios from 'axios';\n\nconst apiBaseUrl = Environment.REST_API_URL;\nconst sendSøknadUrl = `${apiBaseUrl}/soknad`;\n\nconst useSøkerinfo = () => {\n    const { data, error } = useGetRequest<SøkerinfoDTO>('/sokerinfo', { config: { withCredentials: true } });\n\n    return {\n        søkerinfoData: data,\n        søkerinfoError: error,\n    };\n};\n\nconst sendSøknad = (søknad: any, signal: AbortSignal) => {\n    return axios.post(sendSøknadUrl, søknad, {\n        withCredentials: true,\n        headers: {\n            'content-type': 'application/json;',\n        },\n        signal,\n    });\n};\n\nconst Api = {\n    useSøkerinfo,\n    sendSøknad,\n};\n\nexport default Api;\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Næringstype } from 'app/types/EgenNæring';\n\nexport enum EgenNæringFormField {\n    egenNæringType = 'egenNæringType',\n    egenNæringNavn = 'egenNæringNavn',\n    egenNæringRegistrertINorge = 'egenNæringRegistrertINorge',\n    egenNæringOrgnr = 'egenNæringOrgnr',\n    egenNæringLand = 'egenNæringLand',\n    egenNæringFom = 'egenNæringFom',\n    egenNæringTom = 'egenNæringTom',\n    egenNæringPågående = 'egenNæringPågående',\n    egenNæringYrkesAktivDato = 'egenNæringYrkesAktivDato',\n    egenNæringResultat = 'egenNæringResultat',\n    egenNæringBlittYrkesaktivDe3SisteÅrene = 'egenNæringBlittYrkesaktivDe3SisteÅrene',\n    egenNæringHattVarigEndringDeSiste4Årene = 'egenNæringHattVarigEndringDeSiste4Årene',\n    egenNæringVarigEndringDato = 'egenNæringVarigEndringDato',\n    egenNæringVarigEndringInntektEtterEndring = 'egenNæringVarigEndringInntektEtterEndring',\n    egenNæringVarigEndringBeskrivelse = 'egenNæringVarigEndringBeskrivelse',\n}\n\nexport interface EgenNæringFormData {\n    [EgenNæringFormField.egenNæringType]: Næringstype;\n    [EgenNæringFormField.egenNæringNavn]: string;\n    [EgenNæringFormField.egenNæringRegistrertINorge]: YesOrNo;\n    [EgenNæringFormField.egenNæringOrgnr]: string;\n    [EgenNæringFormField.egenNæringLand]: string;\n    [EgenNæringFormField.egenNæringFom]: string;\n    [EgenNæringFormField.egenNæringTom]: string;\n    [EgenNæringFormField.egenNæringPågående]: YesOrNo;\n    [EgenNæringFormField.egenNæringYrkesAktivDato]: string;\n    [EgenNæringFormField.egenNæringResultat]: string;\n    [EgenNæringFormField.egenNæringBlittYrkesaktivDe3SisteÅrene]: YesOrNo;\n    [EgenNæringFormField.egenNæringHattVarigEndringDeSiste4Årene]: YesOrNo;\n    [EgenNæringFormField.egenNæringVarigEndringDato]: string | undefined;\n    [EgenNæringFormField.egenNæringVarigEndringInntektEtterEndring]: string | undefined;\n    [EgenNæringFormField.egenNæringVarigEndringBeskrivelse]: string | undefined;\n}\n\nexport const initialEgenNæringFormData: EgenNæringFormData = {\n    [EgenNæringFormField.egenNæringType]: undefined!,\n    [EgenNæringFormField.egenNæringNavn]: '',\n    [EgenNæringFormField.egenNæringRegistrertINorge]: YesOrNo.UNANSWERED,\n    [EgenNæringFormField.egenNæringOrgnr]: '',\n    [EgenNæringFormField.egenNæringLand]: '',\n    [EgenNæringFormField.egenNæringTom]: '',\n    [EgenNæringFormField.egenNæringFom]: '',\n    [EgenNæringFormField.egenNæringPågående]: YesOrNo.UNANSWERED,\n    [EgenNæringFormField.egenNæringResultat]: '',\n    [EgenNæringFormField.egenNæringBlittYrkesaktivDe3SisteÅrene]: YesOrNo.UNANSWERED,\n    [EgenNæringFormField.egenNæringYrkesAktivDato]: '',\n    [EgenNæringFormField.egenNæringHattVarigEndringDeSiste4Årene]: YesOrNo.UNANSWERED,\n    [EgenNæringFormField.egenNæringVarigEndringDato]: '',\n    [EgenNæringFormField.egenNæringVarigEndringInntektEtterEndring]: '',\n    [EgenNæringFormField.egenNæringVarigEndringBeskrivelse]: '',\n};\n\nexport const EgenNæringFormComponents = getTypedFormComponents<EgenNæringFormField, EgenNæringFormData>();\n","import { EgenNæringFormData, EgenNæringFormField, initialEgenNæringFormData } from './egenNæringFormConfig';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { EgenNæring } from 'app/types/EgenNæring';\nimport dayjs from 'dayjs';\nimport { date4YearsAgo } from 'app/utils/dateUtils';\nimport { QuestionVisibility } from '@navikt/sif-common-formik-ds/lib';\nimport { replaceInvisibleCharsWithSpace } from '@navikt/fp-common/src/common/utils/stringUtils';\nimport { Søker } from 'app/types/Søker';\nimport { hasValue } from 'app/utils/validationUtils';\n\nexport const erVirksomhetRegnetSomNyoppstartet = (oppstartsdato: Date | undefined): boolean => {\n    if (!oppstartsdato) {\n        return true;\n    }\n\n    return dayjs(oppstartsdato).startOf('day').isAfter(date4YearsAgo, 'day');\n};\n\nexport const mapEgenNæringFormValuesToState = (formValues: EgenNæringFormData): EgenNæring => {\n    const hattVarigEndring = convertYesOrNoOrUndefinedToBoolean(formValues.egenNæringHattVarigEndringDeSiste4Årene);\n    return {\n        næringstyper: [formValues.egenNæringType],\n        tidsperiode: {\n            fom: formValues.egenNæringFom,\n            tom: formValues.egenNæringTom,\n        },\n        pågående: convertYesOrNoOrUndefinedToBoolean(formValues.egenNæringPågående)!,\n        næringsinntekt: hasValue(formValues.egenNæringResultat) ? formValues.egenNæringResultat : undefined,\n        navnPåNæringen: replaceInvisibleCharsWithSpace(formValues.egenNæringNavn),\n        organisasjonsnummer: hasValue(formValues.egenNæringOrgnr.trim())\n            ? formValues.egenNæringOrgnr.trim()\n            : undefined,\n        registrertINorge: convertYesOrNoOrUndefinedToBoolean(formValues.egenNæringRegistrertINorge)!,\n        registrertILand: hasValue(formValues.egenNæringLand) ? formValues.egenNæringLand : undefined,\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene: convertYesOrNoOrUndefinedToBoolean(\n            formValues.egenNæringBlittYrkesaktivDe3SisteÅrene,\n        )!,\n        oppstartsdato: formValues.egenNæringYrkesAktivDato,\n        hattVarigEndringAvNæringsinntektSiste4Kalenderår: hattVarigEndring,\n        varigEndringBeskrivelse:\n            hattVarigEndring && formValues.egenNæringVarigEndringBeskrivelse\n                ? replaceInvisibleCharsWithSpace(formValues.egenNæringVarigEndringBeskrivelse)\n                : undefined,\n        varigEndringDato: formValues.egenNæringVarigEndringDato,\n        varigEndringInntektEtterEndring: formValues.egenNæringVarigEndringInntektEtterEndring,\n    };\n};\n\nexport const getInitialEgenNæringFormValues = (næring: EgenNæring | undefined): EgenNæringFormData => {\n    if (næring === undefined) {\n        return initialEgenNæringFormData;\n    }\n\n    return {\n        ...initialEgenNæringFormData,\n        egenNæringType: næring.næringstyper[0],\n        egenNæringNavn: næring.navnPåNæringen || '',\n        egenNæringRegistrertINorge: convertBooleanOrUndefinedToYesOrNo(næring.registrertINorge),\n        egenNæringLand: næring.registrertILand || '',\n        egenNæringFom: næring.tidsperiode.fom,\n        egenNæringTom: næring.tidsperiode.tom,\n        egenNæringOrgnr: næring.organisasjonsnummer || '',\n        egenNæringPågående: convertBooleanOrUndefinedToYesOrNo(næring.pågående),\n        egenNæringResultat: næring.næringsinntekt || '',\n        egenNæringBlittYrkesaktivDe3SisteÅrene: convertBooleanOrUndefinedToYesOrNo(\n            næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\n        ),\n        egenNæringYrkesAktivDato: næring.oppstartsdato || '',\n        egenNæringHattVarigEndringDeSiste4Årene: convertBooleanOrUndefinedToYesOrNo(\n            næring.hattVarigEndringAvNæringsinntektSiste4Kalenderår,\n        ),\n        egenNæringVarigEndringDato: næring.varigEndringDato,\n        egenNæringVarigEndringBeskrivelse: næring.varigEndringBeskrivelse,\n        egenNæringVarigEndringInntektEtterEndring: næring.varigEndringInntektEtterEndring,\n    };\n};\n\nexport const mapNæringDataToSøkerState = (søker: Søker, values: EgenNæringFormData): Søker => {\n    const næring = mapEgenNæringFormValuesToState(values);\n    return {\n        ...søker,\n        selvstendigNæringsdrivendeInformasjon: næring,\n    };\n};\n\nexport const cleanupEgenNæringFormData = (\n    values: EgenNæringFormData,\n    visibility: QuestionVisibility<EgenNæringFormField>,\n) => {\n    const cleanedData: EgenNæringFormData = {\n        ...values,\n        egenNæringOrgnr: visibility.isVisible(EgenNæringFormField.egenNæringOrgnr)\n            ? values.egenNæringOrgnr\n            : initialEgenNæringFormData.egenNæringOrgnr,\n        egenNæringLand: visibility.isVisible(EgenNæringFormField.egenNæringLand)\n            ? values.egenNæringLand\n            : initialEgenNæringFormData.egenNæringLand,\n        egenNæringTom: visibility.isVisible(EgenNæringFormField.egenNæringTom)\n            ? values.egenNæringTom\n            : initialEgenNæringFormData.egenNæringTom,\n        egenNæringResultat: visibility.isVisible(EgenNæringFormField.egenNæringResultat)\n            ? values.egenNæringResultat\n            : initialEgenNæringFormData.egenNæringResultat,\n        egenNæringHattVarigEndringDeSiste4Årene: visibility.isVisible(\n            EgenNæringFormField.egenNæringHattVarigEndringDeSiste4Årene,\n        )\n            ? values.egenNæringHattVarigEndringDeSiste4Årene\n            : initialEgenNæringFormData.egenNæringHattVarigEndringDeSiste4Årene,\n        egenNæringVarigEndringDato: visibility.isVisible(EgenNæringFormField.egenNæringVarigEndringDato)\n            ? values.egenNæringVarigEndringDato\n            : initialEgenNæringFormData.egenNæringVarigEndringDato,\n        egenNæringVarigEndringBeskrivelse: visibility.isVisible(EgenNæringFormField.egenNæringVarigEndringBeskrivelse)\n            ? values.egenNæringVarigEndringBeskrivelse\n            : initialEgenNæringFormData.egenNæringVarigEndringBeskrivelse,\n        egenNæringVarigEndringInntektEtterEndring: visibility.isVisible(\n            EgenNæringFormField.egenNæringVarigEndringInntektEtterEndring,\n        )\n            ? values.egenNæringVarigEndringInntektEtterEndring\n            : initialEgenNæringFormData.egenNæringVarigEndringInntektEtterEndring,\n        egenNæringBlittYrkesaktivDe3SisteÅrene: visibility.isVisible(\n            EgenNæringFormField.egenNæringBlittYrkesaktivDe3SisteÅrene,\n        )\n            ? values.egenNæringBlittYrkesaktivDe3SisteÅrene\n            : initialEgenNæringFormData.egenNæringBlittYrkesaktivDe3SisteÅrene,\n        egenNæringYrkesAktivDato: visibility.isVisible(EgenNæringFormField.egenNæringYrkesAktivDato)\n            ? values.egenNæringYrkesAktivDato\n            : initialEgenNæringFormData.egenNæringYrkesAktivDato,\n    };\n    return cleanedData;\n};\n","import { TidsperiodeMedValgfriSluttdato } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { TidsperiodeDTOMedValgfriSluttdato } from './TidsperiodeDTO';\n\nexport enum AnnenInntektType {\n    JOBB_I_UTLANDET = 'JOBB_I_UTLANDET',\n}\n\nexport interface ArbeidIUtlandetInput {\n    fom: string;\n    tom: string | undefined;\n    pågående: YesOrNo;\n    arbeidsgiverNavn: string;\n    land: string;\n}\n\nexport interface ArbeidIUtlandet {\n    type: AnnenInntektType.JOBB_I_UTLANDET;\n    tidsperiode: TidsperiodeMedValgfriSluttdato;\n    pågående: boolean;\n    arbeidsgiverNavn: string;\n    land: string;\n}\n\nexport interface ArbeidIUtlandetDTO extends Omit<ArbeidIUtlandet, 'tidsperiode' | 'pågående'> {\n    tidsperiode: TidsperiodeDTOMedValgfriSluttdato;\n}\n","import { Attachment } from './Attachment';\nimport { Barn, BarnDTO as BarnDTO } from './Barn';\nimport InformasjonOmUtenlandsopphold, { InformasjonOmUtenlandsoppholdDTO } from './InformasjonOmUtenlandsopphold';\nimport { Søker, SøkerDTO } from './Søker';\nimport { Tilrettelegging, TilretteleggingDTO } from './Tilrettelegging';\n\nexport interface Søknad {\n    barn: Barn;\n    harGodkjentVilkår: boolean;\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold;\n    søker: Søker;\n    tilrettelegging: Tilrettelegging[];\n    harGodkjentOppsummering: boolean;\n}\n\nexport enum Søknadstype {\n    'SVANGERSKAPSPENGER' = 'svangerskapspenger',\n}\n\nexport interface SøknadDTO\n    extends Omit<\n        Søknad,\n        | 'informasjonOmUtenlandsopphold'\n        | 'barn'\n        | 'tilrettelegging'\n        | 'søker'\n        | 'harGodkjentOppsummering'\n        | 'harGodkjentVilkår'\n    > {\n    type: Søknadstype;\n    erEndringssøknad: boolean;\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsoppholdDTO;\n    barn: BarnDTO;\n    tilrettelegging: TilretteleggingDTO[];\n    søker: SøkerDTO;\n    vedlegg: Attachment[];\n}\n","import { ISOStringToDate } from '@navikt/fp-common';\nimport { erVirksomhetRegnetSomNyoppstartet } from 'app/steps/egen-næring/egenNæringFormUtils';\nimport { AnnenInntektType, ArbeidIUtlandet, ArbeidIUtlandetDTO } from 'app/types/ArbeidIUtlandet';\nimport { ArbeidsforholdDTO } from 'app/types/Arbeidsforhold';\nimport { Barn, BarnDTO } from 'app/types/Barn';\nimport { EgenNæring, EgenNæringDTO } from 'app/types/EgenNæring';\nimport { Frilans, FrilansDTO } from 'app/types/Frilans';\nimport InformasjonOmUtenlandsopphold, {\n    InformasjonOmUtenlandsoppholdDTO,\n    Utenlandsopphold,\n    UtenlandsoppholdDTO,\n} from 'app/types/InformasjonOmUtenlandsopphold';\nimport { Søker, SøkerDTO } from 'app/types/Søker';\nimport { Søknad, SøknadDTO, Søknadstype } from 'app/types/Søknad';\nimport {\n    Arbeidsforholdstype,\n    DelvisTilretteleggingDTO,\n    HelTilretteleggingDTO,\n    IngenTilretteleggingDTO,\n    TilretteleggingDTO,\n    TilretteleggingPeriode,\n    Tilretteleggingstype,\n} from 'app/types/Tilrettelegging';\n\nconst getArbeidsforholdForInnsending = (periode: TilretteleggingPeriode): ArbeidsforholdDTO => {\n    if (\n        periode.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER ||\n        periode.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG\n    ) {\n        return {\n            type: periode.arbeidsforhold.type,\n            risikoFaktorer: periode.risikofaktorer!,\n            tilretteleggingstiltak: periode.tilretteleggingstiltak!,\n        };\n    }\n    return {\n        id: periode.arbeidsforhold.arbeidsgiverId!,\n        type: periode.arbeidsforhold.type,\n    };\n};\n\nconst mapBostedUtlandTilDTO = (utenlandsopphold: Utenlandsopphold): UtenlandsoppholdDTO => {\n    return {\n        land: utenlandsopphold.land,\n        tidsperiode: {\n            fom: ISOStringToDate(utenlandsopphold.tidsperiode.fom)!,\n            tom: ISOStringToDate(utenlandsopphold.tidsperiode.tom)!,\n        },\n    };\n};\n\nconst mapUtenlandsOppholdForInnsending = (\n    utenlandsopphold: InformasjonOmUtenlandsopphold,\n): InformasjonOmUtenlandsoppholdDTO => {\n    return {\n        iNorgePåHendelsestidspunktet: utenlandsopphold.iNorgePåHendelsestidspunktet,\n        iNorgeSiste12Mnd: utenlandsopphold.iNorgeSiste12Mnd,\n        iNorgeNeste12Mnd: utenlandsopphold.iNorgeNeste12Mnd,\n        jobbetINorgeSiste12Mnd: utenlandsopphold.jobbetINorgeSiste12Mnd,\n        tidligereOpphold: utenlandsopphold.tidligereOpphold.map((opphold) => {\n            return mapBostedUtlandTilDTO(opphold);\n        }),\n        senereOpphold: utenlandsopphold.senereOpphold.map((opphold) => {\n            return mapBostedUtlandTilDTO(opphold);\n        }),\n    };\n};\n\nconst mapBarnForInnsending = (barn: Barn): BarnDTO => {\n    return {\n        erBarnetFødt: barn.erBarnetFødt,\n        termindato: ISOStringToDate(barn.termindato)!,\n        fødselsdatoer: barn.fødselsdato ? [ISOStringToDate(barn.fødselsdato)!] : undefined,\n    };\n};\n\nconst mapHelTilretteleggingForInnsending = (\n    periode: TilretteleggingPeriode,\n    arbeidsforhold: ArbeidsforholdDTO,\n): HelTilretteleggingDTO => {\n    return {\n        type: Tilretteleggingstype.HEL,\n        tilrettelagtArbeidFom: ISOStringToDate(periode.fom)!,\n        arbeidsforhold,\n        vedlegg: periode.vedlegg,\n        behovForTilretteleggingFom: ISOStringToDate(periode.behovForTilretteleggingFom)!,\n    };\n};\n\nconst mapDelvisTilretteleggingForInnsending = (\n    periode: TilretteleggingPeriode,\n    arbeidsforhold: ArbeidsforholdDTO,\n): DelvisTilretteleggingDTO => {\n    return {\n        type: Tilretteleggingstype.DELVIS,\n        tilrettelagtArbeidFom: ISOStringToDate(periode.fom)!,\n        arbeidsforhold,\n        vedlegg: periode.vedlegg,\n        behovForTilretteleggingFom: ISOStringToDate(periode.behovForTilretteleggingFom)!,\n        stillingsprosent: periode.stillingsprosent,\n    };\n};\n\nconst mapIngenTilretteleggingForInnsending = (\n    periode: TilretteleggingPeriode,\n    arbeidsforhold: ArbeidsforholdDTO,\n): IngenTilretteleggingDTO => {\n    return {\n        type: Tilretteleggingstype.INGEN,\n        slutteArbeidFom: ISOStringToDate(periode.fom)!,\n        arbeidsforhold,\n        vedlegg: periode.vedlegg,\n        behovForTilretteleggingFom: ISOStringToDate(periode.behovForTilretteleggingFom)!,\n    };\n};\n\nconst mapTilretteleggingPeriodeForInnsending = (periode: TilretteleggingPeriode): TilretteleggingDTO => {\n    const mappedArbeid = getArbeidsforholdForInnsending(periode);\n    if (periode.type === Tilretteleggingstype.HEL) {\n        return mapHelTilretteleggingForInnsending(periode, mappedArbeid);\n    }\n    if (periode.type === Tilretteleggingstype.DELVIS) {\n        return mapDelvisTilretteleggingForInnsending(periode, mappedArbeid);\n    }\n    return mapIngenTilretteleggingForInnsending(periode, mappedArbeid);\n};\n\nconst mapTilretteleggingerForInnsending = (\n    tilretteleggingsPerioder: TilretteleggingPeriode[],\n): TilretteleggingDTO[] => {\n    return tilretteleggingsPerioder.map((p: TilretteleggingPeriode) => {\n        return mapTilretteleggingPeriodeForInnsending(p);\n    });\n};\n\nconst mapEgenNæringForInnsending = (næring: EgenNæring | undefined): EgenNæringDTO | undefined => {\n    if (næring) {\n        const erNyoppstartet = erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(næring.tidsperiode.fom));\n\n        const mappedNæring = {\n            næringstyper: næring.næringstyper,\n            tidsperiode: {\n                fom: ISOStringToDate(næring.tidsperiode.fom),\n                tom: ISOStringToDate(næring.tidsperiode.tom),\n            },\n            næringsinntekt: næring.næringsinntekt ? parseInt(næring.næringsinntekt!, 10) : undefined,\n            navnPåNæringen: næring.navnPåNæringen,\n            organisasjonsnummer: næring.organisasjonsnummer ? næring.organisasjonsnummer : undefined,\n            registrertINorge: næring.registrertINorge,\n            registrertILand: næring.registrertILand ? næring.registrertILand : undefined,\n            harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene:\n                næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\n        };\n        if (erNyoppstartet) {\n            return {\n                ...mappedNæring,\n                harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene:\n                    næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\n                oppstartsdato: næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\n                    ? næring.oppstartsdato\n                    : undefined,\n            };\n        } else {\n            return {\n                ...mappedNæring,\n                hattVarigEndringAvNæringsinntektSiste4Kalenderår:\n                    næring.hattVarigEndringAvNæringsinntektSiste4Kalenderår,\n                endringAvNæringsinntektInformasjon: næring.hattVarigEndringAvNæringsinntektSiste4Kalenderår\n                    ? {\n                          dato: ISOStringToDate(næring.varigEndringDato)!,\n                          næringsinntektEtterEndring: parseInt(næring.varigEndringInntektEtterEndring!),\n                          forklaring: næring.varigEndringBeskrivelse!,\n                      }\n                    : undefined,\n            };\n        }\n    }\n    return undefined;\n};\n\nconst mapFrilansForInnsending = (frilans: Frilans | undefined): FrilansDTO | undefined => {\n    if (frilans) {\n        return {\n            ...frilans,\n            oppstart: ISOStringToDate(frilans.oppstart)!,\n            // sluttDato: ISOStringToDate(frilans.sluttDato),\n        };\n    }\n    return undefined;\n};\n\nconst mapArbeidIUtlandetForInnsending = (arbeid: ArbeidIUtlandet): ArbeidIUtlandetDTO => {\n    return {\n        type: AnnenInntektType.JOBB_I_UTLANDET,\n        arbeidsgiverNavn: arbeid.arbeidsgiverNavn,\n        land: arbeid.land,\n        tidsperiode: {\n            fom: ISOStringToDate(arbeid.tidsperiode.fom)!,\n            tom: ISOStringToDate(arbeid.tidsperiode.tom),\n        },\n    };\n};\n\nconst mapSøkerForInnsending = (søker: Søker): SøkerDTO => {\n    const mappedNæring = mapEgenNæringForInnsending(søker.selvstendigNæringsdrivendeInformasjon);\n    const mappedArbeidIUtlandet = søker.andreInntekter\n        ? søker.andreInntekter.map((inntekt) => mapArbeidIUtlandetForInnsending(inntekt))\n        : undefined;\n    const mappedSøker: SøkerDTO = {\n        rolle: søker.rolle,\n        språkkode: søker.språkkode,\n        frilansInformasjon: søker.harJobbetSomFrilans ? mapFrilansForInnsending(søker.frilansInformasjon) : undefined,\n        selvstendigNæringsdrivendeInformasjon: mappedNæring ? [mappedNæring] : undefined,\n        andreInntekterSiste10Mnd: mappedArbeidIUtlandet,\n    };\n    return mappedSøker;\n};\n\nexport const getSøknadForInnsending = (\n    søknad: Søknad,\n    tilretteleggingsPerioder: TilretteleggingPeriode[],\n): SøknadDTO => {\n    const utenlandsoppholdForInnsending = mapUtenlandsOppholdForInnsending(søknad.informasjonOmUtenlandsopphold);\n    const barnForInnsending = mapBarnForInnsending(søknad.barn);\n    const tilretteleggingForInnsending = mapTilretteleggingerForInnsending(tilretteleggingsPerioder);\n    const søkerForInnsending = mapSøkerForInnsending(søknad.søker);\n    return {\n        type: Søknadstype.SVANGERSKAPSPENGER,\n        erEndringssøknad: false,\n        informasjonOmUtenlandsopphold: utenlandsoppholdForInnsending,\n        barn: barnForInnsending,\n        vedlegg: søknad.tilrettelegging.map((t) => t.vedlegg).flat(1),\n        tilrettelegging: tilretteleggingForInnsending,\n        søker: søkerForInnsending,\n    };\n};\n","import { Block, bemUtils, formatDate } from '@navikt/fp-common';\nimport countries from 'i18n-iso-countries';\nimport { FunctionComponent } from 'react';\nimport { BodyShort, Label } from '@navikt/ds-react';\nimport { Utenlandsopphold } from 'app/types/InformasjonOmUtenlandsopphold';\nimport { FormattedMessage } from 'react-intl';\n\nimport './utenlandsoppholdOppsummeringListe.css';\n\ninterface Props {\n    utenlandsopphold: Utenlandsopphold[];\n    tidligereOpphold: boolean;\n}\n\nconst UtenlandsoppholdOppsummeringListe: FunctionComponent<Props> = ({ utenlandsopphold, tidligereOpphold }) => {\n    const bem = bemUtils('utenlandsoppholdOppsummering');\n\n    return (\n        <>\n            {utenlandsopphold.map((opphold, index) => {\n                return (\n                    <Block key={index} padBottom={index !== utenlandsopphold.length - 1 ? 'l' : 'none'}>\n                        <div className={bem.block}>\n                            <Block padBottom=\"m\">\n                                {tidligereOpphold ? (\n                                    <Label>\n                                        <FormattedMessage\n                                            id=\"oppsummering.utenlandsopphold.harBoddINorge.utenlands\"\n                                            values={{ land: countries.getName(opphold.land, 'nb') }}\n                                        />\n                                    </Label>\n                                ) : (\n                                    <Label>\n                                        <FormattedMessage\n                                            id=\"oppsummering.utenlandsopphold.skalBoINorge.utenlands\"\n                                            values={{ land: countries.getName(opphold.land, 'nb') }}\n                                        />\n                                    </Label>\n                                )}\n                            </Block>\n                            <BodyShort>\n                                {formatDate(opphold.tidsperiode.fom)} - {formatDate(opphold.tidsperiode.tom)}\n                            </BodyShort>\n                        </div>\n                    </Block>\n                );\n            })}\n        </>\n    );\n};\n\nexport default UtenlandsoppholdOppsummeringListe;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport UtenlandsoppholdListe from './UtenlandsoppholdOppsummeringListe';\nimport { BodyShort } from '@navikt/ds-react';\nimport InformasjonOmUtenlandsopphold from 'app/types/InformasjonOmUtenlandsopphold';\nimport { useIntl } from 'react-intl';\n\ninterface Props {\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold;\n}\n\nconst UtenlandsoppholdOppsummering: FunctionComponent<Props> = ({ informasjonOmUtenlandsopphold }) => {\n    const intl = useIntl();\n    const visINorgePåHendelsestidspunktet =\n        informasjonOmUtenlandsopphold.senereOpphold.length > 0 ||\n        informasjonOmUtenlandsopphold.tidligereOpphold.length > 0;\n    return (\n        <>\n            {informasjonOmUtenlandsopphold.tidligereOpphold.length > 0 && (\n                <Block padBottom=\"l\">\n                    <UtenlandsoppholdListe\n                        utenlandsopphold={informasjonOmUtenlandsopphold.tidligereOpphold}\n                        tidligereOpphold={true}\n                    />\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.senereOpphold.length > 0 && (\n                <Block padBottom=\"l\">\n                    <UtenlandsoppholdListe\n                        utenlandsopphold={informasjonOmUtenlandsopphold.senereOpphold}\n                        tidligereOpphold={false}\n                    />\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.tidligereOpphold.length === 0 && (\n                <Block padBottom=\"l\">\n                    <BodyShort>{intlUtils(intl, 'oppsummering.boddINorge')} </BodyShort>\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.senereOpphold.length === 0 && (\n                <Block padBottom=\"l\">\n                    <BodyShort>{intlUtils(intl, 'oppsummering.skalboINorge')} </BodyShort>\n                </Block>\n            )}\n            {visINorgePåHendelsestidspunktet && (\n                <Block>\n                    <BodyShort>\n                        {informasjonOmUtenlandsopphold.iNorgePåHendelsestidspunktet\n                            ? intlUtils(intl, 'oppsummering.iNorgePåHendelsestidspunktet')\n                            : intlUtils(intl, 'oppsummering.ikkeINorgePåHendelsestidspunktet')}\n                    </BodyShort>\n                </Block>\n            )}\n        </>\n    );\n};\n\nexport default UtenlandsoppholdOppsummering;\n","import { BodyShort, Label } from '@navikt/ds-react';\nimport { Block, bemUtils, formatDate } from '@navikt/fp-common';\nimport { Frilans } from 'app/types/Frilans';\nimport { FunctionComponent } from 'react';\nimport './frilans-visning.css';\ninterface Props {\n    frilans: Frilans;\n}\n\nconst FrilansVisning: FunctionComponent<Props> = ({ frilans }) => {\n    const bem = bemUtils('frilans-visning');\n    const frilansTekst = 'Arbeid som frilanser';\n    // const tilTekst = !frilans.jobberFremdelesSomFrilans && frilans.sluttDato ? formatDate(frilans.sluttDato) : 'Pågående';\n    const tilTekst = !frilans.jobberFremdelesSomFrilans ? '(Avsluttet)' : '(Pågående)';\n    return (\n        <Block padBottom=\"l\">\n            <div className={bem.block}>\n                <Label className={bem.element('tittel')}>{frilansTekst}</Label>\n                <BodyShort className={bem.element('dato')}>\n                    {`Startet: ${formatDate(frilans.oppstart)} ${tilTekst}`}\n                </BodyShort>\n            </div>\n        </Block>\n    );\n};\n\nexport default FrilansVisning;\n","import { Block, ISOStringToDate, bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\nimport { EgenNæring } from 'app/types/EgenNæring';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getCountryName } from '@navikt/sif-common-formik-ds/lib';\nimport './egen-næring-visning.css';\nimport { BodyShort, Label } from '@navikt/ds-react';\nimport { erVirksomhetRegnetSomNyoppstartet } from 'app/steps/egen-næring/egenNæringFormUtils';\n\ninterface Props {\n    næring: EgenNæring;\n    setSelectedNæring?: React.Dispatch<React.SetStateAction<EgenNæring | undefined>>;\n    deleteNæring?: (næring: EgenNæring) => void;\n}\n\nconst EgenNæringVisning: FunctionComponent<Props> = ({ næring }) => {\n    const intl = useIntl();\n    const bem = bemUtils('egen-næring-visning');\n    const tilTekst = !næring.pågående && næring.tidsperiode.tom ? formatDate(næring.tidsperiode.tom) : 'Pågående';\n    const erNyoppstartetNæring = erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(næring.tidsperiode.fom));\n    return (\n        <div>\n            <Block padBottom=\"l\">\n                <div className={bem.block}>\n                    <div className={bem.element('data')}>\n                        <Label className={bem.element('tittel')}>{næring.navnPåNæringen}</Label>\n                        {næring.registrertINorge && (\n                            <BodyShort className={bem.element('orgnr')}>\n                                {intlUtils(intl, 'egenNæring.visning.orgnr', {\n                                    orgnr: næring.organisasjonsnummer,\n                                })}\n                            </BodyShort>\n                        )}\n                        {!næring.registrertINorge && næring.registrertILand && (\n                            <BodyShort className={bem.element('orgnr')}>\n                                {getCountryName(næring.registrertILand, intl.locale)}\n                            </BodyShort>\n                        )}\n                        <BodyShort className={bem.element('dato')}>\n                            {formatDate(næring.tidsperiode.fom)} - {tilTekst}\n                        </BodyShort>\n                        {næring.næringsinntekt && (\n                            <BodyShort className={bem.element('inntekt')}>\n                                {intlUtils(intl, 'egenNæring.visning.inntekt', {\n                                    inntekt: næring.næringsinntekt,\n                                })}\n                            </BodyShort>\n                        )}\n                    </div>\n                    {!erNyoppstartetNæring && næring.hattVarigEndringAvNæringsinntektSiste4Kalenderår && (\n                        <div>\n                            <BodyShort>\n                                {intlUtils(intl, 'egenNæring.visning.varigEndring', {\n                                    dato: formatDate(næring.varigEndringDato!),\n                                    inntekt: næring.varigEndringInntektEtterEndring,\n                                })}\n                            </BodyShort>\n                            <BodyShort>\n                                {intlUtils(intl, 'egenNæring.visning.varigEndring.beskrivelse', {\n                                    beskrivelse: næring.varigEndringBeskrivelse,\n                                })}\n                            </BodyShort>\n                        </div>\n                    )}\n                    {!erNyoppstartetNæring && !næring.hattVarigEndringAvNæringsinntektSiste4Kalenderår && (\n                        <div>\n                            <BodyShort>{intlUtils(intl, 'egenNæring.visning.varigEndring.ingen', {})}</BodyShort>\n                        </div>\n                    )}\n                    {erNyoppstartetNæring && næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene && (\n                        <div>\n                            <BodyShort>\n                                {intlUtils(intl, 'egenNæring.visning.yrkesaktivSiste3år', {\n                                    dato: formatDate(næring.oppstartsdato!),\n                                })}\n                            </BodyShort>\n                        </div>\n                    )}\n                    {erNyoppstartetNæring && !næring.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene && (\n                        <div>\n                            <BodyShort>{intlUtils(intl, 'egenNæring.visning.ikkeYrkesaktivSiste3år')}</BodyShort>\n                        </div>\n                    )}\n                </div>\n            </Block>\n        </div>\n    );\n};\nexport default EgenNæringVisning;\n","import { Block, bemUtils, formatDate } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getCountryName } from '@navikt/sif-common-formik-ds/lib';\nimport './arbeid-i-utlandet-visning.css';\nimport { BodyShort, Button, Label } from '@navikt/ds-react';\nimport { PencilWritingIcon, TrashIcon } from '@navikt/aksel-icons';\nimport { ArbeidIUtlandet } from 'app/types/ArbeidIUtlandet';\n\ninterface Props {\n    arbeidIUtlandet: ArbeidIUtlandet;\n    setSelectedAnnenInntekt?: React.Dispatch<React.SetStateAction<ArbeidIUtlandet | undefined>>;\n    deleteAnnenInntekt?: (arbeidIUtlandet: ArbeidIUtlandet) => void;\n}\n\nconst getTilTekst = (arbeid: ArbeidIUtlandet): string => {\n    return !arbeid.pågående && arbeid.tidsperiode.tom ? formatDate(arbeid.tidsperiode.tom) : 'Pågående';\n};\n\nconst ArbeidIUtlandetVisning: FunctionComponent<Props> = ({\n    arbeidIUtlandet,\n    setSelectedAnnenInntekt,\n    deleteAnnenInntekt,\n}) => {\n    const intl = useIntl();\n    const bem = bemUtils('arbeidIUtlandetVisning');\n\n    return (\n        <div>\n            <Block padBottom=\"l\">\n                <div className={bem.block}>\n                    <Label className={bem.element('tittel')}>{arbeidIUtlandet.arbeidsgiverNavn}</Label>\n\n                    <BodyShort className={bem.element('land')}>\n                        {getCountryName(arbeidIUtlandet.land, intl.locale)}\n                    </BodyShort>\n\n                    <BodyShort className={bem.element('dato')}>\n                        {formatDate(arbeidIUtlandet.tidsperiode.fom)} - {getTilTekst(arbeidIUtlandet)}\n                    </BodyShort>\n                    {setSelectedAnnenInntekt && (\n                        <Button\n                            aria-label=\"rediger informasjon om arbeid i utlandet\"\n                            variant=\"secondary\"\n                            className={bem.element('rediger')}\n                            icon={<PencilWritingIcon aria-hidden />}\n                            onClick={() => setSelectedAnnenInntekt(arbeidIUtlandet)}\n                        />\n                    )}\n                    {deleteAnnenInntekt && (\n                        <Button\n                            aria-label=\"slett informasjon om arbeid i utlandet\"\n                            variant=\"secondary\"\n                            className={bem.element('slett')}\n                            icon={<TrashIcon aria-hidden />}\n                            onClick={() => deleteAnnenInntekt(arbeidIUtlandet)}\n                        />\n                    )}\n                </div>\n            </Block>\n        </div>\n    );\n};\n\nexport default ArbeidIUtlandetVisning;\n","import { FunctionComponent } from 'react';\nimport { TilretteleggingPeriode, Tilretteleggingstype } from 'app/types/Tilrettelegging';\nimport { Block, bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\nimport { BodyShort, Label } from '@navikt/ds-react';\n\nimport './periodeVisning.css';\nimport dayjs from 'dayjs';\nimport { IntlShape, useIntl } from 'react-intl';\n\ninterface Props {\n    periode: TilretteleggingPeriode;\n    sisteDagForSvangerskapspenger: Date;\n    kanHaSvpFremTilTreUkerFørTermin: boolean;\n}\n\nconst getDatoText = (\n    intl: IntlShape,\n    sisteDagForSvangerskapspenger: Date,\n    periode: TilretteleggingPeriode,\n    kanHaSvpFremTilTreUkerFørTermin: boolean,\n) => {\n    const varerTilSisteDagMedSvp = dayjs(periode.tom).isSame(sisteDagForSvangerskapspenger, 'd');\n\n    if (!varerTilSisteDagMedSvp) {\n        return intlUtils(intl, 'oppsummering.periode.fraTil', {\n            fraDato: formatDate(periode.fom),\n            tilDato: formatDate(periode.tom),\n        });\n    } else if (kanHaSvpFremTilTreUkerFørTermin) {\n        return intlUtils(intl, 'oppsummering.periode.fremTilTreUkerFørTermin', {\n            fraDato: formatDate(periode.fom),\n        });\n    } else {\n        return intlUtils(intl, 'oppsummering.periode.fremTilFødsel', {\n            fraDato: formatDate(periode.fom),\n        });\n    }\n};\n\nconst getStillingsprosentTekst = (periode: TilretteleggingPeriode, intl: IntlShape): string => {\n    if (periode.type === Tilretteleggingstype.HEL) {\n        return intlUtils(intl, 'oppsummering.periode.tilbakeIFullJobb');\n    }\n    if (periode.type === Tilretteleggingstype.INGEN) {\n        return intlUtils(intl, 'oppsummering.periode.ikkeJobbe');\n    }\n    return intlUtils(intl, 'oppsummering.periode.stillingsprosent', {\n        stillingsprosent: periode.stillingsprosent,\n    });\n};\n\nconst PeriodeVisning: FunctionComponent<Props> = ({\n    periode,\n    sisteDagForSvangerskapspenger,\n    kanHaSvpFremTilTreUkerFørTermin,\n}) => {\n    const intl = useIntl();\n    const labelText = getDatoText(intl, sisteDagForSvangerskapspenger, periode, kanHaSvpFremTilTreUkerFørTermin);\n\n    const stillingsprosentText = getStillingsprosentTekst(periode, intl);\n    const bem = bemUtils('periodeVisningInfoBox');\n\n    return (\n        <div className={bem.block}>\n            <div className={bem.element('topRow')}>\n                <Label>{labelText}</Label>\n                <div className={bem.element('arbeidsgiverNavn')}>\n                    <BodyShort>{periode.arbeidsforhold.navn.toUpperCase()}</BodyShort>\n                </div>\n            </div>\n            <Block padBottom=\"m\">\n                <BodyShort className={bem.element('stillingsprosent')}>{stillingsprosentText}</BodyShort>\n            </Block>\n        </div>\n    );\n};\n\nexport default PeriodeVisning;\n","import PeriodeVisning from 'app/components/periode-visning/PeriodeVisning';\nimport { Barn } from 'app/types/Barn';\nimport { TilretteleggingPeriode } from 'app/types/Tilrettelegging';\nimport { getKanHaSvpFremTilTreUkerFørTermin } from 'app/utils/dateUtils';\nimport { FunctionComponent } from 'react';\n\ninterface Props {\n    perioder: TilretteleggingPeriode[];\n    sisteDagForSvangerskapspenger: Date;\n    barn: Barn;\n}\n\nconst PeriodeOppsummering: FunctionComponent<Props> = ({ perioder, sisteDagForSvangerskapspenger, barn }) => {\n    const kanHaSvpFremTilTreUkerFørTermin = getKanHaSvpFremTilTreUkerFørTermin(barn);\n    return perioder.map((periode, index) => {\n        return (\n            <PeriodeVisning\n                key={index}\n                periode={periode}\n                sisteDagForSvangerskapspenger={sisteDagForSvangerskapspenger}\n                kanHaSvpFremTilTreUkerFørTermin={kanHaSvpFremTilTreUkerFørTermin}\n            />\n        );\n    });\n};\n\nexport default PeriodeOppsummering;\n","import { bemUtils } from '@navikt/fp-common';\nimport { FunctionComponent, useCallback, useState, ReactNode } from 'react';\nimport { Accordion } from '@navikt/ds-react';\n\nimport '../accordion/accordion.css';\n\ninterface Props {\n    title: string;\n    children: ReactNode;\n}\n\nconst AccordionContent: FunctionComponent<Props> = ({ title, children }) => {\n    const bem = bemUtils('accordion');\n\n    const [isOpen, toggleOpen] = useState(false);\n    const toggle = useCallback(() => toggleOpen((open) => !open), []);\n\n    return (\n        <Accordion.Item className={bem.element('specificity')}>\n            <Accordion.Header className={isOpen ? 'accordion_headerOpen' : 'accordion_header'} onClick={toggle}>\n                {title}\n            </Accordion.Header>\n            <Accordion.Content>{children}</Accordion.Content>\n        </Accordion.Item>\n    );\n};\n\nexport default AccordionContent;\n","import { Block } from '@navikt/fp-common';\nimport { FunctionComponent, ReactNode } from 'react';\n\ninterface Props {\n    visible?: boolean;\n    children?: ReactNode;\n}\n\nconst Accordion: FunctionComponent<Props> = ({ visible, children }) => {\n    return (\n        <Block className=\"content_margin\" padBottom=\"l\" visible={visible}>\n            {children}\n        </Block>\n    );\n};\n\nexport default Accordion;\n","import { useEffect, useRef } from 'react';\n\nconst useAbortSignal = () => {\n    const controller = useRef<AbortController>(new AbortController());\n\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            controller.current.abort();\n        };\n    }, []);\n\n    return controller.current.signal;\n};\n\nexport default useAbortSignal;\n","import axios from 'axios';\nimport { Attachment } from '@navikt/fp-types';\n\nexport const attachmentApi = axios.create();\n\nconst getSaveAttachment = (restApiUrl: string) => (attachment: Attachment) => {\n    const config = {\n        withCredentials: true,\n        timeout: 45 * 1000,\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n\n    const formData = new FormData();\n    formData.append('id', attachment.id);\n    formData.append('vedlegg', attachment.file, attachment.filename);\n\n    const url = `${restApiUrl}/storage/vedlegg`;\n    return attachmentApi.post(url, formData, config);\n};\n\nexport default getSaveAttachment;\n","import { Accordion, BodyShort, Button } from '@navikt/ds-react';\nimport { Block, Step, StepButtonWrapper, bemUtils, formatDate, guid, intlUtils } from '@navikt/fp-common';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport stepConfig, { getBackLinkForOppsummeringSteg } from '../stepsConfig';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport { getAktiveArbeidsforhold, getTekstOmManglendeArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\nimport { Link } from 'react-router-dom';\nimport { PaperplaneIcon } from '@navikt/aksel-icons';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport {\n    OppsummeringFormComponents,\n    OppsummeringFormData,\n    OppsummeringFormField,\n    getInitialOppsummeringValues,\n} from './oppsummeringFormConfig';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { useEffect, useMemo, useState } from 'react';\nimport { validateHarGodkjentOppsummering } from './validation/oppsummeringValidation';\nimport Api from 'app/api/api';\nimport { redirect, redirectToLogin } from 'app/utils/redirectUtils';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { getSøknadForInnsending } from 'app/utils/apiUtils';\nimport { mapTilretteleggingTilPerioder } from 'app/utils/tilretteleggingUtils';\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { FEIL_VED_INNSENDING, UKJENT_UUID, getErrorCallId, sendErrorMessageToSentry } from 'app/utils/errorUtils';\nimport { SendtSøknad } from 'app/types/SendtSøknad';\nimport Environment from 'app/Environment';\nimport UtenlandsoppholdOppsummering from './utenlandsopphold-oppsummering/UtenlandsoppholdOppsummering';\nimport ArbeidsforholdInformasjon from '../inntektsinformasjon/components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon';\nimport FrilansVisning from 'app/components/frilans-visning/FrilansVisning';\nimport EgenNæringVisning from 'app/components/egen-næring-visning/EgenNæringVisning';\nimport ArbeidIUtlandetVisning from 'app/components/arbeid-i-utlandet-visning/ArbeidIUtlandetVisning';\nimport PeriodeOppsummering from './periode-oppsummering/PeriodeOppsummering';\nimport AccordionItem from 'app/components/accordion/AccordionItem';\nimport AccordionContent from 'app/components/accordion/AccordionContent';\nimport { getSisteDagForSvangerskapspenger } from 'app/utils/dateUtils';\nimport { useAbortSignal } from '@navikt/fp-api';\nimport './oppsummering.css';\n\nconst Oppsummering = () => {\n    useUpdateCurrentTilretteleggingId(undefined);\n    const søknad = useSøknad();\n    const { søker, tilrettelegging } = søknad;\n    const søkerinfo = useSøkerinfo();\n    const { dispatch } = useSvangerskapspengerContext();\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [isSendingSøknad, setIsSendingSøknad] = useState(false);\n    const [submitError, setSubmitError] = useState<any>(undefined);\n    const [sendtSøknad, setSendtSøknad] = useState<undefined | SendtSøknad>(undefined);\n    useUpdateCurrentTilretteleggingId(undefined);\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const abortSignal = useAbortSignal();\n    const { barn, informasjonOmUtenlandsopphold } = søknad;\n    const { arbeidsforhold } = søkerinfo;\n    const intl = useIntl();\n    const formatertTermindato = formatDate(barn.termindato);\n    const formatertFødselsdato = barn.fødselsdato ? formatDate(barn.fødselsdato) : undefined;\n    const bem = bemUtils('oppsummering');\n    const sisteDagForSvangerskapspenger = getSisteDagForSvangerskapspenger(barn);\n    const allePerioderMedFomOgTom = useMemo(\n        () => mapTilretteleggingTilPerioder(søknad.tilrettelegging, sisteDagForSvangerskapspenger),\n        [søknad.tilrettelegging, sisteDagForSvangerskapspenger],\n    );\n    const søknadForInnsending = useMemo(\n        () => getSøknadForInnsending(søknad, allePerioderMedFomOgTom),\n        [søknad, allePerioderMedFomOgTom],\n    );\n    const handleSubmit = (values: Partial<OppsummeringFormData>) => {\n        dispatch(actionCreator.setGodkjentOppsummering(values.harGodkjentOppsummering!));\n        setFormSubmitted(true);\n    };\n    const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, barn.termindato);\n    const tilretteleggingMedFrilans = tilrettelegging.find(\n        (t) => t.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER,\n    );\n    const tilretteleggingMedSN = tilrettelegging.find((t) => t.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG);\n    useEffect(() => {\n        if (formSubmitted && !isSendingSøknad) {\n            setIsSendingSøknad(true);\n\n            Api.sendSøknad(søknadForInnsending, abortSignal)\n                .then((response) => {\n                    setSendtSøknad(response.data);\n                })\n                .catch((error) => {\n                    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setSubmitError(error);\n                    }\n                });\n        }\n    }, [formSubmitted, isSendingSøknad, søknadForInnsending, abortSignal]);\n\n    useEffect(() => {\n        if (submitError !== undefined) {\n            sendErrorMessageToSentry(submitError);\n            const submitErrorCallId = getErrorCallId(submitError);\n            const callIdForBruker =\n                submitErrorCallId !== UKJENT_UUID ? submitErrorCallId.slice(0, 8) : submitErrorCallId;\n            throw new Error(FEIL_VED_INNSENDING + callIdForBruker);\n        }\n    }, [submitError]);\n\n    useEffect(() => {\n        if (sendtSøknad) {\n            let navigateTo = Environment.INNSYN;\n            if (sendtSøknad.saksNr) {\n                navigateTo = `${Environment.INNSYN}/sak/${sendtSøknad.saksNr}`;\n            }\n            const navigateToMedURLParams = `${navigateTo}/redirectFromSoknad`;\n            redirect(navigateToMedURLParams);\n        }\n    }, [sendtSøknad]);\n\n    return (\n        <OppsummeringFormComponents.FormikWrapper\n            initialValues={getInitialOppsummeringValues()}\n            onSubmit={handleSubmit}\n            renderForm={() => {\n                return (\n                    <OppsummeringFormComponents.Form includeButtons={false}>\n                        <Step\n                            bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                            activeStepId=\"oppsummering\"\n                            pageTitle=\"Oppsummering\"\n                            steps={stepConfig(intl, søknad, arbeidsforhold)}\n                            onCancel={onAvbrytSøknad}\n                            useNoTempSavingText={true}\n                        >\n                            <Block padBottom=\"l\">\n                                <div className={bem.block}>\n                                    <Accordion>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omDeg')}>\n                                            <AccordionContent>\n                                                <Block padBottom=\"m\">\n                                                    <BodyShort>{`${søkerinfo.person.fornavn} ${søkerinfo.person.etternavn}`}</BodyShort>\n                                                </Block>\n                                                <Block>\n                                                    <BodyShort>{søkerinfo.person.fnr}</BodyShort>\n                                                </Block>\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omBarnet')}>\n                                            <AccordionContent>\n                                                <BodyShort>{`Termindato: ${formatertTermindato}`}</BodyShort>\n                                                {barn.erBarnetFødt && barn.fødselsdato && (\n                                                    <Block margin=\"m\">\n                                                        <BodyShort>{`Fødselsdato: ${formatertFødselsdato}`}</BodyShort>\n                                                    </Block>\n                                                )}\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omUtenlandsopphold')}>\n                                            <AccordionContent>\n                                                <UtenlandsoppholdOppsummering\n                                                    informasjonOmUtenlandsopphold={informasjonOmUtenlandsopphold}\n                                                />\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omArbeidsforhold')}>\n                                            <AccordionContent>\n                                                <Block padBottom=\"xl\">\n                                                    {aktiveArbeidsforhold.length > 0 && (\n                                                        <ArbeidsforholdInformasjon\n                                                            visManglerInfo={false}\n                                                            arbeidsforhold={aktiveArbeidsforhold}\n                                                        />\n                                                    )}\n                                                    {søker.harJobbetSomFrilans && søker.frilansInformasjon && (\n                                                        <FrilansVisning\n                                                            frilans={søker.frilansInformasjon}\n                                                        ></FrilansVisning>\n                                                    )}\n                                                    {søker.harJobbetSomSelvstendigNæringsdrivende &&\n                                                        søker.selvstendigNæringsdrivendeInformasjon && (\n                                                            <EgenNæringVisning\n                                                                næring={søker.selvstendigNæringsdrivendeInformasjon}\n                                                            ></EgenNæringVisning>\n                                                        )}\n                                                    {søker.harHattAnnenInntekt &&\n                                                        søker.andreInntekter &&\n                                                        søker.andreInntekter.map((arbeid) => {\n                                                            return (\n                                                                <ArbeidIUtlandetVisning\n                                                                    key={guid()}\n                                                                    arbeidIUtlandet={arbeid}\n                                                                ></ArbeidIUtlandetVisning>\n                                                            );\n                                                        })}\n                                                    {(!søker.harJobbetSomFrilans ||\n                                                        !søker.harJobbetSomSelvstendigNæringsdrivende ||\n                                                        !søker.harHattAnnenInntekt) && (\n                                                        <Block padBottom=\"m\">\n                                                            <BodyShort>\n                                                                {getTekstOmManglendeArbeidsforhold(søker, intl)}\n                                                            </BodyShort>\n                                                        </Block>\n                                                    )}\n                                                </Block>\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem\n                                            title={intlUtils(intl, 'oppsummering.periodeMedSvangerskapspenger')}\n                                        >\n                                            <AccordionContent>\n                                                {tilretteleggingMedFrilans && (\n                                                    <>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort className={bem.element('label')}>\n                                                                {'Risikofaktorer i jobben din som frilanser:'}\n                                                            </BodyShort>\n                                                            <BodyShort>\n                                                                {tilretteleggingMedFrilans.risikofaktorer}\n                                                            </BodyShort>\n                                                        </Block>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort className={bem.element('label')}>\n                                                                {'Tilretteleggingstiltak i jobben din som frilanser:'}\n                                                            </BodyShort>\n                                                            <BodyShort>\n                                                                {tilretteleggingMedFrilans.tilretteleggingstiltak}\n                                                            </BodyShort>\n                                                        </Block>\n                                                    </>\n                                                )}\n                                                {tilretteleggingMedSN && (\n                                                    <>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort\n                                                                className={bem.element('label')}\n                                                            >{`Risikofaktorer i ${tilretteleggingMedSN.arbeidsforhold.navn}`}</BodyShort>\n                                                            <BodyShort>{tilretteleggingMedSN.risikofaktorer}</BodyShort>\n                                                        </Block>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort className={bem.element('label')}>\n                                                                {`Tilretteleggingstiltak i ${tilretteleggingMedSN.arbeidsforhold.navn}`}\n                                                            </BodyShort>\n                                                            <BodyShort>\n                                                                {tilretteleggingMedSN.tilretteleggingstiltak}\n                                                            </BodyShort>\n                                                        </Block>\n                                                    </>\n                                                )}\n                                                <PeriodeOppsummering\n                                                    perioder={allePerioderMedFomOgTom}\n                                                    sisteDagForSvangerskapspenger={sisteDagForSvangerskapspenger}\n                                                    barn={barn}\n                                                />\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                    </Accordion>\n\n                                    <Block margin=\"xl\" padBottom=\"xl\">\n                                        <OppsummeringFormComponents.ConfirmationCheckbox\n                                            name={OppsummeringFormField.harGodkjentOppsummering}\n                                            label={intlUtils(intl, 'oppsummering.bekreft')}\n                                            validate={validateHarGodkjentOppsummering(intl)}\n                                        />\n                                    </Block>\n                                    <Block padBottom=\"l\">\n                                        <StepButtonWrapper>\n                                            <Button\n                                                variant=\"secondary\"\n                                                as={Link}\n                                                to={getBackLinkForOppsummeringSteg(tilrettelegging)}\n                                            >\n                                                <FormattedMessage id=\"backlink.label\" />\n                                            </Button>\n                                            <Button\n                                                icon={<PaperplaneIcon />}\n                                                iconPosition=\"right\"\n                                                type=\"submit\"\n                                                disabled={formSubmitted}\n                                                loading={formSubmitted}\n                                            >\n                                                {intlUtils(intl, 'send.søknad')}\n                                            </Button>\n                                        </StepButtonWrapper>\n                                    </Block>\n                                </div>\n                            </Block>\n                        </Step>\n                    </OppsummeringFormComponents.Form>\n                );\n            }}\n        />\n    );\n};\n\nexport default Oppsummering;\n","import { ExclamationmarkTriangleIcon, FileIcon, XMarkIcon } from '@navikt/aksel-icons';\nimport { BodyShort, Button, Loader, Link } from '@navikt/ds-react';\nimport { FunctionComponent } from 'react';\nimport { Block, bemUtils } from '@navikt/fp-common';\nimport classNames from 'classnames';\nimport './attachmentVisning.css';\nimport { Attachment } from 'app/types/Attachment';\ninterface Props {\n    vedlegg: Attachment;\n    onDelete: (vedlegg: Attachment) => void;\n}\n\nconst getAttachmentIcon = (bem: any, vedlegg: Attachment) => {\n    if (vedlegg.error) {\n        return <ExclamationmarkTriangleIcon className={bem.element('icon')} title=\"Feil med fil\" />;\n    } else if (vedlegg.pending) {\n        return <Loader className={bem.element('icon')} size=\"small\" />;\n    } else {\n        return <FileIcon className={bem.element('icon')} title=\"Opplastet fil\" />;\n    }\n};\n\nconst AttachmentVisning: FunctionComponent<Props> = ({ vedlegg, onDelete }) => {\n    const bem = bemUtils('attachmentVisning');\n    const filstørrelseKB = Math.round(vedlegg.filesize * 0.001);\n    const handleOnClickSlett = (vedlegg: Attachment) => {\n        onDelete(vedlegg);\n    };\n    return (\n        <div className={bem.block}>\n            {getAttachmentIcon(bem, vedlegg)}\n            <div>\n                <Block padBottom=\"s\">\n                    {vedlegg.url ? (\n                        <Link href={vedlegg.url} target=\"_blank\">\n                            {vedlegg.filename}\n                        </Link>\n                    ) : (\n                        <BodyShort className={bem.element('filename')} size=\"medium\">\n                            {vedlegg.filename}\n                        </BodyShort>\n                    )}\n                </Block>\n                <Block padBottom=\"s\">\n                    <BodyShort size=\"small\">{`${filstørrelseKB} kB`}</BodyShort>\n                </Block>\n            </div>\n\n            <Button\n                aria-label=\"slett skjema\"\n                variant=\"tertiary\"\n                type=\"button\"\n                className={classNames(bem.element('slett'), vedlegg.pending ? bem.modifier('pending') : undefined)}\n                icon={<XMarkIcon aria-hidden />}\n                onClick={() => handleOnClickSlett(vedlegg)}\n            />\n        </div>\n    );\n};\n\nexport default AttachmentVisning;\n","import { FunctionComponent } from 'react';\nimport AttachmentVisning from '../attachment-visning.tsx/AttachmentVisning';\nimport { Attachment } from 'app/types/Attachment';\n\ninterface Props {\n    vedlegg: Attachment[];\n    onDelete: (value: Attachment) => void;\n}\n\nconst AttachmentList: FunctionComponent<Props> = ({ vedlegg, onDelete }) => {\n    return (\n        <>\n            {vedlegg &&\n                vedlegg.length > 0 &&\n                vedlegg.map((fil) => {\n                    return <AttachmentVisning key={fil.id} vedlegg={fil} onDelete={onDelete} />;\n                })}\n        </>\n    );\n};\n\nexport default AttachmentList;\n","export enum AttachmentType {\n    TILRETTELEGGING = 'tilrettelegging',\n    ANNEN_INNTEKT = 'anneninntektDokumentasjon',\n}\n","export enum Skjemanummer {\n    SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING = 'I000109',\n}\n","import { Label } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\n\nconst finnLabel = (intl: IntlShape, typeArbeid: Arbeidsforholdstype) => {\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'skjema.vedlegg.label.frilanser');\n    }\n    if (typeArbeid === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'skjema.vedlegg.label.selvstendig');\n    }\n    throw Error('Har ingen tekst for kode: ' + typeArbeid);\n};\n\ninterface Props {\n    typeArbeid: Arbeidsforholdstype;\n}\nconst SkjemaopplastningTekstFrilansSN: React.FunctionComponent<Props> = ({ typeArbeid }) => {\n    const intl = useIntl();\n    const label = finnLabel(intl, typeArbeid);\n    return (\n        <div style={{ marginBottom: '1rem' }}>\n            <div>\n                <Label>{label}</Label>\n            </div>\n            <FormattedMessage id=\"skjema.vedlegg.description.frilansSN\" />\n        </div>\n    );\n};\n\nexport default SkjemaopplastningTekstFrilansSN;\n","import { Label } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst SkjemaopplastningTekstArbeidsgiver: React.FunctionComponent = () => {\n    const intl = useIntl();\n\n    return (\n        <div style={{ marginBottom: '1rem' }}>\n            <div>\n                <Label>{intlUtils(intl, 'skjema.vedlegg.label.arbeidsgiver')}</Label>\n            </div>\n            <FormattedMessage\n                id={'skjema.vedlegg.description.arbeidsgiver'}\n                values={{\n                    a: (msg: any) => (\n                        <a\n                            className=\"lenke\"\n                            rel=\"noopener noreferrer\"\n                            href={links.arbeidstilsynetSkjema}\n                            target=\"_blank\"\n                        >\n                            {msg}\n                        </a>\n                    ),\n                }}\n            />\n        </div>\n    );\n};\n\nexport default SkjemaopplastningTekstArbeidsgiver;\n","import { guid } from '@navikt/fp-common';\nimport { Attachment, InnsendingsType } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport Bytes from 'bytes';\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFilTilVedlegg = (\n    file: File,\n    type: AttachmentType,\n    skjemanummer: Skjemanummer,\n    innsendingsType?: InnsendingsType,\n): Attachment => ({\n    id: generateAttachmentId(),\n    file,\n    filename: file.name,\n    filesize: file.size,\n    uploaded: false,\n    pending: false,\n    type,\n    skjemanummer,\n    innsendingsType,\n});\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const deleteAttachment = (alleVedlegg: Attachment[], deleted: Attachment): Attachment[] => {\n    alleVedlegg = alleVedlegg.filter((att) => att !== deleted);\n    return alleVedlegg;\n};\n\nexport const isAttachmentWithError = ({ pending, uploaded, filesize }: Attachment) =>\n    (pending === false && uploaded === false) || filesize === 0;\n","import Environment from 'app/Environment';\nimport getAxiosInstance from './apiInterceptor';\nimport { Attachment } from 'app/types/Attachment';\n\nfunction saveAttachment(attachment: Attachment) {\n    const config = {\n        withCredentials: true,\n        timeout: 45 * 1000,\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n\n    const formData = new FormData();\n    formData.append('id', attachment.id);\n    formData.append('vedlegg', attachment.file, attachment.filename);\n\n    const url = `${Environment.REST_API_URL}/storage/vedlegg`;\n    return getAxiosInstance().post(url, formData, config);\n}\n\nconst AttachmentApi = { saveAttachment };\n\nexport default AttachmentApi;\n","import { BodyShort } from '@navikt/ds-react';\nimport { FormikFileInput } from '@navikt/sif-common-formik-ds/lib';\nimport Block from '@navikt/fp-common/src/common/components/block/Block';\nimport { ArrayHelpers } from 'formik';\nimport { useState } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport { Attachment } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { mapFilTilVedlegg } from 'app/utils/attachmentUtils';\nimport { intlUtils } from '@navikt/fp-common';\nimport AttachmentApi from 'app/api/attachmentApi';\n\nexport type FieldArrayReplaceFn = (index: number, value: any) => void;\nexport type FieldArrayPushFn = (obj: any) => void;\nexport type FieldArrayRemoveFn = (index: number) => undefined;\n\nexport interface Props {\n    attachmentType: AttachmentType;\n    attachments: Attachment[];\n    buttonLabel: string;\n    label: string;\n    legend: string;\n    name: any;\n    onFileInputClick?: () => void;\n    skjemanummer: Skjemanummer;\n    validateHasAttachment: boolean;\n    description?: string;\n}\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_STØRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\nconst mapFilerTilPendingVedlegg = (\n    filer: File[],\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer | 'default',\n): Attachment[] | undefined => {\n    if (skjemanummer === 'default') {\n        return undefined;\n    }\n    return filer.map((fil) => {\n        const nyttVedlegg = mapFilTilVedlegg(fil, attachmentType, skjemanummer);\n        nyttVedlegg.pending = true;\n        return nyttVedlegg;\n    });\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_STØRRELSE_KB;\n};\n\nconst sjekkVedlegg = (\n    alleNyeVedlegg: Attachment[],\n    setErrors: React.Dispatch<React.SetStateAction<string[]>>,\n    intl: IntlShape,\n): Attachment[] => {\n    return alleNyeVedlegg.filter((vedlegg) => {\n        const erGyldigFiltype = fileExtensionIsValid(vedlegg.filename);\n        if (!erGyldigFiltype) {\n            setErrors((oldState) =>\n                oldState.concat(intlUtils(intl, 'vedlegg.feilmelding.ugyldig.type', { filename: vedlegg.filename })),\n            );\n        }\n        const erGyldigFilstørrelse = fileSizeIsValid(vedlegg.filesize);\n        if (!erGyldigFilstørrelse) {\n            setErrors((oldState) =>\n                oldState.concat(\n                    intlUtils(intl, 'vedlegg.feilmelding.ugyldig.størrelse', {\n                        filename: vedlegg.filename,\n                        maxStørrelse: MAX_FIL_STØRRELSE_KB,\n                    }),\n                ),\n            );\n        }\n        return erGyldigFiltype && erGyldigFilstørrelse;\n    });\n};\n\nconst lastOppVedlegg = (\n    alleNyeVedlegg: Attachment[],\n    replaceFn: FieldArrayReplaceFn,\n    removeFn: FieldArrayRemoveFn,\n    setErrors: React.Dispatch<React.SetStateAction<string[]>>,\n    antallEksisterendeVedlegg: number,\n    intl: IntlShape,\n): void => {\n    alleNyeVedlegg.forEach(async (vedlegg, index) => {\n        try {\n            const response = await AttachmentApi.saveAttachment(vedlegg);\n            vedlegg.pending = false;\n            vedlegg.url = response.headers.location;\n            vedlegg.uploaded = true;\n            vedlegg.uuid = response.data;\n            replaceFn(antallEksisterendeVedlegg + index, vedlegg);\n        } catch (error) {\n            removeFn(antallEksisterendeVedlegg + index);\n            setErrors((oldState) =>\n                oldState.concat(\n                    intlUtils(intl, 'vedlegg.feilmelding.opplasting.feilet', { filename: vedlegg.filename }),\n                ),\n            );\n        }\n    });\n};\n\nconst FormikFileUploader: React.FunctionComponent<Props> = ({\n    attachments,\n    name,\n    onFileInputClick,\n    attachmentType,\n    skjemanummer,\n    legend,\n    buttonLabel,\n    validateHasAttachment,\n    ...otherProps\n}) => {\n    const intl = useIntl();\n    const [errors, setErrors] = useState<string[]>([]);\n\n    return (\n        <>\n            <Block padBottom=\"l\">\n                <FormikFileInput\n                    name={name}\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={(files: File[], { push, replace, remove }: ArrayHelpers) => {\n                        const alleNyeVedlegg = mapFilerTilPendingVedlegg(files, attachmentType, skjemanummer);\n                        const alleNyeGyldigeVedlegg = alleNyeVedlegg\n                            ? sjekkVedlegg(alleNyeVedlegg, setErrors, intl)\n                            : undefined;\n                        if (alleNyeGyldigeVedlegg !== undefined) {\n                            alleNyeGyldigeVedlegg.forEach((nyttVedlegg) => push(nyttVedlegg));\n                            lastOppVedlegg(alleNyeGyldigeVedlegg, replace, remove, setErrors, attachments.length, intl);\n                        }\n                    }}\n                    validate={() => {\n                        if (validateHasAttachment && attachments.length === 0) {\n                            return 'Du må laste opp minst ett dokument';\n                        }\n\n                        return undefined;\n                    }}\n                    legend={legend}\n                    buttonLabel={buttonLabel}\n                    onClick={onFileInputClick}\n                    error={\n                        errors.length > 0\n                            ? errors.map((error) => <BodyShort key={error}>{error}</BodyShort>)\n                            : undefined\n                    }\n                    {...otherProps}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default FormikFileUploader;\n","import { Alert, Button } from '@navikt/ds-react';\nimport { Block, Step, StepButtonWrapper, intlUtils } from '@navikt/fp-common';\nimport AttachmentList from 'app/components/attachment-list/AttachmentList';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ScanDocumentInfo } from '@navikt/fp-ui';\nimport { SkjemaFormComponents, SkjemaFormData, SkjemaFormField } from './skjemaFormTypes';\nimport stepConfig, { getBackLinkForSkjemaSteg } from '../stepsConfig';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport actionCreator from 'app/context/action/actionCreator';\nimport {\n    getInitialSkjemaValuesFromState,\n    getSkjemaLegend,\n    getSkjemaSideTittel,\n    mapTilretteleggingMedSkjema,\n} from './skjemaFormUtils';\nimport { Link } from 'react-router-dom';\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { FunctionComponent, useState } from 'react';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport SkjemaopplastningTekstFrilansSN from './components/SkjemaopplastningTekstFrilansSN';\nimport SkjemaopplastningTekstArbeidsgiver from './components/SkjemaopplastningTekstArbeidsgiver';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport SøknadRoutes from 'app/routes/routes';\nimport Bedriftsbanner from 'app/components/bedriftsbanner/Bedriftsbanner';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport { deleteAttachment } from 'app/utils/attachmentUtils';\nimport { Attachment } from 'app/types/Attachment';\n\nconst MAX_ANTALL_VEDLEGG = 40;\ninterface Props {\n    id: string;\n    typeArbeid: Arbeidsforholdstype;\n    navn: string;\n}\n\nconst Skjema: FunctionComponent<Props> = ({ navn, id, typeArbeid }) => {\n    useUpdateCurrentTilretteleggingId(id);\n    const intl = useIntl();\n    const { arbeidsforhold } = useSøkerinfo();\n    const søknad = useSøknad();\n    const { søker, barn, tilrettelegging } = søknad;\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const [antallForMangeVedlegg, setAntallForMangeVedlegg] = useState(0);\n    const [submitClicked, setSubmitClicked] = useState(false);\n    const flereTilrettelegginger = tilrettelegging.length > 1;\n    const currentTilrettelegging = tilrettelegging.find((t) => t.id === id);\n    const nextRoute = `${SøknadRoutes.TILRETTELEGGING}/${currentTilrettelegging!.id}`;\n\n    const onValidSubmitHandler = (values: Partial<SkjemaFormData>) => {\n        const mappedTilrettelegging = mapTilretteleggingMedSkjema(\n            tilrettelegging,\n            currentTilrettelegging!,\n            values as SkjemaFormData,\n        );\n        return [actionCreator.setTilrettelegging(mappedTilrettelegging)];\n    };\n    const erFlereTilrettelegginger = tilrettelegging.length > 1;\n    const sideTittel = getSkjemaSideTittel(erFlereTilrettelegginger, intl, navn);\n    const key = id;\n    const skjemanummer = Skjemanummer.SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING;\n\n    const erSNEllerFrilans =\n        typeArbeid === Arbeidsforholdstype.FRILANSER || typeArbeid === Arbeidsforholdstype.SELVSTENDIG;\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    const handleOnSubmit = (values: any) => {\n        setSubmitClicked(true);\n\n        if (antallForMangeVedlegg <= 0) {\n            handleSubmit(values);\n        }\n    };\n    const legend = getSkjemaLegend(typeArbeid, intl);\n    return (\n        <SkjemaFormComponents.FormikWrapper\n            initialValues={getInitialSkjemaValuesFromState(currentTilrettelegging!)}\n            onSubmit={handleOnSubmit}\n            renderForm={({ values: formValues, setFieldValue }) => {\n                const hasPendingVedlegg = formValues.vedlegg && !!formValues.vedlegg.find((v) => v.pending);\n                const disableButtons = isSubmitting || hasPendingVedlegg;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId={`skjema-${id}`}\n                        pageTitle={sideTittel}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <SkjemaFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block key={key}>\n                                {flereTilrettelegginger && (\n                                    <Block padBottom=\"xxl\">\n                                        <Bedriftsbanner arbeid={currentTilrettelegging!.arbeidsforhold} />\n                                    </Block>\n                                )}\n                                <div>\n                                    {erSNEllerFrilans && <SkjemaopplastningTekstFrilansSN typeArbeid={typeArbeid} />}\n\n                                    {!erSNEllerFrilans && <SkjemaopplastningTekstArbeidsgiver />}\n                                    {formValues.vedlegg && formValues.vedlegg.length > 0 && (\n                                        <AttachmentList\n                                            vedlegg={formValues.vedlegg}\n                                            onDelete={(file: Attachment) => {\n                                                setSubmitClicked(false);\n                                                setFieldValue(\n                                                    SkjemaFormField.vedlegg,\n                                                    deleteAttachment(formValues.vedlegg!, file),\n                                                );\n                                            }}\n                                        />\n                                    )}\n                                    <Block padBottom=\"xxl\">\n                                        <FormikFileUploader\n                                            name={SkjemaFormField.vedlegg}\n                                            buttonLabel={intlUtils(intl, 'skjema.vedlegg.buttonLabel')}\n                                            legend={legend}\n                                            label={`Last opp dokument`}\n                                            attachments={formValues.vedlegg || []}\n                                            attachmentType={AttachmentType.TILRETTELEGGING}\n                                            skjemanummer={skjemanummer}\n                                            validateHasAttachment={true}\n                                            onFileInputClick={() => setSubmitClicked(false)}\n                                        />\n                                    </Block>\n                                </div>\n                            </Block>\n\n                            <Block padBottom=\"xxl\">\n                                <ScanDocumentInfo />\n                            </Block>\n                            {antallForMangeVedlegg > 0 && submitClicked && (\n                                <Block padBottom=\"l\">\n                                    <Alert variant=\"error\">\n                                        {intlUtils(intl, 'skjema.maks40Filer', {\n                                            antallVedlegg: antallForMangeVedlegg,\n                                        })}\n                                    </Alert>\n                                </Block>\n                            )}\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        disabled={disableButtons}\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkForSkjemaSteg(\n                                            barn.termindato,\n                                            arbeidsforhold,\n                                            søker,\n                                            tilrettelegging,\n                                            currentTilrettelegging!.id,\n                                        )}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={disableButtons}\n                                        loading={isSubmitting}\n                                        onClick={() => {\n                                            const antallVedleggAndreTilrettelegginger = tilrettelegging\n                                                .filter((t) => t.id !== currentTilrettelegging!.id)\n                                                .reduce(\n                                                    (total, tilrettelegging) => total + tilrettelegging.vedlegg.length,\n                                                    0,\n                                                );\n                                            const antallNyeVedlegg = formValues.vedlegg ? formValues.vedlegg.length : 0;\n                                            const antallVedlegg =\n                                                antallVedleggAndreTilrettelegginger + antallNyeVedlegg;\n                                            setAntallForMangeVedlegg(antallVedlegg - MAX_ANTALL_VEDLEGG);\n                                        }}\n                                    >\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </SkjemaFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Skjema;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum FrilansFormField {\n    frilansFom = 'frilansFom',\n    // frilansTom = 'frilansTom',\n    jobberFremdelesSomFrilanser = 'jobberFremdelesSomFrilanser',\n}\n\nexport interface FrilansFormData {\n    [FrilansFormField.frilansFom]: string;\n    // [FrilansFormField.frilansTom]: string | undefined;\n    [FrilansFormField.jobberFremdelesSomFrilanser]: YesOrNo;\n}\n\nexport const FrilansFormComponents = getTypedFormComponents<FrilansFormField, FrilansFormData>();\n","import { Frilans } from 'app/types/Frilans';\nimport { FrilansFormData, FrilansFormField } from './frilansFormConfig';\nimport { QuestionVisibility, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { Søker } from 'app/types/Søker';\n\nexport const initialFrilansFormValues: FrilansFormData = {\n    [FrilansFormField.frilansFom]: '',\n    // [FrilansFormField.frilansTom]: undefined,\n    [FrilansFormField.jobberFremdelesSomFrilanser]: YesOrNo.UNANSWERED,\n};\n\nexport const getInitialFrilansFormValues = (frilans: Frilans | undefined): FrilansFormData => {\n    if (frilans === undefined) {\n        return initialFrilansFormValues;\n    }\n    return {\n        ...initialFrilansFormValues,\n        frilansFom: frilans.oppstart,\n        // frilansTom: frilans.sluttDato,\n        jobberFremdelesSomFrilanser: convertBooleanOrUndefinedToYesOrNo(frilans.jobberFremdelesSomFrilans),\n    };\n};\n\nexport const mapFrilansDataToSøkerState = (søker: Søker, values: FrilansFormData): Søker => {\n    return {\n        ...søker,\n        frilansInformasjon: {\n            jobberFremdelesSomFrilans: !!convertYesOrNoOrUndefinedToBoolean(values.jobberFremdelesSomFrilanser),\n            oppstart: values.frilansFom,\n            // sluttDato: values.frilansTom!,\n        },\n    };\n};\n\nexport const cleanupFrilansFormData = (\n    values: FrilansFormData,\n    visibility: QuestionVisibility<FrilansFormField>,\n): FrilansFormData => {\n    const cleanedData: FrilansFormData = {\n        frilansFom: visibility.isVisible(FrilansFormField.frilansFom)\n            ? values.frilansFom\n            : initialFrilansFormValues.frilansFom,\n        // frilansTom: visibility.isVisible(FrilansFormField.frilansTom)\n        //     ? values.frilansTom\n        //     : initialFrilansFormValues.frilansTom,\n        jobberFremdelesSomFrilanser: visibility.isVisible(FrilansFormField.jobberFremdelesSomFrilanser)\n            ? values.jobberFremdelesSomFrilanser\n            : initialFrilansFormValues.jobberFremdelesSomFrilanser,\n    };\n\n    return cleanedData;\n};\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { FrilansFormData, FrilansFormField } from './frilansFormConfig';\n\nconst FrilansFormConfig: QuestionConfig<FrilansFormData, FrilansFormField> = {\n    [FrilansFormField.frilansFom]: {\n        isIncluded: () => true,\n        isAnswered: ({ frilansFom }) => hasValue(frilansFom),\n    },\n    [FrilansFormField.jobberFremdelesSomFrilanser]: {\n        isIncluded: () => true,\n        isAnswered: ({ jobberFremdelesSomFrilanser }) => jobberFremdelesSomFrilanser !== YesOrNo.UNANSWERED,\n    },\n    // [FrilansFormField.frilansTom]: {\n    //     isIncluded: ({ jobberFremdelesSomFrilanser }) => jobberFremdelesSomFrilanser === YesOrNo.NO,\n    //     isAnswered: ({ frilansTom }) => hasValue(frilansTom),\n    // },\n};\n\nconst frilansSubformQuestionsConfig = Questions<FrilansFormData, FrilansFormField>(FrilansFormConfig);\n\nexport default frilansSubformQuestionsConfig;\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { intlUtils, isDateABeforeDateB, isDateInTheFuture } from '@navikt/fp-common';\nimport { YesOrNo, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { fireUkerSiden } from 'app/utils/dateUtils';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { IntlShape } from 'react-intl';\n\nexport const validateFrilansStart = (intl: IntlShape) => (fom: string) => {\n    if (!hasValue(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.påkrevd');\n    }\n\n    if (!isISODateString(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n    }\n\n    if (isDateInTheFuture(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\n    }\n\n    // if (hasValue(tom) && isISODateString(tom) && isDateABeforeDateB(tom, fom)) {\n    //     return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\n    // }\n\n    return undefined;\n};\n\nexport const validateFrilansSlutt = (intl: IntlShape, pågående: YesOrNo, fom: string) => (tom: string) => {\n    if (pågående === YesOrNo.YES) {\n        return undefined;\n    }\n    if (!hasValue(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\n    }\n\n    if (!isISODateString(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n    }\n\n    if (isDateInTheFuture(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\n    }\n\n    if (isDateABeforeDateB(tom, dateToISOString(fireUkerSiden(new Date())))) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.frilans.merEnn4UkerSiden');\n    }\n\n    if (hasValue(fom) && isISODateString(fom) && isDateABeforeDateB(tom, fom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\n    }\n\n    return undefined;\n};\n","import { FrilansFormComponents, FrilansFormData, FrilansFormField } from './frilansFormConfig';\nimport { cleanupFrilansFormData, getInitialFrilansFormValues, mapFrilansDataToSøkerState } from './frilansFormUtils';\nimport frilansSubformQuestionsConfig from './frilansFormQuestionsConfig';\nimport {\n    Block,\n    Step,\n    StepButtonWrapper,\n    date20YearsAgo,\n    dateToday,\n    intlUtils,\n    validateYesOrNoIsAnswered,\n} from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport stepConfig, { getNextRouteForFrilans, getPreviousSetStepHref } from 'app/steps/stepsConfig';\nimport { validateFrilansStart } from './frilansValidation';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { Button } from '@navikt/ds-react';\nimport { Link } from 'react-router-dom';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport { getFrilansTilretteleggingOption } from '../velg-arbeidsforhold/velgArbeidFormUtils';\nimport { søkerHarKunEtAktivtArbeid } from 'app/utils/arbeidsforholdUtils';\n\nconst FrilansStep: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useSøkerinfo();\n    const søknad = useSøknad();\n    const { søker, barn, tilrettelegging } = søknad;\n\n    const onValidSubmitHandler = (values: Partial<FrilansFormData>) => {\n        const søkerMedFrilans = mapFrilansDataToSøkerState(søker, values as FrilansFormData);\n        const harKunEtAktivtArbeid = søkerHarKunEtAktivtArbeid(\n            barn.termindato,\n            arbeidsforhold,\n            søkerMedFrilans.harJobbetSomFrilans,\n            søkerMedFrilans.harJobbetSomSelvstendigNæringsdrivende,\n        );\n        if (harKunEtAktivtArbeid) {\n            const tilretteleggingOptions = [\n                getFrilansTilretteleggingOption(tilrettelegging, søkerMedFrilans.frilansInformasjon!),\n            ];\n            return [actionCreator.setSøker(søkerMedFrilans), actionCreator.setTilrettelegging(tilretteleggingOptions)];\n        }\n        return [actionCreator.setSøker(søkerMedFrilans)];\n    };\n    const nextRoute = getNextRouteForFrilans(søker, barn.termindato, arbeidsforhold);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytSøknad = useAvbrytSøknad();\n    return (\n        <FrilansFormComponents.FormikWrapper\n            initialValues={getInitialFrilansFormValues(søker.frilansInformasjon)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = frilansSubformQuestionsConfig.getVisbility(formValues as FrilansFormData);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"frilans\"\n                        pageTitle={intlUtils(intl, 'steps.label.frilans')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <FrilansFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupFrilansFormData(values, visibility)}\n                        >\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(FrilansFormField.frilansFom)}>\n                                <FrilansFormComponents.DatePicker\n                                    name={FrilansFormField.frilansFom}\n                                    label={intlUtils(intl, 'frilans.oppstart')}\n                                    validate={validateFrilansStart(intl)}\n                                    maxDate={dateToday}\n                                    minDate={date20YearsAgo}\n                                    showYearSelector={true}\n                                    placeholder={'dd.mm.åååå'}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(FrilansFormField.jobberFremdelesSomFrilanser)}\n                            >\n                                <FrilansFormComponents.YesOrNoQuestion\n                                    name={FrilansFormField.jobberFremdelesSomFrilanser}\n                                    legend={intlUtils(intl, 'frilans.jobberFremdelesSomFrilans')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.jobberFremdelesSomFrilans.påkrevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            {/* <Block padBottom=\"xxl\" visible={visibility.isVisible(FrilansFormField.frilansTom)}>\n                                <FrilansFormComponents.DatePicker\n                                    name={FrilansFormField.frilansTom}\n                                    label={intlUtils(intl, 'frilans.slutt')}\n                                    minDate={getMinInputTilOgMedValue(formValues.frilansFom, date4WeeksAgo)}\n                                    maxDate={dateToday}\n                                    showYearSelector={true}\n                                    placeholder={'dd.mm.åååå'}\n                                    validate={validateFrilansSlutt(\n                                        intl,\n                                        formValues.jobberFremdelesSomFrilanser!,\n                                        formValues.frilansFom!,\n                                    )}\n                                />\n                            </Block> */}\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getPreviousSetStepHref('frilans')}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </FrilansFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default FrilansStep;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { ArbeidIUtlandetInput } from 'app/types/ArbeidIUtlandet';\n\nexport enum ArbeidIUtlandetFormField {\n    arbeidIUtlandet = 'arbeidIUtlandet',\n}\n\nexport interface ArbeidIUtlandetFormData {\n    [ArbeidIUtlandetFormField.arbeidIUtlandet]: ArbeidIUtlandetInput[];\n}\n\nexport const ArbeidIUtlandetFormComponents = getTypedFormComponents<\n    ArbeidIUtlandetFormField | string,\n    ArbeidIUtlandetFormData\n>();\n","import { AnnenInntektType, ArbeidIUtlandet, ArbeidIUtlandetInput } from 'app/types/ArbeidIUtlandet';\n\nimport { ArbeidIUtlandetFormData, ArbeidIUtlandetFormField } from './arbeidIUtlandetFormConfig';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport const getUferdigArbeidIUtlandetInput = (): ArbeidIUtlandetInput => {\n    return {\n        fom: '',\n        tom: '',\n        pågående: undefined!,\n        arbeidsgiverNavn: '',\n        land: '',\n    };\n};\n\nexport const initialArbeidIUtlandetFormValues: ArbeidIUtlandetFormData = {\n    [ArbeidIUtlandetFormField.arbeidIUtlandet]: [getUferdigArbeidIUtlandetInput()],\n};\n\nexport const mapArbeidIUtlandetTilState = (formValues: Partial<ArbeidIUtlandetFormData>): ArbeidIUtlandet[] => {\n    const mappedAbeid = formValues.arbeidIUtlandet!.map((arbeid) => {\n        return {\n            type: AnnenInntektType.JOBB_I_UTLANDET,\n            tidsperiode: { fom: arbeid.fom, tom: arbeid.tom },\n            pågående: !!convertYesOrNoOrUndefinedToBoolean(arbeid.pågående),\n            arbeidsgiverNavn: arbeid.arbeidsgiverNavn,\n            land: arbeid.land,\n        };\n    });\n    return mappedAbeid;\n};\nexport const getInitialArbeidIUtlandetFormData = (\n    arbeidIUtlandet: ArbeidIUtlandet[] | undefined,\n): ArbeidIUtlandetFormData => {\n    if (arbeidIUtlandet === undefined || arbeidIUtlandet.length === 0) {\n        return initialArbeidIUtlandetFormValues;\n    }\n    const mappedArbeid = arbeidIUtlandet.map((arbeid) => {\n        return {\n            fom: arbeid.tidsperiode.fom,\n            tom: arbeid.tidsperiode.tom,\n            pågående: convertBooleanOrUndefinedToYesOrNo(arbeid.pågående),\n            arbeidsgiverNavn: arbeid.arbeidsgiverNavn,\n            land: arbeid.land,\n        };\n    });\n    return { arbeidIUtlandet: mappedArbeid };\n};\n\nexport const cleanUpArbeidIUtlandetFormData = (values: ArbeidIUtlandetFormData): ArbeidIUtlandetFormData => {\n    const cleanedArbeidIUtlandet = values.arbeidIUtlandet.map((arbeid) => {\n        return {\n            ...arbeid,\n            tom: arbeid.pågående === YesOrNo.NO ? arbeid.tom : getUferdigArbeidIUtlandetInput().tom,\n        };\n    });\n    const cleanedData: ArbeidIUtlandetFormData = { arbeidIUtlandet: cleanedArbeidIUtlandet };\n    return cleanedData;\n};\n","import * as countries from 'i18n-iso-countries';\nimport * as langNB from 'i18n-iso-countries/langs/nb.json';\nimport * as langNN from 'i18n-iso-countries/langs/nn.json';\n\ncountries.registerLocale(langNB);\ncountries.registerLocale(langNN);\n\n/** Kilde:\n * https://www.nav.no/no/person/flere-tema/arbeid-og-opphold-i-utlandet/relatert-informasjon/eos-landene\n */\nexport const filteredListEØSCountries = (countryOptionValue: string, shouldFilter?: boolean) => {\n    if (shouldFilter) {\n        switch (countryOptionValue) {\n            case 'BE': // Belgia\n            case 'BG': // Bulgaria\n            case 'DK': // Danmark\n            case 'EE': // Estland\n            case 'FI': // Finland\n            case 'FR': // Frankrike\n            case 'GR': // Hellas\n            case 'IE': // Irland\n            case 'IS': // Island\n            case 'IT': // Italia\n            case 'HR': // Kroatia\n            case 'CY': // Kypros\n            case 'LV': // Latvia\n            case 'LI': // Liechtenstein\n            case 'LT': // Litauen\n            case 'LU': // Luxembourg\n            case 'MT': // Malta\n            case 'NL': // Nederland\n            case 'NO': // Norge\n            case 'PL': // Polen\n            case 'PT': // Portugal\n            case 'RO': // Romania\n            case 'SK': // Slovakia\n            case 'SI': // Slovenia\n            case 'ES': // Spania\n            case 'CH': // Sveits\n            case 'SE': // Sverige\n            case 'CZ': // Tsjekkia\n            case 'DE': // Tyskland\n            case 'HU': // Ungarn\n            case 'AT': // Østerrike\n                return true;\n            default:\n                return false;\n        }\n    } else {\n        // Filter ut Antarktis\n        return countryOptionValue !== 'AQ';\n    }\n};\n\nexport const getLocaleKey = (locale: string): string => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n\nexport const getCountryName = (alphaCode: string, locale: string): string => {\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer NAV sin landkode av Kosovo til i18n-iso-countries sin landkode for å hente riktig landsnavn.\n    if (alphaCode === 'XXK') {\n        alphaCode = 'XKX';\n    }\n    return countries.getName(alphaCode, getLocaleKey(locale));\n};\n\nexport const getAlpha3Code = (alpha2Code: string) => {\n    const countryAlpha3Code = countries.alpha2ToAlpha3(alpha2Code).toUpperCase();\n\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer i18n-iso-countries sin landkode til landkode som brukes i NAV for å sende riktig kode videre.\n    return countryAlpha3Code === 'XKX' ? 'XXK' : countryAlpha3Code;\n};\n\nexport const countryIsMemberOfEøsOrEfta = (isoCode: string) => {\n    let isoCodeToUse = isoCode.toUpperCase();\n    if (isoCodeToUse === 'XXK') {\n        isoCodeToUse = 'XKX';\n    }\n    isoCodeToUse = isoCodeToUse.length === 2 ? isoCodeToUse : countries.alpha3ToAlpha2(isoCodeToUse);\n    return filteredListEØSCountries(isoCodeToUse.toUpperCase(), true) === true;\n};\n\nexport const getCountries = () => countries;\n\nexport const createCountryOptions = (): Record<string, any> => {\n    const lang = 'nb';\n    const countries = getCountries();\n\n    const names: Array<[string, any]> = Object.entries(countries.getNames(lang));\n    return names\n        .sort((a: string[], b: string[]) => a[1].localeCompare(b[1], lang))\n        .filter((countryOptionValue: string[]) => filteredListEØSCountries(countryOptionValue[0], false));\n};\n","import dayjs from 'dayjs';\nimport { DATE_TODAY, DDMMYYYY_DATE_FORMAT, ISO_DATE_FORMAT } from '@navikt/fp-constants';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { TIME_FORMAT } from '@navikt/fp-constants/src/dates';\n\ndayjs.extend(isBetween);\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isSameOrAfter);\n\ntype Period = { from: Date; to: Date };\n\ntype DateTypes = string | Date | dayjs.Dayjs;\nexport const formatDate = (date: Date | string) => dayjs(date).format(DDMMYYYY_DATE_FORMAT);\nexport const formatDateIso = (date: Date | string) => dayjs(date).format(ISO_DATE_FORMAT);\nexport const formatTime = (date: Date | string) => dayjs(date).format(TIME_FORMAT);\n\nexport const isToday = (date: DateTypes): boolean => dayjs(date).isSame(DATE_TODAY, 'day');\nexport const isAfterToday = (date: DateTypes): boolean => dayjs(date).isAfter(DATE_TODAY, 'day');\nexport const isBeforeToday = (date: DateTypes): boolean => dayjs(date).isBefore(DATE_TODAY, 'day');\nexport const isSameOrAfterToday = (date: DateTypes): boolean => dayjs(date).isSameOrAfter(DATE_TODAY, 'day');\nexport const isSameOrBeforeToday = (date: DateTypes): boolean => dayjs(date).isSameOrBefore(DATE_TODAY, 'day');\nexport const isDateASameOrBeforeDateB = (dateA: DateTypes, dateB: DateTypes): boolean =>\n    dayjs(dateA).isSameOrBefore(dateB, 'day');\nexport const isDateAAfterDateB = (dateA: DateTypes, dateB: DateTypes): boolean => dayjs(dateA).isAfter(dateB, 'day');\nexport const isDateWithinRange = (date: Date, minDate: Date, maxDate: Date): boolean =>\n    dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\n\nexport const erMyndig = (fødselsdato: string) => {\n    const now = dayjs();\n    const momentDate = dayjs(fødselsdato);\n    return now.diff(momentDate, 'years') >= 18;\n};\n\nconst sortDateRange = (d1: Period, d2: Period) => {\n    return dayjs(d1.from).isSameOrBefore(d2.from) ? -1 : 1;\n};\n\nexport const isDateRangesOverlapping = (ranges: Period[]) => {\n    if (ranges.length > 0) {\n        const sortedDates = [...ranges].sort(sortDateRange);\n        const hasOverlap = sortedDates.find((d, idx) => {\n            if (idx < sortedDates.length - 1) {\n                return dayjs(d.to).isSameOrAfter(sortedDates[idx + 1].from);\n            }\n            return false;\n        });\n        return hasOverlap !== undefined;\n    }\n    return false;\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { intlUtils, isDateABeforeDateB, isDateInTheFuture, validateTextInputField } from '@navikt/fp-common';\nimport { isDateAAfterDateB } from '@navikt/fp-utils';\nimport { femMånederSiden } from 'app/utils/dateUtils';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { IntlShape } from 'react-intl';\nimport { YesOrNo, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport dayjs from 'dayjs';\n\nexport const validateArbeidIUtlandetFom = (intl: IntlShape, tom: string | undefined) => (fom: string) => {\n    if (!hasValue(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.påkrevd');\n    }\n    if (hasValue(fom) && !isISODateString(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n    }\n\n    if (hasValue(fom) && isDateInTheFuture(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\n    }\n\n    if (hasValue(fom) && tom && isDateABeforeDateB(tom, fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\n    }\n\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetTom = (intl: IntlShape, fom: string | undefined) => (tom: string) => {\n    if (!hasValue(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\n    }\n    if (!isISODateString(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n    }\n\n    if (isDateAAfterDateB(tom, dayjs().add(9, 'month'))) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\n    }\n\n    if (isDateABeforeDateB(tom, dateToISOString(femMånederSiden()))) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.arbeidIUtlandet.merEnn5MånederSiden');\n    }\n\n    if (fom && isDateABeforeDateB(tom, fom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\n    }\n\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetPågående = (intl: IntlShape) => (pågående: YesOrNo) => {\n    if (!hasValue(pågående)) {\n        return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetPågående.påkrevd');\n    }\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetLand = (intl: IntlShape) => (land: string) => {\n    if (!hasValue(land)) {\n        return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetLand.påkrevd');\n    }\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetNavnArbeidsgiver =\n    (intl: IntlShape, navnPåArbeidsgiverLabel: string) => (navn: string) => {\n        if (!hasValue(navn)) {\n            return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetNavn.påkrevd');\n        }\n        if (navn.length > 100) {\n            return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetNavn.forLang');\n        }\n        return validateTextInputField(navn, navnPåArbeidsgiverLabel, intl);\n    };\n","const HorizontalLine = () => {\n    return (\n        <div\n            style={{\n                backgroundColor: '#99C4DD',\n                height: '2px',\n                marginTop: '1.5rem',\n                marginBottom: '2rem',\n                border: 'none',\n            }}\n        ></div>\n    );\n};\n\nexport default HorizontalLine;\n","import { Button } from '@navikt/ds-react';\nimport { Block, Step, StepButtonWrapper, date20YearsAgo, date5MonthsAgo, intlUtils } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport stepConfig, {\n    getBackLinkForArbeidIUtlandetSteg,\n    getNextRouteValgAvArbeidEllerSkjema,\n} from 'app/steps/stepsConfig';\nimport { Link } from 'react-router-dom';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport {\n    ArbeidIUtlandetFormComponents,\n    ArbeidIUtlandetFormData,\n    ArbeidIUtlandetFormField,\n} from './arbeidIUtlandetFormConfig';\nimport { FieldArray } from 'formik';\nimport {\n    cleanUpArbeidIUtlandetFormData,\n    getInitialArbeidIUtlandetFormData,\n    getUferdigArbeidIUtlandetInput,\n    mapArbeidIUtlandetTilState,\n} from './arbeidIUtlandetFormUtils';\nimport dayjs from 'dayjs';\nimport { getMinInputTilOgMedValue } from 'app/utils/validationUtils';\nimport { PlusIcon, TrashIcon } from '@navikt/aksel-icons';\nimport {\n    validateArbeidIUtlandetFom,\n    validateArbeidIUtlandetLand,\n    validateArbeidIUtlandetNavnArbeidsgiver,\n    validateArbeidIUtlandetPågående,\n    validateArbeidIUtlandetTom,\n} from './arbeidIUtlandetValidation';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport HorizontalLine from 'app/components/horizontal-line/HorizontalLine';\n\nconst ArbeidIUtlandetStep: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useSøkerinfo();\n    const søknad = useSøknad();\n    const { søker, barn } = søknad;\n    const arbeidIUtlandet = søker.andreInntekter;\n\n    const onValidSubmitHandler = (values: Partial<ArbeidIUtlandetFormData>) => {\n        const arbeidIUtlandet = mapArbeidIUtlandetTilState(values);\n        const søkerMedArbeidIUtlandet = { ...søker, andreInntekter: arbeidIUtlandet };\n        return [actionCreator.setSøker(søkerMedArbeidIUtlandet)];\n    };\n    const nextRoute = getNextRouteValgAvArbeidEllerSkjema(barn.termindato, arbeidsforhold, søker);\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytSøknad = useAvbrytSøknad();\n\n    return (\n        <ArbeidIUtlandetFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getInitialArbeidIUtlandetFormData(arbeidIUtlandet)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const navnPåArbeidsgiverLabel = intlUtils(intl, 'arbeidIUtlandet.navn');\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"arbeidIUtlandet\"\n                        pageTitle={intlUtils(intl, 'steps.label.arbeidIUtlandet')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <ArbeidIUtlandetFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanUpArbeidIUtlandetFormData(values)}\n                        >\n                            <FieldArray\n                                validateOnChange={false}\n                                name={ArbeidIUtlandetFormField.arbeidIUtlandet}\n                                render={(arrayHelpers) =>\n                                    formValues.arbeidIUtlandet &&\n                                    formValues.arbeidIUtlandet.length > 0 &&\n                                    formValues.arbeidIUtlandet.map((_a, index) => (\n                                        <div key={index}>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.CountrySelect\n                                                    name={`arbeidIUtlandet.${index}.land`}\n                                                    style={{ width: 'var(--app-text-input-width)' }}\n                                                    label={intlUtils(intl, 'arbeidIUtlandet.land')}\n                                                    useAlpha3Code={false}\n                                                    validate={validateArbeidIUtlandetLand(intl)}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.TextField\n                                                    name={`arbeidIUtlandet.${index}.arbeidsgiverNavn`}\n                                                    style={{ width: 'var(--app-text-input-width)' }}\n                                                    label={navnPåArbeidsgiverLabel}\n                                                    validate={validateArbeidIUtlandetNavnArbeidsgiver(\n                                                        intl,\n                                                        navnPåArbeidsgiverLabel,\n                                                    )}\n                                                    maxLength={100}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.DatePicker\n                                                    name={`arbeidIUtlandet.${index}.fom`}\n                                                    label={intlUtils(intl, 'arbeidIUtlandet.fom')}\n                                                    placeholder=\"dd.mm.åååå\"\n                                                    fullscreenOverlay={true}\n                                                    showYearSelector={true}\n                                                    validate={validateArbeidIUtlandetFom(\n                                                        intl,\n                                                        formValues.arbeidIUtlandet![index].tom,\n                                                    )}\n                                                    maxDate={dayjs().toDate()}\n                                                    minDate={date20YearsAgo}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.YesOrNoQuestion\n                                                    name={`arbeidIUtlandet.${index}.pågående`}\n                                                    legend={intlUtils(intl, 'egenNæring.næring.pågående')}\n                                                    validate={validateArbeidIUtlandetPågående(intl)}\n                                                />\n                                            </Block>\n                                            <Block\n                                                padBottom=\"xxl\"\n                                                visible={formValues.arbeidIUtlandet![index].pågående === YesOrNo.NO}\n                                            >\n                                                <ArbeidIUtlandetFormComponents.DatePicker\n                                                    name={`arbeidIUtlandet.${index}.tom`}\n                                                    label={intlUtils(intl, 'arbeidIUtlandet.tom')}\n                                                    description={intlUtils(intl, 'egenNæring.arbeid.tom.description')}\n                                                    placeholder=\"dd.mm.åååå\"\n                                                    fullscreenOverlay={true}\n                                                    showYearSelector={true}\n                                                    validate={validateArbeidIUtlandetTom(\n                                                        intl,\n                                                        formValues.arbeidIUtlandet![index].fom,\n                                                    )}\n                                                    maxDate={dayjs().add(9, 'month').toDate()}\n                                                    minDate={getMinInputTilOgMedValue(\n                                                        formValues.arbeidIUtlandet![index].fom,\n                                                        date5MonthsAgo,\n                                                    )}\n                                                />\n                                            </Block>\n                                            {index !== 0 && (\n                                                <Block>\n                                                    <Button\n                                                        icon={<TrashIcon />}\n                                                        type=\"button\"\n                                                        variant=\"tertiary\"\n                                                        onClick={() => arrayHelpers.remove(index)}\n                                                    >\n                                                        {intlUtils(intl, 'perioder.varierende.slett')}\n                                                    </Button>\n                                                </Block>\n                                            )}\n                                            {formValues.arbeidIUtlandet && formValues.arbeidIUtlandet.length > 1 && (\n                                                <HorizontalLine />\n                                            )}\n                                            {formValues.arbeidIUtlandet &&\n                                                index === formValues.arbeidIUtlandet.length - 1 && (\n                                                    <Block padBottom=\"xl\">\n                                                        <Button\n                                                            icon={<PlusIcon />}\n                                                            type=\"button\"\n                                                            variant=\"secondary\"\n                                                            onClick={() =>\n                                                                arrayHelpers.push(getUferdigArbeidIUtlandetInput())\n                                                            }\n                                                        >\n                                                            {intlUtils(intl, 'arbeidIUtlandet.tittel.ny')}\n                                                        </Button>\n                                                    </Block>\n                                                )}\n                                        </div>\n                                    ))\n                                }\n                            />\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getBackLinkForArbeidIUtlandetSteg(søker)}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </ArbeidIUtlandetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default ArbeidIUtlandetStep;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum VelgArbeidFormField {\n    arbeidMedTilrettelegging = 'arbeidMedTilrettelegging',\n}\n\nexport interface VelgArbeidFormData {\n    [VelgArbeidFormField.arbeidMedTilrettelegging]: string[];\n}\n\nexport const VelgArbeidFormComponents = getTypedFormComponents<VelgArbeidFormField, VelgArbeidFormData>();\n","import { FormattedMessage, useIntl } from 'react-intl';\nimport { BodyLong, GuidePanel } from '@navikt/ds-react';\nimport Block from '@navikt/fp-common/src/common/components/block/Block';\nimport { bemUtils, intlUtils, useDocumentTitle } from '@navikt/fp-common';\nimport { PageKeys, logAmplitudeEvent } from 'app/amplitude/amplitude';\n\nconst FlereArbeidsforholdGuidePanel: React.FunctionComponent = () => {\n    const bem = bemUtils('umyndig');\n    const intl = useIntl();\n    useDocumentTitle(intlUtils(intl, 'søknad.pageheading'));\n\n    logAmplitudeEvent('sidevisning', {\n        app: 'svangerskapspengerny',\n        team: 'foreldrepenger',\n        pageKey: PageKeys.Umyndig,\n    });\n    return (\n        <>\n            <div className={bem.block}>\n                <GuidePanel>\n                    <Block>\n                        <BodyLong>\n                            <FormattedMessage id=\"velgArbeid.guidepanel.tekst\" />\n                            <li>\n                                <FormattedMessage id=\"velgArbeid.guidepanel.liste.del1\" />\n                            </li>\n                            <li>\n                                <FormattedMessage id=\"velgArbeid.guidepanel.liste.del2\" />\n                            </li>\n                        </BodyLong>\n                    </Block>\n                </GuidePanel>\n            </div>\n        </>\n    );\n};\n\nexport default FlereArbeidsforholdGuidePanel;\n","import { VelgArbeidFormComponents, VelgArbeidFormField } from './velgArbeidFormConfig';\nimport { Block, Step, StepButtonWrapper, intlUtils } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport stepConfig, { getBackLinkForVelgArbeidSteg } from 'app/steps/stepsConfig';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { Button } from '@navikt/ds-react';\nimport { Link } from 'react-router-dom';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport { getValgtTilrettelegging } from 'app/utils/tilretteleggingUtils';\nimport SøknadRoutes from 'app/routes/routes';\nimport {\n    cleanupOmValgArbeidFormData,\n    getInitialVelgArbeidFormValues,\n    mapArbeidsforholdToVelgArbeidOptions,\n    validateVelgArbeidIsAnswered,\n} from './velgArbeidFormUtils';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport { useMemo, useState } from 'react';\nimport Tilrettelegging, { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { capitalizeFirstLetter } from '@navikt/fp-common/src/common/utils/stringUtils';\nimport FlereArbeidsforholdGuidePanel from './components/guidepanel/FlereArbeidsforholdGuidePanel';\n\nconst VelgArbeid: React.FunctionComponent = () => {\n    useUpdateCurrentTilretteleggingId(undefined);\n    const intl = useIntl();\n    const søknad = useSøknad();\n    const { søker, tilrettelegging, barn } = søknad;\n    const { termindato } = barn;\n    const { arbeidsforhold } = useSøkerinfo();\n\n    const [nextRoute, setNextRoute] = useState(SøknadRoutes.SKJEMA.toString());\n    const [valgtTilrettelegging, setValgtTilrettelegging] = useState<Tilrettelegging[]>([]);\n    const tilretteleggingOptions = useMemo(\n        () => mapArbeidsforholdToVelgArbeidOptions(tilrettelegging, søker, arbeidsforhold, termindato, intl),\n        [tilrettelegging, søker, arbeidsforhold, termindato, intl],\n    );\n    const onValidSubmitHandler = () => {\n        return [actionCreator.setTilrettelegging(valgtTilrettelegging)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytSøknad = useAvbrytSøknad();\n\n    return (\n        <VelgArbeidFormComponents.FormikWrapper\n            initialValues={getInitialVelgArbeidFormValues(tilrettelegging)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visInfo = formValues.arbeidMedTilrettelegging && formValues.arbeidMedTilrettelegging.length > 1;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"velgArbeid\"\n                        pageTitle={intlUtils(intl, 'steps.label.velgArbeid')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <VelgArbeidFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupOmValgArbeidFormData(values, tilretteleggingOptions)}\n                        >\n                            <Block padBottom=\"l\">\n                                <VelgArbeidFormComponents.CheckboxGroup\n                                    name={VelgArbeidFormField.arbeidMedTilrettelegging}\n                                    legend={intlUtils(intl, 'velgArbeid.hvor')}\n                                    checkboxes={tilretteleggingOptions.map((option) => ({\n                                        label:\n                                            option.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER\n                                                ? capitalizeFirstLetter(option.arbeidsforhold.navn)\n                                                : option.arbeidsforhold.navn,\n                                        value: option.id,\n                                    }))}\n                                    validate={(value) => validateVelgArbeidIsAnswered(value, intl)}\n                                />\n                            </Block>\n                            {visInfo && <FlereArbeidsforholdGuidePanel />}\n\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getBackLinkForVelgArbeidSteg(søker)}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                        onClick={() => {\n                                            const tilretteleggingValg = getValgtTilrettelegging(\n                                                tilretteleggingOptions,\n                                                formValues.arbeidMedTilrettelegging!,\n                                            );\n                                            setValgtTilrettelegging(tilretteleggingValg);\n                                            const førsteTilretteleggingId =\n                                                tilretteleggingValg.length > 0 ? tilretteleggingValg[0].id : undefined;\n                                            if (førsteTilretteleggingId) {\n                                                setNextRoute(`${SøknadRoutes.SKJEMA}/${førsteTilretteleggingId}`);\n                                            }\n                                        }}\n                                    >\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </VelgArbeidFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default VelgArbeid;\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { EgenNæringFormData, EgenNæringFormField } from './egenNæringFormConfig';\nimport { ISOStringToDate } from '@navikt/fp-common';\nimport { erVirksomhetRegnetSomNyoppstartet } from './egenNæringFormUtils';\n\nexport const visVarigEndringInput = (\n    egenNæringFom: string,\n    egenNæringHattVarigEndringDeSiste4Årene: YesOrNo,\n): boolean => {\n    return (\n        hasValue(egenNæringFom) &&\n        !erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenNæringFom)) &&\n        hasValue(egenNæringHattVarigEndringDeSiste4Årene) &&\n        egenNæringHattVarigEndringDeSiste4Årene === YesOrNo.YES\n    );\n};\n\nconst EgenNæringSubformConfig: QuestionConfig<EgenNæringFormData, EgenNæringFormField> = {\n    [EgenNæringFormField.egenNæringType]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenNæringType }) => egenNæringType !== undefined,\n    },\n    [EgenNæringFormField.egenNæringNavn]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenNæringNavn }) => hasValue(egenNæringNavn),\n    },\n    [EgenNæringFormField.egenNæringRegistrertINorge]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenNæringRegistrertINorge }) => egenNæringRegistrertINorge !== YesOrNo.UNANSWERED,\n    },\n    [EgenNæringFormField.egenNæringOrgnr]: {\n        isIncluded: ({ egenNæringRegistrertINorge }) => egenNæringRegistrertINorge === YesOrNo.YES,\n        isAnswered: () => true,\n    },\n    [EgenNæringFormField.egenNæringLand]: {\n        isIncluded: ({ egenNæringRegistrertINorge }) => egenNæringRegistrertINorge === YesOrNo.NO,\n        isAnswered: ({ egenNæringLand }) => hasValue(egenNæringLand),\n    },\n    [EgenNæringFormField.egenNæringFom]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenNæringFom }) => hasValue(egenNæringFom),\n    },\n    [EgenNæringFormField.egenNæringPågående]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenNæringPågående }) => egenNæringPågående !== YesOrNo.UNANSWERED,\n    },\n    [EgenNæringFormField.egenNæringTom]: {\n        isIncluded: ({ egenNæringPågående }) => egenNæringPågående === YesOrNo.NO,\n        isAnswered: ({ egenNæringTom }) => hasValue(egenNæringTom),\n        visibilityFilter: ({ egenNæringPågående }) => egenNæringPågående === YesOrNo.NO,\n    },\n    [EgenNæringFormField.egenNæringResultat]: {\n        isIncluded: ({ egenNæringFom }) => erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenNæringFom)),\n        isAnswered: ({ egenNæringResultat }) => hasValue(egenNæringResultat),\n    },\n    [EgenNæringFormField.egenNæringBlittYrkesaktivDe3SisteÅrene]: {\n        isIncluded: ({ egenNæringFom }) => erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenNæringFom)),\n        isAnswered: ({ egenNæringBlittYrkesaktivDe3SisteÅrene }) =>\n            egenNæringBlittYrkesaktivDe3SisteÅrene !== YesOrNo.UNANSWERED,\n    },\n    [EgenNæringFormField.egenNæringYrkesAktivDato]: {\n        isIncluded: ({ egenNæringFom, egenNæringBlittYrkesaktivDe3SisteÅrene }) =>\n            erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenNæringFom)) &&\n            egenNæringBlittYrkesaktivDe3SisteÅrene === YesOrNo.YES,\n        isAnswered: ({ egenNæringYrkesAktivDato }) => hasValue(egenNæringYrkesAktivDato),\n    },\n    [EgenNæringFormField.egenNæringHattVarigEndringDeSiste4Årene]: {\n        isIncluded: ({ egenNæringFom }) =>\n            hasValue(egenNæringFom) && !erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenNæringFom)),\n        isAnswered: ({ egenNæringHattVarigEndringDeSiste4Årene }) => hasValue(egenNæringHattVarigEndringDeSiste4Årene),\n    },\n    [EgenNæringFormField.egenNæringVarigEndringDato]: {\n        isIncluded: ({ egenNæringFom, egenNæringHattVarigEndringDeSiste4Årene }) =>\n            visVarigEndringInput(egenNæringFom, egenNæringHattVarigEndringDeSiste4Årene),\n        isAnswered: ({ egenNæringVarigEndringDato }) => hasValue(egenNæringVarigEndringDato),\n    },\n    [EgenNæringFormField.egenNæringVarigEndringBeskrivelse]: {\n        isIncluded: ({ egenNæringFom, egenNæringHattVarigEndringDeSiste4Årene }) =>\n            visVarigEndringInput(egenNæringFom, egenNæringHattVarigEndringDeSiste4Årene),\n        isAnswered: ({ egenNæringVarigEndringBeskrivelse }) => hasValue(egenNæringVarigEndringBeskrivelse),\n    },\n    [EgenNæringFormField.egenNæringVarigEndringInntektEtterEndring]: {\n        isIncluded: ({ egenNæringFom, egenNæringHattVarigEndringDeSiste4Årene }) =>\n            visVarigEndringInput(egenNæringFom, egenNæringHattVarigEndringDeSiste4Årene),\n        isAnswered: ({ egenNæringVarigEndringInntektEtterEndring }) =>\n            hasValue(egenNæringVarigEndringInntektEtterEndring),\n    },\n};\n\nexport const egenNæringFormQuestionsConfig = Questions<EgenNæringFormData, EgenNæringFormField>(\n    EgenNæringSubformConfig,\n);\n","import { getMod11 } from './numberUtils';\n\nconst onlyNumbersRegExp = /^\\d*$/;\n\nexport const er9Tall = (orgnr: string): boolean => {\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\n};\n\nexport const starterPå8Eller9 = (orgnr: string): boolean => {\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\n};\n\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\n    if (!orgnr || er9Tall(orgnr) === false || starterPå8Eller9(orgnr) === false) {\n        return false;\n    }\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport {\n    SkjemaelementFeil,\n    containsWhiteSpace,\n    intlUtils,\n    isDateABeforeDateB,\n    isDateInTheFuture,\n    validateStringAsNumberInput,\n    validateTextInputField,\n} from '@navikt/fp-common';\nimport { erGyldigNorskOrgnummer } from '@navikt/fp-common/src/common/utils/organisasjonUtils';\nimport { isDateAAfterDateB } from '@navikt/fp-utils';\nimport { getNumberFromNumberInputValue, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { date4YearsAgo, femMånederSiden } from 'app/utils/dateUtils';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH, hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validateEgenNæringFom =\n    (intl: IntlShape, tom: string) =>\n    (fom: string): SkjemaelementFeil => {\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.påkrevd');\n        }\n\n        if (!isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n        }\n\n        if (isDateInTheFuture(fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\n        }\n\n        if (isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.førTilDato');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenNæringTom =\n    (intl: IntlShape, fom: string) =>\n    (tom: string): SkjemaelementFeil => {\n        if (!hasValue(tom)) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.påkrevd');\n        }\n        if (!isISODateString(tom)) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n        }\n\n        if (isDateAAfterDateB(tom, dayjs().add(9, 'month'))) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\n        }\n\n        if (isDateABeforeDateB(tom, dateToISOString(femMånederSiden()))) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.egenNæring.merEnn5MånederSiden');\n        }\n\n        if (isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenNæringOrgnr =\n    (intl: IntlShape) =>\n    (orgnr: string): SkjemaelementFeil => {\n        const trimmedOrgNr = orgnr.trim();\n        if (!hasValue(trimmedOrgNr)) {\n            return intlUtils(intl, 'valideringsfeil.egenNæringOrgnr.påkrevd');\n        }\n        if (containsWhiteSpace(trimmedOrgNr)) {\n            return intlUtils(intl, 'valideringsfeil.egenNæringOrgnr.inneholderMellomrom');\n        }\n        if (!erGyldigNorskOrgnummer(trimmedOrgNr)) {\n            return intlUtils(intl, 'valideringsfeil.egenNæringOrgnr.ugyldigFormat');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenNæringYrkesAktivDatoDato = (intl: IntlShape) => (dato: string) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.yrkesaktiv.påkrevd');\n    }\n\n    if (!isISODateString(dato)) {\n        return intlUtils(intl, 'valideringsfeil.yrkesaktiv.gyldigDato');\n    }\n\n    if (isDateInTheFuture(dato)) {\n        return intlUtils(intl, 'valideringsfeil.yrkesaktiv.erIFremtiden');\n    }\n\n    return undefined;\n};\n\nexport const validateEgenNæringResultat = (intl: IntlShape) => (value: string) => {\n    if (!hasValue(value)) {\n        return intlUtils(intl, 'valideringsfeil.egenNæringInntekt.påkrevd');\n    } else {\n        if (value.length > 9) {\n            return intlUtils(intl, 'valideringsfeil.næringsinntekt.forLang');\n        }\n        const valueNumber = getNumberFromNumberInputValue(value);\n        if (!valueNumber || Math.round(valueNumber) !== valueNumber) {\n            return intlUtils(intl, 'valideringsfeil.næringsinntekt.ugyldigFormat');\n        }\n        if (valueNumber && valueNumber < 0) {\n            return intlUtils(intl, 'valideringsfeil.næringsinntekt.mindreEnnNull');\n        }\n    }\n\n    return undefined;\n};\n\nexport const validateEgenNæringVarigEndringDato =\n    (intl: IntlShape, fom: string, tom: string | undefined) =>\n    (endringDato: string): SkjemaelementFeil => {\n        if (!hasValue(endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.påkrevd');\n        }\n\n        if (!isISODateString(endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.gyldigDato');\n        }\n\n        if (isDateInTheFuture(endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.erIFremtiden');\n        }\n        if (isDateABeforeDateB(endringDato, dateToISOString(date4YearsAgo))) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.mindreEnn4ÅrSiden');\n        }\n\n        if (isDateABeforeDateB(endringDato, fom)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.førFraDato');\n        }\n        if (tom && hasValue(tom) && isDateABeforeDateB(tom, endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.etterTilDato');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenNæringVarigEndringInntekt =\n    (intl: IntlShape) =>\n    (value: string): SkjemaelementFeil => {\n        if (!hasValue(value)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringInntekt.påkrevd');\n        }\n        if (value.length > 9) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringInntekt.forLang');\n        }\n        const valueNumber = getNumberFromNumberInputValue(value);\n        if (valueNumber && valueNumber < 0) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringInntekt.mindreEnnNull');\n        }\n        return validateStringAsNumberInput(value, intlUtils(intl, 'valideringsfeil.varigEndringInntekt.ugyldigFormat'));\n    };\n\nexport const validateEgenNæringVarigEndringBeskrivelse = (intl: IntlShape, label: string) => (value: string) => {\n    if (!hasValue(value) || value.trim() === '') {\n        return intlUtils(intl, 'valideringsfeil.egenNæringVarigEndringBeskrivelse.påkrevd');\n    }\n\n    if (value.length > TEXT_INPUT_MAX_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.egenNæringVarigEndringBeskrivelse.forLang');\n    }\n\n    if (value.length < TEXT_INPUT_MIN_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.egenNæringVarigEndringBeskrivelse.forKort');\n    }\n\n    return validateTextInputField(value, label, intl);\n};\n\nexport const validateEgenNæringNavn = (intl: IntlShape, label: string) => (value: string) => {\n    if (!hasValue(value)) {\n        return intlUtils(intl, 'valideringsfeil.egenNæringNavn.påkrevd');\n    }\n    if (value.length > 100) {\n        return intlUtils(intl, 'valideringsfeil.egenNæringNavn.forLang');\n    }\n    return validateTextInputField(value, label, intl);\n};\n\nexport const validateEgenNæringLand = (intl: IntlShape) => (value: string) => {\n    if (!hasValue(value)) {\n        return intlUtils(intl, 'valideringsfeil.egenNæringLand.påkrevd');\n    }\n    return undefined;\n};\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { validateEgenNæringLand, validateEgenNæringOrgnr } from '../../steps/egen-næring/egenNæringValidation';\nimport { EgenNæringFormComponents, EgenNæringFormField } from 'app/steps/egen-næring/egenNæringFormConfig';\n\ninterface Props {\n    visibility: QuestionVisibility<EgenNæringFormField, undefined>;\n}\n\nconst OrgnummerEllerLand: FunctionComponent<Props> = ({ visibility }) => {\n    const intl = useIntl();\n\n    return (\n        <>\n            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringOrgnr)}>\n                <EgenNæringFormComponents.NumberInput\n                    style={{ width: 'var(--app-text-input-width)' }}\n                    name={EgenNæringFormField.egenNæringOrgnr}\n                    label={intlUtils(intl, 'egenNæring.orgnr')}\n                    validate={validateEgenNæringOrgnr(intl)}\n                />\n            </Block>\n            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringLand)}>\n                <EgenNæringFormComponents.CountrySelect\n                    style={{ width: 'var(--app-text-input-width)' }}\n                    name={EgenNæringFormField.egenNæringLand}\n                    label={intlUtils(intl, 'egenNæring.registrertILand')}\n                    useAlpha3Code={false}\n                    validate={validateEgenNæringLand(intl)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default OrgnummerEllerLand;\n","import { Block, ISOStringToDate, intlUtils, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    validateEgenNæringVarigEndringBeskrivelse,\n    validateEgenNæringVarigEndringDato,\n    validateEgenNæringVarigEndringInntekt,\n} from '../egenNæringValidation';\nimport {\n    EgenNæringFormComponents,\n    EgenNæringFormData,\n    EgenNæringFormField,\n} from 'app/steps/egen-næring/egenNæringFormConfig';\nimport dayjs from 'dayjs';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH } from 'app/utils/validationUtils';\nimport { BodyShort, ReadMore } from '@navikt/ds-react';\n\ninterface Props {\n    visibility: QuestionVisibility<EgenNæringFormField, undefined>;\n    formValues: Partial<EgenNæringFormData>;\n}\n\nconst VarigEndringSpørsmål: FunctionComponent<Props> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n    const egenNæringVarigEndringBeskrivelseLabel = intlUtils(intl, 'egenNæring.varigEndringBeskrivelse.label');\n    return (\n        <>\n            <Block\n                padBottom=\"xxl\"\n                visible={visibility.isVisible(EgenNæringFormField.egenNæringHattVarigEndringDeSiste4Årene)}\n            >\n                <EgenNæringFormComponents.YesOrNoQuestion\n                    name={EgenNæringFormField.egenNæringHattVarigEndringDeSiste4Årene}\n                    legend={intlUtils(intl, 'egenNæring.egenNæringHattVarigEndringDeSiste4Årene')}\n                    validate={(value) =>\n                        validateYesOrNoIsAnswered(\n                            value,\n                            intlUtils(intl, 'valideringsfeil.egenNæringHattVarigEndringDeSiste4Årene.påkrevd'),\n                        )\n                    }\n                />\n                <ReadMore header={intlUtils(intl, 'egenNæring.egenNæringHattVarigEndringDeSiste4Årene.info.åpneLabel')}>\n                    <BodyShort>\n                        <FormattedMessage id=\"egenNæring.egenNæringHattVarigEndringDeSiste4Årene.info\"></FormattedMessage>\n                    </BodyShort>\n                </ReadMore>\n            </Block>\n            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringVarigEndringDato)}>\n                <EgenNæringFormComponents.DatePicker\n                    name={EgenNæringFormField.egenNæringVarigEndringDato}\n                    label={intlUtils(intl, 'egenNæring.egenNæringVarigEndringDato')}\n                    placeholder=\"dd.mm.åååå\"\n                    fullscreenOverlay={true}\n                    showYearSelector={true}\n                    validate={validateEgenNæringVarigEndringDato(\n                        intl,\n                        formValues.egenNæringFom!,\n                        formValues.egenNæringTom,\n                    )}\n                    maxDate={dayjs().toDate()}\n                    minDate={ISOStringToDate(formValues.egenNæringFom)}\n                />\n            </Block>\n            <Block\n                padBottom=\"xxl\"\n                visible={visibility.isVisible(EgenNæringFormField.egenNæringVarigEndringInntektEtterEndring)}\n            >\n                <EgenNæringFormComponents.TextField\n                    name={EgenNæringFormField.egenNæringVarigEndringInntektEtterEndring}\n                    label={intlUtils(intl, 'egenNæring.egenNæringVarigEndringInntektEtterEndring')}\n                    description={intlUtils(intl, 'egenNæring.egenNæringVarigEndringInntektEtterEndring.description')}\n                    validate={validateEgenNæringVarigEndringInntekt(intl)}\n                    style={{ width: 'var(--app-text-input-width)' }}\n                />\n            </Block>\n            <Block\n                padBottom=\"xxl\"\n                visible={visibility.isVisible(EgenNæringFormField.egenNæringVarigEndringBeskrivelse)}\n            >\n                <EgenNæringFormComponents.Textarea\n                    name={EgenNæringFormField.egenNæringVarigEndringBeskrivelse}\n                    label={egenNæringVarigEndringBeskrivelseLabel}\n                    minLength={TEXT_INPUT_MIN_LENGTH}\n                    maxLength={TEXT_INPUT_MAX_LENGTH}\n                    validate={validateEgenNæringVarigEndringBeskrivelse(intl, egenNæringVarigEndringBeskrivelseLabel)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default VarigEndringSpørsmål;\n","import { EgenNæringFormComponents, EgenNæringFormData, EgenNæringFormField } from './egenNæringFormConfig';\nimport {\n    cleanupEgenNæringFormData,\n    getInitialEgenNæringFormValues,\n    mapNæringDataToSøkerState,\n} from './egenNæringFormUtils';\nimport { Næringstype } from 'app/types/EgenNæring';\nimport { egenNæringFormQuestionsConfig } from './egenNæringFormQuestions';\nimport {\n    Block,\n    Step,\n    StepButtonWrapper,\n    date20YearsAgo,\n    date5MonthsAgo,\n    intlUtils,\n    validateYesOrNoIsAnswered,\n} from '@navikt/fp-common';\nimport { getMinInputTilOgMedValue, hasValue } from 'app/utils/validationUtils';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport stepConfig, { getBackLinkForNæringSteg, getNextRouteForNæring } from 'app/steps/stepsConfig';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\n\nimport dayjs from 'dayjs';\nimport { Alert, BodyShort, Button, ReadMore } from '@navikt/ds-react';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { Link } from 'react-router-dom';\nimport {\n    validateEgenNæringFom,\n    validateEgenNæringNavn,\n    validateEgenNæringResultat,\n    validateEgenNæringTom,\n    validateEgenNæringYrkesAktivDatoDato,\n} from './egenNæringValidation';\nimport OrgnummerEllerLand from '../../components/egen-næring-visning/OrgnummerEllerLand';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport { søkerHarKunEtAktivtArbeid } from 'app/utils/arbeidsforholdUtils';\nimport VarigEndringSpørsmål from './components/VarigEndringSpørsmål';\nimport { getNæringTilretteleggingOption } from '../velg-arbeidsforhold/velgArbeidFormUtils';\n\nconst EgenNæringStep: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const søknad = useSøknad();\n    const { søker, barn, tilrettelegging } = søknad;\n    const { arbeidsforhold } = useSøkerinfo();\n    const onValidSubmitHandler = (values: Partial<EgenNæringFormData>) => {\n        const søkerMedNæring = mapNæringDataToSøkerState(søker, values as EgenNæringFormData);\n        if (\n            søkerHarKunEtAktivtArbeid(\n                barn.termindato,\n                arbeidsforhold,\n                søkerMedNæring.harJobbetSomFrilans,\n                søkerMedNæring.harJobbetSomSelvstendigNæringsdrivende,\n            )\n        ) {\n            const automatiskValgtTilrettelegging = [\n                getNæringTilretteleggingOption(tilrettelegging, søkerMedNæring.selvstendigNæringsdrivendeInformasjon!),\n            ];\n\n            return [\n                actionCreator.setSøker(søkerMedNæring),\n                actionCreator.setTilrettelegging(automatiskValgtTilrettelegging),\n            ];\n        }\n\n        return [actionCreator.setSøker(søkerMedNæring)];\n    };\n    const nextRoute = getNextRouteForNæring(søker, barn.termindato, arbeidsforhold);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const navnPåNæringLabel = intlUtils(intl, 'egenNæring.navnPåNæring');\n    return (\n        <EgenNæringFormComponents.FormikWrapper\n            initialValues={getInitialEgenNæringFormValues(søker.selvstendigNæringsdrivendeInformasjon)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = egenNæringFormQuestionsConfig.getVisbility(formValues as EgenNæringFormData);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"næring\"\n                        pageTitle={intlUtils(intl, 'steps.label.næring')}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <EgenNæringFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupEgenNæringFormData(values, visibility)}\n                        >\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringType)}>\n                                <EgenNæringFormComponents.RadioGroup\n                                    name={EgenNæringFormField.egenNæringType}\n                                    legend={intlUtils(intl, 'egenNæring.næringstype')}\n                                    radios={[\n                                        {\n                                            label: intlUtils(intl, 'egenNæring.næringstype.dagmamma'),\n                                            value: Næringstype.DAGMAMMA,\n                                        },\n                                        {\n                                            label: intlUtils(intl, 'egenNæring.næringstype.fiske'),\n                                            value: Næringstype.FISKER,\n                                        },\n                                        {\n                                            label: intlUtils(intl, 'egenNæring.næringstype.jordbrukSkogbruk'),\n                                            value: Næringstype.JORDBRUK,\n                                        },\n                                        {\n                                            label: intlUtils(intl, 'egenNæring.næringstype.annen'),\n                                            value: Næringstype.ANNET,\n                                        },\n                                    ]}\n                                    validate={(value) => {\n                                        if (!hasValue(value)) {\n                                            return intlUtils(intl, 'valideringsfeil.egenNæringType.påkrevd');\n                                        }\n                                        return undefined;\n                                    }}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringNavn)}>\n                                <EgenNæringFormComponents.TextField\n                                    name={EgenNæringFormField.egenNæringNavn}\n                                    label={navnPåNæringLabel}\n                                    style={{ width: 'var(--app-text-input-width)' }}\n                                    maxLength={100}\n                                    validate={validateEgenNæringNavn(intl, navnPåNæringLabel)}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenNæringFormField.egenNæringRegistrertINorge)}\n                            >\n                                <EgenNæringFormComponents.YesOrNoQuestion\n                                    name={EgenNæringFormField.egenNæringRegistrertINorge}\n                                    legend={intlUtils(intl, 'egenNæring.erNæringenRegistrertINorge', {\n                                        navnPåNæringen: formValues.egenNæringNavn,\n                                    })}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.egenNæringRegistrertINorge.påkrevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <OrgnummerEllerLand visibility={visibility} />\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringFom)}>\n                                <EgenNæringFormComponents.DatePicker\n                                    name={EgenNæringFormField.egenNæringFom}\n                                    label={intlUtils(intl, 'egenNæring.næring.fom', {\n                                        navnPåNæringen: formValues.egenNæringNavn,\n                                    })}\n                                    placeholder=\"dd.mm.åååå\"\n                                    fullscreenOverlay={true}\n                                    showYearSelector={true}\n                                    validate={validateEgenNæringFom(intl, formValues.egenNæringTom!)}\n                                    maxDate={dayjs().toDate()}\n                                    minDate={date20YearsAgo}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenNæringFormField.egenNæringPågående)}\n                            >\n                                <EgenNæringFormComponents.YesOrNoQuestion\n                                    name={EgenNæringFormField.egenNæringPågående}\n                                    legend={intlUtils(intl, 'egenNæring.næring.pågående', {\n                                        navnPåNæringen: formValues.egenNæringNavn,\n                                    })}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.egenNæringPågående.påkrevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenNæringFormField.egenNæringTom)}>\n                                <EgenNæringFormComponents.DatePicker\n                                    name={EgenNæringFormField.egenNæringTom}\n                                    label={intlUtils(intl, 'egenNæring.næring.tom', {\n                                        navnPåNæringen: formValues.egenNæringNavn,\n                                    })}\n                                    description={intlUtils(intl, 'egenNæring.næring.tom.description')}\n                                    placeholder=\"dd.mm.åååå\"\n                                    fullscreenOverlay={true}\n                                    showYearSelector={true}\n                                    validate={validateEgenNæringTom(intl, formValues.egenNæringFom!)}\n                                    maxDate={dayjs().add(9, 'month').toDate()}\n                                    minDate={getMinInputTilOgMedValue(formValues.egenNæringFom, date5MonthsAgo)}\n                                />\n                            </Block>\n                            <VarigEndringSpørsmål\n                                visibility={visibility}\n                                formValues={formValues}\n                            ></VarigEndringSpørsmål>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenNæringFormField.egenNæringResultat)}\n                            >\n                                <EgenNæringFormComponents.TextField\n                                    style={{ width: 'var(--app-text-input-width)' }}\n                                    name={EgenNæringFormField.egenNæringResultat}\n                                    label={intlUtils(intl, 'egenNæring.næringsinntekt')}\n                                    description={intlUtils(intl, 'egenNæring.næringsinntekt.description')}\n                                    validate={validateEgenNæringResultat(intl)}\n                                />\n\n                                <ReadMore header={intlUtils(intl, 'egenNæring.næringsinntekt.info.apneLabel')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"egenNæring.næringsinntekt.info\" />\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    EgenNæringFormField.egenNæringBlittYrkesaktivDe3SisteÅrene,\n                                )}\n                            >\n                                <EgenNæringFormComponents.YesOrNoQuestion\n                                    name={EgenNæringFormField.egenNæringBlittYrkesaktivDe3SisteÅrene}\n                                    legend={intlUtils(intl, 'egenNæring.blittYrkesaktivSiste3År')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(\n                                                intl,\n                                                'valideringsfeil.egenNæringBlittYrkesaktivDe3SisteÅrene.påkrevd',\n                                            ),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenNæringFormField.egenNæringYrkesAktivDato)}\n                            >\n                                <EgenNæringFormComponents.DatePicker\n                                    name={EgenNæringFormField.egenNæringYrkesAktivDato}\n                                    label={intlUtils(intl, 'egenNæring.yrkesaktivDato')}\n                                    placeholder=\"dd.mm.åååå\"\n                                    fullscreenOverlay={true}\n                                    showYearSelector={true}\n                                    validate={validateEgenNæringYrkesAktivDatoDato(intl)}\n                                    maxDate={dayjs().toDate()}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <Alert variant=\"info\">{intlUtils(intl, 'egenNæring.veileder')}</Alert>\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getBackLinkForNæringSteg(søker)}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </EgenNæringFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default EgenNæringStep;\n","import { BoIUtlandetFormData, initialBoIUtlandetFormData } from './boIUtlandetFormConfig';\nimport dayjs from 'dayjs';\nimport { BostedUtland } from 'app/types/BostedUtland';\nimport { getMinInputTilOgMedValue, hasValue } from 'app/utils/validationUtils';\nimport InformasjonOmUtenlandsopphold, {\n    Utenlandsopphold,\n    UtenlandsoppholdInput,\n} from 'app/types/InformasjonOmUtenlandsopphold';\n\nexport const getUferdigBostedUtlandInput = (): UtenlandsoppholdInput => {\n    return {\n        fom: '',\n        tom: '',\n        land: '',\n    };\n};\n\nconst getErINorgePåFamiliehendelsedato = (\n    familiehendelsedato: string,\n    tidligereOpphold: Utenlandsopphold[],\n    senereOpphold: Utenlandsopphold[],\n): boolean => {\n    let erINorge = true;\n\n    tidligereOpphold.forEach((tidOpphold) => {\n        if (dayjs(familiehendelsedato).isBetween(tidOpphold.tidsperiode.fom, tidOpphold.tidsperiode.tom, 'day', '[]')) {\n            erINorge = false;\n        }\n    });\n\n    senereOpphold.forEach((senOpphold) => {\n        if (dayjs(familiehendelsedato).isBetween(senOpphold.tidsperiode.fom, senOpphold.tidsperiode.tom, 'day', '[]')) {\n            erINorge = false;\n        }\n    });\n\n    return erINorge;\n};\n\nexport const getInitialBostedIUtlandetFormData = (\n    bostedIUtlandet: Utenlandsopphold[] | undefined,\n): BoIUtlandetFormData => {\n    if (bostedIUtlandet === undefined || bostedIUtlandet.length === 0) {\n        return initialBoIUtlandetFormData;\n    }\n    const mappedOpphold = bostedIUtlandet.map((opphold) => {\n        return {\n            fom: opphold.tidsperiode.fom,\n            tom: opphold.tidsperiode.tom,\n            land: opphold.land,\n        };\n    });\n\n    return { bostedIUtlandet: mappedOpphold };\n};\n\nexport const mapBostedUtland = (\n    formValues: Partial<BoIUtlandetFormData>,\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold,\n    familiehendelsedato: string,\n    oppgirIFortid: boolean,\n): InformasjonOmUtenlandsopphold => {\n    const mappedUtenlandsopphold = formValues.bostedIUtlandet!.map((bosted) => {\n        return {\n            land: bosted.land,\n            tidsperiode: {\n                fom: bosted.fom,\n                tom: bosted.tom,\n            },\n        };\n    });\n\n    const tidligereOpphold = oppgirIFortid ? mappedUtenlandsopphold : informasjonOmUtenlandsopphold.tidligereOpphold;\n    const senereOpphold = oppgirIFortid ? informasjonOmUtenlandsopphold.senereOpphold : mappedUtenlandsopphold;\n    const iNorgePåHendelsestidspunktet = getErINorgePåFamiliehendelsedato(\n        familiehendelsedato,\n        tidligereOpphold,\n        senereOpphold,\n    );\n    if (oppgirIFortid) {\n        return {\n            ...informasjonOmUtenlandsopphold,\n            tidligereOpphold: mappedUtenlandsopphold,\n            iNorgePåHendelsestidspunktet: iNorgePåHendelsestidspunktet,\n        };\n    }\n    return {\n        ...informasjonOmUtenlandsopphold,\n        senereOpphold: mappedUtenlandsopphold,\n        iNorgePåHendelsestidspunktet: iNorgePåHendelsestidspunktet,\n    };\n};\n\nexport const getMinValueTomInput = (oppgirIFortid: boolean, fom: string | undefined, datobegrensning: Date) => {\n    if (oppgirIFortid) {\n        return fom && hasValue(fom) ? dayjs(fom).add(1, 'd').toDate() : undefined;\n    }\n    return getMinInputTilOgMedValue(fom, datobegrensning);\n};\n\nexport const getInitialOppholdFormData = (selectedOpphold: BostedUtland | undefined) => {\n    if (selectedOpphold === undefined) {\n        return { ...initialBoIUtlandetFormData };\n    }\n    return {\n        ...initialBoIUtlandetFormData,\n        fom: selectedOpphold.fom,\n        tom: selectedOpphold.tom,\n        land: selectedOpphold.landkode,\n    };\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { UtenlandsoppholdInput } from 'app/types/InformasjonOmUtenlandsopphold';\nimport { getUferdigBostedUtlandInput } from './boIUtlandetFormUtils';\n\nexport enum BoIUtlandetFormField {\n    bostedIUtlandet = 'bostedIUtlandet',\n}\n\nexport interface BoIUtlandetFormData {\n    [BoIUtlandetFormField.bostedIUtlandet]: UtenlandsoppholdInput[];\n}\n\nexport const initialBoIUtlandetFormData: BoIUtlandetFormData = {\n    [BoIUtlandetFormField.bostedIUtlandet]: [getUferdigBostedUtlandInput()],\n};\n\nexport const BoIUtlandetFormComponents = getTypedFormComponents<BoIUtlandetFormField | string, BoIUtlandetFormData>();\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { date1YearAgo, date1YearFromNow, formatDate, intlUtils } from '@navikt/fp-common';\nimport { getCountryName } from '@navikt/sif-common-formik-ds/lib';\nimport { UtenlandsoppholdInput } from 'app/types/InformasjonOmUtenlandsopphold';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validerDatoOverlapperAndreUtenlandsperioder = (\n    utenlandsperioder: UtenlandsoppholdInput[] | undefined,\n    dato: string | undefined,\n    intl: IntlShape,\n    currentOppholdIndex: number,\n    isFraOgMedDato: boolean,\n): string | undefined => {\n    if (!hasValue(dato) || !utenlandsperioder) {\n        return undefined;\n    }\n    const utenlandsperioderLagtTilEtterPerioden = utenlandsperioder\n        .filter((p) => p.fom && p.tom)\n        .filter((_t, index) => index > currentOppholdIndex);\n    const overlappendePerioder = utenlandsperioderLagtTilEtterPerioden.filter((tp) =>\n        dayjs(dato).isBetween(tp.fom, tp.tom, 'day', '[]'),\n    );\n    if (overlappendePerioder.length > 0) {\n        const values = {\n            land: getCountryName(overlappendePerioder[0].land, intl.locale),\n            fom: formatDate(overlappendePerioder[0].fom),\n            tom: formatDate(overlappendePerioder[0].tom),\n        };\n        return isFraOgMedDato\n            ? intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapper.fraOgMed', values)\n            : intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapper.tilOgMed', values);\n    }\n\n    return undefined;\n};\n\nexport const validateBostedUtlandFom =\n    (oppgirIFortid: boolean, intl: IntlShape, alleOpphold: UtenlandsoppholdInput[] | undefined, index: number) =>\n    (fom: string) => {\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fraOgMedDato.påkrevd');\n        }\n        if (hasValue(fom) && !isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fraOgMedDato.gyldigDato');\n        }\n\n        if (oppgirIFortid && fom && dayjs(fom).isAfter(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fom.etterDagensDato');\n        }\n\n        if (!oppgirIFortid && fom && dayjs(fom).isBefore(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fom.førDagensDato');\n        }\n\n        if (!oppgirIFortid && hasValue(fom) && dayjs(fom).isAfter(date1YearFromNow, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fom.merEnn1ÅrFremITid');\n        }\n\n        return validerDatoOverlapperAndreUtenlandsperioder(alleOpphold, fom, intl, index, true);\n    };\n\nexport const validateBostedUtlandTom =\n    (\n        fom: string | undefined,\n        oppgirIFortid: boolean,\n        intl: IntlShape,\n        alleOpphold: UtenlandsoppholdInput[] | undefined,\n        index: number,\n    ) =>\n    (tom: string) => {\n        if (!hasValue(tom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tilOgMedDato.påkrevd');\n        }\n        if (hasValue(tom) && !isISODateString(tom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tilOgMedDato.gyldigDato');\n        }\n        if (tom && fom && dayjs(fom).isSame(tom, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.sammeSomFom');\n        }\n\n        if (tom && dayjs(fom).isAfter(tom, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.førFom');\n        }\n\n        if (oppgirIFortid && tom && dayjs(tom).isAfter(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.etterDagensDato');\n        }\n\n        if (!oppgirIFortid && tom && dayjs(tom).isBefore(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.førDagensDato');\n        }\n        if (oppgirIFortid && hasValue(tom) && dayjs(tom).isBefore(date1YearAgo, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.merEnn1ÅrSiden');\n        }\n\n        return validerDatoOverlapperAndreUtenlandsperioder(alleOpphold, tom, intl, index, false);\n    };\n\nexport const validateBostedUtlandLand = (intl: IntlShape) => (land: string) => {\n    if (!hasValue(land)) {\n        return intlUtils(intl, 'valideringsfeil.land.påkrevd');\n    }\n\n    return undefined;\n};\n","import { Block, dateToday, intlUtils, Step, StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport stepConfig, {\n    getBackLinkForBostedIFremtid,\n    getNextRouteForBostedIFortid,\n    getPreviousSetStepHref,\n} from '../stepsConfig';\nimport { Button } from '@navikt/ds-react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport SøknadRoutes from 'app/routes/routes';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { BoIUtlandetFormComponents, BoIUtlandetFormData, BoIUtlandetFormField } from './boIUtlandetFormConfig';\nimport { PlusIcon, TrashIcon } from '@navikt/aksel-icons';\nimport { FieldArray } from 'formik';\nimport {\n    getInitialBostedIUtlandetFormData,\n    getMinValueTomInput,\n    getUferdigBostedUtlandInput,\n    mapBostedUtland,\n} from './boIUtlandetFormUtils';\nimport { validateBostedUtlandLand, validateBostedUtlandFom, validateBostedUtlandTom } from './boIUtlandetValidering';\nimport HorizontalLine from 'app/components/horizontal-line/HorizontalLine';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\n\ninterface Props {\n    oppgirIFortid: boolean;\n}\nconst BoIUtlandet: React.FunctionComponent<Props> = ({ oppgirIFortid }) => {\n    const intl = useIntl();\n    const søknad = useSøknad();\n    const { informasjonOmUtenlandsopphold, barn } = søknad;\n    const { arbeidsforhold } = useSøkerinfo();\n\n    const familiehendelsedato = barn.erBarnetFødt ? barn.fødselsdato : barn.termindato;\n    const utenlandsopphold = oppgirIFortid\n        ? informasjonOmUtenlandsopphold.tidligereOpphold\n        : informasjonOmUtenlandsopphold.senereOpphold;\n    const nextRoute = oppgirIFortid ? getNextRouteForBostedIFortid(informasjonOmUtenlandsopphold) : SøknadRoutes.ARBEID;\n    const onAvbrytSøknad = useAvbrytSøknad();\n\n    const backLink = oppgirIFortid\n        ? getPreviousSetStepHref('boIUtlandetIFortid')\n        : getBackLinkForBostedIFremtid(informasjonOmUtenlandsopphold);\n    const spmTekst = oppgirIFortid\n        ? intlUtils(intl, 'boIUtlandet.spørsmål.hvilketLandHarDuBoddI')\n        : intlUtils(intl, 'boIUtlandet.spørsmål.hvilketLandSkalDuBoI');\n    const stepId = `boIUtlandet${oppgirIFortid ? 'IFortid' : 'IFremtid'}`;\n    const pageTitle = oppgirIFortid\n        ? intlUtils(intl, 'steps.label.boIUtlandetIFortid')\n        : intlUtils(intl, 'steps.label.boIUtlandetIFremtid');\n\n    const onValidSubmitHandler = (values: Partial<BoIUtlandetFormData>) => {\n        const utenlandsopphold = mapBostedUtland(\n            values,\n            informasjonOmUtenlandsopphold,\n            familiehendelsedato!,\n            oppgirIFortid,\n        );\n        return [actionCreator.setUtenlandsopphold(utenlandsopphold)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    return (\n        <BoIUtlandetFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getInitialBostedIUtlandetFormData(utenlandsopphold)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId={stepId}\n                        pageTitle={pageTitle}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <BoIUtlandetFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <FieldArray\n                                validateOnChange={false}\n                                name={BoIUtlandetFormField.bostedIUtlandet}\n                                render={(arrayHelpers) =>\n                                    formValues.bostedIUtlandet &&\n                                    formValues.bostedIUtlandet.length > 0 &&\n                                    formValues.bostedIUtlandet.map((_opphold, index) => (\n                                        <div key={index}>\n                                            <Block padBottom=\"xxl\">\n                                                <BoIUtlandetFormComponents.CountrySelect\n                                                    style={{ width: 'var(--app-text-input-width)' }}\n                                                    name={`bostedIUtlandet.${index}.land`}\n                                                    label={spmTekst}\n                                                    validate={validateBostedUtlandLand(intl)}\n                                                    useAlpha3Code={false}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <BoIUtlandetFormComponents.DatePicker\n                                                    name={`bostedIUtlandet.${index}.fom`}\n                                                    label={intlUtils(intl, 'boIUtlandet.fraogmed')}\n                                                    validate={validateBostedUtlandFom(\n                                                        oppgirIFortid,\n                                                        intl,\n                                                        formValues.bostedIUtlandet,\n                                                        index,\n                                                    )}\n                                                    maxDate={oppgirIFortid ? dateToday : undefined}\n                                                    minDate={!oppgirIFortid ? dateToday : undefined}\n                                                    showYearSelector={true}\n                                                    placeholder={'dd.mm.åååå'}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <BoIUtlandetFormComponents.DatePicker\n                                                    name={`bostedIUtlandet.${index}.tom`}\n                                                    label={intlUtils(intl, 'boIUtlandet.tilogmed')}\n                                                    validate={validateBostedUtlandTom(\n                                                        formValues.bostedIUtlandet![index].fom,\n                                                        oppgirIFortid,\n                                                        intl,\n                                                        formValues.bostedIUtlandet,\n                                                        index,\n                                                    )}\n                                                    maxDate={oppgirIFortid ? dateToday : undefined}\n                                                    minDate={getMinValueTomInput(\n                                                        oppgirIFortid,\n                                                        formValues.bostedIUtlandet![index].fom,\n                                                        dateToday,\n                                                    )}\n                                                    showYearSelector={true}\n                                                    placeholder={'dd.mm.åååå'}\n                                                />\n                                            </Block>\n                                            {index !== 0 && (\n                                                <Block>\n                                                    <Button\n                                                        icon={<TrashIcon />}\n                                                        type=\"button\"\n                                                        variant=\"tertiary\"\n                                                        onClick={() => arrayHelpers.remove(index)}\n                                                    >\n                                                        {intlUtils(intl, 'boIUtlandet.slett')}\n                                                    </Button>\n                                                </Block>\n                                            )}\n                                            {formValues.bostedIUtlandet && formValues.bostedIUtlandet.length > 1 && (\n                                                <HorizontalLine />\n                                            )}\n\n                                            {formValues.bostedIUtlandet &&\n                                                index === formValues.bostedIUtlandet.length - 1 && (\n                                                    <Block padBottom=\"xxl\">\n                                                        <Button\n                                                            icon={<PlusIcon />}\n                                                            type=\"button\"\n                                                            variant=\"secondary\"\n                                                            onClick={() =>\n                                                                arrayHelpers.push(getUferdigBostedUtlandInput())\n                                                            }\n                                                        >\n                                                            {intlUtils(intl, 'boIUtlandet.ny')}\n                                                        </Button>\n                                                    </Block>\n                                                )}\n                                        </div>\n                                    ))\n                                }\n                            />\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={RouterLink} to={backLink}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </BoIUtlandetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default BoIUtlandet;\n","import { Alert } from '@navikt/ds-react';\n\nconst SøknadSendt = () => {\n    return (\n        <>\n            <Alert variant=\"success\">Søknaden er sendt</Alert>\n        </>\n    );\n};\n\nexport default SøknadSendt;\n","import { Tidsperiode } from '@navikt/fp-common';\nimport dayjs from 'dayjs';\n\nexport const overlapperTidsperioder = (t1: Tidsperiode, t2: Tidsperiode) => {\n    return (\n        dayjs(t1.fom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t1.tom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t2.fom).isBetween(t1.fom, t1.tom, 'day', '[]') ||\n        dayjs(t2.tom).isBetween(t1.fom, t1.tom, 'day', '[]')\n    );\n};\n\nexport const getTidsperiode = (fom: string, tom: string): Tidsperiode => {\n    return {\n        fom,\n        tom,\n    };\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { formatDate, intlUtils, isDateABeforeDateB } from '@navikt/fp-common';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { PeriodeMedVariasjon, TilOgMedDatoType } from 'app/types/Tilrettelegging';\nimport { getTidsperiode, overlapperTidsperioder } from 'app/utils/tidsperiodeUtils';\nimport { getSlutteTekst, hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validatePeriodeFom =\n    (\n        intl: IntlShape,\n        index: number,\n        allePerioder: PeriodeMedVariasjon[] | undefined,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerFørTermin: boolean,\n    ) =>\n    (fom: string) => {\n        const tom = allePerioder && allePerioder.length > 0 ? allePerioder[index].tom : undefined;\n        const tomType = allePerioder && allePerioder.length > 0 ? allePerioder[index].tomType : undefined;\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.påkrevd');\n        }\n        if (hasValue(fom) && !isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.gyldigDato');\n        }\n\n        if (hasValue(fom) && tom && isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.førTilDato');\n        }\n\n        if (\n            hasValue(fom) &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(fom).isBefore(dayjs(behovForTilretteleggingFom), 'd')\n        ) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.førBehovForTilretteleggingFom');\n        }\n\n        if (hasValue(fom) && dayjs(fom).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            return kanHaSVPFremTilTreUkerFørTermin\n                ? intlUtils(intl, 'valideringsfeil.periode.fom.etterTreUkerFørTermin')\n                : intlUtils(intl, 'valideringsfeil.periode.fom.etterFødsel');\n        }\n\n        if (sluttDatoArbeid && dayjs(fom).isAfter(dayjs(sluttDatoArbeid), 'd')) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.periode.fom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n\n        const overlappendePerioderFeil = validateAtPeriodeIkkeOverlapper(\n            fom,\n            tom,\n            tomType,\n            allePerioder,\n            index,\n            intl,\n            sisteDagForSvangerskapspenger,\n        );\n        if (overlappendePerioderFeil) {\n            return overlappendePerioderFeil;\n        }\n\n        return validateSammenhengendePerioderFom(fom, allePerioder, sisteDagForSvangerskapspenger, intl);\n    };\n\nexport const validatePeriodeTom =\n    (\n        intl: IntlShape,\n        index: number,\n        allePerioder: PeriodeMedVariasjon[] | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerFørTermin: boolean,\n    ) =>\n    (tom: string) => {\n        const fom = allePerioder && allePerioder.length > 0 ? allePerioder[index].fom : undefined;\n        if (!hasValue(tom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.tom.påkrevd');\n        }\n        if (hasValue(tom) && !isISODateString(tom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.tom.gyldigDato');\n        }\n\n        if (hasValue(tom) && fom && isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.tom.etterTilDato');\n        }\n\n        if (hasValue(tom) && dayjs(tom).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            return kanHaSVPFremTilTreUkerFørTermin\n                ? intlUtils(intl, 'valideringsfeil.periode.tom.etterTreUkerFørTermin')\n                : intlUtils(intl, 'valideringsfeil.periode.tom.etterFødsel');\n        }\n        if (sluttDatoArbeid && dayjs(tom).isAfter(dayjs(sluttDatoArbeid), 'd')) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.periode.tom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n\n        return undefined;\n    };\n\nexport const validatePeriodeTomType =\n    (\n        intl: IntlShape,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerFørTermin: boolean,\n    ) =>\n    (value: TilOgMedDatoType) => {\n        if (!hasValue(value)) {\n            return kanHaSVPFremTilTreUkerFørTermin\n                ? intlUtils(intl, 'valideringsfeil.periode.tomType.påkrevd.termin')\n                : intlUtils(intl, 'valideringsfeil.periode.tomType.påkrevd.fødsel');\n        }\n        if (\n            sluttDatoArbeid &&\n            value === TilOgMedDatoType.SISTE_DAG_MED_SVP &&\n            dayjs(sisteDagForSvangerskapspenger).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.periode.tomType.etterSluttDatoArbeid', {\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n        return undefined;\n    };\n\nexport const validateAtPeriodeIkkeOverlapper = (\n    fom: string | undefined,\n    tom: string | undefined,\n    tomType: TilOgMedDatoType | undefined,\n    allePerioder: PeriodeMedVariasjon[] | undefined,\n    index: number,\n    intl: IntlShape,\n    sisteDagForSvangerskapspenger: Date,\n) => {\n    if ((hasValue(tom) || hasValue(tomType)) && hasValue(fom) && allePerioder && allePerioder.length > 0) {\n        const andrePerioderLagtTilEtter = allePerioder.filter((_p, i) => i > index);\n        const overlappendePerioder = andrePerioderLagtTilEtter.filter((p) => {\n            let periodeTom = undefined;\n            if (hasValue(p.tomType) && p.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP) {\n                periodeTom = dateToISOString(sisteDagForSvangerskapspenger);\n            }\n            if (hasValue(p.tom)) {\n                periodeTom = p.tom;\n            }\n            if (periodeTom) {\n                return overlapperTidsperioder(\n                    getTidsperiode(fom!, tom || dateToISOString(sisteDagForSvangerskapspenger)),\n                    getTidsperiode(p.fom, periodeTom),\n                );\n            }\n            return false;\n        });\n        if (overlappendePerioder.length > 0) {\n            const tilOgMedDato = overlappendePerioder[0].tom\n                ? overlappendePerioder[0].tom\n                : sisteDagForSvangerskapspenger;\n            return intlUtils(intl, 'valideringsfeil.periode.overlapper', {\n                fom: formatDate(overlappendePerioder[0].fom),\n                tom: formatDate(tilOgMedDato),\n            });\n        }\n    }\n    return undefined;\n};\n\nexport const validateSammenhengendePerioderFom = (\n    fom: string | undefined,\n    allePerioder: PeriodeMedVariasjon[] | undefined,\n    sisteDagForSvangerskapspenger: Date,\n    intl: IntlShape,\n) => {\n    const alleFom = allePerioder\n        ? allePerioder.filter((p) => p.fom && isISODateString(p.fom)).map((periode) => dayjs(periode.fom))\n        : undefined;\n    const minstAvAlleFom = alleFom ? dayjs.min(alleFom) : undefined;\n    if (minstAvAlleFom && dayjs(fom).isSameOrBefore(minstAvAlleFom, 'day')) {\n        return undefined;\n    }\n    const alleTom = allePerioder\n        ? allePerioder\n              .filter((p) => (p.tom && isISODateString(p.tom)) || p.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP)\n              .map((periode) => {\n                  return periode.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP\n                      ? dayjs(sisteDagForSvangerskapspenger)\n                      : dayjs(periode.tom);\n              })\n        : undefined;\n    const tomSomErDagenFørFom = alleTom\n        ? alleTom.find((tom) => dayjs(fom).subtract(1, 'd').isSame(dayjs(tom), 'day'))\n        : undefined;\n    if (!tomSomErDagenFørFom) {\n        return intlUtils(intl, 'valideringsfeil.periode.ikkeSammenhengende');\n    }\n    return undefined;\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { ISOStringToDate, formatDate, intlUtils } from '@navikt/fp-common';\nimport { PerioderFormData } from 'app/steps/perioder/perioderStepFormConfig';\nimport { TilOgMedDatoType } from 'app/types/Tilrettelegging';\nimport { IntlShape } from 'react-intl';\n\nexport const getPeriodeInfoTekst = (\n    formValues: Partial<PerioderFormData>,\n    index: number,\n    sisteDagForSvangerskapspenger: Date,\n    intl: IntlShape,\n) => {\n    if (\n        formValues &&\n        formValues.varierendePerioder &&\n        formValues.varierendePerioder[index] &&\n        formValues.varierendePerioder[index].fom &&\n        isISODateString(formValues.varierendePerioder[index].fom) &&\n        (formValues.varierendePerioder[index].tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP ||\n            (formValues.varierendePerioder[index].tom && isISODateString(formValues.varierendePerioder[index].tom)))\n    ) {\n        const tomDato =\n            formValues.varierendePerioder[index].tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP\n                ? sisteDagForSvangerskapspenger\n                : ISOStringToDate(formValues.varierendePerioder[index].tom)!;\n        return `${formatDate(formValues.varierendePerioder[index].fom)} - ${formatDate(tomDato)}`;\n    }\n    return intlUtils(intl, 'ny.periode');\n};\n","import { Block, Step, StepButtonWrapper, bemUtils, intlUtils } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport stepConfig, { getBackLinkPerioderSteg } from '../stepsConfig';\nimport { Alert, BodyShort, Button, Heading, ReadMore, Tag } from '@navikt/ds-react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { PerioderFormComponents, PerioderFormData, PerioderFormField } from './perioderStepFormConfig';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport { TilOgMedDatoType } from 'app/types/Tilrettelegging';\nimport { Link } from 'react-router-dom';\nimport { FunctionComponent } from 'react';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport { getNesteTilretteleggingId } from 'app/routes/SvangerskapspengesøknadRoutes';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { validatePeriodeFom, validatePeriodeTom, validatePeriodeTomType } from './perioderValidation';\nimport { FieldArray } from 'formik';\nimport { PlusIcon, TrashIcon } from '@navikt/aksel-icons';\nimport HorizontalLine from 'app/components/horizontal-line/HorizontalLine';\nimport {\n    getDescriptionTekst,\n    getMinDatoTom,\n    getMåSendeNySøknad,\n    getPeriodeDerSøkerErTilbakeIFullStilling,\n    getPeriodeSideTittel,\n    getPerioderInitialValues,\n    getUferdigPeriodeInput,\n    mapPerioderFormDataToState,\n} from './perioderStepUtils';\nimport { validateStillingsprosentPåPerioder } from '../tilrettelegging/tilretteleggingValidation';\nimport Bedriftsbanner from 'app/components/bedriftsbanner/Bedriftsbanner';\nimport { getPeriodeInfoTekst } from 'app/utils/perioderUtils';\nimport './perioderStep.css';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport dayjs from 'dayjs';\nimport {\n    getSisteDagForSvangerskapspenger,\n    getKanHaSvpFremTilTreUkerFørTermin,\n    getDefaultMonth,\n} from 'app/utils/dateUtils';\nimport { getRadioOptionsTomType } from '../tilrettelegging/tilretteleggingStepUtils';\nimport { getOpprinneligStillingsprosent } from 'app/utils/tilretteleggingUtils';\n\ninterface Props {\n    id: string;\n    navn: string;\n}\n\nconst PerioderStep: FunctionComponent<Props> = ({ navn, id }) => {\n    useUpdateCurrentTilretteleggingId(id);\n    const intl = useIntl();\n    const bem = bemUtils('perioderStep');\n    const søknad = useSøknad();\n    const { tilrettelegging: tilretteleggingFraState, barn } = søknad;\n    const { state } = useSvangerskapspengerContext();\n    const { arbeidsforhold } = useSøkerinfo();\n    const onAvbrytSøknad = useAvbrytSøknad();\n\n    const currentTilrettelegging = tilretteleggingFraState.find((t) => t.id === id);\n    const aktiveStillinger = currentTilrettelegging!.arbeidsforhold.stillinger;\n    const sisteDagForSvangerskapspenger = getSisteDagForSvangerskapspenger(barn);\n    const erFlereTilrettelegginger = tilretteleggingFraState.length > 1;\n\n    const onValidSubmitHandler = (values: Partial<PerioderFormData>) => {\n        const mappedTilrettelegging = mapPerioderFormDataToState(id, values, tilretteleggingFraState);\n        return [actionCreator.setTilrettelegging(mappedTilrettelegging)];\n    };\n\n    const nesteTilretteleggingId = getNesteTilretteleggingId(tilretteleggingFraState, state.currentTilretteleggingId);\n    let nextRoute = SøknadRoutes.OPPSUMMERING.toString();\n    if (nesteTilretteleggingId) {\n        nextRoute = `${SøknadRoutes.SKJEMA}/${nesteTilretteleggingId}`;\n    }\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    const sluttDatoArbeid = currentTilrettelegging!.arbeidsforhold.sluttdato;\n    const kanHaSVPFremTilTreUkerFørTermin = getKanHaSvpFremTilTreUkerFørTermin(barn);\n    const maxDato = sluttDatoArbeid\n        ? dayjs.min(dayjs(sisteDagForSvangerskapspenger), dayjs(sluttDatoArbeid))!.toDate()\n        : sisteDagForSvangerskapspenger;\n    const minDatoFom = new Date(currentTilrettelegging!.behovForTilretteleggingFom);\n    const sideTittel = getPeriodeSideTittel(erFlereTilrettelegginger, navn, intl);\n    const descriptionTekst = getDescriptionTekst(kanHaSVPFremTilTreUkerFørTermin, intl);\n    const defaultMonthFom = getDefaultMonth(minDatoFom, maxDato);\n\n    return (\n        <PerioderFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getPerioderInitialValues(currentTilrettelegging!)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const opprinneligStillingsprosent = getOpprinneligStillingsprosent(\n                    formValues.varierendePerioder,\n                    aktiveStillinger,\n                );\n                const periodeDerSøkerErTilbakeIOpprinneligStilling = getPeriodeDerSøkerErTilbakeIFullStilling(\n                    formValues.varierendePerioder,\n                    opprinneligStillingsprosent,\n                );\n\n                const uferdigDelvisTilretteleggingInput = getUferdigPeriodeInput(\n                    formValues,\n                    sisteDagForSvangerskapspenger,\n                );\n\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId={`periode-${id}`}\n                        pageTitle={sideTittel}\n                        onCancel={onAvbrytSøknad}\n                        steps={stepConfig(intl, søknad, arbeidsforhold)}\n                        useNoTempSavingText={true}\n                    >\n                        <PerioderFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            {erFlereTilrettelegginger && (\n                                <Block padBottom=\"xxl\">\n                                    <Bedriftsbanner arbeid={currentTilrettelegging!.arbeidsforhold} />\n                                </Block>\n                            )}\n                            <Block padBottom=\"xl\">\n                                <Heading size=\"small\">{intlUtils(intl, 'perioder.varierende.heading')}</Heading>\n                                <BodyShort>{descriptionTekst}</BodyShort>\n                            </Block>\n                            <FieldArray\n                                validateOnChange={false}\n                                name={PerioderFormField.varierendePerioder}\n                                render={(arrayHelpers) =>\n                                    formValues.varierendePerioder &&\n                                    formValues.varierendePerioder.length > 0 &&\n                                    formValues.varierendePerioder.map((p, index) => {\n                                        const måSendeNySøknad = getMåSendeNySøknad(\n                                            periodeDerSøkerErTilbakeIOpprinneligStilling,\n                                            p,\n                                            opprinneligStillingsprosent,\n                                        );\n                                        const minDatoTom = getMinDatoTom(\n                                            formValues.varierendePerioder![index].fom,\n                                            minDatoFom,\n                                        );\n                                        const defaultMonthTom = getDefaultMonth(minDatoTom, maxDato);\n                                        return (\n                                            <div key={index}>\n                                                <Block padBottom=\"xxl\">\n                                                    <HorizontalLine />\n                                                    <Block padBottom=\"l\" className={bem.element('info')}>\n                                                        <Tag variant=\"info\" className={bem.element('tag')}>\n                                                            {getPeriodeInfoTekst(\n                                                                formValues,\n                                                                index,\n                                                                sisteDagForSvangerskapspenger,\n                                                                intl,\n                                                            )}\n                                                        </Tag>\n                                                        {index !== 0 && (\n                                                            <Button\n                                                                icon={<TrashIcon />}\n                                                                type=\"button\"\n                                                                variant=\"tertiary\"\n                                                                onClick={() => arrayHelpers.remove(index)}\n                                                            >\n                                                                {intlUtils(intl, 'perioder.varierende.slett')}\n                                                            </Button>\n                                                        )}\n                                                    </Block>\n                                                    <PerioderFormComponents.DatePicker\n                                                        key={`varierendePerioder.${index}.fom`}\n                                                        minDate={minDatoFom}\n                                                        maxDate={maxDato}\n                                                        name={`varierendePerioder.${index}.fom`}\n                                                        label={intlUtils(intl, 'perioder.varierende.fom.label')}\n                                                        validate={validatePeriodeFom(\n                                                            intl,\n                                                            index,\n                                                            formValues.varierendePerioder,\n                                                            currentTilrettelegging!.behovForTilretteleggingFom,\n                                                            sisteDagForSvangerskapspenger,\n                                                            currentTilrettelegging!.arbeidsforhold.navn,\n                                                            sluttDatoArbeid,\n                                                            kanHaSVPFremTilTreUkerFørTermin,\n                                                        )}\n                                                        dayPickerProps={{ defaultMonth: defaultMonthFom }}\n                                                    />\n                                                </Block>\n                                                <Block padBottom=\"xxl\">\n                                                    <PerioderFormComponents.RadioGroup\n                                                        name={`varierendePerioder.${index}.tomType`}\n                                                        key={`varierendePerioder.${index}.tomType`}\n                                                        legend={intlUtils(intl, 'perioder.varierende.tomType.label')}\n                                                        radios={getRadioOptionsTomType(\n                                                            intl,\n                                                            kanHaSVPFremTilTreUkerFørTermin,\n                                                        )}\n                                                        validate={validatePeriodeTomType(\n                                                            intl,\n                                                            sisteDagForSvangerskapspenger,\n                                                            currentTilrettelegging!.arbeidsforhold.navn,\n                                                            sluttDatoArbeid,\n                                                            kanHaSVPFremTilTreUkerFørTermin,\n                                                        )}\n                                                    />\n                                                </Block>\n                                                <Block\n                                                    padBottom=\"xxl\"\n                                                    visible={\n                                                        formValues.varierendePerioder![index].tomType ===\n                                                        TilOgMedDatoType.VALGFRI_DATO\n                                                    }\n                                                >\n                                                    <PerioderFormComponents.DatePicker\n                                                        key={`varierendePerioder.${index}.tom`}\n                                                        name={`varierendePerioder.${index}.tom`}\n                                                        label={intlUtils(intl, 'perioder.varierende.tom.label')}\n                                                        validate={validatePeriodeTom(\n                                                            intl,\n                                                            index,\n                                                            formValues.varierendePerioder,\n                                                            sisteDagForSvangerskapspenger,\n                                                            currentTilrettelegging!.arbeidsforhold.navn,\n                                                            sluttDatoArbeid,\n                                                            kanHaSVPFremTilTreUkerFørTermin,\n                                                        )}\n                                                        minDate={minDatoTom}\n                                                        maxDate={maxDato}\n                                                        dayPickerProps={{ defaultMonth: defaultMonthTom }}\n                                                    />\n                                                </Block>\n                                                <Block padBottom=\"xxl\">\n                                                    <Block padBottom=\"m\">\n                                                        <PerioderFormComponents.NumberInput\n                                                            key={`varierendePerioder.${index}.stillingsprosent`}\n                                                            name={`varierendePerioder.${index}.stillingsprosent`}\n                                                            label={intlUtils(\n                                                                intl,\n                                                                'perioder.varierende.stillingsprosent.label',\n                                                            )}\n                                                            description={intlUtils(\n                                                                intl,\n                                                                'tilrettelegging.tilrettelagtArbeidType.description',\n                                                            )}\n                                                            validate={validateStillingsprosentPåPerioder(\n                                                                intl,\n                                                                måSendeNySøknad,\n                                                                periodeDerSøkerErTilbakeIOpprinneligStilling,\n                                                                formValues.varierendePerioder,\n                                                                opprinneligStillingsprosent,\n                                                            )}\n                                                            onClick={(e: any) => e.preventDefault()}\n                                                        />\n                                                    </Block>\n                                                    <ReadMore\n                                                        size=\"medium\"\n                                                        header={intlUtils(\n                                                            intl,\n                                                            'tilrettelegging.varierendePerioderStillingsprosent.info.tittel',\n                                                        )}\n                                                    >\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort>\n                                                                <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del1\"></FormattedMessage>\n                                                            </BodyShort>\n                                                        </Block>\n                                                        <Block>\n                                                            <BodyShort>\n                                                                <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del2\"></FormattedMessage>\n                                                            </BodyShort>\n                                                        </Block>\n                                                    </ReadMore>\n                                                </Block>\n                                                {måSendeNySøknad && (\n                                                    <Block padBottom=\"xxl\">\n                                                        <Alert variant=\"warning\">\n                                                            <Block padBottom=\"m\">\n                                                                <Heading size=\"small\">\n                                                                    {intlUtils(intl, 'perioder.alert.nySøknad.title')}\n                                                                </Heading>\n                                                            </Block>\n                                                            <Block padBottom=\"m\">\n                                                                {intlUtils(intl, 'perioder.alert.nySøknad.del1')}\n                                                            </Block>\n                                                            <Block padBottom=\"m\">\n                                                                {intlUtils(intl, 'perioder.alert.nySøknad.del2')}\n                                                            </Block>\n                                                        </Alert>\n                                                    </Block>\n                                                )}\n                                                {formValues.varierendePerioder &&\n                                                    index === formValues.varierendePerioder.length - 1 && (\n                                                        <Block padBottom=\"xl\">\n                                                            <Button\n                                                                icon={<PlusIcon />}\n                                                                type=\"button\"\n                                                                variant=\"secondary\"\n                                                                onClick={() =>\n                                                                    arrayHelpers.push({\n                                                                        ...uferdigDelvisTilretteleggingInput,\n                                                                    })\n                                                                }\n                                                            >\n                                                                {intlUtils(intl, 'perioder.varierende.leggTil')}\n                                                            </Button>\n                                                        </Block>\n                                                    )}\n                                            </div>\n                                        );\n                                    })\n                                }\n                            />\n\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkPerioderSteg(state.currentTilretteleggingId)}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 'søknad.gåVidere')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </PerioderFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default PerioderStep;\n","import { FunctionComponent, useEffect, useState } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport SøknadRoutes from './routes';\nimport isAvailable from './isAvailable';\nimport Forside from 'app/pages/forside/Forside';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport Barnet from 'app/steps/barnet/Barnet';\nimport Inntektsinformasjon from 'app/steps/inntektsinformasjon/Inntektsinformasjon';\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\nimport TilretteleggingStep from 'app/steps/tilrettelegging/TilretteleggingStep';\nimport Oppsummering from 'app/steps/oppsummering/Oppsummering';\nimport Skjema from 'app/steps/skjema/Skjema';\nimport Tilrettelegging, { TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport FrilansStep from 'app/steps/frilans/FrilansStep';\nimport ArbeidIUtlandetStep from 'app/steps/arbeid-i-utlandet/ArbeidIUtlandetStep';\nimport VelgArbeid from 'app/steps/velg-arbeidsforhold/VelgArbeid';\nimport EgenNæringStep from 'app/steps/egen-næring/EgenNæringStep';\nimport BoIUtlandet from 'app/steps/bo-i-utlandet/BoIUtlandet';\nimport SøknadSendt from 'app/pages/søknad-sendt/SøknadSendt';\nimport { DelivisTilretteleggingPeriodeType } from 'app/steps/tilrettelegging/tilretteleggingStepFormConfig';\nimport PerioderStep from 'app/steps/perioder/PerioderStep';\nimport { LocaleNo } from '@navikt/fp-types';\ninterface Props {\n    currentRoute: SøknadRoutes;\n    locale: LocaleNo;\n    onChangeLocale: (locale: LocaleNo) => void;\n}\n\nexport const getForrigeTilrettelegging = (\n    tilretteleggingBehov: Tilrettelegging[],\n    currentTilretteleggingId: string | undefined,\n) => {\n    if (currentTilretteleggingId === undefined && tilretteleggingBehov.length > 0) {\n        return tilretteleggingBehov[tilretteleggingBehov.length - 1];\n    }\n    const forrigeTilretteleggingIndex = tilretteleggingBehov.findIndex((t) => t.id === currentTilretteleggingId) - 1;\n    if (forrigeTilretteleggingIndex < 0) {\n        return undefined;\n    }\n    return tilretteleggingBehov[forrigeTilretteleggingIndex];\n};\n\nexport const getNesteTilretteleggingId = (\n    tilretteleggingBehov: Tilrettelegging[],\n    currentTilretteleggingId: string | undefined,\n) => {\n    if (currentTilretteleggingId === undefined && tilretteleggingBehov.length > 0) {\n        return tilretteleggingBehov[0].id;\n    }\n    const nesteTilretteleggingIndex = tilretteleggingBehov.findIndex((t) => t.id === currentTilretteleggingId) + 1;\n    if (nesteTilretteleggingIndex === tilretteleggingBehov.length) {\n        return undefined;\n    }\n    return tilretteleggingBehov[nesteTilretteleggingIndex].id;\n};\n\nexport const findNextRoute = (\n    currentRoute: SøknadRoutes,\n    nextRoute: SøknadRoutes,\n    currentTilretteleggingId: string | undefined,\n    tilretteleggingBehov: Tilrettelegging[],\n): any => {\n    if (currentRoute !== SøknadRoutes.SKJEMA && currentRoute !== SøknadRoutes.TILRETTELEGGING) {\n        return nextRoute;\n    }\n\n    const nesteTilretteleggingId = getNesteTilretteleggingId(tilretteleggingBehov, currentTilretteleggingId);\n\n    if (nesteTilretteleggingId) {\n        return `${SøknadRoutes.TILRETTELEGGING}/${nesteTilretteleggingId}`;\n    } else {\n        return SøknadRoutes.OPPSUMMERING;\n    }\n};\n\nconst getSkjemaRoutes = (tilretteleggingValg: Tilrettelegging[] | undefined) => {\n    return tilretteleggingValg?.map((tilrettelegging) => {\n        return (\n            <Route\n                key={tilrettelegging.id}\n                path={`${SøknadRoutes.SKJEMA}/${tilrettelegging.id}`}\n                element={\n                    <Skjema\n                        key={tilrettelegging.id}\n                        id={tilrettelegging.id}\n                        typeArbeid={tilrettelegging.arbeidsforhold.type}\n                        navn={tilrettelegging.arbeidsforhold.navn}\n                    />\n                }\n            />\n        );\n    });\n};\n\nconst getPerioderRoutes = (tilretteleggingValg: Tilrettelegging[] | undefined) => {\n    return tilretteleggingValg\n        ?.filter(\n            (t) =>\n                t.type === TilretteleggingstypeOptions.DELVIS &&\n                t.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER,\n        )\n        .map((tilrettelegging) => {\n            return (\n                <Route\n                    key={tilrettelegging.id}\n                    path={`${SøknadRoutes.PERIODER}/${tilrettelegging.id}`}\n                    element={\n                        <PerioderStep\n                            key={tilrettelegging.id}\n                            id={tilrettelegging.id}\n                            navn={tilrettelegging.arbeidsforhold.navn}\n                        />\n                    }\n                />\n            );\n        });\n};\n\nconst getTilretteleggingRoutes = (tilretteleggingValg: Tilrettelegging[] | undefined) => {\n    return tilretteleggingValg?.map((tilrettelegging) => {\n        return (\n            <Route\n                key={tilrettelegging.id}\n                path={`${SøknadRoutes.TILRETTELEGGING}/${tilrettelegging.id}`}\n                element={\n                    <TilretteleggingStep\n                        key={tilrettelegging.id}\n                        id={tilrettelegging.id}\n                        typeArbeid={tilrettelegging.arbeidsforhold.type}\n                        navn={tilrettelegging.arbeidsforhold.navn}\n                    />\n                }\n            />\n        );\n    });\n};\n\nconst renderSøknadRoutes = (harGodkjentVilkår: boolean, tilretteleggingBehov: Tilrettelegging[]) => {\n    if (!harGodkjentVilkår) {\n        return <Route path=\"*\" element={<Navigate to={SøknadRoutes.FORSIDE} />} />;\n    }\n    return (\n        <>\n            <Route path={SøknadRoutes.BARNET} element={<Barnet />} />\n            <Route path={SøknadRoutes.UTENLANDSOPPHOLD} element={<Utenlandsopphold />} />\n            <Route\n                path={SøknadRoutes.HAR_BODD_I_UTLANDET}\n                element={<BoIUtlandet key={'iFortid'} oppgirIFortid={true} />}\n            />\n            <Route\n                path={SøknadRoutes.SKAL_BO_I_UTLANDET}\n                element={<BoIUtlandet key={'iFremtid'} oppgirIFortid={false} />}\n            />\n            <Route path={SøknadRoutes.UTENLANDSOPPHOLD} element={<Utenlandsopphold />} />\n            <Route path={SøknadRoutes.ARBEID} element={<Inntektsinformasjon />} />\n            <Route path={SøknadRoutes.FRILANS} element={<FrilansStep />} />\n            <Route path={SøknadRoutes.NÆRING} element={<EgenNæringStep />} />\n            <Route path={SøknadRoutes.ARBEID_I_UTLANDET} element={<ArbeidIUtlandetStep />} />\n            <Route path={SøknadRoutes.VELG_ARBEID} element={<VelgArbeid />} />\n            {getSkjemaRoutes(tilretteleggingBehov)}\n            {getTilretteleggingRoutes(tilretteleggingBehov)}\n            {getPerioderRoutes(tilretteleggingBehov)}\n            <Route path={SøknadRoutes.OPPSUMMERING} element={<Oppsummering />} />\n            <Route path={SøknadRoutes.SØKNAD_SENDT} element={<SøknadSendt />} />\n        </>\n    );\n};\n\nconst SvangerskapspengesøknadRoutes: FunctionComponent<Props> = ({ currentRoute, locale, onChangeLocale }) => {\n    const { state } = useSvangerskapspengerContext();\n    const { tilrettelegging } = useSøknad();\n    const navigate = useNavigate();\n    const harGodkjentVilkår = state.søknad.harGodkjentVilkår;\n    const [isFirstTimeLoadingApp, setIsFirstTimeLoadingApp] = useState(true);\n\n    useEffect(() => {\n        if (currentRoute && harGodkjentVilkår && isFirstTimeLoadingApp) {\n            setIsFirstTimeLoadingApp(false);\n            if (isAvailable(currentRoute, harGodkjentVilkår)) {\n                navigate(currentRoute);\n            }\n        }\n    }, [currentRoute, harGodkjentVilkår, navigate, isFirstTimeLoadingApp]);\n\n    return (\n        <Routes>\n            <Route path={SøknadRoutes.FORSIDE} element={<Forside locale={locale} onChangeLocale={onChangeLocale} />} />\n\n            {renderSøknadRoutes(harGodkjentVilkår, tilrettelegging)}\n        </Routes>\n    );\n};\n\nexport default SvangerskapspengesøknadRoutes;\n"],"names":["bind","fn","thisArg","toString","getPrototypeOf","kindOf","cache","thing","str","kindOfTest","type","typeOfTest","isArray","isUndefined","isBuffer","val","isFunction","isArrayBuffer","isArrayBufferView","result","isString","isNumber","isObject","isBoolean","isPlainObject","prototype","isDate","isFile","isBlob","isFileList","isStream","isFormData","kind","isURLSearchParams","trim","forEach","obj","allOwnKeys","l","keys","len","key","findKey","_key","_global","isContextDefined","context","merge","caseless","assignValue","targetKey","extend","a","b","stripBOM","content","inherits","constructor","superConstructor","props","descriptors","toFlatObject","sourceObj","destObj","filter","propFilter","i","prop","merged","endsWith","searchString","position","lastIndex","toArray","arr","isTypedArray","TypedArray","forEachEntry","iterator","pair","matchAll","regExp","matches","isHTMLForm","toCamelCase","m","p1","p2","hasOwnProperty","isRegExp","reduceDescriptors","reducer","reducedDescriptors","descriptor","name","ret","freezeMethods","value","toObjectSet","arrayOrString","delimiter","define","noop","toFiniteNumber","defaultValue","ALPHA","DIGIT","ALPHABET","generateString","size","alphabet","length","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","utils$1","AxiosError","message","code","config","request","response","utils","error","customProps","axiosError","httpAdapter","isVisitable","removeBrackets","renderKey","path","dots","token","isFlatArray","predicates","toFormData","formData","options","option","metaTokens","visitor","defaultVisitor","indexes","useBlob","convertValue","el","index","exposedHelpers","build","encode","charMap","match","AxiosURLSearchParams","params","encoder","_encode","buildURL","url","serializeFn","serializedParams","hashmarkIndex","InterceptorManager","fulfilled","rejected","id","h","InterceptorManager$1","transitionalDefaults","URLSearchParams$1","FormData$1","Blob$1","platform$1","URLSearchParams","FormData","Blob","hasBrowserEnv","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","platform","toURLEncodedForm","data","helpers","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","stringifySafely","rawValue","parser","e","defaults","headers","contentType","hasJSONContentType","isObjectPayload","_FormData","transitional","forcedJSONParsing","JSONRequested","strictJSONParsing","status","method","defaults$1","ignoreDuplicateOf","parseHeaders","rawHeaders","parsed","line","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders","valueOrRewrite","rewrite","self","setHeader","_value","_header","_rewrite","lHeader","setHeaders","matcher","deleted","deleteHeader","format","normalized","targets","asStrings","first","computed","accessors","defineAccessor","mapped","headerValue","AxiosHeaders$1","transformData","fns","isCancel","CanceledError","settle","resolve","reject","validateStatus","cookies","expires","domain","secure","cookie","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","isURLSameOrigin","msie","urlParsingNode","originURL","resolveURL","href","requestURL","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","now","startedAt","bytesCount","passed","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","progressBytes","rate","inRange","isXHRAdapterSupported","xhrAdapter","requestData","requestHeaders","responseType","onCanceled","done","username","password","fullPath","onloadend","responseHeaders","err","timeoutErrorMessage","xsrfValue","cancel","protocol","knownAdapters","renderReason","reason","isResolvedHandle","adapter","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","assertOptions","schema","allowUnknown","Axios","instanceConfig","configOrUrl","paramsSerializer","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","Axios$1","CancelToken","executor","resolvePromise","onfulfilled","_resolve","c","CancelToken$1","spread","callback","isAxiosError","payload","HttpStatusCode","HttpStatusCode$1","createInstance","defaultConfig","instance","axios","promises","axios$1","Environment","settingsNode","appSettings","Environment$1","apiBaseUrl","AxiosInstance","getAxiosInstance","fnr","getMod11","strValue","checkNbr","mod","numberRegExp","trimNumberValue","getFloatFromString","trimmedValue","replaceInvisibleCharsWithSpace","inputString","usynligeCharsRegex","capitalizeFirstLetter","convertBooleanOrUndefinedToYesOrNo","YesOrNo","convertYesOrNoOrUndefinedToBoolean","baseIteratee","require$$0","baseUniq","require$$1","uniqBy","array","iteratee","uniqBy_1","ContentWrapper","children","bem","bemUtils","jsx","objectToString","isBuiltin","wat","className","isGlobalObj","GLOBAL_OBJ","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","PREFIX","CONSOLE_LEVELS","consoleSandbox","originalConsole","wrappedLevels","level","originalWrappedFunc","makeLogger","enabled","logger","args","dropUndefinedKeys","inputValue","_dropUndefinedKeys","memoizationMap","memoVal","returnValue","item","uuid4","crypto","getRandomByte","arrayify","maybeArray","isBrowserBundle","isNodeEnv","dynamicRequire","States","RESOLVED","REJECTED","SyncPromise","onrejected","onfinally","isRejected","cachedHandlers","handler","WINDOW","dateTimestampSource","getBrowserPerformance","performance","timeOrigin","getNodePerformance","platformPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","navigationStartDelta","navigationStartIsReliable","DEFAULT_ENVIRONMENT","makeSession","startingTime","session","sessionToJSON","updateSession","duration","closeSession","DEFAULT_MAX_BREADCRUMBS","Scope","generatePropagationContext","scope","newScope","user","requestSession","tags","extras","extra","fingerprint","span","captureContext","updatedScope","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","attachment","event","hint","transaction","transactionName","getGlobalEventProcessors","newData","processors","processor","final","API_VERSION","DEFAULT_BREADCRUMBS","Hub","client","_version","top","exception","eventId","syntheticException","beforeBreadcrumb","finalBreadcrumb","oldHub","makeMain","integration","customSamplingContext","endSession","release","environment","userAgent","currentSession","sentry","getMainCarrier","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","getGlobalHub","hasHubOnCarrier","carrier","captureException","captureMessage","withScope","links","dayjs","getLanguageMessages","locale","nbMessages","nnMessages","enMessages","UiIntlProvider","useIntl","messages","useMemo","Provider","ErrorPage","appName","errorMessage","retryCallback","jsxs","VStack","Heading","FormattedMessage","Alert","BodyShort","HStack","Link","Button","Label","ErrorBoundary","Component","errorInfo","Sentry.withScope","Sentry.captureException","ErrorSummaryFp","errorRef","errors","ErrorSummary","FileInput","multiple","accept","onFilesSelect","hasUplodedAttachements","onFileSelect","useCallback","files","inputElement","useRef","openFileDialog","Fragment","UploadIcon","useCustomIntl","intl","i18nId","values","s4","guid","bytesString","Bytes","generateAttachmentId","mapFileToAttachment","file","skjemanummer","AttachmentInfo","showFileSize","onDelete","i18n","Loader","FileCheckmarkIcon","Spacer","XMarkIcon","AttachmentList","attachments","Fragment2","FileUploadError","MAX_FIL_STØRRELSE_KB","FailedAttachment","failedAttachment","FailedAttachmentList","failedAttachments","VALID_EXTENSIONS","KILOBYTES_IN_BYTE","getPendingAttachmentFromFile","attachmentType","newAttachment","fileExtensionIsValid","filename","ext","fileSizeIsValid","filesizeInB","uploadAttachment","saveAttachment","_a","EMPTY_ATTACHMENT_LIST","FileUploader","existingAttachments","updateAttachments","setAttachments","useState","useEffect","saveFiles","uploadAttachments","allPendingAttachments2","pendingAttachment","currentAttachments","allPendingAttachments","ca","pa","deleteAttachment","uploadedAttachments","StepButtons","goToPreviousStep","nextButtonText","nextButtonOnClick","isSubmitting","disabled","setDisabled","onClickNextButton","d","StepButtonWrapper","createIntlCache","createIntl","createReactIntl","useUiIntl","ScanDocumentInfo","ExpansionCard","BodyLong","logAmplitudeEvent","eventName","eventData","logToConsoleOnly","amplitude","getTitleText","appnavn","Umyndig","titleText","useDocumentTitle","GuidePanel","ArrowRightIcon","IntlProvider","messagesGroupedByLocale","UKJENT_UUID","FEIL_VED_INNSENDING","getErrorCallId","getErrorTimestamp","sendErrorMessageToSentry","errorCallId","errorTimestamp","hideNumbersAndTrim","tekst","errorString","Sentry.captureMessage","isAvailable","route","harGodkjentVilkår","SøknadRoutes","BarnetFormField","BarnetFormComponents","getTypedFormComponents","isBetween","isSameOrAfter","niMånederFremITid","dato","etÅrSiden","enMånedSiden","tiMånederSidenDato","halvannetÅrSiden","date4YearsAgo","treUkerSiden","femMånederSiden","dagenFør","getDagenFørTreUkerFørTermin","termindato","getKanHaSvpFremTilTreUkerFørTermin","barn","dagenFørTreUkerFørTermin","dagenFørFødsel","getSisteDagForSvangerskapspenger","getDefaultMonth","minDato","maxDato","minMax","TEXT_INPUT_MIN_LENGTH","TEXT_INPUT_MAX_LENGTH","hasValue","v","getMinInputTilOgMedValue","fom","otherMinDate","minDayjs","getSlutteTekst","sluttDatoArbeid","intlUtils","getInitValues","cleanupOmBarnetFormData","visibility","getBarnetInitialValues","initialOmBarnetValues","mapOmBarnetFormDataToState","getMinDatoTermin","erBarnetFødt","fødselsdato","isValidDate","BarnetFormConfig","barnetQuestionsConfig","Questions","TilretteleggingstypeOptions","Tilretteleggingstype","Arbeidsforholdstype","TilOgMedDatoType","egenNæringId","Næringstype","frilansId","getInitialVelgArbeidFormValues","tilretteleggingsBehov","getNæringTilretteleggingOption","tilrettelegginger","næring","næringTilretteleggingFraState","t","getFrilansTilretteleggingOption","frilans","frilansTilretteleggingFraState","getArbeidsforholdTilretteleggingOptions","arbeidsforhold","getUnikeArbeidsforhold","forhold","tilretteleggingFraState","mapArbeidsforholdToVelgArbeidOptions","søker","harNæring","erFrilanser","unikeArbeidsforhold","næringValg","frilansValg","validateVelgArbeidIsAnswered","cleanupOmValgArbeidFormData","tilrettelegging","getAktiveArbeidsforhold","arb","getArbeidsgiverId","getTotalStillingsprosentPåSkjæringstidspunktet","stillinger","skjæringstidspunkt","isISODateString","perioderISkjæringstidspunktet","p","ar","stillingsprosent","getStillingerForLikeArbeidsforhold","likeArbeidsforhold","aktiveArbeidsforhold","arbeid","alleTom","dateToISOString","tom","søkerHarKunEtAktivtArbeid","harEgenNæring","aktiveUnikeArbeidsforhold","søkerHarKunEttARegArbeidsforholdForTilrettelegging","formValues","getAutomatiskValgtTilretteleggingHvisKunEtArbeid","automatiskValgtTilrettelegging","getTekstOmManglendeArbeidsforhold","harJobbetIUtlandet","DelivisTilretteleggingPeriodeType","TilretteleggingFormField","TilretteleggingFormComponents","PerioderFormField","PerioderFormComponents","getValgtTilrettelegging","allTilretteleggingOptions","valgtTilrettelegging","o","mapTilretteleggingTilPeriode","getPeriodeMedHelTilretteleggingFremTilSisteSvpDag","sistePeriode","sisteDagForSvangerskapspenger","opprinneligStillingsprosent","mappedTilretteleggingMedEnPeriode","opprinneligstillingsprosent","perioder","mappedPeriode","mappedTilretteleggingMedVarierendePerioder","allePerioder","periode","sorterTilretteleggingsperioder","mapTilretteleggingTilPerioder","tilretteleggingMedEnPeriode","tilretteleggingMedVarierendePerioder","mappedTilretteleggingerMedEnPeriode","mappedTilretteleggingAvFlerePerioder","getOpprinneligStillingsprosent","getNesteDagEtterSistePeriode","formvalues","alleTomDatoer","maxTomDato","sorterePerioder","førstePeriodeFom","getMåSendeNySøknad","periodeDerSøkerErTilbakeIOpprinneligStilling","currentPeriode","getInitPerioderFormDataValues","getPerioderInitialValues","initValues","mapPerioderFormDataToState","oppdatert","getPeriodeDerSøkerErTilbakeIFullStilling","varierendePerioder","getUferdigPeriodeInput","getPeriodeSideTittel","erFlereTilrettelegginger","navn","getDescriptionTekst","kanHaSVPFremTilTreUkerFørTermin","getMinDatoTom","minDatoFom","ISOStringToDate","getInitTilretteleggingFormDataValues","getTilretteleggingInitialValues","mapOmTilretteleggingFormDataToState","tilretteleggingForOppdatering","harVariertePerioder","oppdaterteVarierendePerioder","cleanUpTilretteleggingStepFormValues","getLabelPeriodeFom","tilretteleggingType","getLabelPeriodeTomType","getLabelPeriodeTom","getMinDatoPeriodeFom","minDatoBehovFom","getMinDatoTilbakeIJobb","getTilretteleggingTypeLabel","typeArbeid","navnArbeidsgiver","getBehovForTilretteleggingFomLabel","getRadioOptionsTomType","getTilretteleggingSideTittel","SkjemaFormField","initialSkjemaFormData","SkjemaFormComponents","getInitialSkjemaValuesFromState","currentTilrettelegging","vedleggForTilrettelegging","mapTilretteleggingMedSkjema","getSkjemaLegend","getSkjemaSideTittel","stepConfigFørstegangssøknad","søknad","steps","stepConfig","getNæringRouteIfNæring","getFrilansRouteIfFrilans","getArbeidUtlandRouteIfArbeidUtland","getBackLinkForTilretteleggingSteg","currentTilretteleggingId","getBackLinkForOppsummeringSteg","sisteTilrettelegging","getBackLinkForSkjemaSteg","forrigeTilrettelegging","getForrigeTilrettelegging","getBackLinkForVelgArbeidSteg","getBackLinkPerioderSteg","getBackLinkForNæringSteg","getBackLinkForArbeidIUtlandetSteg","getBackLinkForBostedIFremtid","informasjonOmUtenlandsopphold","getBackLinkForArbeidSteg","getPreviousSetStepHref","assertUnreachable","getNextRouteForTilretteleggingSteg","nesteTilretteleggingId","getNesteTilretteleggingId","nextRoute","getNextRouteForInntektsinformasjon","getNextRouteForUtenlandsopphold","getNextRouteForBostedIFortid","getNextRouteValgAvArbeidEllerSkjema","frilansEllerNæringId","getNextRouteForFrilans","getNextRouteForNæring","validateTermindato","validateFødselsdato","etterDagensDato","useSøknad","useSvangerskapspengerContext","useAvbrytSøknad","navigate","useNavigate","dispatch","actionCreator","useSøkerinfo","Barnet","onValidSubmitHandler","barn2","handleSubmit","useOnValidSubmit","onAvbrytSøknad","minDatoTermin","Step","Block","validateYesOrNoIsAnswered","ReadMore","HarIkkeArbeidsforhold","harArbeidsforhold","HarArbeidsforhold","arbforhold","formatDate","ArbeidsforholdInformasjon","visManglerInfo","InntektsinformasjonFormField","InntektsinformasjonFormComponents","initialInntektsinformasjonFormValues","mapInntektsinformasjonFormDataToState","oppdatertFrilansInfo","oppdatertNæringInfo","oppdatertArbeidUtlandInfo","Søkerrolle","getInitialInntektsinformasjonFormValues","InfoTilFiskere","msg","InfoOmFørstegangstjeneste","HvemKanDriveMedEgenNæring","BrukerKanIkkeSøke","InfoOmArbeidIUtlandet","HvemKanVæreFrilanser","Inntektsinformasjon","setNextRoute","autoValgtTilrettelegging","setAutoValgtTilrettelegging","updatedSøker","kanIkkeSøke","UtenlandsoppholdField","initialUtenlandsoppholdFormData","UtenlandsoppholdFormComponents","getInitialUtenlandsoppholdValuesFromState","init","mapUtenlandsoppholdFormDataToState","harBoddINorgeSiste12Mnd","skalBoINorgeNeste12Mnd","oppdaterteTidligereOpphold","oppdaterteSenereOpphold","iNorgePåHendelsestidspunktet","UtenlandsoppholdFormConfig","utenlandsoppholdFormQuestions","InformasjonOmUtenlandsopphold","Utenlandsopphold","utenlandsopphold","RouterLink","useUpdateCurrentTilretteleggingId","TilretteleggingFormConfig","behovForTilretteleggingFom","delvisTilretteleggingPeriodeType","enPeriodeMedTilretteleggingFom","enPeriodeMedTilretteleggingStillingsprosent","enPeriodeMedTilretteleggingTomType","enPeriodeMedTilretteleggingTilbakeIJobbDato","arbeidsType","tilretteleggingstiltak","risikofaktorer","tilretteleggingQuestionsConfig","validerStillingsprosentInput","validateStillingsprosentPåPerioder","måSøkeSendeNySøknad","periodeDerTilbakeIFullJobb","opprinneligStillingsProsent","valideringsFeil","validateStillingsprosentEnDelvisPeriode","initValidering","validateTilretteleggingstiltak","label","validateTextInputField","validateSammePeriodeFremTilTerminFom","tilretteleggingstype","arbeidNavn","erDelvis","slutteTekst","validateSammePeriodeFremTilTerminTilbakeIJobbDato","validateBehovForTilretteleggingFom","startDatoArbeid","kanHaSvpFremTilTreUkerFørTermin","erFrilansTilrettelegging","navnTekst","validateTilrettelagtArbeidType","validerTilretteleggingTomType","validateTilretteleggingPeriodetype","finnFeilmeldingForPåkrevd","finnFeilmeldingForOverMakslengde","finnFeilmeldingForUnderMinLengde","validateRisikofaktorer","Bedriftsbanner","detailTekst","Buldings3Icon","finnRisikofaktorLabel","TilretteleggingStep","termindatoDate","mappedTilrettelegging","sideTittel","risikofaktorerLabel","tilretteleggingTypeLabel","behovForTilretteleggingFomLabel","labelTiltak","harSkjema","maxDatoBehovFom","defaultMonthBehovFomDato","labelPeriodeFomTekst","labelPeriodeTomTypeTekst","labelPeriodeTomTekst","minDatoPeriodeFom","defaultMonthPeriodeFom","minDatoTilbakeIJobb","defaultMonthTilbakeIJobb","OppsummeringFormField","initialOppsummeringValues","getInitialOppsummeringValues","OppsummeringFormComponents","validateHarGodkjentOppsummering","RequestStatus","redirect","redirectToLogin","DEFAULT_OPTIONS","useGetRequest","setData","setError","requestStatus","setRequestStatus","axiosInstance","res","sendSøknadUrl","sendSøknad","signal","Api","EgenNæringFormField","initialEgenNæringFormData","EgenNæringFormComponents","erVirksomhetRegnetSomNyoppstartet","oppstartsdato","mapEgenNæringFormValuesToState","hattVarigEndring","getInitialEgenNæringFormValues","mapNæringDataToSøkerState","cleanupEgenNæringFormData","AnnenInntektType","Søknadstype","getArbeidsforholdForInnsending","mapBostedUtlandTilDTO","mapUtenlandsOppholdForInnsending","opphold","mapBarnForInnsending","mapHelTilretteleggingForInnsending","mapDelvisTilretteleggingForInnsending","mapIngenTilretteleggingForInnsending","mapTilretteleggingPeriodeForInnsending","mappedArbeid","mapTilretteleggingerForInnsending","tilretteleggingsPerioder","mapEgenNæringForInnsending","erNyoppstartet","mappedNæring","mapFrilansForInnsending","mapArbeidIUtlandetForInnsending","mapSøkerForInnsending","mappedArbeidIUtlandet","inntekt","getSøknadForInnsending","utenlandsoppholdForInnsending","barnForInnsending","tilretteleggingForInnsending","søkerForInnsending","UtenlandsoppholdOppsummeringListe","tidligereOpphold","countries","UtenlandsoppholdOppsummering","visINorgePåHendelsestidspunktet","UtenlandsoppholdListe","FrilansVisning","frilansTekst","tilTekst","EgenNæringVisning","erNyoppstartetNæring","getCountryName","getTilTekst","ArbeidIUtlandetVisning","arbeidIUtlandet","setSelectedAnnenInntekt","deleteAnnenInntekt","PencilWritingIcon","TrashIcon","getDatoText","getStillingsprosentTekst","PeriodeVisning","labelText","stillingsprosentText","PeriodeOppsummering","AccordionContent","title","isOpen","toggleOpen","toggle","open","Accordion","visible","useAbortSignal","controller","Oppsummering","søkerinfo","formSubmitted","setFormSubmitted","isSendingSøknad","setIsSendingSøknad","submitError","setSubmitError","sendtSøknad","setSendtSøknad","abortSignal","formatertTermindato","formatertFødselsdato","allePerioderMedFomOgTom","søknadForInnsending","tilretteleggingMedFrilans","tilretteleggingMedSN","submitErrorCallId","callIdForBruker","navigateTo","navigateToMedURLParams","AccordionItem","PaperplaneIcon","getAttachmentIcon","vedlegg","ExclamationmarkTriangleIcon","FileIcon","AttachmentVisning","filstørrelseKB","handleOnClickSlett","vedlegg2","classNames","fil","AttachmentType","Skjemanummer","finnLabel","SkjemaopplastningTekstFrilansSN","SkjemaopplastningTekstArbeidsgiver","mapFilTilVedlegg","innsendingsType","alleVedlegg","att","AttachmentApi","mapFilerTilPendingVedlegg","filer","nyttVedlegg","sjekkVedlegg","alleNyeVedlegg","setErrors","erGyldigFiltype","oldState","erGyldigFilstørrelse","lastOppVedlegg","replaceFn","removeFn","antallEksisterendeVedlegg","FormikFileUploader","onFileInputClick","legend","buttonLabel","validateHasAttachment","otherProps","FormikFileInput","push","replace","remove","alleNyeGyldigeVedlegg","MAX_ANTALL_VEDLEGG","Skjema","antallForMangeVedlegg","setAntallForMangeVedlegg","submitClicked","setSubmitClicked","flereTilrettelegginger","erSNEllerFrilans","handleOnSubmit","setFieldValue","hasPendingVedlegg","disableButtons","antallVedleggAndreTilrettelegginger","tilrettelegging2","antallNyeVedlegg","antallVedlegg","FrilansFormField","FrilansFormComponents","initialFrilansFormValues","getInitialFrilansFormValues","mapFrilansDataToSøkerState","cleanupFrilansFormData","FrilansFormConfig","frilansFom","jobberFremdelesSomFrilanser","frilansSubformQuestionsConfig","validateFrilansStart","isDateInTheFuture","FrilansStep","søkerMedFrilans","tilretteleggingOptions","dateToday","date20YearsAgo","ArbeidIUtlandetFormField","ArbeidIUtlandetFormComponents","getUferdigArbeidIUtlandetInput","initialArbeidIUtlandetFormValues","mapArbeidIUtlandetTilState","getInitialArbeidIUtlandetFormData","cleanUpArbeidIUtlandetFormData","countries.registerLocale","langNB","langNN","isSameOrBefore","isDateAAfterDateB","dateA","dateB","validateArbeidIUtlandetFom","isDateABeforeDateB","validateArbeidIUtlandetTom","validateArbeidIUtlandetPågående","pågående","validateArbeidIUtlandetLand","land","validateArbeidIUtlandetNavnArbeidsgiver","navnPåArbeidsgiverLabel","HorizontalLine","ArbeidIUtlandetStep","arbeidIUtlandet2","søkerMedArbeidIUtlandet","FieldArray","arrayHelpers","date5MonthsAgo","PlusIcon","VelgArbeidFormField","VelgArbeidFormComponents","FlereArbeidsforholdGuidePanel","PageKeys","VelgArbeid","setValgtTilrettelegging","visInfo","tilretteleggingValg","førsteTilretteleggingId","visVarigEndringInput","egenNæringFom","egenNæringHattVarigEndringDeSiste4Årene","EgenNæringSubformConfig","egenNæringType","egenNæringNavn","egenNæringRegistrertINorge","egenNæringLand","egenNæringPågående","egenNæringTom","egenNæringResultat","egenNæringBlittYrkesaktivDe3SisteÅrene","egenNæringYrkesAktivDato","egenNæringVarigEndringDato","egenNæringVarigEndringBeskrivelse","egenNæringVarigEndringInntektEtterEndring","egenNæringFormQuestionsConfig","onlyNumbersRegExp","er9Tall","orgnr","starterPå8Eller9","erGyldigNorskOrgnummer","validateEgenNæringFom","validateEgenNæringTom","validateEgenNæringOrgnr","trimmedOrgNr","containsWhiteSpace","validateEgenNæringYrkesAktivDatoDato","validateEgenNæringResultat","valueNumber","getNumberFromNumberInputValue","validateEgenNæringVarigEndringDato","endringDato","validateEgenNæringVarigEndringInntekt","validateStringAsNumberInput","validateEgenNæringVarigEndringBeskrivelse","validateEgenNæringNavn","validateEgenNæringLand","OrgnummerEllerLand","VarigEndringSpørsmål","egenNæringVarigEndringBeskrivelseLabel","EgenNæringStep","søkerMedNæring","navnPåNæringLabel","getUferdigBostedUtlandInput","getErINorgePåFamiliehendelsedato","familiehendelsedato","senereOpphold","erINorge","tidOpphold","senOpphold","getInitialBostedIUtlandetFormData","bostedIUtlandet","initialBoIUtlandetFormData","mapBostedUtland","oppgirIFortid","mappedUtenlandsopphold","bosted","getMinValueTomInput","datobegrensning","BoIUtlandetFormField","BoIUtlandetFormComponents","validerDatoOverlapperAndreUtenlandsperioder","utenlandsperioder","currentOppholdIndex","isFraOgMedDato","overlappendePerioder","_t","tp","validateBostedUtlandFom","alleOpphold","date1YearFromNow","validateBostedUtlandTom","date1YearAgo","validateBostedUtlandLand","BoIUtlandet","backLink","spmTekst","stepId","pageTitle","utenlandsopphold2","_opphold","SøknadSendt","overlapperTidsperioder","t1","t2","getTidsperiode","validatePeriodeFom","tomType","overlappendePerioderFeil","validateAtPeriodeIkkeOverlapper","validateSammenhengendePerioderFom","validatePeriodeTom","validatePeriodeTomType","_p","periodeTom","tilOgMedDato","alleFom","minstAvAlleFom","getPeriodeInfoTekst","tomDato","PerioderStep","aktiveStillinger","descriptionTekst","defaultMonthFom","uferdigDelvisTilretteleggingInput","måSendeNySøknad","minDatoTom","defaultMonthTom","Tag","tilretteleggingBehov","forrigeTilretteleggingIndex","nesteTilretteleggingIndex","getSkjemaRoutes","Route","getPerioderRoutes","getTilretteleggingRoutes","renderSøknadRoutes","Navigate","SvangerskapspengesøknadRoutes","currentRoute","onChangeLocale","isFirstTimeLoadingApp","setIsFirstTimeLoadingApp","Routes","Forside"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63]}