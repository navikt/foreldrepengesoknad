{"version":3,"file":"Svangerskapspenges√∏knadRoutes-178ff05b.js","sources":["../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/bind.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/utils.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/AxiosError.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/null.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/toFormData.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/buildURL.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/InterceptorManager.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/defaults/transitional.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/classes/FormData.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/classes/Blob.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/browser/index.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/common/utils.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/platform/index.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/toURLEncodedForm.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/formDataToJSON.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/defaults/index.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/parseHeaders.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/AxiosHeaders.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/transformData.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/cancel/isCancel.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/cancel/CanceledError.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/settle.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/cookies.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/combineURLs.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/buildFullPath.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/parseProtocol.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/speedometer.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/adapters/xhr.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/adapters/adapters.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/dispatchRequest.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/mergeConfig.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/env/data.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/validator.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/core/Axios.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/cancel/CancelToken.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/spread.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/isAxiosError.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/helpers/HttpStatusCode.js","../../../../node_modules/.pnpm/axios@1.6.1/node_modules/axios/lib/axios.js","../../src/app/Environment.ts","../../src/app/api/apiInterceptor.ts","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionContext.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionItem.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionContent.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/Buldings3.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/ExclamationmarkTriangle.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/File.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/FileCheckmark.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/Paperplane.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/PencilWriting.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/Plus.js","../../../../node_modules/.pnpm/@navikt+aksel-icons@5.12.0/node_modules/@navikt/aksel-icons/dist/react/esm/Trash.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionHeader.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/Accordion.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/date/utils/check-dates.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/expansion-card/context.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/expansion-card/ExpansionCardContent.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/expansion-card/ExpansionCardDescription.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/expansion-card/ExpansionCardHeader.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/expansion-card/ExpansionCardTitle.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/expansion-card/ExpansionCard.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/tag/Tag.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/layout/utilities/css.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/layout/stack/Stack.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/layout/stack/HStack.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/layout/stack/VStack.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/layout/stack/Spacer.js","../../../../packages/fp-common/src/common/utils/numberUtils.ts","../../../../packages/fp-common/src/common/utils/stringUtils.ts","../../../../packages/fp-common/src/common/utils/formUtils.ts","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/uniqBy.js","../../../../packages/ui/src/contentWrapper/ContentWrapper.tsx","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/is.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/worldwide.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/logger.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/object.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/misc.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/env.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/node.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/syncpromise.js","../../../../node_modules/.pnpm/@sentry+utils@7.64.0/node_modules/@sentry/utils/esm/time.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/constants.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/session.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/scope.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/hub.js","../../../../node_modules/.pnpm/@sentry+core@7.64.0/node_modules/@sentry/core/esm/exports.js","../../../../packages/constants/src/links.ts","../../../../packages/constants/src/dates.ts","../../../../packages/ui/src/i18n/ui/UiIntlProvider.tsx","../../../../packages/ui/src/error/ErrorPage.tsx","../../../../packages/ui/src/error/ErrorBoundary.tsx","../../../../packages/ui/src/error/ErrorSummaryFp.tsx","../../../../packages/ui/src/fileUploader/input/FileInput.tsx","../../../../packages/ui/src/i18n/useCustomI18n.ts","../../../../packages/ui/src/fileUploader/fileUtils.ts","../../../../packages/ui/src/fileUploader/liste/AttachmentInfo.tsx","../../../../packages/ui/src/fileUploader/liste/AttachmentList.tsx","../../../../packages/ui/src/fileUploader/typer/FileUploadError.ts","../../../../packages/ui/src/fileUploader/liste/FailedAttachment.tsx","../../../../packages/ui/src/fileUploader/liste/FailedAttachmentList.tsx","../../../../packages/ui/src/fileUploader/FileUploader.tsx","../../../../packages/ui/src/step/StepButtons.tsx","../../../../packages/ui/src/i18n/ui/useUiIntl.ts","../../../../packages/ui/src/scanDocumentInfo/ScanDocumentInfo.tsx","../../../../packages/metrics/src/amplitude.ts","../../../../packages/ui/src/umyndig/Umyndig.tsx","../../../../packages/ui/src/i18n/IntlProvider.tsx","../../src/app/utils/errorUtils.ts","../../src/app/routes/isAvailable.ts","../../src/app/steps/barnet/barnetFormConfig.ts","../../src/app/utils/dateUtils.ts","../../src/app/utils/validationUtils.ts","../../src/app/steps/barnet/barnetUtils.ts","../../src/app/steps/barnet/barnetQuestionsConfig.ts","../../src/app/types/Tilrettelegging.ts","../../src/app/types/EgenN√¶ring.ts","../../src/app/types/Frilans.ts","../../src/app/steps/velg-arbeidsforhold/velgArbeidFormUtils.ts","../../src/app/utils/arbeidsforholdUtils.ts","../../src/app/steps/tilrettelegging/tilretteleggingStepFormConfig.ts","../../src/app/steps/perioder/perioderStepFormConfig.ts","../../src/app/utils/tilretteleggingUtils.ts","../../src/app/utils/numberUtils.ts","../../src/app/steps/perioder/perioderStepUtils.ts","../../src/app/steps/tilrettelegging/tilretteleggingStepUtils.ts","../../src/app/steps/skjema/skjemaFormTypes.ts","../../src/app/steps/skjema/skjemaFormUtils.ts","../../src/app/steps/stepsConfig.ts","../../src/app/steps/barnet/barnetValidering.ts","../../src/app/utils/hooks/useS√∏knad.ts","../../src/app/utils/hooks/useAvbrytS√∏knad.ts","../../src/app/utils/hooks/useS√∏kerinfo.ts","../../src/app/steps/barnet/Barnet.tsx","../../src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarIkkeArbeidsforhold.tsx","../../src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/HarArbeidsforhold.tsx","../../src/app/steps/inntektsinformasjon/components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon.tsx","../../src/app/steps/inntektsinformasjon/inntektsinformasjonFormConfig.ts","../../src/app/steps/inntektsinformasjon/inntektsinformasjonFormUtils.ts","../../src/app/steps/inntektsinformasjon/components/info-til-fiskere/InfoTilFiskere.tsx","../../src/app/steps/inntektsinformasjon/components/info-om-f√∏rstegangstjeneste/InfoOmF√∏rstegangstjeneste.tsx","../../src/app/steps/inntektsinformasjon/components/hvem-kan-drive-egen-n√¶ring/HvemKanDriveMedEgenN√¶ring.tsx","../../src/app/steps/inntektsinformasjon/components/bruker-kan-ikke-s√∏ke/BrukerKanIkkeS√∏ke.tsx","../../src/app/steps/inntektsinformasjon/components/info-om-arbeid-i-utlandet/InfoOmArbeidIUtlandet.tsx","../../src/app/steps/inntektsinformasjon/components/hvem-kan-v√¶re-frilanser/HvemKanV√¶reFrilanser.tsx","../../src/app/steps/inntektsinformasjon/Inntektsinformasjon.tsx","../../src/app/steps/utenlandsopphold/utenlandsoppholdFormTypes.ts","../../src/app/steps/utenlandsopphold/utenlandsoppholdFormUtils.ts","../../src/app/steps/utenlandsopphold/utenlandsoppholdFormQuestions.ts","../../src/app/steps/utenlandsopphold/components/InformasjonOmUtenlandsopphold.tsx","../../src/app/steps/utenlandsopphold/Utenlandsopphold.tsx","../../src/app/utils/hooks/useUpdateCurrentTilretteleggingId.ts","../../src/app/steps/tilrettelegging/tilretteleggingStepQuestionsConfig.ts","../../src/app/steps/tilrettelegging/tilretteleggingValidation.ts","../../src/app/components/bedriftsbanner/Bedriftsbanner.tsx","../../src/app/steps/tilrettelegging/TilretteleggingStep.tsx","../../src/app/steps/oppsummering/oppsummeringFormConfig.ts","../../src/app/steps/oppsummering/validation/oppsummeringValidation.ts","../../src/app/types/RequestStatus.ts","../../src/app/utils/redirectUtils.ts","../../src/app/utils/hooks/useGetRequest.ts","../../src/app/api/api.ts","../../src/app/steps/egen-n√¶ring/egenN√¶ringFormConfig.ts","../../src/app/steps/egen-n√¶ring/egenN√¶ringFormUtils.ts","../../src/app/types/ArbeidIUtlandet.ts","../../src/app/types/S√∏knad.ts","../../src/app/utils/apiUtils.ts","../../src/app/steps/oppsummering/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummeringListe.tsx","../../src/app/steps/oppsummering/utenlandsopphold-oppsummering/UtenlandsoppholdOppsummering.tsx","../../src/app/components/frilans-visning/FrilansVisning.tsx","../../src/app/components/egen-n√¶ring-visning/EgenN√¶ringVisning.tsx","../../src/app/components/arbeid-i-utlandet-visning/ArbeidIUtlandetVisning.tsx","../../src/app/components/periode-visning/PeriodeVisning.tsx","../../src/app/steps/oppsummering/periode-oppsummering/PeriodeOppsummering.tsx","../../src/app/components/accordion/AccordionItem.tsx","../../src/app/components/accordion/AccordionContent.tsx","../../../../packages/api/src/useAbortSignal.ts","../../../../packages/api/src/attachmentApi.ts","../../src/app/steps/oppsummering/Oppsummering.tsx","../../src/app/components/attachment-visning.tsx/AttachmentVisning.tsx","../../src/app/components/attachment-list/AttachmentList.tsx","../../src/app/types/AttachmentType.ts","../../src/app/types/Skjemanummer.ts","../../src/app/steps/skjema/components/SkjemaopplastningTekstFrilansSN.tsx","../../src/app/steps/skjema/components/SkjemaopplastningTekstArbeidsgiver.tsx","../../src/app/utils/attachmentUtils.ts","../../src/app/api/attachmentApi.ts","../../src/app/components/formik-file-uploader/FormikFileUploader.tsx","../../src/app/steps/skjema/Skjema.tsx","../../src/app/steps/frilans/frilansFormConfig.ts","../../src/app/steps/frilans/frilansFormUtils.ts","../../src/app/steps/frilans/frilansFormQuestionsConfig.ts","../../src/app/steps/frilans/frilansValidation.ts","../../src/app/steps/frilans/FrilansStep.tsx","../../src/app/steps/arbeid-i-utlandet/arbeidIUtlandetFormConfig.ts","../../src/app/steps/arbeid-i-utlandet/arbeidIUtlandetFormUtils.ts","../../../../packages/utils/src/countryUtils.ts","../../../../packages/utils/src/dateUtils.ts","../../src/app/steps/arbeid-i-utlandet/arbeidIUtlandetValidation.ts","../../src/app/components/horizontal-line/HorizontalLine.tsx","../../src/app/steps/arbeid-i-utlandet/ArbeidIUtlandetStep.tsx","../../src/app/steps/velg-arbeidsforhold/velgArbeidFormConfig.ts","../../src/app/steps/velg-arbeidsforhold/components/guidepanel/FlereArbeidsforholdGuidePanel.tsx","../../src/app/steps/velg-arbeidsforhold/VelgArbeid.tsx","../../src/app/steps/egen-n√¶ring/egenN√¶ringFormQuestions.ts","../../../../packages/fp-common/src/common/utils/organisasjonUtils.ts","../../src/app/steps/egen-n√¶ring/egenN√¶ringValidation.ts","../../src/app/components/egen-n√¶ring-visning/OrgnummerEllerLand.tsx","../../src/app/steps/egen-n√¶ring/components/VarigEndringSp√∏rsm√•l.tsx","../../src/app/steps/egen-n√¶ring/EgenN√¶ringStep.tsx","../../src/app/steps/bo-i-utlandet/boIUtlandetFormUtils.ts","../../src/app/steps/bo-i-utlandet/boIUtlandetFormConfig.ts","../../src/app/steps/bo-i-utlandet/boIUtlandetValidering.ts","../../src/app/steps/bo-i-utlandet/BoIUtlandet.tsx","../../src/app/pages/s√∏knad-sendt/S√∏knadSendt.tsx","../../src/app/utils/tidsperiodeUtils.ts","../../src/app/steps/perioder/perioderValidation.ts","../../src/app/utils/perioderUtils.ts","../../src/app/steps/perioder/PerioderStep.tsx","../../src/app/routes/Svangerskapspenges√∏knadRoutes.tsx"],"sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.hasStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.1\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","const Environment = () => {\n    const settingsNode = document.getElementById('nav:appSettings') as HTMLScriptElement;\n    const appSettings = JSON.parse(settingsNode.text);\n\n    return {\n        REST_API_URL: appSettings.REST_API_URL,\n        LOGIN_URL: appSettings.LOGIN_URL,\n        LOG_VALIDATION: appSettings.LOG_VALIDATION,\n        INNSYN: appSettings.INNSYN,\n    };\n};\n\nexport default Environment();\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport Environment from 'app/Environment';\n\nconst apiBaseUrl = Environment.REST_API_URL;\n\nexport const AxiosInstance = axios.create({ baseURL: apiBaseUrl });\n\nconst getAxiosInstance = (fnr?: string) => {\n    AxiosInstance.interceptors.request.use((config) => {\n        config.timeout = 60 * 1000;\n\n        if (process.env.NODE_ENV !== 'development' && fnr) {\n            config.headers!.fnr = fnr;\n        }\n        return config;\n    });\n\n    AxiosInstance.interceptors.response.use(\n        (response: AxiosResponse) => {\n            return response;\n        },\n        (response: AxiosError) => {\n            return Promise.reject(response);\n        }\n    );\n\n    return AxiosInstance;\n};\n\nexport default getAxiosInstance;\n","import { createContext } from \"react\";\nexport const AccordionContext = createContext({\n    headingSize: \"small\",\n    size: \"medium\",\n    openItems: [],\n    mounted: false,\n});\n//# sourceMappingURL=AccordionContext.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { createContext, forwardRef, useContext, useRef, useState, } from \"react\";\nimport { AccordionContext } from \"./AccordionContext\";\nimport { omit } from \"../util\";\nexport const AccordionItemContext = createContext(null);\nconst AccordionItem = forwardRef((_a, ref) => {\n    var { children, className, open, defaultOpen = false } = _a, rest = __rest(_a, [\"children\", \"className\", \"open\", \"defaultOpen\"]);\n    const [internalOpen, setInternalOpen] = useState(defaultOpen);\n    const context = useContext(AccordionContext);\n    const [_open, _setOpen] = useState(defaultOpen);\n    const shouldAnimate = useRef(!(Boolean(open) || defaultOpen));\n    const handleOpen = () => {\n        if (open === undefined) {\n            const newOpen = !_open;\n            _setOpen(newOpen);\n            setInternalOpen(newOpen);\n        }\n        else {\n            setInternalOpen(!open);\n        }\n        shouldAnimate.current = true;\n    };\n    if (!(context === null || context === void 0 ? void 0 : context.mounted)) {\n        console.error(\"<Accordion.Item> has to be used within an <Accordion>\");\n    }\n    return (React.createElement(\"div\", Object.assign({ className: cl(\"navds-accordion__item\", className, {\n            \"navds-accordion__item--open\": open !== null && open !== void 0 ? open : internalOpen,\n            \"navds-accordion__item--neutral\": (context === null || context === void 0 ? void 0 : context.variant) === \"neutral\",\n            \"navds-accordion__item--no-animation\": !shouldAnimate.current,\n        }), ref: ref }, omit(rest, [\"onClick\"])),\n        React.createElement(AccordionItemContext.Provider, { value: {\n                open: open !== null && open !== void 0 ? open : internalOpen,\n                toggleOpen: handleOpen,\n            } }, children)));\n});\nexport default AccordionItem;\n//# sourceMappingURL=AccordionItem.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { BodyLong } from \"../typography\";\nimport { AccordionItemContext } from \"./AccordionItem\";\nconst AccordionContent = forwardRef((_a, ref) => {\n    var { children, className } = _a, rest = __rest(_a, [\"children\", \"className\"]);\n    const context = useContext(AccordionItemContext);\n    if (context === null) {\n        console.error(\"<Accordion.Content> has to be used within an <Accordion.Item>\");\n        return null;\n    }\n    return (React.createElement(BodyLong, Object.assign({}, rest, { as: \"div\", ref: ref, className: cl(\"navds-accordion__content\", {\n            \"navds-accordion__content--closed\": !context.open,\n        }, className), \"aria-hidden\": !context.open || undefined }), children));\n});\nexport default AccordionContent;\n//# sourceMappingURL=AccordionContent.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgBuldings3 = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M6.25 3A.75.75 0 0 1 7 2.25h10a.75.75 0 0 1 .75.75v6.25H21a.75.75 0 0 1 .75.75v11a.75.75 0 0 1-.75.75H3a.75.75 0 0 1-.75-.75V10A.75.75 0 0 1 3 9.25h3.25V3Zm11.5 17.25v-9.5h2.5v9.5h-2.5Zm-1.5-16.5v16.5h-8.5V3.75h8.5Zm-10 7v9.5h-2.5v-9.5h2.5Zm3.75-5a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 1 .75-.75Zm3 0a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 1 .75-.75Zm-2.25 6.75a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0v-2Zm2.25-.75a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 1 .75-.75Z\", fill: \"currentColor\" })));\n});\nexport default SvgBuldings3;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgExclamationmarkTriangle = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M12 2.25a.75.75 0 0 1 .656.387l9.527 17.25A.75.75 0 0 1 21.526 21H2.474a.75.75 0 0 1-.657-1.113l9.527-17.25A.75.75 0 0 1 12 2.25Zm8.255 17.25L12 4.551 3.745 19.5h16.51ZM12 8.75a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-4a.75.75 0 0 1 .75-.75Zm0 6.75a1 1 0 1 0 0 2 1 1 0 0 0 0-2Z\", fill: \"currentColor\" })));\n});\nexport default SvgExclamationmarkTriangle;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgFile = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M6.5 3.25c-.69 0-1.25.56-1.25 1.25v15c0 .69.56 1.25 1.25 1.25h11c.69 0 1.25-.56 1.25-1.25V8a.75.75 0 0 0-.22-.53l-4-4a.75.75 0 0 0-.53-.22H6.5Zm6.75 4.25c0 .69.56 1.25 1.25 1.25h2.75v10.5H6.75V4.75h6.5V7.5Zm2.94-.25-1.44-1.44v1.44h1.44Z\", fill: \"currentColor\" })));\n});\nexport default SvgFile;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgFileCheckmark = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M5.25 4.5c0-.69.56-1.25 1.25-1.25H14a.75.75 0 0 1 .53.22l4 4c.141.14.22.331.22.53v11.5c0 .69-.56 1.25-1.25 1.25h-11c-.69 0-1.25-.56-1.25-1.25v-15Zm9.25 4.25c-.69 0-1.25-.56-1.25-1.25V4.75h-6.5v14.5h10.5V8.75H14.5Zm.25-2.94 1.44 1.44h-1.44V5.81Zm-.22 7.22a.75.75 0 1 0-1.06-1.06l-1.97 1.97-.97-.97a.75.75 0 1 0-1.06 1.06l1.5 1.5a.75.75 0 0 0 1.06 0l2.5-2.5Z\", fill: \"currentColor\" })));\n});\nexport default SvgFileCheckmark;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgPaperplane = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M6.317 4.32a.75.75 0 0 0-1.023.932L7.704 12l-2.41 6.748a.75.75 0 0 0 1.023.932l15-7a.75.75 0 0 0 0-1.36l-15-7Zm2.712 6.93L7.31 6.44 19.227 12 7.31 17.56l1.719-4.81H12.5a.75.75 0 0 0 0-1.5H9.029Z\", fill: \"currentColor\" })));\n});\nexport default SvgPaperplane;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgPencilWriting = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M14.97 4.47a3.198 3.198 0 0 1 4.562.001c1.26 1.27 1.268 3.368-.002 4.637l-8.5 8.5a.75.75 0 0 1-.38.204l-4.5.922a.75.75 0 0 1-.882-.897l1-4.5a.75.75 0 0 1 .202-.367l8.5-8.5Zm3.498 1.058a1.698 1.698 0 0 0-2.438.002l-.97.97 2.479 2.478.93-.93c.68-.68.681-1.832-.001-2.52ZM7.685 13.876 14 7.56l2.478 2.478-6.35 6.35-3.145.644.702-3.157ZM3.5 20.25a.75.75 0 0 0 0 1.5h17a.75.75 0 0 0 0-1.5h-17Z\", fill: \"currentColor\" })));\n});\nexport default SvgPencilWriting;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgPlus = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { d: \"M12.75 5.5a.75.75 0 0 0-1.5 0v5.75H5.5a.75.75 0 0 0 0 1.5h5.75v5.75a.75.75 0 0 0 1.5 0v-5.75h5.75a.75.75 0 0 0 0-1.5h-5.75V5.5Z\", fill: \"currentColor\" })));\n});\nexport default SvgPlus;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgTrash = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.5 6.25a.75.75 0 0 0 0 1.5h.805l.876 11.384a1.75 1.75 0 0 0 1.745 1.616h8.148a1.75 1.75 0 0 0 1.745-1.616l.876-11.384h.805a.75.75 0 0 0 0-1.5h-2.75V6A2.75 2.75 0 0 0 14 3.25h-4A2.75 2.75 0 0 0 7.25 6v.25H4.5Zm5.5-1.5c-.69 0-1.25.56-1.25 1.25v.25h6.5V6c0-.69-.56-1.25-1.25-1.25h-4Zm-3.19 3 .867 11.27c.01.13.118.23.249.23h8.148c.13 0 .24-.1.25-.23l.866-11.27H6.81Zm3.19 2a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0v-6a.75.75 0 0 1 .75-.75Zm4 0a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0v-6a.75.75 0 0 1 .75-.75Z\", fill: \"currentColor\" })));\n});\nexport default SvgTrash;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChevronDownIcon } from \"@navikt/aksel-icons\";\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { Heading } from \"../typography\";\nimport { AccordionContext } from \"./AccordionContext\";\nimport { AccordionItemContext } from \"./AccordionItem\";\nconst AccordionHeader = forwardRef((_a, ref) => {\n    var _b;\n    var { children, className, onClick } = _a, rest = __rest(_a, [\"children\", \"className\", \"onClick\"]);\n    const itemContext = useContext(AccordionItemContext);\n    const accordionContext = useContext(AccordionContext);\n    if (itemContext === null) {\n        console.error(\"<Accordion.Header> has to be used within an <Accordion.Item>, which in turn must be within an <Accordion>\");\n        return null;\n    }\n    return (React.createElement(\"button\", Object.assign({ ref: ref }, rest, { className: cl(\"navds-accordion__header\", className), onClick: (e) => {\n            itemContext.toggleOpen();\n            onClick && onClick(e);\n        }, \"aria-expanded\": itemContext.open, type: \"button\" }),\n        React.createElement(\"span\", { className: \"navds-accordion__icon-wrapper\" },\n            React.createElement(ChevronDownIcon, { className: \"navds-accordion__header-chevron\", title: \"Vis mer\", \"aria-hidden\": true })),\n        React.createElement(Heading, { size: (_b = accordionContext === null || accordionContext === void 0 ? void 0 : accordionContext.headingSize) !== null && _b !== void 0 ? _b : \"small\", as: \"span\", className: \"navds-accordion__header-content\" }, children)));\n});\nexport default AccordionHeader;\n//# sourceMappingURL=AccordionHeader.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef } from \"react\";\nimport AccordionItem from \"./AccordionItem\";\nimport AccordionContent from \"./AccordionContent\";\nimport AccordionHeader from \"./AccordionHeader\";\nimport { AccordionContext } from \"./AccordionContext\";\n/**\n * A component that displays collapsible content sections.\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/accordion)\n * @see üè∑Ô∏è {@link AccordionProps}\n *\n * @example\n * ```jsx\n * <Accordion>\n *   <Accordion.Item>\n *     <Accordion.Header>Section 1</Accordion.Header>\n *     <Accordion.Content>Content 1</Accordion.Content>\n *   </Accordion.Item>\n *   <Accordion.Item>\n *     <Accordion.Header>Section 2</Accordion.Header>\n *     <Accordion.Content>Content 2</Accordion.Content>\n *   </Accordion.Item>\n * </Accordion>\n * ```\n */\nexport const Accordion = forwardRef((_a, ref) => {\n    var { className, variant = \"default\", headingSize = \"small\", size = \"medium\", indent = true } = _a, rest = __rest(_a, [\"className\", \"variant\", \"headingSize\", \"size\", \"indent\"]);\n    return (React.createElement(AccordionContext.Provider, { value: {\n            variant,\n            headingSize,\n            size,\n            mounted: true,\n        } },\n        React.createElement(\"div\", Object.assign({}, rest, { className: cl(\"navds-accordion\", className, `navds-accordion--${size}`, { \"navds-accordion--indent\": indent }), ref: ref }))));\n});\nAccordion.Header = AccordionHeader;\nAccordion.Content = AccordionContent;\nAccordion.Item = AccordionItem;\nexport default Accordion;\n//# sourceMappingURL=Accordion.js.map","import setYear from \"date-fns/setYear\";\nimport isThisMonth from \"date-fns/isThisMonth\";\nexport const dateIsInCurrentMonth = (date, dateToCompare) => {\n    return isThisMonth(setYear(date, Number(dateToCompare.getFullYear())));\n};\n/** @private */\nexport function isValidDate(day) {\n    return day && !isNaN(day === null || day === void 0 ? void 0 : day.getTime()) && day.getFullYear() > 999;\n}\n//# sourceMappingURL=check-dates.js.map","import { createContext } from \"react\";\nexport const ExpansionCardContext = createContext({\n    open: false,\n    toggleOpen: () => { },\n    size: \"medium\",\n});\n//# sourceMappingURL=context.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { BodyLong } from \"../typography\";\nimport { ExpansionCardContext } from \"./context\";\nconst ExpansionCardContent = forwardRef((_a, ref) => {\n    var { children, className } = _a, rest = __rest(_a, [\"children\", \"className\"]);\n    const panelContext = useContext(ExpansionCardContext);\n    if (panelContext === null) {\n        console.error(\"<ExpansionCard.Content> has to be used within an <ExpansionCard>\");\n        return null;\n    }\n    return (React.createElement(BodyLong, Object.assign({}, rest, { ref: ref, as: \"div\", className: cl(\"navds-expansioncard__content\", className, {\n            \"navds-expansioncard__content--closed\": !panelContext.open,\n        }), \"aria-hidden\": !panelContext.open, size: panelContext.size }),\n        React.createElement(\"div\", { className: \"navds-expansioncard__content-inner\" }, children)));\n});\nexport default ExpansionCardContent;\n//# sourceMappingURL=ExpansionCardContent.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { BodyLong } from \"../typography\";\nimport { ExpansionCardContext } from \"./context\";\nexport const ExpansionCardDescription = forwardRef((_a, ref) => {\n    var { className } = _a, rest = __rest(_a, [\"className\"]);\n    const panelContext = useContext(ExpansionCardContext);\n    if (panelContext === null) {\n        console.error(\"<ExpansionCard.Description> has to be used within an <ExpansionCard>\");\n        return null;\n    }\n    return (React.createElement(BodyLong, Object.assign({}, rest, { as: \"p\", ref: ref, className: cl(\"navds-link-panel__description\", className), size: panelContext.size })));\n});\n//# sourceMappingURL=ExpansionCardDescription.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChevronDownIcon } from \"@navikt/aksel-icons\";\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { ExpansionCardContext } from \"./context\";\nconst ExpansionCardHeader = forwardRef((_a, ref) => {\n    var { children, className } = _a, rest = __rest(_a, [\"children\", \"className\"]);\n    const panelContext = useContext(ExpansionCardContext);\n    if (panelContext === null) {\n        console.error(\"<ExpansionCard.Header> has to be used within an <ExpansionCard>\");\n        return null;\n    }\n    return (React.createElement(\"div\", Object.assign({ ref: ref }, rest, { className: cl(\"navds-expansioncard__header\", className) }),\n        React.createElement(\"div\", { className: \"navds-expansioncard__header-content\" }, children),\n        React.createElement(\"button\", { className: \"navds-expansioncard__header-button\", onClick: () => panelContext.toggleOpen(), type: \"button\", \"aria-expanded\": panelContext.open },\n            React.createElement(ChevronDownIcon, { className: \"navds-expansioncard__header-chevron\", title: \"Vis mer\" }))));\n});\nexport default ExpansionCardHeader;\n//# sourceMappingURL=ExpansionCardHeader.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef } from \"react\";\nexport const ExpansionCardTitle = forwardRef((_a, ref) => {\n    var { className, as: Component = \"h3\", size = \"medium\" } = _a, rest = __rest(_a, [\"className\", \"as\", \"size\"]);\n    return (React.createElement(Component, Object.assign({}, rest, { ref: ref, className: cl(\"navds-expansioncard__title\", `navds-expansioncard__title--${size}`, \"navds-heading\", `navds-heading--${size}`, className) })));\n});\n//# sourceMappingURL=ExpansionCardTitle.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef, useRef, useState } from \"react\";\nimport ExpansionCardContent from \"./ExpansionCardContent\";\nimport { ExpansionCardDescription, } from \"./ExpansionCardDescription\";\nimport ExpansionCardHeader from \"./ExpansionCardHeader\";\nimport { ExpansionCardTitle, } from \"./ExpansionCardTitle\";\nimport { ExpansionCardContext } from \"./context\";\n/**\n * A component that displays an expandable card.\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/expansioncard)\n * @see üè∑Ô∏è {@link ExpansionCardProps}\n *\n * @example\n * ```jsx\n * <ExpansionCard aria-label=\"default-demo\">\n *   <ExpansionCard.Header>\n *     <ExpansionCard.Title>Utbetaling av sykepenger</ExpansionCard.Title>\n *   </ExpansionCard.Header>\n *   <ExpansionCard.Content>\n *     <Innhold />\n *   </ExpansionCard.Content>\n * </ExpansionCard>\n * ```\n */\nexport const ExpansionCard = forwardRef((_a, ref) => {\n    var { className, onToggle, open, defaultOpen = false, size = \"medium\" } = _a, rest = __rest(_a, [\"className\", \"onToggle\", \"open\", \"defaultOpen\", \"size\"]);\n    const [_open, _setOpen] = useState(defaultOpen);\n    const shouldFade = useRef(!(Boolean(open) || defaultOpen));\n    const handleOpen = () => {\n        if (open === undefined) {\n            const newOpen = !_open;\n            _setOpen(newOpen);\n            onToggle === null || onToggle === void 0 ? void 0 : onToggle(newOpen);\n        }\n        else {\n            onToggle === null || onToggle === void 0 ? void 0 : onToggle(!open);\n        }\n        shouldFade.current = true;\n    };\n    return (React.createElement(ExpansionCardContext.Provider, { value: { open: open !== null && open !== void 0 ? open : _open, toggleOpen: handleOpen, size } },\n        React.createElement(\"section\", Object.assign({}, rest, { className: cl(\"navds-expansioncard\", className, `navds-expansioncard--${size}`, {\n                \"navds-expansioncard--open\": open !== null && open !== void 0 ? open : _open,\n                \"navds-expansioncard--no-animation\": !shouldFade.current,\n            }), ref: ref }))));\n});\nExpansionCard.Header = ExpansionCardHeader;\nExpansionCard.Content = ExpansionCardContent;\nExpansionCard.Title = ExpansionCardTitle;\nExpansionCard.Description = ExpansionCardDescription;\nexport default ExpansionCard;\n//# sourceMappingURL=ExpansionCard.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cl from \"clsx\";\nimport { BodyShort } from \"../typography\";\n/**\n * A component that displays a small label with a text and a background color.\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/tag)\n * @see üè∑Ô∏è {@link TagProps}\n *\n * @example\n * ```jsx\n * <Tag variant=\"success\">Success</Tag>\n * ```\n */\nexport const Tag = forwardRef((_a, ref) => {\n    var { className, variant, size = \"medium\" } = _a, rest = __rest(_a, [\"className\", \"variant\", \"size\"]);\n    return (React.createElement(BodyShort, Object.assign({}, rest, { ref: ref, as: \"span\", size: size === \"medium\" ? \"medium\" : \"small\", className: cl(\"navds-tag\", className, `navds-tag--${variant}`, `navds-tag--${size}`) })));\n});\nexport default Tag;\n//# sourceMappingURL=Tag.js.map","export function getResponsiveValue(componentName, componentProp, responsiveProp) {\n    if (!responsiveProp) {\n        return {};\n    }\n    if (typeof responsiveProp === \"string\") {\n        return {\n            [`--__ac-${componentName}-${componentProp}-xs`]: responsiveProp,\n        };\n    }\n    return Object.fromEntries(Object.entries(responsiveProp).map(([breakpointAlias, responsiveValue]) => [\n        `--__ac-${componentName}-${componentProp}-${breakpointAlias}`,\n        responsiveValue,\n    ]));\n}\nconst translateExceptionToCSS = (exception) => {\n    switch (exception) {\n        case \"px\":\n            return \"1px\";\n    }\n    return exception;\n};\nconst translateTokenStringToCSS = (componentProp, tokenString, tokenSubgroup, tokenExceptions, invert) => {\n    return tokenString\n        .split(\" \")\n        .map((x, _, arr) => {\n        if (componentProp === \"margin-inline\" && x === \"full\") {\n            const width = 100 / arr.length;\n            return `calc((100vw - ${width}%)/-2)`;\n        }\n        let output = `var(--a-${tokenSubgroup}-${x})`;\n        if (tokenExceptions.includes(x)) {\n            output = translateExceptionToCSS(x);\n        }\n        if (invert) {\n            if (x === \"0\") {\n                return `0`;\n            }\n            return `calc(-1 * ${output})`;\n        }\n        return output;\n    })\n        .join(\" \");\n};\nexport function getResponsiveProps(componentName, componentProp, tokenSubgroup, responsiveProp, invert = false, tokenExceptions = []) {\n    if (!responsiveProp) {\n        return {};\n    }\n    if (typeof responsiveProp === \"string\") {\n        return {\n            [`--__ac-${componentName}-${componentProp}-xs`]: translateTokenStringToCSS(componentProp, responsiveProp, tokenSubgroup, tokenExceptions, invert),\n        };\n    }\n    const styleProps = {};\n    Object.entries(responsiveProp).forEach(([breakpointAlias, aliasOrScale]) => {\n        styleProps[`--__ac-${componentName}-${componentProp}-${breakpointAlias}`] =\n            translateTokenStringToCSS(componentProp, aliasOrScale, tokenSubgroup, tokenExceptions, invert);\n    });\n    return styleProps;\n}\n//# sourceMappingURL=css.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef } from \"react\";\nimport { getResponsiveProps, getResponsiveValue } from \"../utilities/css\";\nexport const Stack = forwardRef((_a, ref) => {\n    var { as: Component = \"div\", className, align, justify, wrap = true, gap, style: _style, direction = \"row\" } = _a, rest = __rest(_a, [\"as\", \"className\", \"align\", \"justify\", \"wrap\", \"gap\", \"style\", \"direction\"]);\n    const style = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, _style), { \"--__ac-stack-wrap\": wrap ? \"wrap\" : \"nowrap\" }), getResponsiveProps(`stack`, \"gap\", \"spacing\", gap)), getResponsiveValue(`stack`, \"direction\", direction)), getResponsiveValue(`stack`, \"align\", align)), getResponsiveValue(`stack`, \"justify\", justify));\n    return (React.createElement(Component, Object.assign({}, rest, { ref: ref, style: style, className: cl(\"navds-stack\", className, {\n            \"navds-vstack\": direction === \"column\",\n            \"navds-hstack\": direction === \"row\",\n        }) })));\n});\n//# sourceMappingURL=Stack.js.map","import React, { forwardRef } from \"react\";\nimport { Stack } from \"./Stack\";\n/**\n * Layout-primitive for horizontal flexbox\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/primitives/hstack)\n * @see üè∑Ô∏è {@link HStackProps}\n * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support\n *\n * @example\n * <HStack gap=\"8\">\n *  <MyComponent />\n *  <MyComponent />\n * </HStack>\n *\n * @example\n * // Responsive gap\n * <HStack gap={{xs: \"2\", md: \"6\"}}>\n *  <MyComponent />\n *  <MyComponent />\n * </HStack>\n */\nexport const HStack = forwardRef((props, ref) => {\n    return React.createElement(Stack, Object.assign({}, props, { ref: ref, direction: \"row\" }));\n});\n//# sourceMappingURL=HStack.js.map","import React, { forwardRef } from \"react\";\nimport { Stack } from \"./Stack\";\n/**\n * Layout-primitive for vetical flexbox\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/primitives/vstack)\n * @see üè∑Ô∏è {@link VStackProps}\n * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support\n *\n * @example\n * <VStack gap=\"8\">\n *  <MyComponent />\n *  <MyComponent />\n * </VStack>\n *\n * @example\n * // Responsive gap\n * <VStack gap={{xs: \"2\", md: \"6\"}}>\n *  <MyComponent />\n *  <MyComponent />\n * </VStack>\n */\nexport const VStack = forwardRef((props, ref) => {\n    return React.createElement(Stack, Object.assign({}, props, { ref: ref, direction: \"column\", wrap: false }));\n});\n//# sourceMappingURL=VStack.js.map","import React from \"react\";\n/**\n * Layout-primitive for auto-spacing between elements\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/primitives/hstack)\n *\n * @example\n * <HStack gap=\"8\">\n *  <MyComponent />\n *  <Spacer />\n *  <MyComponent />\n * </HStack>\n */\nexport const Spacer = () => React.createElement(\"div\", { className: \"navds-stack__spacer\" });\n//# sourceMappingURL=Spacer.js.map","import { hasValue } from './validationUtils';\n\nconst onlyNumbersRegExp = /^[0-9]*$/;\n\nexport const getMod11 = (strValue: string): number => {\n    let checkNbr = 2;\n    let mod = 0;\n\n    for (let i = strValue.length - 2; i >= 0; --i) {\n        mod += parseInt(strValue.charAt(i), 10) * checkNbr;\n        if (++checkNbr > 7) {\n            checkNbr = 2;\n        }\n    }\n    const result = 11 - (mod % 11);\n    return result === 11 ? 0 : result;\n};\n\nconst er9Tall = (orgnr: string): boolean => {\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\n};\n\nconst starterP√•8Eller9 = (orgnr: string): boolean => {\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\n};\n\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\n    if (!orgnr || er9Tall(orgnr) === false || starterP√•8Eller9(orgnr) === false || orgnr === '999999999') {\n        return false;\n    }\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\n};\n\nexport const numberHasValue = (num: string): boolean => {\n    if (!hasValue(num) || num.trim().length === 0) {\n        return false;\n    }\n\n    return true;\n};\n\nconst numberRegExp = RegExp(/^[-]?[0-9,.\\s]*$/);\n\nexport const trimNumberValue = (value: string): string => {\n    return value.replace(/,/g, '.').replace(/\\s/g, '').replace(/%/g, '');\n};\n\nexport const getFloatFromString = (value: string | undefined): number | undefined => {\n    if (value !== undefined && value !== null && value.length > 0 && numberRegExp.test(value)) {\n        const trimmedValue = trimNumberValue(value);\n        const numberOfPoints = (trimmedValue.match(/\\./g) || []).length;\n        if (numberOfPoints > 1) {\n            return undefined;\n        }\n        return parseFloat(trimmedValue);\n    }\n    return undefined;\n};\n","import { usynligeCharsRegex } from './validationUtils';\n\nexport const replaceInvisibleCharsWithSpace = (inputString: string): string => {\n    return inputString.replace(usynligeCharsRegex, '\\u0020');\n};\n\nexport const capitalizeFirstLetter = (s: string): string => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport const convertBooleanOrUndefinedToYesOrNo = (value: boolean | undefined): YesOrNo => {\n    if (value === true) {\n        return YesOrNo.YES;\n    }\n\n    if (value === false) {\n        return YesOrNo.NO;\n    }\n\n    return YesOrNo.UNANSWERED;\n};\n\nexport const convertYesOrNoOrUndefinedToBoolean = (value: YesOrNo | undefined) => {\n    if (value === YesOrNo.YES) {\n        return true;\n    }\n\n    if (value === YesOrNo.UNANSWERED) {\n        return undefined;\n    }\n\n    return false;\n};\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","import { bemUtils } from '@navikt/fp-common';\n\nimport './contentWrapper.less';\n\ninterface Props {\n    children: React.ReactElement | React.ReactElement[];\n}\n\nconst ContentWrapper: React.FunctionComponent<Props> = ({ children }) => {\n    const bem = bemUtils('content');\n    return <div className={bem.block}>{children}</div>;\n};\n\nexport default ContentWrapper;\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¬Ø\\_(„ÉÑ)_/¬Ø\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. ‚Äî Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton, uuid4 } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: false,\n  };\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      // eslint-disable-next-line no-console\n      console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { logger, uuid4 } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, flush, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","export const links = {\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    brukerst√∏tte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    kontaktOss: 'https://www.nav.no/person/kontakt-oss/nb/tilbakemeldinger/feil-og-mangler',\n    dittNav: 'https://tjenester.nav.no/dittnav/oversikt',\n    foreldrepenger: 'https://foreldrepenger.nav.no',\n    nav: 'https://www.nav.no',\n    papirs√∏knad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    personvernerkl√¶ring:\n        'https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten',\n    plikter: 'https://nav.no/rettOgPlikt',\n    s√∏knadsveileder: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    veiviser: 'https://familie.nav.no/veiviser',\n    innsyn: 'https://foreldrepenger.nav.no',\n    engangsstonad: 'https://www.nav.no/engangsstonad',\n    farMedmor: 'https://www.nav.no/engangsstonad#far_medmor',\n    barn: 'https://www.nav.no/barn',\n    foreldrepengerUtland: 'https://www.nav.no/foreldrepenger#utland',\n    engangsstonadHvem: 'https://www.nav.no/engangsstonad#hvem',\n    scanneDokument: 'https://www.nav.no/brukerstotte#bilde-vedlegg',\n};\n","import dayjs from 'dayjs';\n\nexport const ISO_DATE_FORMAT = 'YYYY-MM-DD';\nexport const DDMMYYYY_DATE_FORMAT = 'DD.MM.YYYY';\nexport const TIME_FORMAT = 'HH:mm';\n\n// TODO Er dette greie datoar eller b√∏r ein velga noko anna?\nexport const TIDENES_MORGEN = dayjs('1000-01-01').toDate();\nexport const TIDENES_ENDE = dayjs('9999-31-12').toDate();\n\nexport const DATE_TODAY = dayjs().toDate();\nexport const SIX_MONTHS_AGO = dayjs().subtract(6, 'month').startOf('day').toDate();\nexport const DATE_1_YEAR_FROM_NOW = dayjs().add(1, 'years').toDate();\nexport const DATE_1_YEAR_AGO = dayjs().subtract(1, 'years').toDate();\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UiIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UiIntlProvider;\n","import { FunctionComponent } from 'react';\nimport { links } from '@navikt/fp-constants';\nimport { Alert, BodyShort, Button, HStack, Heading, Label, Link, VStack } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appName: 'Foreldrepenger' | 'Engangsst√∏nad' | 'Svangerskapspenger';\n    errorMessage: string;\n    retryCallback: () => void;\n}\n\nconst ErrorPage: FunctionComponent<Props> = ({ appName, errorMessage, retryCallback }) => {\n    //TODO Bytt ut div under med Box fr√• ds-react n√•r oppdatert til siste versjon\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"20\">\n                    <Heading size=\"large\">\n                        {appName === 'Engangsst√∏nad' && <FormattedMessage id=\"ErrorPage.Engangsst√∏nad\" />}\n                        {appName === 'Foreldrepenger' && <FormattedMessage id=\"ErrorPage.Foreldrepenger\" />}\n                        {appName === 'Svangerskapspenger' && <FormattedMessage id=\"ErrorPage.Svangerskapspenger\" />}\n                    </Heading>\n                    <VStack gap=\"10\">\n                        <Alert variant=\"warning\">\n                            <VStack gap=\"4\">\n                                <Heading size=\"small\">\n                                    <FormattedMessage id=\"ErrorPage.Heading\" />\n                                </Heading>\n                                <BodyShort>\n                                    <FormattedMessage id=\"ErrorPage.Message\" />\n                                </BodyShort>\n                            </VStack>\n                        </Alert>\n                        <HStack gap=\"4\" justify=\"center\">\n                            <Link href={links.kontaktOss} target=\"_blank\">\n                                <Button type=\"button\" variant=\"secondary\">\n                                    <FormattedMessage id=\"ErrorPage.Contact\" />\n                                </Button>\n                            </Link>\n                            <Button type=\"button\" variant=\"primary\" onClick={retryCallback}>\n                                <FormattedMessage id=\"ErrorPage.TryAgain\" />\n                            </Button>\n                        </HStack>\n                        <div style={{ backgroundColor: 'var(--a-gray-200)', padding: '16px', borderRadius: '4px' }}>\n                            <VStack gap=\"2\">\n                                <Label>\n                                    <FormattedMessage id=\"ErrorPage.ErrorMessage\" />\n                                </Label>\n                                <BodyShort>Error: {errorMessage}</BodyShort>\n                            </VStack>\n                        </div>\n                    </VStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorPage;\n","import * as Sentry from '@sentry/browser';\nimport { Component } from 'react';\nimport ErrorPage from './ErrorPage';\n\ninterface Props {\n    appName: 'Foreldrepenger' | 'Engangsst√∏nad' | 'Svangerskapspenger';\n    children: React.ReactNode;\n    retryCallback: () => void;\n}\n\ninterface State {\n    eventId: string | null;\n    hasError: boolean;\n    errorInfo: any;\n    errorMessage: string | undefined;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = { eventId: null, hasError: false, errorInfo: null, errorMessage: undefined };\n    }\n\n    componentDidCatch(error: Error | null, errorInfo: any) {\n        Sentry.withScope((scope: any) => {\n            scope.setExtras(errorInfo);\n            const eventId = Sentry.captureException(error);\n            this.setState({ eventId, errorInfo });\n        });\n        this.setState({ hasError: true, errorMessage: error?.message });\n    }\n\n    render() {\n        const { appName, retryCallback } = this.props;\n        const { errorMessage, errorInfo } = this.state;\n\n        if (this.state.hasError) {\n            return errorMessage ? (\n                <ErrorPage appName={appName} errorMessage={errorMessage} retryCallback={retryCallback} />\n            ) : (\n                <div>{errorMessage || errorInfo}</div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { FunctionComponent } from 'react';\nimport { ErrorSummary } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nexport type ErrorSummaryError = {\n    message?: string;\n    focus?: () => void;\n};\n\ninterface Props {\n    errorRef: React.RefObject<HTMLDivElement>;\n    errors: ErrorSummaryError[];\n}\n\n//TODO Fjern FP postfix. Er litt misvisande da det kan sj√• ut som denne er spesifikk for FP-appen\n\nconst ErrorSummaryFp: FunctionComponent<Props> = ({ errorRef, errors }) => {\n    return (\n        <UiIntlProvider>\n            <ErrorSummary size=\"small\" ref={errorRef} heading={<FormattedMessage id={'ErrorSummaryFp.Tittel'} />}>\n                {Object.values(errors).map((error) => (\n                    <ErrorSummary.Item\n                        key={error.message}\n                        onClick={() => {\n                            if (error.focus) {\n                                error.focus();\n                            }\n                        }}\n                    >\n                        {error.message}\n                    </ErrorSummary.Item>\n                ))}\n            </ErrorSummary>\n        </UiIntlProvider>\n    );\n};\n\nexport default ErrorSummaryFp;\n","import React, { useCallback, useRef } from 'react';\nimport { Button } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport { UploadIcon } from '@navikt/aksel-icons';\n\nimport './fileInput.less';\nimport { bemUtils } from '@navikt/fp-common';\n\ninterface Props {\n    onFilesSelect: (files: File[]) => void;\n    multiple: boolean;\n    accept: string;\n    hasUplodedAttachements: boolean;\n}\n\nconst FileInput: React.FunctionComponent<Props> = ({ multiple, accept, onFilesSelect, hasUplodedAttachements }) => {\n    const bem = bemUtils('fileInput');\n    const onFileSelect = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.files) {\n                const files = Array.from(e.target.files) as File[];\n                onFilesSelect(files);\n                e.target.value = '';\n            }\n        },\n        [onFilesSelect],\n    );\n\n    const inputElement = useRef<HTMLInputElement>(null);\n\n    const openFileDialog = useCallback(() => {\n        if (inputElement.current) {\n            inputElement.current.click();\n        }\n    }, []);\n\n    return (\n        <>\n            <input\n                ref={inputElement}\n                className={bem.element('input')}\n                type=\"file\"\n                accept={accept}\n                onChange={(e) => onFileSelect(e)}\n                multiple={multiple === true}\n                data-testid=\"file-upload\"\n            />\n            <Button\n                className={bem.element('upload_button')}\n                variant={hasUplodedAttachements ? 'secondary' : 'primary'}\n                type=\"button\"\n                onClick={openFileDialog}\n                icon={<UploadIcon />}\n                iconPosition=\"right\"\n            >\n                {hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp.Flere\" />}\n                {!hasUplodedAttachements && <FormattedMessage id=\"FileInput.Vedlegg.Lastoppknapp\" />}\n            </Button>\n        </>\n    );\n};\n\nexport default FileInput;\n","import { PrimitiveType, useIntl } from 'react-intl';\nimport { FormatXMLElementFn } from 'intl-messageformat';\n\nexport type I18nFn = (\n    i18nId: string,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>,\n) => string;\n\nexport type CustomIntlShape = {\n    i18n: I18nFn;\n};\n\nexport const useCustomIntl = (): CustomIntlShape => {\n    const intl = useIntl();\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n","import Bytes from 'bytes';\nimport { Attachment } from '@navikt/fp-types';\nimport { Skjemanummer, AttachmentType } from '@navikt/fp-constants';\n\nconst s4 = (): string =>\n    Math.floor((1 + Math.random()) * 0x10000)\n        .toString()\n        .substring(1);\n\n//TODO Denne ligg sikkert ein annan stad (evt flytt ut)\nconst guid = (): string => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const getTotalFileSize = (files: File[]): number => {\n    return files.reduce(\n        (a, b) =>\n            ({\n                size: a.size + b.size,\n            }) as any,\n        { size: 0 },\n    ).size;\n};\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\n    return {\n        id: generateAttachmentId(),\n        file,\n        filename: file.name,\n        filesize: file.size,\n        uploaded: false,\n        pending: false,\n        type,\n        skjemanummer,\n    };\n};\n","import { VStack, Link, Loader, HStack, Spacer } from '@navikt/ds-react';\nimport { XMarkIcon, FileCheckmarkIcon } from '@navikt/aksel-icons';\n\nimport { useCustomIntl } from '../../i18n/useCustomI18n';\nimport { Attachment } from '@navikt/fp-types';\nimport { bytesString } from '../fileUtils';\n\nimport './attachmentInfo.less';\nimport { KeyboardEvent } from 'react';\n\ninterface OwnProps {\n    attachment: Attachment;\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\ntype Props = OwnProps;\n\nconst AttachmentInfo: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const { i18n } = useCustomIntl();\n\n    return (\n        <div className=\"attachmentPanel\">\n            <HStack gap=\"4\">\n                {attachment.pending && <Loader type=\"S\" />}\n                {!attachment.pending && <FileCheckmarkIcon width={24} height={24} />}\n                <VStack gap=\"1\">\n                    {attachment.url ? (\n                        <Link href={attachment.url} target=\"_blank\">\n                            {attachment.filename}\n                        </Link>\n                    ) : (\n                        <span>{attachment.filename}</span>\n                    )}\n                    {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n                </VStack>\n                {onDelete && (\n                    <>\n                        <Spacer />\n                        <XMarkIcon\n                            tabIndex={0}\n                            onClick={() => onDelete(attachment)}\n                            onKeyDown={(event: KeyboardEvent) => {\n                                event.code === 'Space' || event.code === 'Enter' ? onDelete(attachment) : undefined;\n                            }}\n                            height={24}\n                            width={24}\n                            cursor=\"pointer\"\n                            aria-label={i18n('Attachment.Vedlegg.Slett', { navn: attachment.filename })}\n                        />\n                    </>\n                )}\n            </HStack>\n        </div>\n    );\n};\n\nexport default AttachmentInfo;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport AttachmentInfo from './AttachmentInfo';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    attachments: Attachment[];\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { attachments, showFileSize, onDelete } = props;\n\n    return (\n        <>\n            {attachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {attachments.map((attachment) => (\n                        <Fragment key={guid()}>\n                            <AttachmentInfo attachment={attachment} onDelete={onDelete} showFileSize={showFileSize} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default AttachmentList;\n","export enum FileUploadError {\n    GENERAL = 'GENERAL',\n    TIMEOUT = 'TIMEOUT',\n    VALID_EXTENSION = 'VALID_EXTENSION',\n    MAX_SIZE = 'MAX_SIZE',\n}\n","import { Alert } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Attachment } from '@navikt/fp-types';\nimport { FileUploadError } from '../typer/FileUploadError';\n\nconst MAX_FIL_ST√òRRELSE_KB = 16777;\n\ninterface OwnProps {\n    failedAttachment: Attachment;\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachment: React.FunctionComponent<OwnProps> = ({ failedAttachment, onDelete }) => {\n    return (\n        <Alert variant=\"warning\" closeButton onClose={() => onDelete(failedAttachment)}>\n            {failedAttachment.error === FileUploadError.GENERAL && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Opplasting.Feilet\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.TIMEOUT && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Timeout\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.MAX_SIZE && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.St√∏rrelse\"\n                    values={{ filename: failedAttachment.filename, maxSt√∏rrelse: MAX_FIL_ST√òRRELSE_KB }}\n                />\n            )}\n            {failedAttachment.error === FileUploadError.VALID_EXTENSION && (\n                <FormattedMessage\n                    id=\"FailedAttachment.Vedlegg.Feilmelding.Ugyldig.Type\"\n                    values={{ filename: failedAttachment.filename }}\n                />\n            )}\n        </Alert>\n    );\n};\n\nexport default FailedAttachment;\n","import { Fragment } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { Attachment } from '@navikt/fp-types';\nimport FailedAttachment from './FailedAttachment';\nimport { guid } from '@navikt/fp-common';\n\ninterface Props {\n    failedAttachments: Attachment[];\n    onDelete: (file: Attachment) => void;\n}\n\nconst FailedAttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { failedAttachments, onDelete } = props;\n    return (\n        <>\n            {failedAttachments.length > 0 && (\n                <VStack gap=\"2\">\n                    {failedAttachments.map((failedAttachment) => (\n                        <Fragment key={guid()}>\n                            <FailedAttachment failedAttachment={failedAttachment} onDelete={onDelete} />\n                        </Fragment>\n                    ))}\n                </VStack>\n            )}\n        </>\n    );\n};\nexport default FailedAttachmentList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VStack } from '@navikt/ds-react';\nimport { AttachmentType, Skjemanummer } from '@navikt/fp-constants';\n\nimport FileInput from './input/FileInput';\nimport AttachmentList from './liste/AttachmentList';\nimport { Attachment } from '@navikt/fp-types';\nimport { mapFileToAttachment } from './fileUtils';\nimport FailedAttachmentList from './liste/FailedAttachmentList';\nimport { FileUploadError } from './typer/FileUploadError';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_ST√òRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\n// TODO Fjern any her utan √• m√•tte dra inn axios i denne pakka\ntype SaveAttachment = (attachment: Attachment) => Promise<any>;\n\nconst getPendingAttachmentFromFile = (\n    file: File,\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer,\n): Attachment => {\n    const newAttachment = mapFileToAttachment(file, attachmentType, skjemanummer);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return ext ? VALID_EXTENSIONS.includes(`.${ext.toLowerCase()}`) : false;\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_ST√òRRELSE_KB;\n};\n\nconst uploadAttachment = async (attachment: Attachment, saveAttachment: SaveAttachment): Promise<void> => {\n    if (!fileExtensionIsValid(attachment.file.name)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.VALID_EXTENSION;\n        return;\n    }\n    if (!fileSizeIsValid(attachment.filesize)) {\n        attachment.pending = false;\n        attachment.error = FileUploadError.MAX_SIZE;\n        return;\n    }\n\n    try {\n        const response = await saveAttachment(attachment);\n        attachment.pending = false;\n        attachment.url = response.headers.location;\n        attachment.uploaded = true;\n        attachment.uuid = response.data;\n    } catch (error) {\n        // TODO Burde f√• ut feilmelding fr√• backend og vise denne\n        attachment.pending = false;\n\n        // @ts-ignore TODO Fix typing her (Mogleg  mykje av logikken her b√∏r ligga inne i saveAttachment, s√• slepp ein da inn Axios her)\n        if (error?.response?.status === 408) {\n            attachment.error = FileUploadError.TIMEOUT;\n        } else {\n            attachment.error = FileUploadError.GENERAL;\n        }\n    }\n};\n\nconst EMPTY_ATTACHMENT_LIST = [] as Attachment[];\n\nexport interface Props {\n    updateAttachments: (attachments: Attachment[]) => void;\n    attachmentType: AttachmentType;\n    skjemanummer: Skjemanummer;\n    existingAttachments?: Attachment[];\n    saveAttachment: SaveAttachment;\n    multiple?: boolean;\n}\n\nconst FileUploader: React.FunctionComponent<Props> = ({\n    existingAttachments = EMPTY_ATTACHMENT_LIST,\n    updateAttachments,\n    attachmentType,\n    skjemanummer,\n    saveAttachment,\n    multiple = true,\n}) => {\n    const [attachments, setAttachments] = useState(existingAttachments);\n\n    useEffect(() => {\n        updateAttachments(attachments.filter((a) => !a.error && a.pending === false));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [attachments]);\n\n    const saveFiles = useCallback(\n        (files: File[]) => {\n            const uploadAttachments = async (allPendingAttachments: Attachment[]) => {\n                for (const pendingAttachment of allPendingAttachments) {\n                    await uploadAttachment(pendingAttachment, saveAttachment);\n                    setAttachments((currentAttachments) =>\n                        currentAttachments.map((a) =>\n                            a.filename === pendingAttachment.filename ? pendingAttachment : a,\n                        ),\n                    );\n                }\n            };\n\n            const allPendingAttachments = files.map((file) =>\n                getPendingAttachmentFromFile(file, attachmentType, skjemanummer),\n            );\n            setAttachments((currentAttachments) => {\n                const otherAttachments = currentAttachments.filter(\n                    (ca) => !allPendingAttachments.some((pa) => pa.filename === ca.filename),\n                );\n                return otherAttachments.concat(allPendingAttachments);\n            });\n            uploadAttachments(allPendingAttachments);\n        },\n        [attachmentType, skjemanummer, saveAttachment],\n    );\n\n    const deleteAttachment = useCallback((file: Attachment) => {\n        setAttachments((currentAttachments) => currentAttachments.filter((a) => a.filename !== file.filename));\n    }, []);\n\n    const uploadedAttachments = useMemo(() => attachments.filter((a) => !a.error), [attachments]);\n    const failedAttachments = useMemo(() => attachments.filter((a) => !!a.error), [attachments]);\n\n    return (\n        <UiIntlProvider>\n            <VStack gap=\"6\">\n                <AttachmentList attachments={uploadedAttachments} showFileSize={true} onDelete={deleteAttachment} />\n                <FileInput\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={saveFiles}\n                    hasUplodedAttachements={uploadedAttachments.length > 0}\n                    multiple={multiple}\n                />\n                <FailedAttachmentList failedAttachments={failedAttachments} onDelete={deleteAttachment} />\n            </VStack>\n        </UiIntlProvider>\n    );\n};\n\nexport default FileUploader;\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\n\ninterface Props {\n    goToPreviousStep: () => void;\n    nextButtonText?: string;\n    nextButtonOnClick?: (setButtonsDisabled: (isDisabled: boolean) => void) => void;\n    isSubmitting: boolean;\n}\n\nconst StepButtons: FunctionComponent<Props> = ({\n    goToPreviousStep,\n    nextButtonText,\n    nextButtonOnClick,\n    isSubmitting,\n}) => {\n    const [disabled, setDisabled] = useState(false);\n\n    const onClickNextButton = useCallback(() => {\n        if (nextButtonOnClick) {\n            nextButtonOnClick((d: boolean) => setDisabled(d));\n        }\n    }, [nextButtonOnClick]);\n\n    return (\n        <UiIntlProvider>\n            <StepButtonWrapper>\n                <Button type=\"button\" variant=\"secondary\" onClick={goToPreviousStep}>\n                    <FormattedMessage id=\"StepButtons.Forrige\" />\n                </Button>\n                <Button\n                    type={nextButtonOnClick ? 'button' : 'submit'}\n                    onClick={onClickNextButton}\n                    disabled={disabled}\n                    loading={isSubmitting}\n                >\n                    {nextButtonText !== undefined && nextButtonText}\n                    {!nextButtonText && <FormattedMessage id={'StepButtons.Neste'} />}\n                </Button>\n            </StepButtonWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default StepButtons;\n","import { useMemo } from 'react';\nimport { useIntl, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUiIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return intl;\n};\n\nexport default useUiIntl;\n","import { FormattedMessage } from 'react-intl';\nimport { BodyLong, ExpansionCard, Link, VStack } from '@navikt/ds-react';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\n\nconst ScanDocumentInfo = () => (\n    <UiIntlProvider>\n        <ExpansionCard size=\"small\" aria-label={useUiIntl().formatMessage({ id: 'ScanDocumentInfo.Tittel' })}>\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"ScanDocumentInfo.Tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <VStack gap=\"5\">\n                    <BodyLong>\n                        <FormattedMessage id=\"ScanDocumentInfo.Del1\" />\n                    </BodyLong>\n                    <ul>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt1\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt2\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt3\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt4\" />\n                        </BodyLong>\n                        <BodyLong>\n                            <FormattedMessage tagName=\"li\" id=\"ScanDocumentInfo.Liste.Punkt5\" />\n                        </BodyLong>\n                    </ul>\n                    <BodyLong>\n                        <FormattedMessage id=\"ScanDocumentInfo.Del2\" />\n                    </BodyLong>\n                    <BodyLong>\n                        <Link href={links.scanneDokument} target=\"_blank\">\n                            <FormattedMessage id=\"ScanDocumentInfo.Link\" />\n                        </Link>\n                    </BodyLong>\n                </VStack>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    </UiIntlProvider>\n);\n\nexport default ScanDocumentInfo;\n","import amplitude from 'amplitude-js';\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = false) => {\n    if (logToConsoleOnly) {\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            // tslint:disable-next-line\n            console.error(error);\n        }\n    });\n};\n","import { FormattedMessage, IntlShape } from 'react-intl';\nimport { useDocumentTitle } from '@navikt/fp-common';\nimport { logAmplitudeEvent } from '@navikt/fp-metrics';\nimport { Button, GuidePanel, Heading, VStack, HStack } from '@navikt/ds-react';\nimport { ArrowRightIcon } from '@navikt/aksel-icons';\nimport { links } from '@navikt/fp-constants';\nimport UiIntlProvider from '../i18n/ui/UiIntlProvider';\nimport useUiIntl from '../i18n/ui/useUiIntl';\nimport ContentWrapper from '../contentWrapper/ContentWrapper';\n\nexport interface Props {\n    appnavn: 'Foreldrepenger' | 'Engangsst√∏nad' | 'Svangerskapspenger';\n}\n\nconst getTitleText = (appnavn: Props['appnavn'], intl: IntlShape): string => {\n    switch (appnavn) {\n        case 'Engangsst√∏nad':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Engangsstonad' });\n        case 'Foreldrepenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Foreldrepenger' });\n        case 'Svangerskapspenger':\n            return intl.formatMessage({ id: 'Umyndig.Pageheading.Svangerskapspenger' });\n    }\n};\n\nconst Umyndig: React.FunctionComponent<Props> = ({ appnavn }) => {\n    const intl = useUiIntl();\n\n    const titleText = getTitleText(appnavn, intl);\n    useDocumentTitle(titleText);\n\n    logAmplitudeEvent('sidevisning', {\n        app: appnavn,\n        team: 'foreldrepenger',\n        pageKey: 'umyndig',\n    });\n\n    return (\n        <UiIntlProvider>\n            <ContentWrapper>\n                <VStack gap=\"10\">\n                    <Heading level=\"1\" size=\"xlarge\">\n                        {titleText}\n                    </Heading>\n                    <GuidePanel poster>\n                        <VStack gap=\"8\">\n                            <Heading level=\"2\" size=\"small\">\n                                <FormattedMessage id=\"Umyndig.Tittel\" />\n                            </Heading>\n                            <FormattedMessage id=\"Umyndig.Tekst\" />\n                        </VStack>\n                    </GuidePanel>\n                    <HStack justify=\"center\">\n                        <Button as=\"a\" icon={<ArrowRightIcon />} iconPosition=\"right\" href={links.papirs√∏knad}>\n                            <FormattedMessage id=\"Umyndig.Knapp.Papirs√∏knad\" />\n                        </Button>\n                    </HStack>\n                </VStack>\n            </ContentWrapper>\n        </UiIntlProvider>\n    );\n};\n\nexport default Umyndig;\n","import { IntlProvider as Provider } from 'react-intl';\nimport { LocaleAll } from '@navikt/fp-types';\n\ninterface Props<T extends LocaleAll> {\n    locale: T;\n    messagesGroupedByLocale: Record<T, Record<string, string>>;\n    children: React.ReactNode;\n}\n\nconst IntlProvider = <T extends LocaleAll>({ locale, messagesGroupedByLocale, children }: Props<T>) => {\n    const messages = messagesGroupedByLocale[locale];\n    return (\n        <Provider locale={locale} messages={messages || {}}>\n            {children}\n        </Provider>\n    );\n};\n\nexport default IntlProvider;\n","import { AxiosError } from 'axios';\nimport * as Sentry from '@sentry/browser';\n\nexport const UKJENT_UUID = 'ukjent uuid';\nexport const FEIL_VED_INNSENDING =\n    'Det har oppst√•tt et problem med innsending av s√∏knaden. Vennligst pr√∏v igjen senere. Hvis problemet vedvarer, kontakt oss og oppgi feil id: ';\n\nexport const getErrorCallId = (error: AxiosError<any>): string => {\n    return error.response && error.response.data && error.response.data.uuid ? error.response.data.uuid : UKJENT_UUID;\n};\n\nexport const getErrorTimestamp = (error: AxiosError<any>): string => {\n    return error.response && error.response.data && error.response.data.timestamp ? error.response.data.timestamp : '';\n};\n\nexport const sendErrorMessageToSentry = (error: AxiosError<any>) => {\n    const errorCallId = getErrorCallId(error) + '. ';\n    const errorTimestamp = getErrorTimestamp(error) + '. ';\n    const hideNumbersAndTrim = (tekst: string): string => {\n        return tekst.replace(/\\d/g, '*').slice(0, 250) + '...';\n    };\n\n    let errorString = errorCallId + errorTimestamp;\n    if (error.request && error.request.data && error.request.data.messages) {\n        errorString = errorString + hideNumbersAndTrim(error.request.data.messages);\n    } else if (error.response && error.response.data && error.response.data.messages) {\n        errorString = errorString + hideNumbersAndTrim(error.response.data.messages);\n    }\n    if (error.message) {\n        errorString = errorString + error.message;\n    }\n    Sentry.captureMessage(errorString);\n};\n","import S√∏knadRoutes from './routes';\n\nconst isAvailable = (route: S√∏knadRoutes, harGodkjentVilk√•r: boolean): boolean => {\n    if (route === S√∏knadRoutes.BARNET) {\n        return harGodkjentVilk√•r === true;\n    }\n\n    return true;\n};\n\nexport default isAvailable;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum BarnetFormField {\n    erBarnetF√∏dt = 'erBarnetF√∏dt',\n    termindato = 'termindato',\n    f√∏dselsdato = 'f√∏dselsdato',\n}\n\nexport interface BarnetFormData {\n    [BarnetFormField.erBarnetF√∏dt]: YesOrNo;\n    [BarnetFormField.termindato]: string;\n    [BarnetFormField.f√∏dselsdato]: string | undefined;\n}\n\nexport const BarnetFormComponents = getTypedFormComponents<BarnetFormField, BarnetFormData>();\n","import dayjs from 'dayjs';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { Barn } from 'app/types/Barn';\n\ndayjs.extend(isBetween);\ndayjs.extend(isSameOrAfter);\n\nexport const niM√•nederFremITid = (dato: Date) => dayjs(dato).startOf('day').add(9, 'months').toDate();\nexport const et√ÖrSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(1, 'year').add(1, 'day').toDate();\nexport const enM√•nedSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(1, 'month').toDate();\nexport const tiM√•nederSidenDato = (dato: Date) => dayjs(dato).startOf('day').subtract(10, 'month').toDate();\nexport const halvannet√ÖrSiden = (dato: Date) =>\n    dayjs(dato).startOf('day').subtract(1, 'year').subtract(6, 'months').toDate();\nexport const date4YearsAgo = dayjs().subtract(4, 'year').startOf('day').toDate();\nexport const treUkerSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(3, 'weeks').toDate();\nexport const fireUkerSiden = (dato: Date) => dayjs(dato).startOf('day').subtract(4, 'weeks').toDate();\nexport const femM√•nederSiden = () => dayjs().startOf('day').subtract(5, 'month').toDate();\nexport const dagenF√∏r = (dato: Date) => dayjs(dato).startOf('day').toDate();\n\nexport const getDagenF√∏rTreUkerF√∏rTermin = (termindato: string) => {\n    return dayjs(treUkerSiden(new Date(termindato))).subtract(1, 'd');\n};\n\nexport const getKanHaSvpFremTilTreUkerF√∏rTermin = (barn: Barn): boolean => {\n    if (barn.erBarnetF√∏dt && barn.f√∏dselsdato) {\n        const dagenF√∏rTreUkerF√∏rTermin = getDagenF√∏rTreUkerF√∏rTermin(barn.termindato);\n        const dagenF√∏rF√∏dsel = dagenF√∏r(new Date(barn.f√∏dselsdato));\n        return dayjs(dagenF√∏rTreUkerF√∏rTermin).isSameOrBefore(dagenF√∏rF√∏dsel);\n    }\n    return true;\n};\n\nexport const getSisteDagForSvangerskapspenger = (barn: Barn): Date => {\n    const dagenF√∏rTreUkerF√∏rTermin = getDagenF√∏rTreUkerF√∏rTermin(barn.termindato);\n    if (getKanHaSvpFremTilTreUkerF√∏rTermin(barn) || !barn.f√∏dselsdato) {\n        return dagenF√∏rTreUkerF√∏rTermin.toDate();\n    }\n    const dagenF√∏rF√∏dsel = dagenF√∏r(new Date(barn.f√∏dselsdato));\n    return dagenF√∏rF√∏dsel;\n};\n\nexport const getDefaultMonth = (minDato: Date, maxDato: Date): Date => {\n    return dayjs().isBetween(dayjs(minDato), dayjs(maxDato), 'd') ? dayjs().toDate() : maxDato;\n};\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport dayjs from 'dayjs';\nimport minMax from 'dayjs/plugin/minMax';\nimport { IntlShape } from 'react-intl';\nimport { intlUtils } from '@navikt/fp-common';\n\ndayjs.extend(minMax);\n\nexport const TEXT_INPUT_MIN_LENGTH = 10;\nexport const TEXT_INPUT_MAX_LENGTH = 1000;\n\nexport const hasValue = (v: any) => v !== '' && v !== undefined && v !== null && v !== YesOrNo.UNANSWERED;\n\nexport const getMinInputTilOgMedValue = (fom: string | undefined, otherMinDate: Date) => {\n    let min = otherMinDate;\n    if (fom && hasValue(fom)) {\n        const minDayjs = dayjs.max([dayjs(otherMinDate), dayjs(fom)]);\n        min = minDayjs ? minDayjs.toDate() : otherMinDate;\n    }\n    return min;\n};\n\nexport const getSlutteTekst = (sluttDatoArbeid: string, intl: IntlShape) => {\n    return dayjs().isBefore(dayjs(sluttDatoArbeid), 'd') ? intlUtils(intl, 'slutter') : intlUtils(intl, 'sluttet');\n};\n","import { QuestionVisibility, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { BarnetFormData, BarnetFormField } from './barnetFormConfig';\nimport { Barn } from 'app/types/Barn';\nimport { enM√•nedSiden } from 'app/utils/dateUtils';\nimport { isValidDate } from '@navikt/ds-react/esm/date/utils';\nimport { hasValue } from 'app/utils/validationUtils';\n\nconst getInitValues = (): Readonly<BarnetFormData> => ({\n    [BarnetFormField.erBarnetF√∏dt]: YesOrNo.UNANSWERED,\n    [BarnetFormField.f√∏dselsdato]: undefined,\n    [BarnetFormField.termindato]: '',\n});\n\nexport const cleanupOmBarnetFormData = (\n    values: BarnetFormData,\n    visibility: QuestionVisibility<BarnetFormField, undefined>,\n): BarnetFormData => {\n    const cleanedData: BarnetFormData = {\n        erBarnetF√∏dt: visibility.isVisible(BarnetFormField.erBarnetF√∏dt) ? values.erBarnetF√∏dt : YesOrNo.UNANSWERED,\n        termindato: visibility.isVisible(BarnetFormField.termindato) ? values.termindato : '',\n        f√∏dselsdato: visibility.isVisible(BarnetFormField.f√∏dselsdato) ? values.f√∏dselsdato : '',\n    };\n\n    return cleanedData;\n};\n\nexport const getBarnetInitialValues = (barn: Barn | undefined): BarnetFormData => {\n    const initialOmBarnetValues = getInitValues();\n    if (!barn) {\n        return initialOmBarnetValues;\n    }\n    return {\n        ...initialOmBarnetValues,\n        erBarnetF√∏dt: convertBooleanOrUndefinedToYesOrNo(barn.erBarnetF√∏dt),\n        termindato: barn.termindato,\n        f√∏dselsdato: barn.f√∏dselsdato,\n    };\n};\n\nexport const mapOmBarnetFormDataToState = (values: Partial<BarnetFormData>): Barn => {\n    return {\n        erBarnetF√∏dt: !!convertYesOrNoOrUndefinedToBoolean(values.erBarnetF√∏dt),\n        termindato: values.termindato!,\n        f√∏dselsdato: values.f√∏dselsdato,\n    };\n};\n\nexport const getMinDatoTermin = (erBarnetF√∏dt: YesOrNo, f√∏dselsdato: string): Date => {\n    if (erBarnetF√∏dt === YesOrNo.YES)\n        if (hasValue(f√∏dselsdato) && isValidDate(new Date(f√∏dselsdato))) {\n            return enM√•nedSiden(new Date(f√∏dselsdato));\n        }\n    return enM√•nedSiden(new Date());\n};\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { BarnetFormData, BarnetFormField } from './barnetFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\n\nconst BarnetFormConfig: QuestionConfig<BarnetFormData, BarnetFormField> = {\n    [BarnetFormField.erBarnetF√∏dt]: {\n        isIncluded: () => true,\n        isAnswered: ({ erBarnetF√∏dt }) => erBarnetF√∏dt !== YesOrNo.UNANSWERED,\n    },\n    [BarnetFormField.termindato]: {\n        isIncluded: () => true,\n        isAnswered: ({ termindato }) => hasValue(termindato),\n    },\n    [BarnetFormField.f√∏dselsdato]: {\n        isIncluded: ({ erBarnetF√∏dt }) => erBarnetF√∏dt === YesOrNo.YES,\n        isAnswered: ({ f√∏dselsdato }) => hasValue(f√∏dselsdato),\n    },\n};\n\nconst barnetQuestionsConfig = Questions<BarnetFormData, BarnetFormField>(BarnetFormConfig);\n\nexport default barnetQuestionsConfig;\n","import { DelivisTilretteleggingPeriodeType } from 'app/steps/tilrettelegging/tilretteleggingStepFormConfig';\nimport { ArbeidsforholdDTO } from './Arbeidsforhold';\nimport { Attachment } from './Attachment';\n\nexport enum TilretteleggingstypeOptions {\n    'INGEN' = 'ingen',\n    'DELVIS' = 'delvis',\n}\n\nexport enum Tilretteleggingstype {\n    'INGEN' = 'ingen',\n    'DELVIS' = 'delvis',\n    'HEL' = 'hel',\n}\n\nexport enum Arbeidsforholdstype {\n    'VIRKSOMHET' = 'virksomhet',\n    'SELVSTENDIG' = 'selvstendig',\n    'FRILANSER' = 'frilanser',\n    'PRIVAT' = 'privat',\n}\n\nexport interface Stilling {\n    fom: string;\n    tom?: string;\n    stillingsprosent: number;\n}\n\nexport interface ArbeidsforholdForTilrettelegging {\n    arbeidsgiverId?: string;\n    type: Arbeidsforholdstype;\n    navn: string;\n    stillinger: Stilling[];\n    startdato: string;\n    sluttdato?: string;\n}\n\nexport enum TilOgMedDatoType {\n    VALGFRI_DATO = 'VALGFRI_DATO',\n    SISTE_DAG_MED_SVP = 'SISTE_DAG_MED_SVP',\n}\n\nexport interface TilretteleggingPeriode {\n    type: Tilretteleggingstype;\n    behovForTilretteleggingFom: string;\n    fom: string;\n    tom: string;\n    stillingsprosent: number;\n    arbeidsforhold: ArbeidsforholdForTilrettelegging;\n    vedlegg: string[];\n    risikofaktorer?: string;\n    tilretteleggingstiltak?: string;\n}\n\nexport interface PeriodeMedVariasjon {\n    type: TilretteleggingstypeOptions;\n    tomType: TilOgMedDatoType;\n    fom: string;\n    tom?: string;\n    stillingsprosent: string;\n}\n\nexport interface Tilrettelegging {\n    id: string;\n    behovForTilretteleggingFom: string;\n    arbeidsforhold: ArbeidsforholdForTilrettelegging;\n    type: TilretteleggingstypeOptions;\n    enPeriodeMedTilretteleggingFom?: string;\n    enPeriodeMedTilretteleggingStillingsprosent?: string;\n    enPeriodeMedTilretteleggingTomType?: TilOgMedDatoType;\n    enPeriodeMedTilretteleggingTilbakeIJobbDato?: string;\n    vedlegg: Attachment[];\n    delvisTilretteleggingPeriodeType?: DelivisTilretteleggingPeriodeType;\n    varierendePerioder?: PeriodeMedVariasjon[];\n    risikofaktorer?: string;\n    tilretteleggingstiltak?: string;\n}\n\ninterface TilretteleggingDTOBase {\n    type: Tilretteleggingstype;\n    behovForTilretteleggingFom: Date;\n    arbeidsforhold: ArbeidsforholdDTO;\n    vedlegg: string[];\n}\nexport interface DelvisTilretteleggingDTO extends TilretteleggingDTOBase {\n    type: Tilretteleggingstype.DELVIS;\n    tilrettelagtArbeidFom: Date;\n    stillingsprosent: number;\n}\n\nexport interface IngenTilretteleggingDTO extends TilretteleggingDTOBase {\n    type: Tilretteleggingstype.INGEN;\n    slutteArbeidFom: Date;\n}\n\nexport interface HelTilretteleggingDTO extends TilretteleggingDTOBase {\n    type: Tilretteleggingstype.HEL;\n    tilrettelagtArbeidFom: Date;\n}\n\nexport type TilretteleggingDTO = DelvisTilretteleggingDTO | IngenTilretteleggingDTO | HelTilretteleggingDTO;\n\nexport default Tilrettelegging;\n","import { Tidsperiode } from '@navikt/fp-common';\nimport { TidsperiodeDTOMedValgfriSluttdato } from './TidsperiodeDTO';\n\nexport const egenN√¶ringId = 'n√¶ring';\n\nexport enum N√¶ringstype {\n    FISKER = 'FISKE',\n    JORDBRUK = 'JORDBRUK_SKOGBRUK',\n    DAGMAMMA = 'DAGMAMMA',\n    ANNET = 'ANNEN',\n}\n\nexport interface EndringAvN√¶ringsinntektInformasjonDTO {\n    dato: Date;\n    n√¶ringsinntektEtterEndring: number;\n    forklaring: string;\n}\n\nexport interface EgenN√¶ring {\n    n√¶ringstyper: N√¶ringstype[];\n    tidsperiode: Tidsperiode;\n    n√¶ringsinntekt?: string;\n    p√•g√•ende: boolean;\n    navnP√•N√¶ringen: string;\n    organisasjonsnummer?: string;\n    registrertINorge: boolean;\n    registrertILand?: string;\n    harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene?: boolean;\n    oppstartsdato?: string;\n    hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r?: boolean;\n    varigEndringDato?: string;\n    varigEndringInntektEtterEndring?: string;\n    varigEndringBeskrivelse?: string;\n}\n\nexport interface EgenN√¶ringDTO\n    extends Omit<\n        EgenN√¶ring,\n        | 'tidsperiode'\n        | 'p√•g√•ende'\n        | 'endringAvN√¶ringsinntektInformasjon'\n        | 'varigEndringDato'\n        | 'varigEndringInntektEtterEndring'\n        | 'varigEndringBeskrivelse'\n        | 'n√¶ringsinntekt'\n    > {\n    tidsperiode: Partial<TidsperiodeDTOMedValgfriSluttdato>;\n    endringAvN√¶ringsinntektInformasjon?: EndringAvN√¶ringsinntektInformasjonDTO;\n    n√¶ringsinntekt?: number;\n}\n","export const frilansId = 'frilans';\n\nexport interface Frilans {\n    jobberFremdelesSomFrilans: boolean;\n    oppstart: string;\n    // sluttDato: string | undefined;\n}\n\nexport interface FrilansDTO {\n    jobberFremdelesSomFrilans: boolean;\n    oppstart: Date;\n    // sluttDato: Date | undefined;\n}\n","import { VelgArbeidFormData } from './velgArbeidFormConfig';\nimport { S√∏ker } from 'app/types/S√∏ker';\nimport { intlUtils } from '@navikt/fp-common';\nimport Tilrettelegging, { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport Arbeidsforhold, { UnikArbeidsforhold } from 'app/types/Arbeidsforhold';\nimport { getUnikeArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\nimport { IntlShape } from 'react-intl';\nimport { EgenN√¶ring, egenN√¶ringId } from 'app/types/EgenN√¶ring';\nimport { Frilans, frilansId } from 'app/types/Frilans';\n\nexport const getInitialVelgArbeidFormValues = (tilretteleggingsBehov: Tilrettelegging[]): VelgArbeidFormData => {\n    return {\n        arbeidMedTilrettelegging: tilretteleggingsBehov.map((t) => t.id),\n    };\n};\n\nexport const getN√¶ringTilretteleggingOption = (\n    tilrettelegginger: Tilrettelegging[],\n    n√¶ring: EgenN√¶ring,\n): Tilrettelegging => {\n    const n√¶ringTilretteleggingFraState = tilrettelegginger.find((t) => t.id == egenN√¶ringId);\n    return {\n        id: egenN√¶ringId,\n        arbeidsforhold: {\n            arbeidsgiverId: n√¶ring.organisasjonsnummer || `${n√¶ring.navnP√•N√¶ringen}${n√¶ring.registrertILand}`,\n            type: Arbeidsforholdstype.SELVSTENDIG,\n            navn: n√¶ring.navnP√•N√¶ringen,\n            startdato: n√¶ring.tidsperiode.fom,\n            sluttdato: n√¶ring.tidsperiode.tom,\n            stillinger: [{ fom: n√¶ring.tidsperiode.fom, tom: n√¶ring.tidsperiode.tom, stillingsprosent: 100 }],\n        },\n        vedlegg: n√¶ringTilretteleggingFraState?.vedlegg || [],\n        behovForTilretteleggingFom: n√¶ringTilretteleggingFraState?.behovForTilretteleggingFom || undefined!,\n        varierendePerioder: n√¶ringTilretteleggingFraState?.varierendePerioder || [],\n        type: n√¶ringTilretteleggingFraState?.type || undefined!,\n        enPeriodeMedTilretteleggingFom: n√¶ringTilretteleggingFraState?.enPeriodeMedTilretteleggingFom || undefined,\n        enPeriodeMedTilretteleggingStillingsprosent:\n            n√¶ringTilretteleggingFraState?.enPeriodeMedTilretteleggingStillingsprosent || undefined,\n        delvisTilretteleggingPeriodeType: n√¶ringTilretteleggingFraState?.delvisTilretteleggingPeriodeType || undefined,\n        risikofaktorer: n√¶ringTilretteleggingFraState?.risikofaktorer || undefined,\n        tilretteleggingstiltak: n√¶ringTilretteleggingFraState?.tilretteleggingstiltak || undefined,\n        enPeriodeMedTilretteleggingTomType:\n            n√¶ringTilretteleggingFraState?.enPeriodeMedTilretteleggingTomType || undefined,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato:\n            n√¶ringTilretteleggingFraState?.enPeriodeMedTilretteleggingTilbakeIJobbDato || undefined,\n    };\n};\n\nexport const getFrilansTilretteleggingOption = (\n    tilrettelegginger: Tilrettelegging[],\n    frilans: Frilans,\n): Tilrettelegging => {\n    const frilansTilretteleggingFraState = tilrettelegginger.find((t) => t.id == frilansId);\n    return {\n        id: frilansId,\n        arbeidsforhold: {\n            arbeidsgiverId: frilansId,\n            navn: frilansId,\n            type: Arbeidsforholdstype.FRILANSER,\n            startdato: frilans.oppstart,\n            stillinger: [{ fom: frilans.oppstart, tom: undefined, stillingsprosent: 100 }],\n        },\n        vedlegg: frilansTilretteleggingFraState?.vedlegg || [],\n        behovForTilretteleggingFom: frilansTilretteleggingFraState?.behovForTilretteleggingFom || undefined!,\n        varierendePerioder: frilansTilretteleggingFraState?.varierendePerioder || [],\n        type: frilansTilretteleggingFraState?.type || undefined!,\n        enPeriodeMedTilretteleggingFom: frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingFom || undefined,\n        enPeriodeMedTilretteleggingStillingsprosent:\n            frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingStillingsprosent || undefined,\n        delvisTilretteleggingPeriodeType: frilansTilretteleggingFraState?.delvisTilretteleggingPeriodeType || undefined,\n        risikofaktorer: frilansTilretteleggingFraState?.risikofaktorer || undefined,\n        tilretteleggingstiltak: frilansTilretteleggingFraState?.tilretteleggingstiltak || undefined,\n        enPeriodeMedTilretteleggingTomType:\n            frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingTomType || undefined,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato:\n            frilansTilretteleggingFraState?.enPeriodeMedTilretteleggingTilbakeIJobbDato || undefined,\n    };\n};\n\nexport const getArbeidsforholdTilretteleggingOptions = (\n    arbeidsforhold: Arbeidsforhold[],\n    tilrettelegginger: Tilrettelegging[],\n    termindato: string,\n    intl: IntlShape,\n): Tilrettelegging[] => {\n    const unikeArbeidsforhold = getUnikeArbeidsforhold(arbeidsforhold, termindato);\n    const arbeidsforholdOptions = unikeArbeidsforhold.map((forhold: UnikArbeidsforhold) => {\n        const tilretteleggingFraState = tilrettelegginger.find((t) => t.id == forhold.id);\n        return {\n            id: tilretteleggingFraState?.id ?? forhold.id,\n            arbeidsforhold: tilretteleggingFraState?.arbeidsforhold ?? {\n                arbeidsgiverId: forhold.arbeidsgiverId,\n                type:\n                    forhold.arbeidsgiverIdType === 'orgnr'\n                        ? Arbeidsforholdstype.VIRKSOMHET\n                        : Arbeidsforholdstype.PRIVAT,\n                navn:\n                    forhold.arbeidsgiverIdType === 'orgnr' || forhold.arbeidsgiverNavn\n                        ? forhold.arbeidsgiverNavn\n                        : intlUtils(intl, 'privat.arbeidsgiver'),\n                stillinger: forhold.stillinger,\n                startdato: forhold.fom,\n                sluttdato: forhold.tom,\n            },\n            varierendePerioder: tilretteleggingFraState?.varierendePerioder || [],\n            vedlegg: tilretteleggingFraState?.vedlegg || [],\n            behovForTilretteleggingFom: tilretteleggingFraState?.behovForTilretteleggingFom || undefined!,\n            type: tilretteleggingFraState?.type || undefined!,\n            enPeriodeMedTilretteleggingFom: tilretteleggingFraState?.enPeriodeMedTilretteleggingFom || undefined,\n            enPeriodeMedTilretteleggingStillingsprosent:\n                tilretteleggingFraState?.enPeriodeMedTilretteleggingStillingsprosent || undefined,\n            delvisTilretteleggingPeriodeType: tilretteleggingFraState?.delvisTilretteleggingPeriodeType || undefined,\n            enPeriodeMedTilretteleggingTomType:\n                tilretteleggingFraState?.enPeriodeMedTilretteleggingTomType || undefined,\n            enPeriodeMedTilretteleggingTilbakeIJobbDato:\n                tilretteleggingFraState?.enPeriodeMedTilretteleggingTilbakeIJobbDato || undefined,\n        };\n    });\n    return arbeidsforholdOptions;\n};\n\nexport const mapArbeidsforholdToVelgArbeidOptions = (\n    tilrettelegginger: Tilrettelegging[],\n    s√∏ker: S√∏ker,\n    arbeidsforhold: Arbeidsforhold[],\n    termindato: string,\n    intl: IntlShape,\n): Tilrettelegging[] => {\n    const harN√¶ring = s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende;\n    const erFrilanser = s√∏ker.harJobbetSomFrilans;\n    const n√¶ring = s√∏ker.selvstendigN√¶ringsdrivendeInformasjon;\n    const frilans = s√∏ker.frilansInformasjon;\n    const unikeArbeidsforhold = getArbeidsforholdTilretteleggingOptions(\n        arbeidsforhold,\n        tilrettelegginger,\n        termindato,\n        intl,\n    );\n\n    const n√¶ringValg = harN√¶ring && n√¶ring ? [getN√¶ringTilretteleggingOption(tilrettelegginger, n√¶ring)] : [];\n\n    const frilansValg =\n        erFrilanser && frilans !== undefined ? [getFrilansTilretteleggingOption(tilrettelegginger, frilans)] : [];\n    return [...unikeArbeidsforhold, ...n√¶ringValg, ...frilansValg];\n};\n\nexport const validateVelgArbeidIsAnswered = (value: string, intl: IntlShape) => {\n    if (value.length === 0) {\n        return intlUtils(intl, 'valideringsfeil.tilrettelegging.p√•krevd');\n    }\n    return undefined;\n};\n\nexport const cleanupOmValgArbeidFormData = (\n    values: VelgArbeidFormData,\n    options: Tilrettelegging[],\n): VelgArbeidFormData => {\n    const filteredValues = values.arbeidMedTilrettelegging.filter((val) =>\n        options.find((tilrettelegging) => tilrettelegging.id === val),\n    );\n    return { arbeidMedTilrettelegging: filteredValues };\n};\n","import { intlUtils } from '@navikt/fp-common';\nimport Arbeidsforhold, { UnikArbeidsforhold } from 'app/types/Arbeidsforhold';\nimport { S√∏ker } from 'app/types/S√∏ker';\nimport dayjs from 'dayjs';\nimport uniqBy from 'lodash/uniqBy';\nimport { IntlShape } from 'react-intl';\nimport { hasValue } from './validationUtils';\nimport { InntektsinformasjonFormData } from 'app/steps/inntektsinformasjon/inntektsinformasjonFormConfig';\nimport { convertYesOrNoOrUndefinedToBoolean } from '@navikt/fp-common/src/common/utils/formUtils';\nimport { getArbeidsforholdTilretteleggingOptions } from 'app/steps/velg-arbeidsforhold/velgArbeidFormUtils';\nimport Tilrettelegging, { Stilling } from 'app/types/Tilrettelegging';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { isISODateString } from '@navikt/ds-datepicker';\n\nexport const getAktiveArbeidsforhold = (arbeidsforhold: Arbeidsforhold[], termindato?: string): Arbeidsforhold[] => {\n    if (termindato === undefined) {\n        return arbeidsforhold;\n    }\n\n    return arbeidsforhold.filter((arb) =>\n        arb.tom ? dayjs(arb.tom).isSameOrAfter(dayjs(termindato).subtract(9, 'months'), 'day') : true,\n    );\n};\n\nconst getArbeidsgiverId = (arbeidsforhold: Arbeidsforhold): string => {\n    return arbeidsforhold.arbeidsgiverId || '';\n};\n\nexport const getTotalStillingsprosentP√•Skj√¶ringstidspunktet = (\n    stillinger: Stilling[],\n    skj√¶ringstidspunkt: string | undefined,\n): number => {\n    if (hasValue(skj√¶ringstidspunkt) && isISODateString(skj√¶ringstidspunkt)) {\n        const perioderISkj√¶ringstidspunktet = stillinger.filter((p) => {\n            if (!p.tom) {\n                return dayjs(skj√¶ringstidspunkt).isSameOrAfter(dayjs(p.fom), 'd');\n            } else {\n                return dayjs(skj√¶ringstidspunkt).isBetween(dayjs(p.fom), dayjs(p.tom), 'day', '[]');\n            }\n        });\n\n        if (perioderISkj√¶ringstidspunktet) {\n            if (perioderISkj√¶ringstidspunktet.some((p) => p.stillingsprosent === 0)) {\n                return 100;\n            }\n            const totalProsent = perioderISkj√¶ringstidspunktet.reduce(\n                (ar, { stillingsprosent }) => ar + stillingsprosent,\n                0,\n            );\n            return totalProsent || 100;\n        }\n    }\n    return 100;\n};\n\nexport const getStillingerForLikeArbeidsforhold = (likeArbeidsforhold: Arbeidsforhold[]): Stilling[] => {\n    const perioderMedStillingsprosent = likeArbeidsforhold.map((p) => {\n        return {\n            fom: p.fom,\n            tom: p.tom,\n            stillingsprosent: p.stillingsprosent,\n        };\n    });\n    return perioderMedStillingsprosent;\n};\n\nexport const getUnikeArbeidsforhold = (\n    arbeidsforhold: Arbeidsforhold[] | undefined,\n    termindato: string,\n): UnikArbeidsforhold[] => {\n    if (arbeidsforhold !== undefined && arbeidsforhold.length > 0) {\n        const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, termindato);\n\n        const unike = uniqBy(aktiveArbeidsforhold, getArbeidsgiverId).map((forhold) => ({\n            id: forhold.id,\n            fom: forhold.fom,\n            tom: forhold.tom,\n            guid: forhold.id,\n            arbeidsgiverNavn: forhold.arbeidsgiverNavn,\n            arbeidsgiverId: forhold.arbeidsgiverId,\n            arbeidsgiverIdType: forhold.arbeidsgiverIdType,\n            stillinger: [{ fom: forhold.fom, tom: forhold.tom, stillingsprosent: forhold.stillingsprosent }],\n        }));\n        const unikeMedStillinger = unike.map((arbeid) => {\n            const likeArbeidsforhold = aktiveArbeidsforhold.filter(\n                (a) => getArbeidsgiverId(a) === arbeid.arbeidsgiverId,\n            );\n            if (likeArbeidsforhold && likeArbeidsforhold.length > 1) {\n                const alleTom = likeArbeidsforhold.map((a) => a.tom);\n                return {\n                    ...arbeid,\n                    fom: dateToISOString(dayjs.min(likeArbeidsforhold.map((a) => dayjs(a.fom)))!.toDate()),\n                    tom: alleTom.includes(undefined)\n                        ? undefined\n                        : dateToISOString(dayjs.max(alleTom.map((tom) => dayjs(tom)))!.toDate()),\n                    stillinger: getStillingerForLikeArbeidsforhold(likeArbeidsforhold),\n                };\n            } else {\n                return arbeid;\n            }\n        });\n        return unikeMedStillinger;\n    }\n\n    return [];\n};\n\nexport const s√∏kerHarKunEtAktivtArbeid = (\n    termindato: string,\n    arbeidsforhold: Arbeidsforhold[],\n    erFrilanser: boolean,\n    harEgenN√¶ring: boolean,\n) => {\n    const aktiveUnikeArbeidsforhold = getUnikeArbeidsforhold(arbeidsforhold, termindato);\n    return (\n        (aktiveUnikeArbeidsforhold.length === 1 && !erFrilanser && !harEgenN√¶ring) ||\n        (aktiveUnikeArbeidsforhold.length === 0 && erFrilanser && !harEgenN√¶ring) ||\n        (aktiveUnikeArbeidsforhold.length === 0 && !erFrilanser && harEgenN√¶ring)\n    );\n};\n\nexport const s√∏kerHarKunEttARegArbeidsforholdForTilrettelegging = (\n    formValues: Partial<InntektsinformasjonFormData>,\n    aktiveArbeidsforhold: Arbeidsforhold[],\n    termindato: string,\n) => {\n    return (\n        hasValue(formValues.hattInntektSomFrilans) &&\n        hasValue(formValues.hattInntektSomN√¶ringsdrivende) &&\n        s√∏kerHarKunEtAktivtArbeid(\n            termindato,\n            aktiveArbeidsforhold,\n            !!convertYesOrNoOrUndefinedToBoolean(formValues.hattInntektSomFrilans),\n            !!convertYesOrNoOrUndefinedToBoolean(formValues.hattInntektSomN√¶ringsdrivende),\n        ) &&\n        aktiveArbeidsforhold.length > 0\n    );\n};\n\nexport const getAutomatiskValgtTilretteleggingHvisKunEtArbeid = (\n    formValues: Partial<InntektsinformasjonFormData>,\n    aktiveArbeidsforhold: Arbeidsforhold[],\n    termindato: string,\n    tilrettelegging: Tilrettelegging[],\n    intl: IntlShape,\n) => {\n    let automatiskValgtTilrettelegging = undefined;\n    const kunEtAregArbeidsforholdForTilrettelegging = s√∏kerHarKunEttARegArbeidsforholdForTilrettelegging(\n        formValues,\n        aktiveArbeidsforhold,\n        termindato,\n    );\n    if (kunEtAregArbeidsforholdForTilrettelegging) {\n        automatiskValgtTilrettelegging = getArbeidsforholdTilretteleggingOptions(\n            aktiveArbeidsforhold,\n            tilrettelegging,\n            termindato,\n            intl,\n        )[0];\n    }\n    return automatiskValgtTilrettelegging;\n};\n\nexport const getTekstOmManglendeArbeidsforhold = (s√∏ker: S√∏ker, intl: IntlShape): string => {\n    const erFrilanser = s√∏ker.harJobbetSomFrilans;\n    const harN√¶ring = s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende;\n    const harJobbetIUtlandet = s√∏ker.harHattAnnenInntekt;\n    if (erFrilanser && !harN√¶ring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.harIkkeN√¶ringEllerJobbIUtlandet');\n    }\n    if (!erFrilanser && harN√¶ring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.erIkkeFrilanserEllerJobbIUtlandet');\n    }\n    if (!erFrilanser && !harN√¶ring && harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.erIkkeFrilanserEllerN√¶ringsdrivende');\n    }\n    if (erFrilanser && harN√¶ring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.harIkkeJobbIUtlandet');\n    }\n    if (erFrilanser && !harN√¶ring && harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.harIkkeN√¶ring');\n    }\n    if (!erFrilanser && !harN√¶ring && !harJobbetIUtlandet) {\n        return intlUtils(intl, 'oppsummering.erIkkeFrilanserHarIkkeN√¶ringJobbetIkkeIUtlandet');\n    }\n    return intlUtils(intl, 'oppsummering.erIkkeFrilanser');\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { TilOgMedDatoType, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\n\nexport enum DelivisTilretteleggingPeriodeType {\n    'SAMMME_PERIODE_FREM_TIL_TERMIN' = 'SAMMME_PERIODE_FREM_TIL_TERMIN',\n    'VARIERTE_PERIODER' = 'VARIERTE_PERIODER',\n}\n\nexport enum TilretteleggingFormField {\n    behovForTilretteleggingFom = 'behovForTilretteleggingFom',\n    tilretteleggingType = 'tilretteleggingType',\n    delvisTilretteleggingPeriodeType = 'delvisTilretteleggingPeriodeType',\n    enPeriodeMedTilretteleggingFom = 'enPeriodeMedTilretteleggingFom',\n    enPeriodeMedTilretteleggingStillingsprosent = 'enPeriodeMedTilretteleggingStillingsprosent',\n    enPeriodeMedTilretteleggingTomType = 'enPeriodeMedTilretteleggingTomType',\n    enPeriodeMedTilretteleggingTilbakeIJobbDato = 'enPeriodeMedTilretteleggingTilbakeIJobbDato',\n    tilretteleggingstiltak = 'tilretteleggingstiltak',\n    risikofaktorer = 'risikofaktorer',\n}\n\nexport interface TilretteleggingFormData {\n    [TilretteleggingFormField.behovForTilretteleggingFom]: string;\n    [TilretteleggingFormField.tilretteleggingType]: TilretteleggingstypeOptions;\n    [TilretteleggingFormField.delvisTilretteleggingPeriodeType]: DelivisTilretteleggingPeriodeType | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingFom]: string | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent]: string | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTomType]: TilOgMedDatoType | undefined;\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato]: string | undefined;\n    [TilretteleggingFormField.tilretteleggingstiltak]: string | undefined;\n    [TilretteleggingFormField.risikofaktorer]: string | undefined;\n}\n\nexport const TilretteleggingFormComponents = getTypedFormComponents<\n    TilretteleggingFormField,\n    TilretteleggingFormData\n>();\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { PeriodeMedVariasjon } from 'app/types/Tilrettelegging';\n\nexport enum PerioderFormField {\n    varierendePerioder = 'varierendePerioder',\n}\n\nexport interface PerioderFormData {\n    [PerioderFormField.varierendePerioder]: PeriodeMedVariasjon[];\n}\n\nexport const PerioderFormComponents = getTypedFormComponents<PerioderFormField | string, PerioderFormData>();\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { getFloatFromString } from '@navikt/fp-common';\nimport Tilrettelegging, {\n    PeriodeMedVariasjon,\n    Stilling,\n    TilOgMedDatoType,\n    TilretteleggingPeriode,\n    Tilretteleggingstype,\n    TilretteleggingstypeOptions,\n} from 'app/types/Tilrettelegging';\nimport dayjs from 'dayjs';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { PerioderFormData } from 'app/steps/perioder/perioderStepFormConfig';\nimport { getTotalStillingsprosentP√•Skj√¶ringstidspunktet } from './arbeidsforholdUtils';\n\nexport const getValgtTilrettelegging = (\n    allTilretteleggingOptions: Tilrettelegging[],\n    valgtTilrettelegging: string[],\n) => {\n    const selectedTilrettelegging = allTilretteleggingOptions.filter((o) =>\n        valgtTilrettelegging.find((t) => t === o.id),\n    );\n    return selectedTilrettelegging;\n};\n\nconst mapTilretteleggingTilPeriode = (\n    tilrettelegging: Tilrettelegging,\n    type: Tilretteleggingstype,\n    stillingsprosent: number,\n    fom: string,\n    tom: string,\n): TilretteleggingPeriode => {\n    return {\n        type,\n        behovForTilretteleggingFom: tilrettelegging.behovForTilretteleggingFom,\n        arbeidsforhold: tilrettelegging.arbeidsforhold,\n        vedlegg: tilrettelegging.vedlegg.map((v) => v.id),\n        fom,\n        tom,\n        stillingsprosent,\n        risikofaktorer: tilrettelegging.risikofaktorer,\n        tilretteleggingstiltak: tilrettelegging.tilretteleggingstiltak,\n    };\n};\n\nconst getPeriodeMedHelTilretteleggingFremTilSisteSvpDag = (\n    sistePeriode: TilretteleggingPeriode,\n    sisteDagForSvangerskapspenger: Date,\n    opprinneligStillingsprosent: number,\n): TilretteleggingPeriode => {\n    return {\n        type: Tilretteleggingstype.HEL,\n        behovForTilretteleggingFom: sistePeriode.behovForTilretteleggingFom,\n        fom: dateToISOString(dayjs(sistePeriode.tom).add(1, 'd').toDate()),\n        tom: dateToISOString(sisteDagForSvangerskapspenger),\n        arbeidsforhold: sistePeriode.arbeidsforhold,\n        vedlegg: sistePeriode.vedlegg,\n        risikofaktorer: sistePeriode.risikofaktorer,\n        tilretteleggingstiltak: sistePeriode.tilretteleggingstiltak,\n        stillingsprosent: opprinneligStillingsprosent,\n    };\n};\n\nconst mappedTilretteleggingMedEnPeriode = (\n    tilrettelegging: Tilrettelegging,\n    sisteDagForSvangerskapspenger: Date,\n    opprinneligstillingsprosent: number,\n): TilretteleggingPeriode[] => {\n    const perioder = [] as TilretteleggingPeriode[];\n    const stillingsprosent =\n        tilrettelegging.type === TilretteleggingstypeOptions.DELVIS\n            ? getFloatFromString(tilrettelegging.enPeriodeMedTilretteleggingStillingsprosent)\n            : 0;\n    const fom = tilrettelegging.enPeriodeMedTilretteleggingFom!;\n    const tom =\n        tilrettelegging.enPeriodeMedTilretteleggingTomType === TilOgMedDatoType.VALGFRI_DATO\n            ? dayjs(tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato).subtract(1, 'day').toString()!\n            : dateToISOString(sisteDagForSvangerskapspenger);\n    const type =\n        tilrettelegging.type === TilretteleggingstypeOptions.DELVIS && stillingsprosent && stillingsprosent > 0\n            ? Tilretteleggingstype.DELVIS\n            : Tilretteleggingstype.INGEN;\n    const mappedPeriode = mapTilretteleggingTilPeriode(tilrettelegging, type, stillingsprosent!, fom, tom);\n    perioder.push(mappedPeriode);\n    if (!dayjs(mappedPeriode.tom).isSame(sisteDagForSvangerskapspenger, 'day')) {\n        perioder.push(\n            getPeriodeMedHelTilretteleggingFremTilSisteSvpDag(\n                mappedPeriode,\n                sisteDagForSvangerskapspenger,\n                opprinneligstillingsprosent,\n            ),\n        );\n    }\n    return perioder;\n};\n\nconst mappedTilretteleggingMedVarierendePerioder = (\n    tilrettelegging: Tilrettelegging,\n    sisteDagForSvangerskapspenger: Date,\n    opprinneligStillingsprosent: number,\n): TilretteleggingPeriode[] => {\n    const allePerioder = tilrettelegging.varierendePerioder!.map((periode) => {\n        const stillingsprosent = getFloatFromString(periode.stillingsprosent);\n        let type =\n            periode.type === TilretteleggingstypeOptions.DELVIS\n                ? Tilretteleggingstype.DELVIS\n                : Tilretteleggingstype.INGEN;\n        if (stillingsprosent === 0) {\n            type = Tilretteleggingstype.INGEN;\n        } else if (opprinneligStillingsprosent === 0 && stillingsprosent === 100) {\n            type = Tilretteleggingstype.HEL;\n        } else if (stillingsprosent === opprinneligStillingsprosent) {\n            type = Tilretteleggingstype.HEL;\n        }\n        const tom =\n            periode.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP\n                ? dateToISOString(sisteDagForSvangerskapspenger)\n                : periode.tom!;\n        return mapTilretteleggingTilPeriode(tilrettelegging, type, stillingsprosent!, periode.fom, tom);\n    });\n    const sistePeriode = allePerioder[allePerioder.length - 1];\n    if (!dayjs(sistePeriode.tom).isSame(sisteDagForSvangerskapspenger, 'day')) {\n        allePerioder.push(\n            getPeriodeMedHelTilretteleggingFremTilSisteSvpDag(\n                sistePeriode,\n                sisteDagForSvangerskapspenger,\n                opprinneligStillingsprosent,\n            ),\n        );\n    }\n    return allePerioder;\n};\n\nexport const sorterTilretteleggingsperioder = (\n    p1: TilretteleggingPeriode | PeriodeMedVariasjon,\n    p2: TilretteleggingPeriode | PeriodeMedVariasjon,\n) => {\n    if (dayjs(p1.fom).isBefore(p2.fom, 'day')) {\n        return -1;\n    }\n    if (dayjs(p1.fom).isSame(p2.fom, 'day')) {\n        return dayjs(p1.tom).isBefore(p2.tom, 'day') ? -1 : 1;\n    }\n    return 1;\n};\n\nexport const mapTilretteleggingTilPerioder = (\n    tilrettelegging: Tilrettelegging[],\n    sisteDagForSvangerskapspenger: Date,\n): TilretteleggingPeriode[] => {\n    const tilretteleggingMedEnPeriode = tilrettelegging.filter(\n        (t) => !t.varierendePerioder || t.varierendePerioder.length === 0,\n    );\n    const tilretteleggingMedVarierendePerioder = tilrettelegging.filter(\n        (t) => t.varierendePerioder && t.varierendePerioder.length > 0,\n    );\n    const mappedTilretteleggingerMedEnPeriode = tilretteleggingMedEnPeriode.map((t) => {\n        const opprinneligStillingsprosent = getTotalStillingsprosentP√•Skj√¶ringstidspunktet(\n            t.arbeidsforhold.stillinger,\n            t.enPeriodeMedTilretteleggingFom,\n        );\n        return mappedTilretteleggingMedEnPeriode(t, sisteDagForSvangerskapspenger, opprinneligStillingsprosent);\n    });\n    const mappedTilretteleggingAvFlerePerioder = tilretteleggingMedVarierendePerioder.map((t) => {\n        const opprinneligStillingsprosent = getOpprinneligStillingsprosent(\n            t.varierendePerioder,\n            t.arbeidsforhold.stillinger,\n        );\n        return mappedTilretteleggingMedVarierendePerioder(\n            t,\n            sisteDagForSvangerskapspenger,\n            opprinneligStillingsprosent,\n        );\n    });\n    const allePerioder = [\n        ...mappedTilretteleggingerMedEnPeriode.flat(1),\n        ...mappedTilretteleggingAvFlerePerioder.flat(1),\n    ];\n    return [...allePerioder].sort(sorterTilretteleggingsperioder);\n};\n\nexport const getNesteDagEtterSistePeriode = (\n    formvalues: Partial<PerioderFormData>,\n    sisteDagForSvangerskapspenger: Date,\n): string => {\n    if (!formvalues.varierendePerioder || formvalues.varierendePerioder.length === 0) {\n        return '';\n    }\n    const alleTomDatoer = formvalues.varierendePerioder\n        .filter((p) => isISODateString(p.tom) || p.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP)\n        .map((periode) => {\n            if (periode.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP) {\n                return dayjs(sisteDagForSvangerskapspenger).add(1, 'd');\n            } else {\n                return dayjs(periode.tom);\n            }\n        });\n\n    const maxTomDato = alleTomDatoer.length > 0 ? dayjs.max(alleTomDatoer) : undefined;\n    return maxTomDato ? dateToISOString(maxTomDato.add(1, 'd').toDate()) : '';\n};\n\nexport const getOpprinneligStillingsprosent = (\n    allePerioder: PeriodeMedVariasjon[] | undefined,\n    stillinger: Stilling[],\n) => {\n    const sorterePerioder = allePerioder ? [...allePerioder].sort(sorterTilretteleggingsperioder) : undefined;\n    const f√∏rstePeriodeFom = sorterePerioder && sorterePerioder.length > 0 ? sorterePerioder[0].fom : undefined;\n    return f√∏rstePeriodeFom ? getTotalStillingsprosentP√•Skj√¶ringstidspunktet(stillinger, f√∏rstePeriodeFom) : 100;\n};\n","const numberRegExp = RegExp(/^[-]?[0-9,.\\s]*$/);\n\nexport const trimNumberValue = (value: string): string => {\n    return value.replace(/,/g, '.').replace(/\\s/g, '').replace(/%/g, '');\n};\n\nexport const getFloatFromString = (value: string | undefined): number | undefined => {\n    if (value !== undefined && value !== null && value.length > 0 && numberRegExp.test(value)) {\n        const trimmedValue = trimNumberValue(value);\n        const numberOfPoints = (trimmedValue.match(/\\./g) || []).length;\n        if (numberOfPoints > 1) {\n            return undefined;\n        }\n        return parseFloat(trimmedValue.replace(',', '.'));\n    }\n    return undefined;\n};\n","import { PeriodeMedVariasjon, Tilrettelegging, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport { PerioderFormData, PerioderFormField } from './perioderStepFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { getNesteDagEtterSistePeriode } from 'app/utils/tilretteleggingUtils';\nimport { ISOStringToDate, intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\nimport { isISODateString } from '@navikt/ds-datepicker';\nimport { getFloatFromString } from 'app/utils/numberUtils';\n\nexport const getM√•SendeNyS√∏knad = (\n    periodeDerS√∏kerErTilbakeIOpprinneligStilling: PeriodeMedVariasjon | undefined,\n    currentPeriode: PeriodeMedVariasjon,\n    opprinneligStillingsprosent: number,\n): boolean => {\n    return (\n        !!periodeDerS√∏kerErTilbakeIOpprinneligStilling &&\n        hasValue(currentPeriode.fom) &&\n        hasValue(currentPeriode.stillingsprosent) &&\n        dayjs(currentPeriode.fom).isAfter(periodeDerS√∏kerErTilbakeIOpprinneligStilling.fom, 'day') &&\n        ((opprinneligStillingsprosent > 0 &&\n            getFloatFromString(currentPeriode.stillingsprosent)! < opprinneligStillingsprosent) ||\n            (opprinneligStillingsprosent === 0 && getFloatFromString(currentPeriode.stillingsprosent)! < 100))\n    );\n};\n\nexport const getInitPerioderFormDataValues = (): Readonly<PerioderFormData> => ({\n    [PerioderFormField.varierendePerioder]: [\n        {\n            type: TilretteleggingstypeOptions.DELVIS,\n            fom: '',\n            tom: '',\n            stillingsprosent: '',\n            tomType: undefined!,\n        },\n    ],\n});\n\nexport const getPerioderInitialValues = (tilrettelegging: Tilrettelegging): PerioderFormData => {\n    const initValues = getInitPerioderFormDataValues();\n    return {\n        varierendePerioder:\n            tilrettelegging.varierendePerioder && tilrettelegging.varierendePerioder.length > 0\n                ? tilrettelegging.varierendePerioder\n                : initValues.varierendePerioder,\n    };\n};\n\nexport const mapPerioderFormDataToState = (\n    id: string,\n    values: Partial<PerioderFormData>,\n    tilretteleggingFraState: Tilrettelegging[],\n): Tilrettelegging[] => {\n    const tilretteleggingForOppdatering = tilretteleggingFraState.find((t) => t.id === id);\n    const oppdatert = {\n        ...tilretteleggingForOppdatering,\n        varierendePerioder: values.varierendePerioder,\n    } as Tilrettelegging;\n\n    const nyTilretteleggingIS√∏knad = tilretteleggingFraState.map((t) => {\n        return t.id === id ? oppdatert : t;\n    });\n    return nyTilretteleggingIS√∏knad;\n};\n\nexport const getPeriodeDerS√∏kerErTilbakeIFullStilling = (\n    varierendePerioder: PeriodeMedVariasjon[] | undefined,\n    opprinneligStillingsprosent: number,\n): PeriodeMedVariasjon | undefined => {\n    return varierendePerioder\n        ? varierendePerioder.find((p) => {\n              if (opprinneligStillingsprosent > 0) {\n                  return (\n                      hasValue(p.stillingsprosent) &&\n                      getFloatFromString(p.stillingsprosent) === opprinneligStillingsprosent\n                  );\n              } else {\n                  return hasValue(p.stillingsprosent) && getFloatFromString(p.stillingsprosent) === 100;\n              }\n          })\n        : undefined;\n};\n\nexport const getUferdigPeriodeInput = (\n    formValues: Partial<PerioderFormData>,\n    sisteDagForSvangerskapspenger: Date,\n): PeriodeMedVariasjon => {\n    return {\n        fom: getNesteDagEtterSistePeriode(formValues, sisteDagForSvangerskapspenger),\n        tom: '',\n        stillingsprosent: '',\n        tomType: undefined!,\n        type: TilretteleggingstypeOptions.DELVIS,\n    } as PeriodeMedVariasjon;\n};\n\nexport const getPeriodeSideTittel = (erFlereTilrettelegginger: boolean, navn: string, intl: IntlShape): string => {\n    return erFlereTilrettelegginger\n        ? intlUtils(intl, 'steps.label.periode.flere', { navn })\n        : intlUtils(intl, 'steps.label.periode.en');\n};\n\nexport const getDescriptionTekst = (kanHaSVPFremTilTreUkerF√∏rTermin: boolean, intl: IntlShape): string => {\n    return kanHaSVPFremTilTreUkerF√∏rTermin\n        ? intlUtils(intl, 'perioder.varierende.description.termin')\n        : intlUtils(intl, 'perioder.varierende.description.f√∏dsel');\n};\n\nexport const getMinDatoTom = (fom: string | undefined, minDatoFom: Date): Date => {\n    return hasValue(fom) && isISODateString(fom) ? ISOStringToDate(fom)! : minDatoFom;\n};\n","import {\n    DelivisTilretteleggingPeriodeType,\n    TilretteleggingFormData,\n    TilretteleggingFormField,\n} from './tilretteleggingStepFormConfig';\nimport {\n    Arbeidsforholdstype,\n    TilOgMedDatoType,\n    Tilrettelegging,\n    TilretteleggingstypeOptions,\n} from 'app/types/Tilrettelegging';\nimport { replaceInvisibleCharsWithSpace } from '@navikt/fp-common/src/common/utils/stringUtils';\nimport { QuestionVisibility } from '@navikt/sif-common-formik-ds/lib';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\n\nexport const getInitTilretteleggingFormDataValues = (): Readonly<TilretteleggingFormData> => ({\n    [TilretteleggingFormField.behovForTilretteleggingFom]: undefined!,\n    [TilretteleggingFormField.tilretteleggingType]: undefined!,\n    [TilretteleggingFormField.delvisTilretteleggingPeriodeType]: undefined,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingFom]: undefined,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent]: undefined,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTomType]: undefined!,\n    [TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato]: undefined,\n    [TilretteleggingFormField.risikofaktorer]: undefined,\n    [TilretteleggingFormField.tilretteleggingstiltak]: undefined,\n});\n\nexport const getTilretteleggingInitialValues = (tilrettelegging: Tilrettelegging): TilretteleggingFormData => {\n    const initValues = getInitTilretteleggingFormDataValues();\n    return {\n        behovForTilretteleggingFom: tilrettelegging.behovForTilretteleggingFom || initValues.behovForTilretteleggingFom,\n        tilretteleggingType: tilrettelegging.type || initValues.tilretteleggingType,\n        delvisTilretteleggingPeriodeType:\n            tilrettelegging.delvisTilretteleggingPeriodeType || initValues.delvisTilretteleggingPeriodeType,\n        risikofaktorer: tilrettelegging.risikofaktorer || initValues.risikofaktorer,\n        tilretteleggingstiltak: tilrettelegging.tilretteleggingstiltak || initValues.tilretteleggingstiltak,\n        enPeriodeMedTilretteleggingFom:\n            tilrettelegging.enPeriodeMedTilretteleggingFom || initValues.enPeriodeMedTilretteleggingFom,\n        enPeriodeMedTilretteleggingStillingsprosent:\n            tilrettelegging.enPeriodeMedTilretteleggingStillingsprosent ||\n            initValues.enPeriodeMedTilretteleggingStillingsprosent,\n        enPeriodeMedTilretteleggingTomType:\n            tilrettelegging.enPeriodeMedTilretteleggingTomType || initValues.enPeriodeMedTilretteleggingTomType,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato:\n            tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato ||\n            initValues.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n    };\n};\n\nexport const mapOmTilretteleggingFormDataToState = (\n    id: string,\n    values: Partial<TilretteleggingFormData>,\n    tilretteleggingFraState: Tilrettelegging[],\n    tilretteleggingForOppdatering: Tilrettelegging,\n): Tilrettelegging[] => {\n    const harVariertePerioder =\n        values.tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n        values.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER;\n    const oppdaterteVarierendePerioder = harVariertePerioder ? tilretteleggingForOppdatering?.varierendePerioder : [];\n    const oppdatert = {\n        ...tilretteleggingForOppdatering,\n        varierendePerioder: oppdaterteVarierendePerioder,\n        behovForTilretteleggingFom: values.behovForTilretteleggingFom,\n        arbeidsforhold: {\n            ...tilretteleggingForOppdatering.arbeidsforhold,\n        },\n        type: values.tilretteleggingType,\n        enPeriodeMedTilretteleggingFom: harVariertePerioder ? undefined : values.enPeriodeMedTilretteleggingFom,\n        enPeriodeMedTilretteleggingStillingsprosent: harVariertePerioder\n            ? undefined\n            : values.enPeriodeMedTilretteleggingStillingsprosent,\n        enPeriodeMedTilretteleggingTomType: harVariertePerioder ? undefined : values.enPeriodeMedTilretteleggingTomType,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato: harVariertePerioder\n            ? undefined\n            : values.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n        delvisTilretteleggingPeriodeType: values.delvisTilretteleggingPeriodeType,\n        risikofaktorer: hasValue(values.risikofaktorer)\n            ? replaceInvisibleCharsWithSpace(values.risikofaktorer!)\n            : undefined,\n        tilretteleggingstiltak: hasValue(values.tilretteleggingstiltak)\n            ? replaceInvisibleCharsWithSpace(values.tilretteleggingstiltak!)\n            : undefined,\n    } as Tilrettelegging;\n\n    const nyTilretteleggingIS√∏knad = tilretteleggingFraState.map((t) => {\n        return t.id === id ? oppdatert : t;\n    });\n    return nyTilretteleggingIS√∏knad;\n};\n\nexport const cleanUpTilretteleggingStepFormValues = (\n    values: TilretteleggingFormData,\n    visibility: QuestionVisibility<TilretteleggingFormField>,\n): TilretteleggingFormData => {\n    const initValues = getInitTilretteleggingFormDataValues();\n    const cleanedData: TilretteleggingFormData = {\n        ...values,\n        risikofaktorer: visibility.isVisible(TilretteleggingFormField.risikofaktorer)\n            ? values.risikofaktorer\n            : initValues.risikofaktorer,\n        tilretteleggingstiltak: visibility.isVisible(TilretteleggingFormField.tilretteleggingstiltak)\n            ? values.tilretteleggingstiltak\n            : initValues.tilretteleggingstiltak,\n        delvisTilretteleggingPeriodeType: visibility.isVisible(\n            TilretteleggingFormField.delvisTilretteleggingPeriodeType,\n        )\n            ? values.delvisTilretteleggingPeriodeType\n            : initValues.delvisTilretteleggingPeriodeType,\n        enPeriodeMedTilretteleggingFom: visibility.isVisible(TilretteleggingFormField.enPeriodeMedTilretteleggingFom)\n            ? values.enPeriodeMedTilretteleggingFom\n            : initValues.enPeriodeMedTilretteleggingFom,\n        enPeriodeMedTilretteleggingStillingsprosent: visibility.isVisible(\n            TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent,\n        )\n            ? values.enPeriodeMedTilretteleggingStillingsprosent\n            : initValues.enPeriodeMedTilretteleggingStillingsprosent,\n        enPeriodeMedTilretteleggingTomType: visibility.isVisible(\n            TilretteleggingFormField.enPeriodeMedTilretteleggingTomType,\n        )\n            ? values.enPeriodeMedTilretteleggingTomType\n            : initValues.enPeriodeMedTilretteleggingTomType,\n        enPeriodeMedTilretteleggingTilbakeIJobbDato: visibility.isVisible(\n            TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n        )\n            ? values.enPeriodeMedTilretteleggingTilbakeIJobbDato\n            : initValues.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n    };\n\n    return cleanedData;\n};\n\nexport const getLabelPeriodeFom = (\n    tilretteleggingType: TilretteleggingstypeOptions | undefined,\n    intl: IntlShape,\n): string => {\n    return tilretteleggingType === TilretteleggingstypeOptions.INGEN\n        ? intlUtils(intl, 'tilrettelegging.sammePeriodeFremTilTerminFom.label.ingen')\n        : intlUtils(intl, 'tilrettelegging.sammePeriodeFremTilTerminFom.label.delvis');\n};\n\nexport const getLabelPeriodeTomType = (\n    tilretteleggingType: TilretteleggingstypeOptions | undefined,\n    intl: IntlShape,\n): string => {\n    return tilretteleggingType === TilretteleggingstypeOptions.INGEN\n        ? intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTomType.label.ingen')\n        : intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTomType.label.delvis');\n};\n\nexport const getLabelPeriodeTom = (\n    tilretteleggingType: TilretteleggingstypeOptions | undefined,\n    intl: IntlShape,\n): string => {\n    return tilretteleggingType === TilretteleggingstypeOptions.INGEN\n        ? intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato.label.ingen')\n        : intlUtils(intl, 'tilrettelegging.enPeriodeMedTilretteleggingTilbakeIJobbDato.label.delvis');\n};\n\nexport const getMinDatoPeriodeFom = (formValues: Partial<TilretteleggingFormData>, minDatoBehovFom: Date): Date => {\n    return hasValue(formValues.behovForTilretteleggingFom)\n        ? new Date(formValues.behovForTilretteleggingFom!)\n        : minDatoBehovFom;\n};\n\nexport const getMinDatoTilbakeIJobb = (formValues: Partial<TilretteleggingFormData>): Date => {\n    return hasValue(formValues.enPeriodeMedTilretteleggingFom)\n        ? dayjs(formValues.enPeriodeMedTilretteleggingFom).add(1, 'day').toDate()\n        : new Date(formValues.behovForTilretteleggingFom!);\n};\n\nexport const getTilretteleggingTypeLabel = (\n    erFlereTilrettelegginger: boolean,\n    typeArbeid: Arbeidsforholdstype,\n    navnArbeidsgiver: string,\n    intl: IntlShape,\n): string => {\n    if (erFlereTilrettelegginger && typeArbeid !== Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.label.flere', {\n            navnArbeidsgiver,\n        });\n    }\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.label.frilanser');\n    }\n    return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.label.en');\n};\n\nexport const getBehovForTilretteleggingFomLabel = (\n    erFlereTilrettelegginger: boolean,\n    typeArbeid: Arbeidsforholdstype,\n    navnArbeidsgiver: string,\n    intl: IntlShape,\n): string => {\n    if (erFlereTilrettelegginger && typeArbeid !== Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.label.flere', {\n            navnArbeidsgiver,\n        });\n    }\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.label.frilanser');\n    }\n    return intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.label.en');\n};\n\nexport const getRadioOptionsTomType = (intl: IntlShape, kanHaSVPFremTilTreUkerF√∏rTermin: boolean) => {\n    return [\n        {\n            label: intlUtils(intl, 'perioder.varierende.tomType.valgfriDato'),\n            value: TilOgMedDatoType.VALGFRI_DATO,\n        },\n        {\n            label: kanHaSVPFremTilTreUkerF√∏rTermin\n                ? intlUtils(intl, 'perioder.varierende.tomType.treUkerF√∏rTermin')\n                : intlUtils(intl, 'perioder.varierende.tomType.dagenF√∏rF√∏dsel'),\n            value: TilOgMedDatoType.SISTE_DAG_MED_SVP,\n        },\n    ];\n};\n\nexport const getTilretteleggingSideTittel = (\n    erFlereTilrettelegginger: boolean,\n    intl: IntlShape,\n    navn: string,\n): string => {\n    return erFlereTilrettelegginger\n        ? intlUtils(intl, 'steps.label.tilrettelegging.flere', { navn })\n        : intlUtils(intl, 'steps.label.tilrettelegging.en');\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { Attachment } from 'app/types/Attachment';\n\nexport enum SkjemaFormField {\n    vedlegg = 'vedlegg',\n}\n\nexport interface SkjemaFormData {\n    [SkjemaFormField.vedlegg]: Attachment[];\n}\n\nexport const initialSkjemaFormData: SkjemaFormData = {\n    [SkjemaFormField.vedlegg]: [],\n};\n\nexport const SkjemaFormComponents = getTypedFormComponents<SkjemaFormField, SkjemaFormData>();\n","import { intlUtils } from '@navikt/fp-common';\nimport { SkjemaFormData, initialSkjemaFormData } from './skjemaFormTypes';\nimport Tilrettelegging, { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { IntlShape } from 'react-intl';\n\nexport const getInitialSkjemaValuesFromState = (currentTilrettelegging: Tilrettelegging): SkjemaFormData => {\n    const vedleggForTilrettelegging = currentTilrettelegging.vedlegg;\n    return {\n        ...initialSkjemaFormData,\n        vedlegg: vedleggForTilrettelegging,\n    };\n};\n\nexport const mapTilretteleggingMedSkjema = (\n    tilretteleggingFraState: Tilrettelegging[],\n    currentTilrettelegging: Tilrettelegging,\n    values: SkjemaFormData,\n): Tilrettelegging[] => {\n    const oppdatert = {\n        ...currentTilrettelegging,\n        vedlegg: values.vedlegg,\n    } as Tilrettelegging;\n\n    const nyTilretteleggingIS√∏knad = tilretteleggingFraState.map((t) => {\n        return t.id === currentTilrettelegging.id ? oppdatert : t;\n    });\n    return nyTilretteleggingIS√∏knad;\n};\n\nexport const getSkjemaLegend = (typeArbeid: Arbeidsforholdstype, intl: IntlShape) => {\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'skjema.legend.frilanser');\n    }\n    if (typeArbeid === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'skjema.legend.selvstendig');\n    }\n    return intlUtils(intl, 'skjema.legend.virksomhet');\n};\n\nexport const getSkjemaSideTittel = (erFlereTilrettelegginger: boolean, intl: IntlShape, navn: string): string => {\n    return erFlereTilrettelegginger\n        ? intlUtils(intl, 'steps.label.skjema.flere', { navn })\n        : intlUtils(intl, 'steps.label.skjema.en');\n};\n","import { assertUnreachable, intlUtils } from '@navikt/fp-common';\nimport { getForrigeTilrettelegging, getNesteTilretteleggingId } from 'app/routes/Svangerskapspenges√∏knadRoutes';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport { S√∏ker } from 'app/types/S√∏ker';\nimport Tilrettelegging, { TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport { IntlShape } from 'react-intl';\nimport { InntektsinformasjonFormData } from './inntektsinformasjon/inntektsinformasjonFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport { s√∏kerHarKunEtAktivtArbeid } from 'app/utils/arbeidsforholdUtils';\nimport { UtenlandsoppholdFormData } from './utenlandsopphold/utenlandsoppholdFormTypes';\nimport InformasjonOmUtenlandsopphold from 'app/types/InformasjonOmUtenlandsopphold';\nimport {\n    DelivisTilretteleggingPeriodeType,\n    TilretteleggingFormData,\n} from './tilrettelegging/tilretteleggingStepFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { frilansId } from 'app/types/Frilans';\nimport { egenN√¶ringId } from 'app/types/EgenN√¶ring';\nimport { S√∏knad } from 'app/types/S√∏knad';\nimport { getPeriodeSideTittel } from './perioder/perioderStepUtils';\nimport { getTilretteleggingSideTittel } from './tilrettelegging/tilretteleggingStepUtils';\nimport { getSkjemaSideTittel } from './skjema/skjemaFormUtils';\n\ntype BarnetStepId = 'barnet';\ntype InntektsinformasjonStepId = 'arbeid';\ntype FrilansStepId = 'frilans';\ntype N√¶ringStepId = 'n√¶ring';\ntype ArbeidIUtlandetStepId = 'arbeidIUtlandet';\ntype TilretteleggingStepId = 'tilrettelegging';\ntype PeriodeStepId = 'periode';\ntype VelgArbeidStepId = 'velgArbeid';\ntype SkjemaStepId = 'skjema';\ntype UtenlandsoppholdStepId = 'utenlandsopphold';\ntype BoIUtlandetIFortidStepId = 'boIUtlandetIFortid';\ntype BoIUtlandetIFremtidStepId = 'boIUtlandetIFremtid';\ntype OppsummeringStepId = 'oppsummering';\n\ntype StepIdWithSetBackHref = UtenlandsoppholdStepId | BoIUtlandetIFortidStepId | FrilansStepId;\n\ntype StepIdWithComputedBackHref =\n    | BoIUtlandetIFremtidStepId\n    | InntektsinformasjonStepId\n    | N√¶ringStepId\n    | ArbeidIUtlandetStepId\n    | VelgArbeidStepId\n    | SkjemaStepId\n    | TilretteleggingStepId\n    | PeriodeStepId\n    | OppsummeringStepId;\n\nexport type StepId = BarnetStepId | StepIdWithSetBackHref | StepIdWithComputedBackHref;\n\ninterface StepConfig {\n    id: StepId | string;\n    index: number;\n    label: string;\n}\n\nconst stepConfigF√∏rstegangss√∏knad = (\n    intl: IntlShape,\n    s√∏knad: S√∏knad,\n    arbeidsforhold: Arbeidsforhold[],\n): StepConfig[] => {\n    const steps = [\n        {\n            id: 'barnet',\n            index: 0,\n            label: intlUtils(intl, 'steps.label.barnet'),\n        },\n        {\n            id: 'utenlandsopphold',\n            index: 1,\n            label: intlUtils(intl, 'steps.label.utenlandsopphold'),\n        },\n    ] as StepConfig[];\n\n    if (s√∏knad.informasjonOmUtenlandsopphold.iNorgeSiste12Mnd === false) {\n        steps.push({\n            id: 'boIUtlandetIFortid',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.boIUtlandetIFortid'),\n        });\n    }\n    if (s√∏knad.informasjonOmUtenlandsopphold.iNorgeNeste12Mnd === false) {\n        steps.push({\n            id: 'boIUtlandetIFremtid',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.boIUtlandetIFremtid'),\n        });\n    }\n\n    steps.push({\n        id: 'arbeid',\n        index: steps.length,\n        label: intlUtils(intl, 'steps.label.arbeid'),\n    });\n\n    if (s√∏knad.s√∏ker.harJobbetSomFrilans) {\n        steps.push({\n            id: 'frilans',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.frilans'),\n        });\n    }\n\n    if (s√∏knad.s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende) {\n        steps.push({\n            id: 'n√¶ring',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.n√¶ring'),\n        });\n    }\n\n    if (s√∏knad.s√∏ker.harHattAnnenInntekt) {\n        steps.push({\n            id: 'arbeidIUtlandet',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.arbeidIUtlandet'),\n        });\n    }\n\n    const harKunEtArbeid =\n        s√∏knad.barn && s√∏knad.barn.termindato\n            ? s√∏kerHarKunEtAktivtArbeid(\n                  s√∏knad.barn.termindato,\n                  arbeidsforhold,\n                  s√∏knad.s√∏ker.harJobbetSomFrilans,\n                  s√∏knad.s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende,\n              )\n            : true;\n\n    if (!harKunEtArbeid) {\n        steps.push({\n            id: 'velgArbeid',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.velgArbeid'),\n        });\n    }\n\n    if (s√∏knad.tilrettelegging.length > 0) {\n        const erFlereTilrettelegginger = s√∏knad.tilrettelegging.length > 1;\n        s√∏knad.tilrettelegging.forEach((tilrettelegging: Tilrettelegging) => {\n            const navn = tilrettelegging.arbeidsforhold.navn;\n            steps.push({\n                id: `skjema-${tilrettelegging.id}`,\n                index: steps.length,\n                label: getSkjemaSideTittel(erFlereTilrettelegginger, intl, navn),\n            });\n            steps.push({\n                id: `tilrettelegging-${tilrettelegging.id}`,\n                index: steps.length,\n                label: getTilretteleggingSideTittel(erFlereTilrettelegginger, intl, navn),\n            });\n            if (\n                tilrettelegging.type === TilretteleggingstypeOptions.DELVIS &&\n                tilrettelegging.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n            ) {\n                steps.push({\n                    id: `periode-${tilrettelegging.id}`,\n                    index: steps.length,\n                    label: getPeriodeSideTittel(erFlereTilrettelegginger, navn, intl),\n                });\n            }\n        });\n    } else {\n        steps.push({\n            id: 'skjema',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.skjema.en'),\n        });\n        steps.push({\n            id: 'tilrettelegging',\n            index: steps.length,\n            label: intlUtils(intl, 'steps.label.tilrettelegging.en'),\n        });\n    }\n\n    steps.push({\n        id: 'oppsummering',\n        index: steps.length,\n        label: intlUtils(intl, 'steps.label.oppsummering'),\n    });\n\n    return steps;\n};\n\nconst stepConfig = (intl: IntlShape, s√∏knad: S√∏knad, arbeidsforhold: Arbeidsforhold[]): StepConfig[] => {\n    return stepConfigF√∏rstegangss√∏knad(intl, s√∏knad, arbeidsforhold);\n};\n\nexport const getN√¶ringRouteIfN√¶ring = (s√∏ker: S√∏ker): S√∏knadRoutes | undefined => {\n    if (s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende) {\n        return S√∏knadRoutes.N√ÜRING;\n    }\n    return undefined;\n};\n\nexport const getFrilansRouteIfFrilans = (s√∏ker: S√∏ker): S√∏knadRoutes | undefined => {\n    if (s√∏ker.harJobbetSomFrilans) {\n        return S√∏knadRoutes.FRILANS;\n    }\n    return undefined;\n};\n\nexport const getArbeidUtlandRouteIfArbeidUtland = (s√∏ker: S√∏ker): S√∏knadRoutes | undefined => {\n    if (s√∏ker.harHattAnnenInntekt) {\n        return S√∏knadRoutes.ARBEID_I_UTLANDET;\n    }\n    return undefined;\n};\n\nexport const getBackLinkForTilretteleggingSteg = (currentTilretteleggingId: string | undefined) => {\n    return `${S√∏knadRoutes.SKJEMA}/${currentTilretteleggingId}`;\n};\n\nexport const getBackLinkForOppsummeringSteg = (tilrettelegging: Tilrettelegging[]) => {\n    const sisteTilrettelegging = tilrettelegging[tilrettelegging?.length - 1];\n    if (\n        sisteTilrettelegging.type === TilretteleggingstypeOptions.DELVIS &&\n        sisteTilrettelegging.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n    ) {\n        return `${S√∏knadRoutes.PERIODER}/${sisteTilrettelegging.id}`;\n    }\n    return `${S√∏knadRoutes.TILRETTELEGGING}/${sisteTilrettelegging.id}`;\n};\n\nexport const getBackLinkForSkjemaSteg = (\n    termindato: string,\n    arbeidsforhold: Arbeidsforhold[],\n    s√∏ker: S√∏ker,\n    tilrettelegginger: Tilrettelegging[] | undefined,\n    currentTilretteleggingId: string | undefined,\n) => {\n    if (!tilrettelegginger) {\n        return S√∏knadRoutes.ARBEID;\n    }\n    const forrigeTilrettelegging = getForrigeTilrettelegging(tilrettelegginger, currentTilretteleggingId);\n    if (forrigeTilrettelegging) {\n        if (\n            forrigeTilrettelegging.type === TilretteleggingstypeOptions.DELVIS &&\n            forrigeTilrettelegging.delvisTilretteleggingPeriodeType ===\n                DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n        ) {\n            return `${S√∏knadRoutes.PERIODER}/${forrigeTilrettelegging.id}`;\n        }\n        return `${S√∏knadRoutes.TILRETTELEGGING}/${forrigeTilrettelegging.id}`;\n    }\n    const harKunEtArbeid = s√∏kerHarKunEtAktivtArbeid(\n        termindato,\n        arbeidsforhold,\n        s√∏ker.harJobbetSomFrilans,\n        s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende,\n    );\n    if (harKunEtArbeid) {\n        return getBackLinkForVelgArbeidSteg(s√∏ker);\n    }\n    return S√∏knadRoutes.VELG_ARBEID;\n};\n\nexport const getBackLinkPerioderSteg = (currentTilretteleggingId: string | undefined) => {\n    return `${S√∏knadRoutes.TILRETTELEGGING}/${currentTilretteleggingId}`;\n};\n\nexport const getBackLinkForN√¶ringSteg = (s√∏ker: S√∏ker | undefined) => {\n    if (!s√∏ker) {\n        return S√∏knadRoutes.ARBEID;\n    }\n    return getFrilansRouteIfFrilans(s√∏ker) ?? S√∏knadRoutes.ARBEID;\n};\n\nexport const getBackLinkForArbeidIUtlandetSteg = (s√∏ker: S√∏ker | undefined) => {\n    if (!s√∏ker) {\n        return S√∏knadRoutes.ARBEID;\n    }\n    return getN√¶ringRouteIfN√¶ring(s√∏ker) ?? getFrilansRouteIfFrilans(s√∏ker) ?? S√∏knadRoutes.ARBEID;\n};\n\nexport const getBackLinkForVelgArbeidSteg = (s√∏ker: S√∏ker | undefined) => {\n    if (!s√∏ker) {\n        return S√∏knadRoutes.ARBEID;\n    }\n    return (\n        getArbeidUtlandRouteIfArbeidUtland(s√∏ker) ??\n        getN√¶ringRouteIfN√¶ring(s√∏ker) ??\n        getFrilansRouteIfFrilans(s√∏ker) ??\n        S√∏knadRoutes.ARBEID\n    );\n};\n\nexport const getBackLinkForBostedIFremtid = (informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold) => {\n    if (!informasjonOmUtenlandsopphold.iNorgeSiste12Mnd) {\n        return S√∏knadRoutes.HAR_BODD_I_UTLANDET;\n    }\n    return S√∏knadRoutes.UTENLANDSOPPHOLD;\n};\n\nexport const getBackLinkForArbeidSteg = (informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold) => {\n    if (!informasjonOmUtenlandsopphold.iNorgeNeste12Mnd) {\n        return S√∏knadRoutes.SKAL_BO_I_UTLANDET;\n    }\n    if (!informasjonOmUtenlandsopphold.iNorgeSiste12Mnd) {\n        return S√∏knadRoutes.HAR_BODD_I_UTLANDET;\n    }\n    return S√∏knadRoutes.UTENLANDSOPPHOLD;\n};\n\nexport const getPreviousSetStepHref = (id: StepIdWithSetBackHref): string => {\n    let href;\n    switch (id) {\n        case 'utenlandsopphold':\n            href = S√∏knadRoutes.BARNET;\n            break;\n        case 'boIUtlandetIFortid':\n            href = S√∏knadRoutes.UTENLANDSOPPHOLD;\n            break;\n        case 'frilans':\n            href = S√∏knadRoutes.ARBEID;\n            break;\n        default:\n            return assertUnreachable(id, `Fors√∏kt √• n√• en side som ikke er tilgjengelig i s√∏knaden: ${id}`);\n    }\n\n    return href;\n};\n\nexport default stepConfig;\n\nexport const getNextRouteForTilretteleggingSteg = (\n    values: Partial<TilretteleggingFormData>,\n    tilrettelegging: Tilrettelegging[],\n    currentTilretteleggingId: string,\n): string => {\n    const nesteTilretteleggingId = getNesteTilretteleggingId(tilrettelegging, currentTilretteleggingId);\n\n    let nextRoute = S√∏knadRoutes.OPPSUMMERING.toString();\n    if (\n        values.tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n        values.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER\n    ) {\n        nextRoute = `${S√∏knadRoutes.PERIODER}/${currentTilretteleggingId}`;\n    } else if (nesteTilretteleggingId) {\n        nextRoute = `${S√∏knadRoutes.SKJEMA}/${nesteTilretteleggingId}`;\n    }\n    return nextRoute;\n};\n\nexport const getNextRouteForInntektsinformasjon = (\n    automatiskValgtTilrettelegging: Tilrettelegging | undefined,\n    values: Partial<InntektsinformasjonFormData>,\n): string => {\n    if (hasValue(values.hattInntektSomFrilans) && values.hattInntektSomFrilans === YesOrNo.YES) {\n        return S√∏knadRoutes.FRILANS.toString();\n    }\n    if (hasValue(values.hattInntektSomN√¶ringsdrivende) && values.hattInntektSomN√¶ringsdrivende === YesOrNo.YES) {\n        return S√∏knadRoutes.N√ÜRING.toString();\n    }\n    if (hasValue(values.hattArbeidIUtlandet) && values.hattArbeidIUtlandet === YesOrNo.YES) {\n        return S√∏knadRoutes.ARBEID_I_UTLANDET.toString();\n    }\n    if (automatiskValgtTilrettelegging) {\n        return `${S√∏knadRoutes.SKJEMA}/${automatiskValgtTilrettelegging.id}`;\n    }\n    return S√∏knadRoutes.VELG_ARBEID.toString();\n};\n\nexport const getNextRouteForUtenlandsopphold = (values: Partial<UtenlandsoppholdFormData>) => {\n    if (hasValue(values.harBoddINorgeSiste12Mnd) && values.harBoddINorgeSiste12Mnd === YesOrNo.NO) {\n        return S√∏knadRoutes.HAR_BODD_I_UTLANDET;\n    }\n    if (hasValue(values.skalBoINorgeNeste12Mnd) && values.skalBoINorgeNeste12Mnd === YesOrNo.NO) {\n        return S√∏knadRoutes.SKAL_BO_I_UTLANDET;\n    }\n    return S√∏knadRoutes.ARBEID;\n};\n\nexport const getNextRouteForBostedIFortid = (informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold) => {\n    if (!informasjonOmUtenlandsopphold.iNorgeNeste12Mnd) {\n        return S√∏knadRoutes.SKAL_BO_I_UTLANDET;\n    }\n    return S√∏knadRoutes.ARBEID;\n};\n\nexport const getNextRouteValgAvArbeidEllerSkjema = (\n    termindato: string,\n    arbeidsforhold: Arbeidsforhold[],\n    s√∏ker: S√∏ker,\n) => {\n    const harKunEtArbeid = s√∏kerHarKunEtAktivtArbeid(\n        termindato,\n        arbeidsforhold,\n        s√∏ker.harJobbetSomFrilans,\n        s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende,\n    );\n    if (harKunEtArbeid) {\n        if (arbeidsforhold.length === 0) {\n            const frilansEllerN√¶ringId = s√∏ker.harJobbetSomFrilans ? frilansId : egenN√¶ringId;\n            return `${S√∏knadRoutes.SKJEMA}/${frilansEllerN√¶ringId}`;\n        } else {\n            return `${S√∏knadRoutes.SKJEMA}/${arbeidsforhold[0].id}`;\n        }\n    }\n    return S√∏knadRoutes.VELG_ARBEID;\n};\n\nexport const getNextRouteForFrilans = (s√∏ker: S√∏ker, termindato: string, arbeidsforhold: Arbeidsforhold[]) => {\n    return (\n        getN√¶ringRouteIfN√¶ring(s√∏ker) ??\n        getArbeidUtlandRouteIfArbeidUtland(s√∏ker) ??\n        getNextRouteValgAvArbeidEllerSkjema(termindato, arbeidsforhold, s√∏ker)\n    );\n};\n\nexport const getNextRouteForN√¶ring = (s√∏ker: S√∏ker, termindato: string, arbeidsforhold: Arbeidsforhold[]) => {\n    return (\n        getArbeidUtlandRouteIfArbeidUtland(s√∏ker) ??\n        getNextRouteValgAvArbeidEllerSkjema(termindato, arbeidsforhold, s√∏ker)\n    );\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { etterDagensDato, intlUtils } from '@navikt/fp-common';\nimport { niM√•nederFremITid, et√ÖrSiden, enM√•nedSiden, halvannet√ÖrSiden } from 'app/utils/dateUtils';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validateTermindato = (intl: IntlShape, f√∏dselsdato: string | undefined) => (termindato: string) => {\n    if (!hasValue(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.duM√•Oppgi');\n    }\n\n    if (!isISODateString(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.ugyldigDatoFormat');\n    }\n\n    if (dayjs(termindato).isSameOrAfter(niM√•nederFremITid(new Date()), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.forLangtFremITid');\n    }\n    if (dayjs(termindato).isBefore(enM√•nedSiden(new Date()), 'day') && !f√∏dselsdato) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.vennligstOppgiBarnetsF√∏dselsDato');\n    }\n    if (dayjs(termindato).isBefore(et√ÖrSiden(new Date()), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.forLangtTilbakeITid');\n    }\n    if (f√∏dselsdato && !dayjs(termindato).subtract(6, 'months').isSameOrBefore(dayjs(f√∏dselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.6mndEtterF√∏dsel');\n    }\n    if (f√∏dselsdato && !dayjs(termindato).add(1, 'months').isSameOrAfter(dayjs(f√∏dselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.1mndF√∏rF√∏dsel');\n    }\n\n    return undefined;\n};\n\nexport const validateF√∏dselsdato = (intl: IntlShape) => (f√∏dselsdato: string) => {\n    if (!hasValue(f√∏dselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.f√∏dselsdato.duM√•Oppgi');\n    }\n\n    if (!isISODateString(f√∏dselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.f√∏dselsdato.ugyldigDatoFormat');\n    }\n\n    if (etterDagensDato(f√∏dselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.barnet.f√∏dselsdato.m√•V√¶reIdagEllerTidligere');\n    }\n\n    if (dayjs(f√∏dselsdato).isBefore(halvannet√ÖrSiden(new Date()), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.barnet.termindato.forLangtTilbakeITid');\n    }\n\n    return undefined;\n};\n","import { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { S√∏knad } from 'app/types/S√∏knad';\n\nconst useS√∏knad = (): S√∏knad => {\n    const { state } = useSvangerskapspengerContext();\n    return state.s√∏knad;\n};\n\nexport default useS√∏knad;\n","import { useNavigate } from 'react-router-dom';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useCallback } from 'react';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\n\nconst useAvbrytS√∏knad = () => {\n    const navigate = useNavigate();\n    const { dispatch } = useSvangerskapspengerContext();\n\n    const avbrytS√∏knadHandler = useCallback(() => {\n        logAmplitudeEvent('applikasjon-hendelse', {\n            app: 'svangerskapspengesoknad',\n            team: 'foreldrepenger',\n            hendelse: 'avbrutt',\n        });\n\n        dispatch(actionCreator.avbrytS√∏knad());\n        navigate('/');\n    }, [navigate, dispatch]);\n\n    return avbrytS√∏knadHandler;\n};\n\nexport default useAvbrytS√∏knad;\n","import { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { S√∏kerinfo } from 'app/types/S√∏kerinfo';\n\nconst useS√∏kerinfo = (): S√∏kerinfo => {\n    const { state } = useSvangerskapspengerContext();\n    return state.s√∏kerinfo;\n};\n\nexport default useS√∏kerinfo;\n","import { Block, Step, StepButtonWrapper, intlUtils, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { BarnetFormComponents, BarnetFormData, BarnetFormField } from './barnetFormConfig';\nimport {\n    cleanupOmBarnetFormData,\n    getBarnetInitialValues,\n    getMinDatoTermin,\n    mapOmBarnetFormDataToState,\n} from './barnetUtils';\nimport barnetQuestionsConfig from './barnetQuestionsConfig';\nimport stepConfig from '../stepsConfig';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { BodyShort, Button, ReadMore } from '@navikt/ds-react';\nimport { validateF√∏dselsdato, validateTermindato } from './barnetValidering';\nimport dayjs from 'dayjs';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport { niM√•nederFremITid, halvannet√ÖrSiden } from 'app/utils/dateUtils';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\n\nconst Barnet: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const s√∏knad = useS√∏knad();\n    const { barn } = s√∏knad;\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const onValidSubmitHandler = (values: Partial<BarnetFormData>) => {\n        const barn = mapOmBarnetFormDataToState(values);\n        return [actionCreator.setBarn(barn)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, S√∏knadRoutes.UTENLANDSOPPHOLD);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n\n    return (\n        <BarnetFormComponents.FormikWrapper\n            initialValues={getBarnetInitialValues(barn)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = barnetQuestionsConfig.getVisbility({\n                    ...formValues,\n                } as BarnetFormData);\n                const minDatoTermin = getMinDatoTermin(formValues.erBarnetF√∏dt!, formValues.f√∏dselsdato!);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"barnet\"\n                        pageTitle={intlUtils(intl, 'steps.label.barnet')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <BarnetFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupOmBarnetFormData(values, visibility)}\n                        >\n                            <Block padBottom=\"xxl\">\n                                <Block padBottom=\"m\">\n                                    <BarnetFormComponents.YesOrNoQuestion\n                                        name={BarnetFormField.erBarnetF√∏dt}\n                                        legend={intlUtils(intl, 'barnet.erBarnetF√∏dt')}\n                                        validate={(value) =>\n                                            validateYesOrNoIsAnswered(\n                                                value,\n                                                intlUtils(intl, 'valideringsfeil.barnet.erBarnetF√∏dt.p√•krevd'),\n                                            )\n                                        }\n                                    />\n                                </Block>\n                                <ReadMore header={intlUtils(intl, 'barnet.erBarnetF√∏dt.merInfo.tittel')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"barnet.erBarnetF√∏dt.merInfo.tekst\" />\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(BarnetFormField.f√∏dselsdato)}>\n                                <BarnetFormComponents.DatePicker\n                                    name={BarnetFormField.f√∏dselsdato}\n                                    label={intlUtils(intl, 'barnet.f√∏dselsdato')}\n                                    minDate={halvannet√ÖrSiden(new Date())}\n                                    maxDate={dayjs().toDate()}\n                                    validate={validateF√∏dselsdato(intl)}\n                                    placeholder={'dd.mm.√•√•√•√•'}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={true}>\n                                <Block padBottom=\"l\">\n                                    <BarnetFormComponents.DatePicker\n                                        name={BarnetFormField.termindato}\n                                        label={intlUtils(intl, 'barnet.termindato')}\n                                        placeholder={'dd.mm.√•√•√•√•'}\n                                        minDate={minDatoTermin}\n                                        maxDate={niM√•nederFremITid(new Date())}\n                                        validate={validateTermindato(intl, formValues.f√∏dselsdato)}\n                                    />\n                                </Block>\n                                <ReadMore header={intlUtils(intl, 'barnet.termindato.merInfo.tittel')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"barnet.termindato.merInfo.tekst\" />\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </BarnetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Barnet;\n","import { BodyShort } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\n\ninterface Props {\n    harArbeidsforhold: boolean;\n}\n\nconst HarIkkeArbeidsforhold: FunctionComponent<Props> = ({ harArbeidsforhold }) => {\n    const intl = useIntl();\n\n    if (harArbeidsforhold) {\n        return null;\n    }\n\n    return (\n        <div className=\"arbeidsforholdInfoBox\" style={{ marginBottom: '1rem' }}>\n            <BodyShort>\n                {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.ingenRegistrerteArbeidsforhold')}\n            </BodyShort>\n        </div>\n    );\n};\n\nexport default HarIkkeArbeidsforhold;\n","import { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Block, bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport { BodyShort, Label } from '@navikt/ds-react';\n\ninterface Props {\n    arbeidsforhold: Arbeidsforhold[];\n    harArbeidsforhold: boolean;\n}\n\nconst HarArbeidsforhold: FunctionComponent<Props> = ({ arbeidsforhold, harArbeidsforhold }: Props) => {\n    const intl = useIntl();\n\n    if (!harArbeidsforhold) {\n        return null;\n    }\n\n    const bem = bemUtils('arbeidsforholdInfoBox');\n\n    return (\n        <ul className={bem.element('arbeidsforholdList')}>\n            {arbeidsforhold.map((arbforhold: Arbeidsforhold) => (\n                <li key={arbforhold.arbeidsgiverId + arbforhold.fom + arbforhold.tom}>\n                    <div className={bem.block}>\n                        <div className={bem.element('topRow')}>\n                            <Label>\n                                {arbforhold.arbeidsgiverIdType === 'orgnr' || arbforhold.arbeidsgiverNavn\n                                    ? arbforhold.arbeidsgiverNavn\n                                    : intlUtils(intl, 'privat.arbeidsgiver')}\n                            </Label>\n                            <BodyShort className={bem.element('stillingsprosent')}>\n                                {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.stillingsprosent', {\n                                    stillingsprosent: arbforhold.stillingsprosent,\n                                })}\n                            </BodyShort>\n                        </div>\n                        <Block padBottom=\"m\">\n                            {arbforhold.arbeidsgiverIdType === 'orgnr' && (\n                                <BodyShort>\n                                    {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.organisasjonsnummer', {\n                                        organisasjonsnummer: arbforhold.arbeidsgiverId,\n                                    })}\n                                </BodyShort>\n                            )}\n                        </Block>\n                        <BodyShort>\n                            {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.periode', {\n                                fom: formatDate(arbforhold.fom),\n                                tom: arbforhold.tom ? formatDate(arbforhold.tom) : intlUtils(intl, 'p√•g√•ende'),\n                            })}\n                        </BodyShort>\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n};\nexport default HarArbeidsforhold;\n","import Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport HarIkkeArbeidsforhold from './HarIkkeArbeidsforhold';\nimport HarArbeidsforhold from './HarArbeidsforhold';\nimport { BodyShort, ReadMore } from '@navikt/ds-react';\n\nimport './arbeidsforholdInformasjon.css';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { intlUtils } from '@navikt/fp-common';\n\ninterface Props {\n    arbeidsforhold: Arbeidsforhold[];\n    visManglerInfo?: boolean;\n}\nconst ArbeidsforholdInformasjon: React.FunctionComponent<Props> = ({ arbeidsforhold, visManglerInfo = true }) => {\n    const harArbeidsforhold = arbeidsforhold !== undefined && arbeidsforhold.length > 0;\n    const intl = useIntl();\n\n    return (\n        <div style={{ marginTop: '1rem' }}>\n            <HarIkkeArbeidsforhold harArbeidsforhold={harArbeidsforhold} />\n            <HarArbeidsforhold harArbeidsforhold={harArbeidsforhold} arbeidsforhold={arbeidsforhold} />\n            {visManglerInfo && (\n                <ReadMore header={intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.info')}>\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.arbeidsforhold.tekst\" />\n                    </BodyShort>\n                </ReadMore>\n            )}\n        </div>\n    );\n};\n\nexport default ArbeidsforholdInformasjon;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum InntektsinformasjonFormField {\n    hattInntektSomFrilans = 'hattInntektSomFrilans',\n    hattInntektSomN√¶ringsdrivende = 'hattInntektSomN√¶ringsdrivende',\n    hattArbeidIUtlandet = 'hattArbeidIUtlandet',\n}\n\nexport interface InntektsinformasjonFormData {\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: YesOrNo;\n    [InntektsinformasjonFormField.hattInntektSomN√¶ringsdrivende]: YesOrNo;\n    [InntektsinformasjonFormField.hattArbeidIUtlandet]: YesOrNo;\n}\n\nexport const InntektsinformasjonFormComponents = getTypedFormComponents<\n    InntektsinformasjonFormField,\n    InntektsinformasjonFormData\n>();\n","import { InntektsinformasjonFormData, InntektsinformasjonFormField } from './inntektsinformasjonFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { S√∏ker, S√∏kerrolle } from 'app/types/S√∏ker';\n\nexport const initialInntektsinformasjonFormValues: InntektsinformasjonFormData = {\n    [InntektsinformasjonFormField.hattInntektSomFrilans]: YesOrNo.UNANSWERED,\n    [InntektsinformasjonFormField.hattInntektSomN√¶ringsdrivende]: YesOrNo.UNANSWERED,\n    [InntektsinformasjonFormField.hattArbeidIUtlandet]: YesOrNo.UNANSWERED,\n};\n\nexport const mapInntektsinformasjonFormDataToState = (\n    values: Partial<InntektsinformasjonFormData>,\n    s√∏ker: S√∏ker,\n): S√∏ker => {\n    const oppdatertFrilansInfo = values.hattInntektSomFrilans === YesOrNo.YES ? s√∏ker.frilansInformasjon : undefined;\n    const oppdatertN√¶ringInfo =\n        values.hattInntektSomN√¶ringsdrivende === YesOrNo.YES ? s√∏ker.selvstendigN√¶ringsdrivendeInformasjon : undefined;\n    const oppdatertArbeidUtlandInfo = values.hattArbeidIUtlandet === YesOrNo.YES ? s√∏ker.andreInntekter : undefined;\n    return {\n        ...s√∏ker,\n        rolle: S√∏kerrolle.MOR,\n        harHattAnnenInntekt: convertYesOrNoOrUndefinedToBoolean(values.hattArbeidIUtlandet)!,\n        harJobbetSomFrilans: convertYesOrNoOrUndefinedToBoolean(values.hattInntektSomFrilans)!,\n        harJobbetSomSelvstendigN√¶ringsdrivende: convertYesOrNoOrUndefinedToBoolean(\n            values.hattInntektSomN√¶ringsdrivende,\n        )!,\n        frilansInformasjon: oppdatertFrilansInfo,\n        selvstendigN√¶ringsdrivendeInformasjon: oppdatertN√¶ringInfo,\n        andreInntekter: oppdatertArbeidUtlandInfo,\n    };\n};\n\nexport const getInitialInntektsinformasjonFormValues = (s√∏ker: S√∏ker): InntektsinformasjonFormData => {\n    const init = {\n        ...initialInntektsinformasjonFormValues,\n        hattArbeidIUtlandet: convertBooleanOrUndefinedToYesOrNo(s√∏ker.harHattAnnenInntekt),\n        hattInntektSomN√¶ringsdrivende: convertBooleanOrUndefinedToYesOrNo(s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende),\n        hattInntektSomFrilans: convertBooleanOrUndefinedToYesOrNo(s√∏ker.harJobbetSomFrilans),\n    };\n    return init;\n};\n","import { FormattedMessage } from 'react-intl';\nimport { Block } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { BodyLong, ExpansionCard, Label } from '@navikt/ds-react';\n\nconst InfoTilFiskere = () => {\n    return (\n        <ExpansionCard size=\"small\" aria-label=\"Info til fiskere\">\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del1\" />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.hyre\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del2\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoTilFiskere.del3\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a\n                                        href={links.hvordanSendeInntektsmelding}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        className=\"lenke\"\n                                    >\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.lott\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del4\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoTilFiskere.del5\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a href={links.omLottOgHyre} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.egenB√•t\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del6\" />\n                    </BodyLong>\n                </Block>\n                <Label as=\"h3\" style={{ marginBottom: '.5rem' }}>\n                    <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.lottOgHyre\" />\n                </Label>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del7\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del8\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoTilFiskere.del9\" />\n                    </BodyLong>\n                </Block>\n                <Block margin=\"none\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoTilFiskere.del10\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a href={links.omLottOgHyre} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    );\n};\n\nexport default InfoTilFiskere;\n","import { FormattedMessage } from 'react-intl';\nimport { Block } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { BodyLong, ExpansionCard } from '@navikt/ds-react';\n\nconst InfoOmF√∏rstegangstjeneste = () => {\n    return (\n        <ExpansionCard size=\"small\" aria-label=\"Er du i f√∏rstegangstjeneste?\">\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"inntektsinformasjon.infoOmF√∏rstegangstjeneste.tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"inntektsinformasjon.infoOmF√∏rstegangstjeneste.content.del1\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage\n                            id=\"inntektsinformasjon.infoOmF√∏rstegangstjeneste.content.del2\"\n                            values={{\n                                a: (msg: any) => (\n                                    <a href={links.papirs√∏knad} target=\"_blank\" rel=\"noreferrer\" className=\"lenke\">\n                                        {msg}\n                                    </a>\n                                ),\n                                b: (msg: any) => (\n                                    <a\n                                        href={links.arbeidstilsynetSkjema}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        className=\"lenke\"\n                                    >\n                                        {msg}\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </BodyLong>\n                </Block>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    );\n};\n\nexport default InfoOmF√∏rstegangstjeneste;\n","import { BodyShort, Link, ReadMore } from '@navikt/ds-react';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport links from 'app/links/links';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst HvemKanDriveMedEgenN√¶ring = () => {\n    const intl = useIntl();\n\n    return (\n        <ReadMore header={intlUtils(intl, 'inntektsinformasjon.harJobbetSomSelvstendigN√¶ringsdrivende.apneLabel')}>\n            <div>\n                <Block padBottom=\"l\">\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.harJobbetSomSelvstendigN√¶ringsdrivende.infoboks.del1\" />\n                    </BodyShort>\n                </Block>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"inntektsinformasjon.harJobbetSomSelvstendigN√¶ringsdrivende.infoboks.del2\"\n                        values={{\n                            a: (msg: any) => (\n                                <Link href={links.n√¶ringsdrivendeInfoBoks} rel=\"noreferrer\" target=\"_blank\">\n                                    {msg}\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </div>\n        </ReadMore>\n    );\n};\n\nexport default HvemKanDriveMedEgenN√¶ring;\n","import { Alert } from '@navikt/ds-react';\nimport { Block } from '@navikt/fp-common';\nimport { FormattedMessage } from 'react-intl';\n\nconst BrukerKanIkkeS√∏ke = () => {\n    return (\n        <Alert variant=\"warning\">\n            <div>\n                <Block>\n                    <FormattedMessage\n                        id=\"inntektsinformasjon.alert.ingenArbeidsforhold.tittel\"\n                        values={{\n                            b: (msg: any) => <b>{msg}</b>,\n                        }}\n                    />\n                </Block>\n                <FormattedMessage\n                    id=\"inntektsinformasjon.alert.ingenArbeidsforhold\"\n                    values={{\n                        a: (msg: any) => (\n                            <a\n                                className=\"lenke\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://familie.nav.no/om-svangerskapspenger\"\n                            >\n                                {msg}\n                            </a>\n                        ),\n                    }}\n                />\n                <FormattedMessage\n                    id=\"inntektsinformasjon.alert.ingenArbeidsforhold.forsettelse\"\n                    values={{\n                        a: (msg: any) => (\n                            <a\n                                className=\"lenke\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Relatert+informasjon/chat-med-oss-om-foreldrepenger\"\n                            >\n                                {msg}\n                            </a>\n                        ),\n                    }}\n                />\n            </div>\n        </Alert>\n    );\n};\n\nexport default BrukerKanIkkeS√∏ke;\n","import { ReadMore } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport { useIntl } from 'react-intl';\n\nconst InfoOmArbeidIUtlandet = () => {\n    const intl = useIntl();\n    return (\n        <ReadMore header={intlUtils(intl, 'arbeidIUtlandet.apneLabel')}>\n            <div> {intlUtils(intl, 'arbeidIUtlandet.innhold')}</div>\n        </ReadMore>\n    );\n};\n\nexport default InfoOmArbeidIUtlandet;\n","import { BodyShort, Link, ReadMore } from '@navikt/ds-react';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport links from 'app/links/links';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst HvemKanV√¶reFrilanser = () => {\n    const intl = useIntl();\n\n    return (\n        <ReadMore header={intlUtils(intl, 'inntektsinformasjon.harDuJobbetSomFrilans.apneLabel')}>\n            <div>\n                <Block padBottom=\"l\">\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilans.infoboksTekst.del1\" />\n                    </BodyShort>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyShort>\n                        <FormattedMessage id=\"inntektsinformasjon.harDuJobbetSomFrilans.infoboksTekst.del2\" />\n                    </BodyShort>\n                </Block>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"inntektsinformasjon.harDuJobbetSomFrilans.infoboksTekst.del3\"\n                        values={{\n                            a: (msg) => (\n                                <Link href={links.frilanserInfoBoks} rel=\"noreferrer\" target=\"_blank\">\n                                    {msg}\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </div>\n        </ReadMore>\n    );\n};\n\nexport default HvemKanV√¶reFrilanser;\n","import { Block, intlUtils, Step, StepButtonWrapper, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport stepConfig, { getBackLinkForArbeidSteg, getNextRouteForInntektsinformasjon } from '../stepsConfig';\nimport ArbeidsforholdInformasjon from './components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon';\nimport {\n    InntektsinformasjonFormComponents,\n    InntektsinformasjonFormData,\n    InntektsinformasjonFormField,\n} from './inntektsinformasjonFormConfig';\nimport {\n    getInitialInntektsinformasjonFormValues,\n    mapInntektsinformasjonFormDataToState,\n} from './inntektsinformasjonFormUtils';\n\nimport { BodyShort, Button, Label } from '@navikt/ds-react';\nimport { Link } from 'react-router-dom';\nimport {\n    getAktiveArbeidsforhold,\n    getAutomatiskValgtTilretteleggingHvisKunEtArbeid,\n} from 'app/utils/arbeidsforholdUtils';\nimport InfoTilFiskere from './components/info-til-fiskere/InfoTilFiskere';\nimport InfoOmF√∏rstegangstjeneste from './components/info-om-f√∏rstegangstjeneste/InfoOmF√∏rstegangstjeneste';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport HvemKanDriveMedEgenN√¶ring from './components/hvem-kan-drive-egen-n√¶ring/HvemKanDriveMedEgenN√¶ring';\nimport BrukerKanIkkeS√∏ke from './components/bruker-kan-ikke-s√∏ke/BrukerKanIkkeS√∏ke';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport { useState } from 'react';\nimport InfoOmArbeidIUtlandet from './components/info-om-arbeid-i-utlandet/InfoOmArbeidIUtlandet';\nimport HvemKanV√¶reFrilanser from './components/hvem-kan-v√¶re-frilanser/HvemKanV√¶reFrilanser';\nimport Tilrettelegging from 'app/types/Tilrettelegging';\n\nconst Inntektsinformasjon: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, barn, tilrettelegging, informasjonOmUtenlandsopphold } = s√∏knad;\n    const [nextRoute, setNextRoute] = useState(S√∏knadRoutes.ARBEID.toString());\n    const [autoValgtTilrettelegging, setAutoValgtTilrettelegging] = useState<Tilrettelegging | undefined>(undefined);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n    const { termindato } = barn;\n    const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, termindato);\n    const onValidSubmitHandler = (values: Partial<InntektsinformasjonFormData>) => {\n        const updatedS√∏ker = mapInntektsinformasjonFormDataToState(values, s√∏ker);\n        if (autoValgtTilrettelegging) {\n            return [actionCreator.setS√∏ker(updatedS√∏ker), actionCreator.setTilrettelegging([autoValgtTilrettelegging])];\n        }\n\n        return [actionCreator.setS√∏ker(updatedS√∏ker)];\n    };\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    return (\n        <InntektsinformasjonFormComponents.FormikWrapper\n            initialValues={getInitialInntektsinformasjonFormValues(s√∏ker)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const kanIkkeS√∏ke =\n                    arbeidsforhold.length === 0 &&\n                    formValues.hattInntektSomFrilans === YesOrNo.NO &&\n                    formValues.hattInntektSomN√¶ringsdrivende === YesOrNo.NO;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"arbeid\"\n                        pageTitle={intlUtils(intl, 'steps.label.arbeid')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <InntektsinformasjonFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block padBottom=\"xl\">\n                                <BodyShort>\n                                    {intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.utbetalingerFraNAV')}\n                                </BodyShort>\n                            </Block>\n                            <Block padBottom=\"m\">\n                                <Label>{intlUtils(intl, 'inntektsinformasjon.arbeidsforhold.label')}</Label>\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <ArbeidsforholdInformasjon arbeidsforhold={aktiveArbeidsforhold} />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InntektsinformasjonFormComponents.YesOrNoQuestion\n                                    name={InntektsinformasjonFormField.hattInntektSomFrilans}\n                                    legend={intlUtils(intl, 'inntektsinformasjon.harDuJobbetSomFrilans')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.frilans.p√•krevd'),\n                                        )\n                                    }\n                                />\n                                <HvemKanV√¶reFrilanser />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InntektsinformasjonFormComponents.YesOrNoQuestion\n                                    name={InntektsinformasjonFormField.hattInntektSomN√¶ringsdrivende}\n                                    legend={intlUtils(\n                                        intl,\n                                        'inntektsinformasjon.harJobbetSomSelvstendigN√¶ringsdrivende',\n                                    )}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.hattInntektSomN√¶ringsdrivende.p√•krevd'),\n                                        )\n                                    }\n                                />\n                                <HvemKanDriveMedEgenN√¶ring />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InntektsinformasjonFormComponents.YesOrNoQuestion\n                                    name={InntektsinformasjonFormField.hattArbeidIUtlandet}\n                                    legend={intlUtils(intl, 'inntektsinformasjon.annenInntekt')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.hattArbeidIUtlandet.p√•krevd'),\n                                        )\n                                    }\n                                />\n                                <InfoOmArbeidIUtlandet />\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <InfoOmF√∏rstegangstjeneste />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <InfoTilFiskere />\n                            </Block>\n                            <Block padBottom=\"l\" visible={kanIkkeS√∏ke}>\n                                <BrukerKanIkkeS√∏ke />\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkForArbeidSteg(informasjonOmUtenlandsopphold)}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    {!kanIkkeS√∏ke && (\n                                        <Button\n                                            type=\"submit\"\n                                            disabled={isSubmitting}\n                                            loading={isSubmitting}\n                                            onClick={() => {\n                                                const automatiskValgtTilrettelegging =\n                                                    getAutomatiskValgtTilretteleggingHvisKunEtArbeid(\n                                                        formValues,\n                                                        aktiveArbeidsforhold,\n                                                        termindato,\n                                                        tilrettelegging,\n                                                        intl,\n                                                    );\n                                                setAutoValgtTilrettelegging(automatiskValgtTilrettelegging);\n                                                setNextRoute(\n                                                    getNextRouteForInntektsinformasjon(\n                                                        automatiskValgtTilrettelegging,\n                                                        formValues,\n                                                    ),\n                                                );\n                                            }}\n                                        >\n                                            {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                        </Button>\n                                    )}\n                                </StepButtonWrapper>\n                            </Block>\n                        </InntektsinformasjonFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Inntektsinformasjon;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum UtenlandsoppholdField {\n    harBoddINorgeSiste12Mnd = 'harBoddINorgeSiste12Mnd',\n    utenlandsoppholdSiste12Mnd = 'utenlandsoppholdSiste12Mnd',\n    skalBoINorgeNeste12Mnd = 'skalBoINorgeNeste12Mnd',\n    utenlandsoppholdNeste12Mnd = 'utenlandsoppholdNeste12Mnd',\n}\n\nexport interface UtenlandsoppholdFormData {\n    [UtenlandsoppholdField.harBoddINorgeSiste12Mnd]: YesOrNo;\n    [UtenlandsoppholdField.skalBoINorgeNeste12Mnd]: YesOrNo;\n}\n\nexport const initialUtenlandsoppholdFormData: UtenlandsoppholdFormData = {\n    [UtenlandsoppholdField.harBoddINorgeSiste12Mnd]: YesOrNo.UNANSWERED,\n    [UtenlandsoppholdField.skalBoINorgeNeste12Mnd]: YesOrNo.UNANSWERED,\n};\n\nexport const UtenlandsoppholdFormComponents = getTypedFormComponents<UtenlandsoppholdField, UtenlandsoppholdFormData>();\n","import InformasjonOmUtenlandsopphold from 'app/types/InformasjonOmUtenlandsopphold';\nimport { UtenlandsoppholdFormData, initialUtenlandsoppholdFormData } from './utenlandsoppholdFormTypes';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport const getInitialUtenlandsoppholdValuesFromState = (\n    init: InformasjonOmUtenlandsopphold,\n): UtenlandsoppholdFormData => {\n    return {\n        ...initialUtenlandsoppholdFormData,\n        harBoddINorgeSiste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeSiste12Mnd),\n        skalBoINorgeNeste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeNeste12Mnd),\n    };\n};\n\nexport const mapUtenlandsoppholdFormDataToState = (\n    formValues: Partial<UtenlandsoppholdFormData>,\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold,\n): InformasjonOmUtenlandsopphold => {\n    const { harBoddINorgeSiste12Mnd, skalBoINorgeNeste12Mnd } = formValues;\n    const oppdaterteTidligereOpphold =\n        harBoddINorgeSiste12Mnd === YesOrNo.YES ? [] : informasjonOmUtenlandsopphold.tidligereOpphold;\n    const oppdaterteSenereOpphold =\n        skalBoINorgeNeste12Mnd === YesOrNo.YES ? [] : informasjonOmUtenlandsopphold.senereOpphold;\n    const iNorgeP√•Hendelsestidspunktet =\n        harBoddINorgeSiste12Mnd === YesOrNo.YES && skalBoINorgeNeste12Mnd === YesOrNo.YES;\n\n    return {\n        ...informasjonOmUtenlandsopphold,\n        iNorgeSiste12Mnd: convertYesOrNoOrUndefinedToBoolean(harBoddINorgeSiste12Mnd)!,\n        iNorgeNeste12Mnd: convertYesOrNoOrUndefinedToBoolean(skalBoINorgeNeste12Mnd)!,\n        tidligereOpphold: oppdaterteTidligereOpphold,\n        senereOpphold: oppdaterteSenereOpphold,\n        iNorgeP√•Hendelsestidspunktet: iNorgeP√•Hendelsestidspunktet,\n    };\n};\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\nimport { UtenlandsoppholdFormData, UtenlandsoppholdField } from './utenlandsoppholdFormTypes';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nconst UtenlandsoppholdFormConfig: QuestionConfig<UtenlandsoppholdFormData, UtenlandsoppholdField> = {\n    [UtenlandsoppholdField.harBoddINorgeSiste12Mnd]: {\n        isAnswered: ({ harBoddINorgeSiste12Mnd }) => harBoddINorgeSiste12Mnd !== YesOrNo.UNANSWERED,\n        isIncluded: () => true,\n    },\n    [UtenlandsoppholdField.skalBoINorgeNeste12Mnd]: {\n        isAnswered: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd !== YesOrNo.UNANSWERED,\n        isIncluded: () => true,\n    },\n};\n\nexport const utenlandsoppholdFormQuestions = Questions<UtenlandsoppholdFormData, UtenlandsoppholdField>(\n    UtenlandsoppholdFormConfig\n);\n","import { BodyLong, BodyShort, ExpansionCard, Heading, Link } from '@navikt/ds-react';\nimport { Block } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { FormattedMessage } from 'react-intl';\n\nconst InformasjonOmUtenlandsopphold = () => {\n    return (\n        <ExpansionCard size=\"small\" aria-label=\"Informasjon om utenlandsopphold\">\n            <ExpansionCard.Header>\n                <ExpansionCard.Title size=\"small\" as=\"h2\">\n                    <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.header.tittel\" />\n                </ExpansionCard.Title>\n            </ExpansionCard.Header>\n            <ExpansionCard.Content>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.header.ingress\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.seksjon1\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.seksjon2\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"xl\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.seksjon3\" />\n                    </BodyLong>\n                </Block>\n                <Block padBottom=\"l\">\n                    <Heading as=\"h4\" size=\"small\">\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.undertittel\" />\n                    </Heading>\n                </Block>\n                <Block padBottom=\"l\">\n                    <BodyLong>\n                        <FormattedMessage id=\"utenlandsopphold.oppholdOgSt√∏tte.seksjon4\" />\n                    </BodyLong>\n                </Block>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"utenlandsopphold.oppholdOgSt√∏tte.seksjon5\"\n                        values={{\n                            a: (msg: any) => (\n                                <Link href={links.utenlandsinformasjon} rel=\"noreferrer\" target=\"_blank\">\n                                    {msg}\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </ExpansionCard.Content>\n        </ExpansionCard>\n    );\n};\n\nexport default InformasjonOmUtenlandsopphold;\n","import { Block, intlUtils, Step, StepButtonWrapper, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport stepConfig, { getNextRouteForUtenlandsopphold, getPreviousSetStepHref } from '../stepsConfig';\nimport { BodyShort, Button } from '@navikt/ds-react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n    UtenlandsoppholdField,\n    UtenlandsoppholdFormComponents,\n    UtenlandsoppholdFormData,\n} from './utenlandsoppholdFormTypes';\nimport {\n    getInitialUtenlandsoppholdValuesFromState,\n    mapUtenlandsoppholdFormDataToState,\n} from './utenlandsoppholdFormUtils';\nimport { utenlandsoppholdFormQuestions } from './utenlandsoppholdFormQuestions';\nimport InformasjonOmUtenlandsopphold from './components/InformasjonOmUtenlandsopphold';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport { useState } from 'react';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\n\nconst Utenlandsopphold: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const s√∏knad = useS√∏knad();\n    const { informasjonOmUtenlandsopphold } = s√∏knad;\n    const [nextRoute, setNextRoute] = useState(S√∏knadRoutes.ARBEID);\n\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n\n    const onValidSubmitHandler = (values: Partial<UtenlandsoppholdFormData>) => {\n        const utenlandsopphold = mapUtenlandsoppholdFormDataToState(values, informasjonOmUtenlandsopphold);\n        return [actionCreator.setUtenlandsopphold(utenlandsopphold)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    return (\n        <UtenlandsoppholdFormComponents.FormikWrapper\n            initialValues={getInitialUtenlandsoppholdValuesFromState(informasjonOmUtenlandsopphold)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = utenlandsoppholdFormQuestions.getVisbility(formValues as UtenlandsoppholdFormData);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"utenlandsopphold\"\n                        pageTitle={intlUtils(intl, 'steps.label.utenlandsopphold')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <UtenlandsoppholdFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block padBottom=\"xxl\">\n                                <BodyShort size=\"medium\">{intlUtils(intl, 'utenlandsopphold.infotekst')}</BodyShort>\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(UtenlandsoppholdField.harBoddINorgeSiste12Mnd)}\n                            >\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\n                                    legend={intlUtils(intl, 'utenlandsopphold.siste12M√•neder.sp√∏rsm√•l')}\n                                    name={UtenlandsoppholdField.harBoddINorgeSiste12Mnd}\n                                    labels={{\n                                        yes: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.siste12M√•nederInfotekst.radiobutton.boddINorge',\n                                        ),\n                                        no: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.siste12M√•nederInfotekst.radiobutton.boddIUtlandet',\n                                        ),\n                                    }}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.utenlandsopphold.harBoddINorge.p√•krevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block\n                                visible={visibility.isVisible(UtenlandsoppholdField.skalBoINorgeNeste12Mnd)}\n                                padBottom=\"xxl\"\n                            >\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\n                                    legend={intlUtils(intl, 'utenlandsopphold.neste12M√•neder.sp√∏rsm√•l')}\n                                    name={UtenlandsoppholdField.skalBoINorgeNeste12Mnd}\n                                    labels={{\n                                        yes: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.neste12M√•nederInfotekst.radiobutton.boddINorge',\n                                        ),\n                                        no: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.neste12M√•nederInfotekst.radiobutton.boddIUtlandet',\n                                        ),\n                                    }}\n                                    validate={(skalBoINorgeNeste12Mnd) =>\n                                        validateYesOrNoIsAnswered(\n                                            skalBoINorgeNeste12Mnd,\n                                            intlUtils(intl, 'valideringsfeil.utenlandsopphold.skalBoINorge.p√•krevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n\n                            <Block padBottom=\"xxl\">\n                                <InformasjonOmUtenlandsopphold />\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={RouterLink}\n                                        to={getPreviousSetStepHref('utenlandsopphold')}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                        onClick={() => {\n                                            setNextRoute(getNextRouteForUtenlandsopphold(formValues));\n                                        }}\n                                    >\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </UtenlandsoppholdFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Utenlandsopphold;\n","import actionCreator from '../../context/action/actionCreator';\nimport { useEffect } from 'react';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\n\nconst useUpdateCurrentTilretteleggingId = (currentTilretteleggingId: string | undefined) => {\n    const { dispatch, state } = useSvangerskapspengerContext();\n\n    useEffect(() => {\n        if (state.currentTilretteleggingId !== currentTilretteleggingId) {\n            dispatch(actionCreator.setCurrentTilretteleggingId(currentTilretteleggingId));\n        }\n    }, [currentTilretteleggingId, dispatch, state]);\n};\n\nexport default useUpdateCurrentTilretteleggingId;\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport {\n    DelivisTilretteleggingPeriodeType,\n    TilretteleggingFormData,\n    TilretteleggingFormField,\n} from './tilretteleggingStepFormConfig';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { Arbeidsforholdstype, TilOgMedDatoType, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\n\nexport interface TilretteleggingFormQuestionsPayload extends TilretteleggingFormData {\n    arbeidsType: Arbeidsforholdstype;\n}\n\nexport const TilretteleggingFormConfig: QuestionConfig<TilretteleggingFormQuestionsPayload, TilretteleggingFormField> =\n    {\n        [TilretteleggingFormField.behovForTilretteleggingFom]: {\n            isIncluded: () => true,\n            isAnswered: ({ behovForTilretteleggingFom }) => behovForTilretteleggingFom !== YesOrNo.UNANSWERED,\n        },\n        [TilretteleggingFormField.tilretteleggingType]: {\n            isIncluded: () => true,\n            isAnswered: ({ tilretteleggingType }) => hasValue(tilretteleggingType),\n        },\n        [TilretteleggingFormField.delvisTilretteleggingPeriodeType]: {\n            isIncluded: ({ tilretteleggingType }) =>\n                hasValue(tilretteleggingType) && tilretteleggingType === TilretteleggingstypeOptions.DELVIS,\n            isAnswered: ({ delvisTilretteleggingPeriodeType }) => hasValue(delvisTilretteleggingPeriodeType),\n        },\n\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingFom]: {\n            isIncluded: ({ tilretteleggingType, delvisTilretteleggingPeriodeType }) =>\n                (tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                    delvisTilretteleggingPeriodeType ===\n                        DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN) ||\n                tilretteleggingType === TilretteleggingstypeOptions.INGEN,\n            isAnswered: ({ enPeriodeMedTilretteleggingFom }) => hasValue(enPeriodeMedTilretteleggingFom),\n        },\n\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent]: {\n            isIncluded: ({ tilretteleggingType, delvisTilretteleggingPeriodeType }) =>\n                tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN,\n            isAnswered: ({ enPeriodeMedTilretteleggingStillingsprosent }) =>\n                hasValue(enPeriodeMedTilretteleggingStillingsprosent),\n        },\n\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingTomType]: {\n            isIncluded: ({ tilretteleggingType, delvisTilretteleggingPeriodeType }) =>\n                tilretteleggingType === TilretteleggingstypeOptions.INGEN ||\n                (tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                    delvisTilretteleggingPeriodeType ===\n                        DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN),\n            isAnswered: ({ enPeriodeMedTilretteleggingTomType }) => hasValue(enPeriodeMedTilretteleggingTomType),\n        },\n        [TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato]: {\n            isIncluded: ({\n                tilretteleggingType,\n                delvisTilretteleggingPeriodeType,\n                enPeriodeMedTilretteleggingTomType,\n            }) =>\n                (tilretteleggingType === TilretteleggingstypeOptions.INGEN ||\n                    (tilretteleggingType === TilretteleggingstypeOptions.DELVIS &&\n                        delvisTilretteleggingPeriodeType ===\n                            DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN)) &&\n                enPeriodeMedTilretteleggingTomType === TilOgMedDatoType.VALGFRI_DATO,\n            isAnswered: ({ enPeriodeMedTilretteleggingTilbakeIJobbDato }) =>\n                hasValue(enPeriodeMedTilretteleggingTilbakeIJobbDato),\n        },\n        [TilretteleggingFormField.tilretteleggingstiltak]: {\n            isIncluded: ({ arbeidsType }) =>\n                arbeidsType === Arbeidsforholdstype.FRILANSER || arbeidsType === Arbeidsforholdstype.SELVSTENDIG,\n            isAnswered: ({ tilretteleggingstiltak }) => hasValue(tilretteleggingstiltak),\n        },\n        [TilretteleggingFormField.risikofaktorer]: {\n            isIncluded: ({ arbeidsType }) =>\n                arbeidsType === Arbeidsforholdstype.FRILANSER || arbeidsType === Arbeidsforholdstype.SELVSTENDIG,\n            isAnswered: ({ risikofaktorer }) => hasValue(risikofaktorer),\n        },\n    };\n\nconst tilretteleggingQuestionsConfig = Questions<TilretteleggingFormQuestionsPayload, TilretteleggingFormField>(\n    TilretteleggingFormConfig,\n);\n\nexport default tilretteleggingQuestionsConfig;\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { SkjemaelementFeil, formatDate, intlUtils, validateTextInputField } from '@navikt/fp-common';\nimport {\n    Arbeidsforholdstype,\n    PeriodeMedVariasjon,\n    Stilling,\n    TilOgMedDatoType,\n    TilretteleggingstypeOptions,\n} from 'app/types/Tilrettelegging';\nimport { getTotalStillingsprosentP√•Skj√¶ringstidspunktet } from 'app/utils/arbeidsforholdUtils';\nimport { dagenF√∏r, tiM√•nederSidenDato } from 'app/utils/dateUtils';\nimport { getFloatFromString } from 'app/utils/numberUtils';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH, getSlutteTekst, hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validerStillingsprosentInput = (intl: IntlShape, value: string) => {\n    if (!hasValue(value) || value.trim() === '') {\n        return intlUtils(intl, 'valideringsfeil.stillingsprosent.required');\n    }\n    const stillingsprosent = getFloatFromString(value);\n\n    if (stillingsprosent === undefined) {\n        return intlUtils(intl, 'valideringsfeil.stillingsprosent.m√•V√¶reEtTall');\n    }\n\n    return undefined;\n};\n\nexport const validateStillingsprosentP√•Perioder =\n    (\n        intl: IntlShape,\n        m√•S√∏keSendeNyS√∏knad: boolean,\n        periodeDerTilbakeIFullJobb: PeriodeMedVariasjon | undefined,\n        allePerioder: PeriodeMedVariasjon[] | undefined,\n        opprinneligStillingsProsent: number,\n    ) =>\n    (value: string) => {\n        const valideringsFeil = validerStillingsprosentInput(intl, value);\n        if (valideringsFeil) {\n            return valideringsFeil;\n        }\n        const stillingsprosent = getFloatFromString(value);\n        if (stillingsprosent && opprinneligStillingsProsent > 0 && stillingsprosent > opprinneligStillingsProsent) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.m√•V√¶reMindreEllerLikOpprinneligStillingsprosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n\n        if (stillingsprosent && opprinneligStillingsProsent === 0 && stillingsprosent > 100) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.m√•V√¶reMindreEllerLik100Prosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n\n        if (\n            opprinneligStillingsProsent > 0 &&\n            allePerioder &&\n            allePerioder?.every(\n                (periode) =>\n                    hasValue(periode.stillingsprosent) &&\n                    getFloatFromString(periode.stillingsprosent) === opprinneligStillingsProsent,\n            )\n        ) {\n            return intlUtils(intl, 'valideringsfeil.periode.stillingsprosent.kunFullTilrettelegging', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n        if (\n            opprinneligStillingsProsent === 0 &&\n            allePerioder &&\n            allePerioder?.every(\n                (periode) => hasValue(periode.stillingsprosent) && getFloatFromString(periode.stillingsprosent) === 100,\n            )\n        ) {\n            return intlUtils(intl, 'valideringsfeil.periode.stillingsprosent.kun100Prosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n\n        if (m√•S√∏keSendeNyS√∏knad && periodeDerTilbakeIFullJobb) {\n            return intlUtils(intl, 'valideringsfeil.periode.stillingsprosent.nyS√∏knad', {\n                fom: formatDate(periodeDerTilbakeIFullJobb.fom),\n            });\n        }\n        return undefined;\n    };\n\nexport const validateStillingsprosentEnDelvisPeriode =\n    (intl: IntlShape, fom: string | undefined, stillinger: Stilling[]) => (value: string) => {\n        const initValidering = validerStillingsprosentInput(intl, value);\n        if (initValidering) {\n            return initValidering;\n        }\n\n        const stillingsprosent = getFloatFromString(value)!;\n        if (stillingsprosent <= 0) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.m√•V√¶reSt√∏rreEnn0');\n        }\n        const opprinneligStillingsProsent = getTotalStillingsprosentP√•Skj√¶ringstidspunktet(stillinger, fom);\n        if (opprinneligStillingsProsent === 0 && stillingsprosent >= 100) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.m√•V√¶reMindreEnn100Prosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n        if (opprinneligStillingsProsent > 0 && stillingsprosent >= opprinneligStillingsProsent) {\n            return intlUtils(intl, 'valideringsfeil.stillingsprosent.m√•V√¶reMindreEnnOpprinneligStillingsprosent', {\n                prosent: opprinneligStillingsProsent,\n            });\n        }\n        return undefined;\n    };\nexport const validateTilretteleggingstiltak = (intl: IntlShape, label: string) => (value: string) => {\n    if (!hasValue(value) || value.trim() === '') {\n        return intlUtils(intl, 'valideringsfeil.tilretteleggingstiltak.p√•krevd');\n    }\n\n    if (value.length > TEXT_INPUT_MAX_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.tilretteleggingstiltak.forLang');\n    }\n\n    if (value.length < TEXT_INPUT_MIN_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.tilretteleggingstiltak.forKort');\n    }\n\n    return validateTextInputField(value, label, intl);\n};\n\nexport const validateSammePeriodeFremTilTerminFom =\n    (\n        intl: IntlShape,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        tilretteleggingstype: TilretteleggingstypeOptions,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerF√∏rTermin: boolean,\n    ) =>\n    (value: string) => {\n        const erDelvis = tilretteleggingstype === TilretteleggingstypeOptions.DELVIS;\n        if (!hasValue(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.p√•krevd.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.p√•krevd.ingen');\n        }\n        if (hasValue(value) && !isISODateString(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.gyldigDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.gyldigDato.ingen');\n        }\n\n        if (\n            hasValue(value) &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(value).isBefore(dayjs(behovForTilretteleggingFom), 'd')\n        ) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.f√∏rBehovForTilretteleggingFom.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.f√∏rBehovForTilretteleggingFom.ingen');\n        }\n\n        if (hasValue(value) && dayjs(value).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            if (kanHaSVPFremTilTreUkerF√∏rTermin) {\n                return erDelvis\n                    ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterTreUkerF√∏rTermin.delvis')\n                    : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterTreUkerF√∏rTermin.ingen');\n            }\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterF√∏dsel.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterF√∏dsel.ingen');\n        }\n        if (\n            sluttDatoArbeid &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(behovForTilretteleggingFom).isSameOrBefore(dayjs(sluttDatoArbeid), 'd') &&\n            dayjs(value).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterSluttDatoArbeid.delvis', {\n                      dato: formatDate(sluttDatoArbeid),\n                      navn: arbeidNavn,\n                      slutteTekst,\n                  })\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminFom.etterSluttDatoArbeid.ingen', {\n                      dato: formatDate(sluttDatoArbeid),\n                      navn: arbeidNavn,\n                      slutteTekst,\n                  });\n        }\n        return undefined;\n    };\n\nexport const validateSammePeriodeFremTilTerminTilbakeIJobbDato =\n    (\n        intl: IntlShape,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        fom: string | undefined,\n        type: TilretteleggingstypeOptions,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerF√∏rTermin: boolean,\n    ) =>\n    (value: string) => {\n        const erDelvis = type === TilretteleggingstypeOptions.DELVIS;\n        if (!hasValue(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.p√•krevd.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.p√•krevd.ingen');\n        }\n        if (hasValue(value) && !isISODateString(value)) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.gyldigDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.gyldigDato.ingen');\n        }\n\n        if (\n            hasValue(value) &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(value).isBefore(dayjs(behovForTilretteleggingFom), 'd')\n        ) {\n            return intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.f√∏rBehovForTilretteleggingFom');\n        }\n        if (hasValue(fom) && dayjs(value).isBefore(dayjs(fom), 'd')) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.f√∏rFomDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.f√∏rFomDato.ingen');\n        }\n        if (hasValue(fom) && dayjs(value).isSame(dayjs(fom), 'd')) {\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.sammeSomFomDato.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.sammeSomFomDato.ingen');\n        }\n\n        if (hasValue(value) && dayjs(value).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            if (kanHaSVPFremTilTreUkerF√∏rTermin) {\n                return erDelvis\n                    ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterTreUkerF√∏rTermin.delvis')\n                    : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterTreUkerF√∏rTermin.ingen');\n            }\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterF√∏dsel.delvis')\n                : intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterF√∏dsel.ingen');\n        }\n        if (\n            sluttDatoArbeid &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(behovForTilretteleggingFom).isSameOrBefore(dayjs(sluttDatoArbeid), 'd') &&\n            dayjs(value).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.sammePeriodeFremTilTerminTom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n        return undefined;\n    };\n\nexport const validateBehovForTilretteleggingFom =\n    (\n        intl: IntlShape,\n        sisteDagForSvangerskapspenger: Date,\n        termindato: Date,\n        arbeidNavn: string,\n        startDatoArbeid: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSvpFremTilTreUkerF√∏rTermin: boolean,\n        erFrilansTilrettelegging: boolean,\n    ) =>\n    (fom: string): SkjemaelementFeil => {\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.mangler');\n        }\n        if (!isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.gyldigDato');\n        }\n\n        if (dayjs(fom).isBefore(tiM√•nederSidenDato(termindato), 'd')) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.tiMndSidenTermin');\n        }\n        if (dayjs(fom).isAfter(dagenF√∏r(sisteDagForSvangerskapspenger), 'd')) {\n            return kanHaSvpFremTilTreUkerF√∏rTermin\n                ? intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.m√•V√¶reMerEnnTreUkerF√∏rTermin')\n                : intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.m√•V√¶reF√∏rF√∏dsel');\n        }\n\n        if (dayjs(fom).isBefore(dayjs(startDatoArbeid), 'd')) {\n            const navnTekst = erFrilansTilrettelegging ? intlUtils(intl, 'somFrilanser') : `i ${arbeidNavn}`;\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.f√∏rStartDatoArbeid', {\n                dato: formatDate(startDatoArbeid),\n                navnTekst,\n            });\n        }\n\n        if (sluttDatoArbeid && dayjs(fom).isAfter(dayjs(sluttDatoArbeid), 'd')) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidFom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n        return undefined;\n    };\n\nexport const validateTilrettelagtArbeidType =\n    (intl: IntlShape) =>\n    (type: TilretteleggingstypeOptions): SkjemaelementFeil => {\n        if (!hasValue(type)) {\n            return intlUtils(intl, 'valideringsfeil.tilrettelagtArbeidType.mangler');\n        }\n        return undefined;\n    };\n\nexport const validerTilretteleggingTomType =\n    (\n        intl: IntlShape,\n        tilretteleggingType: TilretteleggingstypeOptions,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerF√∏rTermin: boolean,\n    ) =>\n    (value: TilOgMedDatoType): SkjemaelementFeil => {\n        const erDelvis = tilretteleggingType === TilretteleggingstypeOptions.DELVIS;\n        if (!hasValue(value)) {\n            if (erDelvis) {\n                return kanHaSVPFremTilTreUkerF√∏rTermin\n                    ? intlUtils(intl, 'valideringsfeil.tomType.p√•krevd.delvis.tilTermin')\n                    : intlUtils(intl, 'valideringsfeil.tomType.p√•krevd.delvis.tilF√∏dsel');\n            } else {\n                return kanHaSVPFremTilTreUkerF√∏rTermin\n                    ? intlUtils(intl, 'valideringsfeil.tomType.p√•krevd.ingen.tilTermin')\n                    : intlUtils(intl, 'valideringsfeil.tomType.p√•krevd.ingen.tilF√∏dsel');\n            }\n        }\n        if (\n            sluttDatoArbeid &&\n            hasValue(behovForTilretteleggingFom) &&\n            value === TilOgMedDatoType.SISTE_DAG_MED_SVP &&\n            dayjs(behovForTilretteleggingFom).isSameOrBefore(dayjs(sluttDatoArbeid), 'd') &&\n            dayjs(sisteDagForSvangerskapspenger).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return erDelvis\n                ? intlUtils(intl, 'valideringsfeil.tomType.etterSluttDatoArbeid.delvis', {\n                      slutteTekst,\n                      navn: arbeidNavn,\n                  })\n                : intlUtils(intl, 'valideringsfeil.tomType.etterSluttDatoArbeid.ingen', {\n                      slutteTekst,\n                      navn: arbeidNavn,\n                  });\n        }\n        return undefined;\n    };\n\nexport const validateTilretteleggingPeriodetype =\n    (intl: IntlShape) =>\n    (type: TilretteleggingstypeOptions): SkjemaelementFeil => {\n        if (!hasValue(type)) {\n            return intlUtils(intl, 'valideringsfeil.tilretteleggingPeriodeType.mangler');\n        }\n        return undefined;\n    };\n\nconst finnFeilmeldingForP√•krevd = (intl: IntlShape, type: Arbeidsforholdstype) => {\n    if (type === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.frilanser.p√•krevd');\n    }\n    if (type === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.selvstendig.p√•krevd');\n    }\n    if (type === Arbeidsforholdstype.VIRKSOMHET) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.virksomhet.p√•krevd');\n    }\n    throw Error('Ingen p√•krevd-tekst for type: ' + type);\n};\n\nconst finnFeilmeldingForOverMakslengde = (intl: IntlShape, type: Arbeidsforholdstype) => {\n    if (type === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.frilanser.forLang');\n    }\n    if (type === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.selvstendig.forLang');\n    }\n    throw Error('Ingen makslengde-tekst for type: ' + type);\n};\n\nconst finnFeilmeldingForUnderMinLengde = (intl: IntlShape, type: Arbeidsforholdstype) => {\n    if (type === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.frilanser.forKort');\n    }\n    if (type === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'valideringsfeil.risikofaktorer.selvstendig.forKort');\n    }\n    throw Error('Ingen tekst for type: ' + type);\n};\n\nexport const validateRisikofaktorer =\n    (intl: IntlShape, label: string, type: Arbeidsforholdstype) => (value: string) => {\n        if (!hasValue(value) || value.trim() === '') {\n            return finnFeilmeldingForP√•krevd(intl, type);\n        }\n\n        if (value.length > TEXT_INPUT_MAX_LENGTH) {\n            return finnFeilmeldingForOverMakslengde(intl, type);\n        }\n\n        if (value.length < TEXT_INPUT_MIN_LENGTH) {\n            return finnFeilmeldingForUnderMinLengde(intl, type);\n        }\n\n        return validateTextInputField(value, label, intl);\n    };\n","import { HStack, Label, VStack } from '@navikt/ds-react';\nimport { bemUtils, intlUtils } from '@navikt/fp-common';\nimport { ArbeidsforholdForTilrettelegging, Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { useIntl } from 'react-intl';\nimport './bedriftsbanner.css';\nimport { Buldings3Icon } from '@navikt/aksel-icons';\n\ninterface Props {\n    arbeid: ArbeidsforholdForTilrettelegging;\n}\n\nconst Bedriftsbanner: React.FunctionComponent<Props> = ({ arbeid }) => {\n    const bem = bemUtils('bedriftsbanner');\n    const intl = useIntl();\n    const navn =\n        arbeid.type !== Arbeidsforholdstype.FRILANSER\n            ? arbeid.navn\n            : intlUtils(intl, 'bedriftsbanner.tittel.frilansarbeid');\n    const detailTekst =\n        arbeid.type !== Arbeidsforholdstype.FRILANSER\n            ? intlUtils(intl, 'bedriftsbanner.detail')\n            : intlUtils(intl, 'bedriftsbanner.detail.frilans');\n    return (\n        <div className={bem.block}>\n            <HStack gap=\"5\">\n                <div className={bem.element('ikon')}>\n                    <Buldings3Icon height={'24px'} width={'24px'} />\n                </div>\n                <div className={bem.element('tekst')}>\n                    <VStack gap=\"1\">\n                        <Label size=\"small\">{detailTekst}</Label>\n                        <Label size=\"medium\">{navn}</Label>\n                    </VStack>\n                </div>\n            </HStack>\n        </div>\n    );\n};\n\nexport default Bedriftsbanner;\n","import { Block, ISOStringToDate, Step, StepButtonWrapper, intlUtils } from '@navikt/fp-common';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport stepConfig, { getBackLinkForTilretteleggingSteg, getNextRouteForTilretteleggingSteg } from '../stepsConfig';\nimport { BodyLong, BodyShort, Button, ExpansionCard, ReadMore } from '@navikt/ds-react';\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\nimport {\n    TilretteleggingFormComponents,\n    TilretteleggingFormData,\n    TilretteleggingFormField,\n    DelivisTilretteleggingPeriodeType,\n} from './tilretteleggingStepFormConfig';\nimport {\n    cleanUpTilretteleggingStepFormValues,\n    getBehovForTilretteleggingFomLabel,\n    getLabelPeriodeFom,\n    getLabelPeriodeTom,\n    getLabelPeriodeTomType,\n    getMinDatoPeriodeFom,\n    getMinDatoTilbakeIJobb,\n    getRadioOptionsTomType,\n    getTilretteleggingInitialValues,\n    getTilretteleggingSideTittel,\n    getTilretteleggingTypeLabel,\n    mapOmTilretteleggingFormDataToState,\n} from './tilretteleggingStepUtils';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport { Arbeidsforholdstype, TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport { Link } from 'react-router-dom';\nimport { FunctionComponent, useState } from 'react';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport {\n    getSisteDagForSvangerskapspenger,\n    getKanHaSvpFremTilTreUkerF√∏rTermin,\n    tiM√•nederSidenDato,\n    getDefaultMonth,\n} from 'app/utils/dateUtils';\nimport tilretteleggingQuestionsConfig, {\n    TilretteleggingFormQuestionsPayload,\n} from './tilretteleggingStepQuestionsConfig';\nimport {\n    validateRisikofaktorer,\n    validateSammePeriodeFremTilTerminFom,\n    validateSammePeriodeFremTilTerminTilbakeIJobbDato,\n    validateStillingsprosentEnDelvisPeriode,\n    validateTilretteleggingstiltak,\n    validateBehovForTilretteleggingFom,\n    validateTilrettelagtArbeidType,\n    validateTilretteleggingPeriodetype,\n    validerTilretteleggingTomType,\n} from './tilretteleggingValidation';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH } from 'app/utils/validationUtils';\nimport Bedriftsbanner from 'app/components/bedriftsbanner/Bedriftsbanner';\nimport dayjs from 'dayjs';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\n\nconst finnRisikofaktorLabel = (intl: IntlShape, typeArbeid: Arbeidsforholdstype) => {\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'skjema.risikofaktorer.frilanser');\n    } else {\n        return intlUtils(intl, 'skjema.risikofaktorer.selvstendig');\n    }\n};\n\ninterface Props {\n    id: string;\n    typeArbeid: Arbeidsforholdstype;\n    navn: string;\n}\n\nconst TilretteleggingStep: FunctionComponent<Props> = ({ navn, id, typeArbeid }) => {\n    useUpdateCurrentTilretteleggingId(id);\n    const intl = useIntl();\n    const [nextRoute, setNextRoute] = useState(S√∏knadRoutes.OPPSUMMERING.toString());\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const s√∏knad = useS√∏knad();\n    const { tilrettelegging: tilretteleggingFraState, barn } = s√∏knad;\n    const { termindato } = barn;\n    const { state } = useSvangerskapspengerContext();\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n    const currentTilrettelegging = tilretteleggingFraState.find((t) => t.id === id);\n    const sisteDagForSvangerskapspenger = getSisteDagForSvangerskapspenger(barn);\n    const termindatoDate = ISOStringToDate(termindato);\n    const navnArbeidsgiver = currentTilrettelegging!.arbeidsforhold.navn;\n    const onValidSubmitHandler = (values: Partial<TilretteleggingFormData>) => {\n        const mappedTilrettelegging = mapOmTilretteleggingFormDataToState(\n            id,\n            values,\n            tilretteleggingFraState,\n            currentTilrettelegging!,\n        );\n        return [actionCreator.setTilrettelegging(mappedTilrettelegging)];\n    };\n\n    const erFlereTilrettelegginger = tilretteleggingFraState.length > 1;\n    const sideTittel = getTilretteleggingSideTittel(erFlereTilrettelegginger, intl, navn);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    const risikofaktorerLabel = finnRisikofaktorLabel(intl, typeArbeid);\n\n    const tilretteleggingTypeLabel = getTilretteleggingTypeLabel(\n        erFlereTilrettelegginger,\n        typeArbeid,\n        navnArbeidsgiver,\n        intl,\n    );\n    const behovForTilretteleggingFomLabel = getBehovForTilretteleggingFomLabel(\n        erFlereTilrettelegginger,\n        typeArbeid,\n        navnArbeidsgiver,\n        intl,\n    );\n    const labelTiltak = intlUtils(intl, 'tilrettelegging.tilretteleggingstiltak.label');\n    const harSkjema = typeArbeid === Arbeidsforholdstype.VIRKSOMHET || typeArbeid === Arbeidsforholdstype.PRIVAT;\n    const stillinger = currentTilrettelegging!.arbeidsforhold.stillinger;\n    const sluttDatoArbeid = currentTilrettelegging!.arbeidsforhold.sluttdato;\n    const startDatoArbeid = currentTilrettelegging!.arbeidsforhold.startdato;\n    const minDatoBehovFom = dayjs.max(dayjs(tiM√•nederSidenDato(termindatoDate!)), dayjs(startDatoArbeid))!.toDate();\n    const maxDatoBehovFom = sluttDatoArbeid\n        ? dayjs.min(dayjs(sisteDagForSvangerskapspenger), dayjs(sluttDatoArbeid))!.toDate()\n        : sisteDagForSvangerskapspenger;\n    const kanHaSVPFremTilTreUkerF√∏rTermin = getKanHaSvpFremTilTreUkerF√∏rTermin(barn);\n    const defaultMonthBehovFomDato = getDefaultMonth(minDatoBehovFom, maxDatoBehovFom);\n    return (\n        <TilretteleggingFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getTilretteleggingInitialValues(currentTilrettelegging!)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = tilretteleggingQuestionsConfig.getVisbility({\n                    ...formValues,\n                    arbeidsType: typeArbeid,\n                } as TilretteleggingFormQuestionsPayload);\n                const labelPeriodeFomTekst = getLabelPeriodeFom(formValues.tilretteleggingType, intl);\n                const labelPeriodeTomTypeTekst = getLabelPeriodeTomType(formValues.tilretteleggingType, intl);\n                const labelPeriodeTomTekst = getLabelPeriodeTom(formValues.tilretteleggingType, intl);\n                const minDatoPeriodeFom = getMinDatoPeriodeFom(formValues, minDatoBehovFom);\n                const defaultMonthPeriodeFom = getDefaultMonth(minDatoPeriodeFom, maxDatoBehovFom);\n                const minDatoTilbakeIJobb = getMinDatoTilbakeIJobb(formValues);\n                const defaultMonthTilbakeIJobb = getDefaultMonth(minDatoTilbakeIJobb, maxDatoBehovFom);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId={`tilrettelegging-${id}`}\n                        pageTitle={sideTittel}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <TilretteleggingFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanUpTilretteleggingStepFormValues(values, visibility)}\n                        >\n                            {erFlereTilrettelegginger && (\n                                <Block padBottom=\"xxl\">\n                                    <Bedriftsbanner arbeid={currentTilrettelegging!.arbeidsforhold} />\n                                </Block>\n                            )}\n                            <Block padBottom=\"xxl\">\n                                <TilretteleggingFormComponents.DatePicker\n                                    name={TilretteleggingFormField.behovForTilretteleggingFom}\n                                    label={behovForTilretteleggingFomLabel}\n                                    placeholder={'dd.mm.√•√•√•√•'}\n                                    description={\n                                        harSkjema\n                                            ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidFom.description')\n                                            : ''\n                                    }\n                                    minDate={minDatoBehovFom}\n                                    maxDate={maxDatoBehovFom}\n                                    validate={validateBehovForTilretteleggingFom(\n                                        intl,\n                                        sisteDagForSvangerskapspenger,\n                                        termindatoDate!,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        startDatoArbeid,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerF√∏rTermin,\n                                        typeArbeid === Arbeidsforholdstype.FRILANSER,\n                                    )}\n                                    dayPickerProps={{ defaultMonth: defaultMonthBehovFomDato }}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(TilretteleggingFormField.risikofaktorer)}\n                            >\n                                <TilretteleggingFormComponents.Textarea\n                                    name={TilretteleggingFormField.risikofaktorer}\n                                    label={risikofaktorerLabel}\n                                    minLength={TEXT_INPUT_MIN_LENGTH}\n                                    maxLength={TEXT_INPUT_MAX_LENGTH}\n                                    validate={validateRisikofaktorer(intl, risikofaktorerLabel, typeArbeid)}\n                                    description={intlUtils(intl, 'skjema.risikofaktorer.description')}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(TilretteleggingFormField.tilretteleggingstiltak)}\n                            >\n                                <Block padBottom=\"m\">\n                                    <TilretteleggingFormComponents.Textarea\n                                        name={TilretteleggingFormField.tilretteleggingstiltak}\n                                        label={labelTiltak}\n                                        minLength={TEXT_INPUT_MIN_LENGTH}\n                                        maxLength={TEXT_INPUT_MAX_LENGTH}\n                                        validate={validateTilretteleggingstiltak(intl, labelTiltak)}\n                                    />\n                                </Block>\n                                <ReadMore size=\"small\" header={intlUtils(intl, 'tilrettelegging.tiltak.info.title')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"tilrettelegging.tiltak.info.description\"></FormattedMessage>\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <Block padBottom=\"m\">\n                                    <TilretteleggingFormComponents.RadioGroup\n                                        name={TilretteleggingFormField.tilretteleggingType}\n                                        legend={tilretteleggingTypeLabel}\n                                        description={\n                                            harSkjema\n                                                ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                                : ''\n                                        }\n                                        radios={[\n                                            {\n                                                label: intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.delvis'),\n                                                value: TilretteleggingstypeOptions.DELVIS,\n                                            },\n                                            {\n                                                label: intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.ingen'),\n                                                value: TilretteleggingstypeOptions.INGEN,\n                                            },\n                                        ]}\n                                        validate={validateTilrettelagtArbeidType(intl)}\n                                    />\n                                </Block>\n                                <ReadMore\n                                    header={intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.info.tittel')}\n                                >\n                                    <BodyShort>\n                                        <FormattedMessage id=\"tilrettelegging.tilrettelagtArbeidType.info.tekst\"></FormattedMessage>\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.delvisTilretteleggingPeriodeType,\n                                )}\n                            >\n                                <TilretteleggingFormComponents.RadioGroup\n                                    name={TilretteleggingFormField.delvisTilretteleggingPeriodeType}\n                                    legend={intlUtils(intl, 'tilrettelegging.tilretteleggingPeriodetype.label')}\n                                    description={\n                                        harSkjema\n                                            ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                            : ''\n                                    }\n                                    radios={[\n                                        {\n                                            label: intlUtils(intl, 'tilrettelegging.tilretteleggingPeriodetype.en'),\n                                            value: DelivisTilretteleggingPeriodeType.SAMMME_PERIODE_FREM_TIL_TERMIN,\n                                        },\n                                        {\n                                            label: intlUtils(\n                                                intl,\n                                                'tilrettelegging.tilretteleggingPeriodetype.variert',\n                                            ),\n                                            value: DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER,\n                                        },\n                                    ]}\n                                    validate={validateTilretteleggingPeriodetype(intl)}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent,\n                                )}\n                            >\n                                <Block padBottom=\"m\">\n                                    <TilretteleggingFormComponents.NumberInput\n                                        name={TilretteleggingFormField.enPeriodeMedTilretteleggingStillingsprosent}\n                                        label={intlUtils(intl, 'tilrettelegging.stillingsprosent.label')}\n                                        description={\n                                            harSkjema\n                                                ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                                : ''\n                                        }\n                                        validate={validateStillingsprosentEnDelvisPeriode(\n                                            intl,\n                                            formValues.enPeriodeMedTilretteleggingFom,\n                                            stillinger,\n                                        )}\n                                    />\n                                </Block>\n                                <ReadMore\n                                    header={intlUtils(\n                                        intl,\n                                        'tilrettelegging.varierendePerioderStillingsprosent.info.tittel',\n                                    )}\n                                >\n                                    <Block padBottom=\"l\">\n                                        <BodyShort>\n                                            <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del1\"></FormattedMessage>\n                                        </BodyShort>\n                                    </Block>\n                                    <Block>\n                                        <BodyShort>\n                                            <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del2\"></FormattedMessage>\n                                        </BodyShort>\n                                    </Block>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(TilretteleggingFormField.enPeriodeMedTilretteleggingFom)}\n                            >\n                                <TilretteleggingFormComponents.DatePicker\n                                    name={TilretteleggingFormField.enPeriodeMedTilretteleggingFom}\n                                    label={labelPeriodeFomTekst}\n                                    description={\n                                        harSkjema\n                                            ? intlUtils(intl, 'tilrettelegging.tilrettelagtArbeidType.description')\n                                            : ''\n                                    }\n                                    minDate={new Date(minDatoPeriodeFom)}\n                                    maxDate={maxDatoBehovFom}\n                                    validate={validateSammePeriodeFremTilTerminFom(\n                                        intl,\n                                        formValues.behovForTilretteleggingFom,\n                                        sisteDagForSvangerskapspenger,\n                                        formValues.tilretteleggingType!,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerF√∏rTermin,\n                                    )}\n                                    dayPickerProps={{ defaultMonth: defaultMonthPeriodeFom }}\n                                />\n                            </Block>\n\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.enPeriodeMedTilretteleggingTomType,\n                                )}\n                            >\n                                <TilretteleggingFormComponents.RadioGroup\n                                    name={TilretteleggingFormField.enPeriodeMedTilretteleggingTomType}\n                                    legend={labelPeriodeTomTypeTekst}\n                                    radios={getRadioOptionsTomType(intl, kanHaSVPFremTilTreUkerF√∏rTermin)}\n                                    validate={validerTilretteleggingTomType(\n                                        intl,\n                                        formValues.tilretteleggingType!,\n                                        formValues.behovForTilretteleggingFom,\n                                        sisteDagForSvangerskapspenger,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerF√∏rTermin,\n                                    )}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato,\n                                )}\n                            >\n                                <TilretteleggingFormComponents.DatePicker\n                                    name={TilretteleggingFormField.enPeriodeMedTilretteleggingTilbakeIJobbDato}\n                                    label={labelPeriodeTomTekst}\n                                    minDate={minDatoTilbakeIJobb}\n                                    maxDate={maxDatoBehovFom}\n                                    validate={validateSammePeriodeFremTilTerminTilbakeIJobbDato(\n                                        intl,\n                                        formValues.behovForTilretteleggingFom,\n                                        sisteDagForSvangerskapspenger,\n                                        formValues.enPeriodeMedTilretteleggingFom,\n                                        formValues.tilretteleggingType!,\n                                        currentTilrettelegging!.arbeidsforhold.navn,\n                                        sluttDatoArbeid,\n                                        kanHaSVPFremTilTreUkerF√∏rTermin,\n                                    )}\n                                    dayPickerProps={{ defaultMonth: defaultMonthTilbakeIJobb }}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <ExpansionCard size=\"small\" aria-label=\"\">\n                                    <ExpansionCard.Header>\n                                        <ExpansionCard.Title size=\"small\" as=\"h2\">\n                                            <FormattedMessage id=\"tilrettelegging.expansion.tittel\" />\n                                        </ExpansionCard.Title>\n                                    </ExpansionCard.Header>\n                                    <ExpansionCard.Content>\n                                        <Block padBottom=\"l\">\n                                            <BodyLong>\n                                                <FormattedMessage\n                                                    id=\"tilrettelegging.expansion.tekst\"\n                                                    values={{\n                                                        em: (msg: any) => <em>{msg}</em>,\n                                                    }}\n                                                />\n                                            </BodyLong>\n                                        </Block>\n                                    </ExpansionCard.Content>\n                                </ExpansionCard>\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkForTilretteleggingSteg(state.currentTilretteleggingId)}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                        onClick={() =>\n                                            setNextRoute(\n                                                getNextRouteForTilretteleggingSteg(\n                                                    formValues,\n                                                    tilretteleggingFraState,\n                                                    currentTilrettelegging!.id,\n                                                ),\n                                            )\n                                        }\n                                    >\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </TilretteleggingFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default TilretteleggingStep;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum OppsummeringFormField {\n    harGodkjentOppsummering = 'harGodkjentOppsummering',\n}\n\nexport interface OppsummeringFormData {\n    [OppsummeringFormField.harGodkjentOppsummering]: boolean;\n}\n\nconst initialOppsummeringValues: OppsummeringFormData = {\n    [OppsummeringFormField.harGodkjentOppsummering]: false,\n};\n\nexport const getInitialOppsummeringValues = (): OppsummeringFormData => {\n    return initialOppsummeringValues;\n};\n\nexport const OppsummeringFormComponents = getTypedFormComponents<OppsummeringFormField, OppsummeringFormData>();\n","import { intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\n\nexport const validateHarGodkjentOppsummering = (intl: IntlShape) => (value: boolean) => {\n    if (value !== true) {\n        return intlUtils(intl, 'valideringsfeil.oppsummering.harGodkjentOppsummering.p√•krevd');\n    }\n\n    return undefined;\n};\n","export enum RequestStatus {\n    'UNFETCHED' = 'Unfetched',\n    'IN_PROGRESS' = 'InProgress',\n    'FINISHED' = 'Finished',\n}\n","import Environment from 'app/Environment';\n\nexport const redirect = (url: string) => {\n    window.location.href = url;\n};\n\nexport const redirectToLogin = () => {\n    window.location.replace(Environment.LOGIN_URL + '?redirect=' + window.location.origin);\n};\n","import getAxiosInstance from 'app/api/apiInterceptor';\nimport { RequestStatus } from 'app/types/RequestStatus';\nimport { AxiosError, AxiosRequestConfig } from 'axios';\nimport { useEffect, useState } from 'react';\nimport { redirectToLogin } from '../redirectUtils';\n\ntype Options = {\n    config?: AxiosRequestConfig;\n    fnr?: string;\n    isSuspended?: boolean;\n};\n\nconst DEFAULT_OPTIONS: Options = {\n    config: {},\n    isSuspended: false,\n};\n\nexport const useGetRequest = <T>(url: string, options: Options = DEFAULT_OPTIONS) => {\n    const [data, setData] = useState<T>();\n    const [error, setError] = useState<AxiosError<any> | null>(null);\n    const [requestStatus, setRequestStatus] = useState<RequestStatus>(RequestStatus.UNFETCHED);\n    const axiosInstance = options.fnr ? getAxiosInstance(options.fnr) : getAxiosInstance();\n\n    useEffect(() => {\n        if (!options.isSuspended && requestStatus === RequestStatus.UNFETCHED) {\n            setRequestStatus(RequestStatus.IN_PROGRESS);\n\n            axiosInstance\n                .get(url, options.config)\n                .then((res) => {\n                    res.data === '' ? setData(undefined) : setData(res.data);\n                    setRequestStatus(RequestStatus.FINISHED);\n                })\n                .catch((err) => {\n                    if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setError(err);\n                    }\n                    setRequestStatus(RequestStatus.FINISHED);\n                });\n        }\n    }, [options, url, axiosInstance, requestStatus]);\n\n    return { data, error, requestStatus };\n};\n","import Environment from 'app/Environment';\nimport { S√∏kerinfoDTO } from 'app/types/S√∏kerinfoDTO';\nimport { useGetRequest } from 'app/utils/hooks/useGetRequest';\nimport axios from 'axios';\n\nconst apiBaseUrl = Environment.REST_API_URL;\nconst sendS√∏knadUrl = `${apiBaseUrl}/soknad`;\n\nconst useS√∏kerinfo = () => {\n    const { data, error } = useGetRequest<S√∏kerinfoDTO>('/sokerinfo', { config: { withCredentials: true } });\n\n    return {\n        s√∏kerinfoData: data,\n        s√∏kerinfoError: error,\n    };\n};\n\nconst sendS√∏knad = (s√∏knad: any, signal: AbortSignal) => {\n    return axios.post(sendS√∏knadUrl, s√∏knad, {\n        withCredentials: true,\n        headers: {\n            'content-type': 'application/json;',\n        },\n        signal,\n    });\n};\n\nconst Api = {\n    useS√∏kerinfo,\n    sendS√∏knad,\n};\n\nexport default Api;\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { N√¶ringstype } from 'app/types/EgenN√¶ring';\n\nexport enum EgenN√¶ringFormField {\n    egenN√¶ringType = 'egenN√¶ringType',\n    egenN√¶ringNavn = 'egenN√¶ringNavn',\n    egenN√¶ringRegistrertINorge = 'egenN√¶ringRegistrertINorge',\n    egenN√¶ringOrgnr = 'egenN√¶ringOrgnr',\n    egenN√¶ringLand = 'egenN√¶ringLand',\n    egenN√¶ringFom = 'egenN√¶ringFom',\n    egenN√¶ringTom = 'egenN√¶ringTom',\n    egenN√¶ringP√•g√•ende = 'egenN√¶ringP√•g√•ende',\n    egenN√¶ringYrkesAktivDato = 'egenN√¶ringYrkesAktivDato',\n    egenN√¶ringResultat = 'egenN√¶ringResultat',\n    egenN√¶ringBlittYrkesaktivDe3Siste√Örene = 'egenN√¶ringBlittYrkesaktivDe3Siste√Örene',\n    egenN√¶ringHattVarigEndringDeSiste4√Örene = 'egenN√¶ringHattVarigEndringDeSiste4√Örene',\n    egenN√¶ringVarigEndringDato = 'egenN√¶ringVarigEndringDato',\n    egenN√¶ringVarigEndringInntektEtterEndring = 'egenN√¶ringVarigEndringInntektEtterEndring',\n    egenN√¶ringVarigEndringBeskrivelse = 'egenN√¶ringVarigEndringBeskrivelse',\n}\n\nexport interface EgenN√¶ringFormData {\n    [EgenN√¶ringFormField.egenN√¶ringType]: N√¶ringstype;\n    [EgenN√¶ringFormField.egenN√¶ringNavn]: string;\n    [EgenN√¶ringFormField.egenN√¶ringRegistrertINorge]: YesOrNo;\n    [EgenN√¶ringFormField.egenN√¶ringOrgnr]: string;\n    [EgenN√¶ringFormField.egenN√¶ringLand]: string;\n    [EgenN√¶ringFormField.egenN√¶ringFom]: string;\n    [EgenN√¶ringFormField.egenN√¶ringTom]: string;\n    [EgenN√¶ringFormField.egenN√¶ringP√•g√•ende]: YesOrNo;\n    [EgenN√¶ringFormField.egenN√¶ringYrkesAktivDato]: string;\n    [EgenN√¶ringFormField.egenN√¶ringResultat]: string;\n    [EgenN√¶ringFormField.egenN√¶ringBlittYrkesaktivDe3Siste√Örene]: YesOrNo;\n    [EgenN√¶ringFormField.egenN√¶ringHattVarigEndringDeSiste4√Örene]: YesOrNo;\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringDato]: string | undefined;\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringInntektEtterEndring]: string | undefined;\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringBeskrivelse]: string | undefined;\n}\n\nexport const initialEgenN√¶ringFormData: EgenN√¶ringFormData = {\n    [EgenN√¶ringFormField.egenN√¶ringType]: undefined!,\n    [EgenN√¶ringFormField.egenN√¶ringNavn]: '',\n    [EgenN√¶ringFormField.egenN√¶ringRegistrertINorge]: YesOrNo.UNANSWERED,\n    [EgenN√¶ringFormField.egenN√¶ringOrgnr]: '',\n    [EgenN√¶ringFormField.egenN√¶ringLand]: '',\n    [EgenN√¶ringFormField.egenN√¶ringTom]: '',\n    [EgenN√¶ringFormField.egenN√¶ringFom]: '',\n    [EgenN√¶ringFormField.egenN√¶ringP√•g√•ende]: YesOrNo.UNANSWERED,\n    [EgenN√¶ringFormField.egenN√¶ringResultat]: '',\n    [EgenN√¶ringFormField.egenN√¶ringBlittYrkesaktivDe3Siste√Örene]: YesOrNo.UNANSWERED,\n    [EgenN√¶ringFormField.egenN√¶ringYrkesAktivDato]: '',\n    [EgenN√¶ringFormField.egenN√¶ringHattVarigEndringDeSiste4√Örene]: YesOrNo.UNANSWERED,\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringDato]: '',\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringInntektEtterEndring]: '',\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringBeskrivelse]: '',\n};\n\nexport const EgenN√¶ringFormComponents = getTypedFormComponents<EgenN√¶ringFormField, EgenN√¶ringFormData>();\n","import { EgenN√¶ringFormData, EgenN√¶ringFormField, initialEgenN√¶ringFormData } from './egenN√¶ringFormConfig';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { EgenN√¶ring } from 'app/types/EgenN√¶ring';\nimport dayjs from 'dayjs';\nimport { date4YearsAgo } from 'app/utils/dateUtils';\nimport { QuestionVisibility } from '@navikt/sif-common-formik-ds/lib';\nimport { replaceInvisibleCharsWithSpace } from '@navikt/fp-common/src/common/utils/stringUtils';\nimport { S√∏ker } from 'app/types/S√∏ker';\nimport { hasValue } from 'app/utils/validationUtils';\n\nexport const erVirksomhetRegnetSomNyoppstartet = (oppstartsdato: Date | undefined): boolean => {\n    if (!oppstartsdato) {\n        return true;\n    }\n\n    return dayjs(oppstartsdato).startOf('day').isAfter(date4YearsAgo, 'day');\n};\n\nexport const mapEgenN√¶ringFormValuesToState = (formValues: EgenN√¶ringFormData): EgenN√¶ring => {\n    const hattVarigEndring = convertYesOrNoOrUndefinedToBoolean(formValues.egenN√¶ringHattVarigEndringDeSiste4√Örene);\n    return {\n        n√¶ringstyper: [formValues.egenN√¶ringType],\n        tidsperiode: {\n            fom: formValues.egenN√¶ringFom,\n            tom: formValues.egenN√¶ringTom,\n        },\n        p√•g√•ende: convertYesOrNoOrUndefinedToBoolean(formValues.egenN√¶ringP√•g√•ende)!,\n        n√¶ringsinntekt: hasValue(formValues.egenN√¶ringResultat) ? formValues.egenN√¶ringResultat : undefined,\n        navnP√•N√¶ringen: replaceInvisibleCharsWithSpace(formValues.egenN√¶ringNavn),\n        organisasjonsnummer: hasValue(formValues.egenN√¶ringOrgnr.trim())\n            ? formValues.egenN√¶ringOrgnr.trim()\n            : undefined,\n        registrertINorge: convertYesOrNoOrUndefinedToBoolean(formValues.egenN√¶ringRegistrertINorge)!,\n        registrertILand: hasValue(formValues.egenN√¶ringLand) ? formValues.egenN√¶ringLand : undefined,\n        harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene: convertYesOrNoOrUndefinedToBoolean(\n            formValues.egenN√¶ringBlittYrkesaktivDe3Siste√Örene,\n        )!,\n        oppstartsdato: formValues.egenN√¶ringYrkesAktivDato,\n        hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r: hattVarigEndring,\n        varigEndringBeskrivelse:\n            hattVarigEndring && formValues.egenN√¶ringVarigEndringBeskrivelse\n                ? replaceInvisibleCharsWithSpace(formValues.egenN√¶ringVarigEndringBeskrivelse)\n                : undefined,\n        varigEndringDato: formValues.egenN√¶ringVarigEndringDato,\n        varigEndringInntektEtterEndring: formValues.egenN√¶ringVarigEndringInntektEtterEndring,\n    };\n};\n\nexport const getInitialEgenN√¶ringFormValues = (n√¶ring: EgenN√¶ring | undefined): EgenN√¶ringFormData => {\n    if (n√¶ring === undefined) {\n        return initialEgenN√¶ringFormData;\n    }\n\n    return {\n        ...initialEgenN√¶ringFormData,\n        egenN√¶ringType: n√¶ring.n√¶ringstyper[0],\n        egenN√¶ringNavn: n√¶ring.navnP√•N√¶ringen || '',\n        egenN√¶ringRegistrertINorge: convertBooleanOrUndefinedToYesOrNo(n√¶ring.registrertINorge),\n        egenN√¶ringLand: n√¶ring.registrertILand || '',\n        egenN√¶ringFom: n√¶ring.tidsperiode.fom,\n        egenN√¶ringTom: n√¶ring.tidsperiode.tom,\n        egenN√¶ringOrgnr: n√¶ring.organisasjonsnummer || '',\n        egenN√¶ringP√•g√•ende: convertBooleanOrUndefinedToYesOrNo(n√¶ring.p√•g√•ende),\n        egenN√¶ringResultat: n√¶ring.n√¶ringsinntekt || '',\n        egenN√¶ringBlittYrkesaktivDe3Siste√Örene: convertBooleanOrUndefinedToYesOrNo(\n            n√¶ring.harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene,\n        ),\n        egenN√¶ringYrkesAktivDato: n√¶ring.oppstartsdato || '',\n        egenN√¶ringHattVarigEndringDeSiste4√Örene: convertBooleanOrUndefinedToYesOrNo(\n            n√¶ring.hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r,\n        ),\n        egenN√¶ringVarigEndringDato: n√¶ring.varigEndringDato,\n        egenN√¶ringVarigEndringBeskrivelse: n√¶ring.varigEndringBeskrivelse,\n        egenN√¶ringVarigEndringInntektEtterEndring: n√¶ring.varigEndringInntektEtterEndring,\n    };\n};\n\nexport const mapN√¶ringDataToS√∏kerState = (s√∏ker: S√∏ker, values: EgenN√¶ringFormData): S√∏ker => {\n    const n√¶ring = mapEgenN√¶ringFormValuesToState(values);\n    return {\n        ...s√∏ker,\n        selvstendigN√¶ringsdrivendeInformasjon: n√¶ring,\n    };\n};\n\nexport const cleanupEgenN√¶ringFormData = (\n    values: EgenN√¶ringFormData,\n    visibility: QuestionVisibility<EgenN√¶ringFormField>,\n) => {\n    const cleanedData: EgenN√¶ringFormData = {\n        ...values,\n        egenN√¶ringOrgnr: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringOrgnr)\n            ? values.egenN√¶ringOrgnr\n            : initialEgenN√¶ringFormData.egenN√¶ringOrgnr,\n        egenN√¶ringLand: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringLand)\n            ? values.egenN√¶ringLand\n            : initialEgenN√¶ringFormData.egenN√¶ringLand,\n        egenN√¶ringTom: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringTom)\n            ? values.egenN√¶ringTom\n            : initialEgenN√¶ringFormData.egenN√¶ringTom,\n        egenN√¶ringResultat: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringResultat)\n            ? values.egenN√¶ringResultat\n            : initialEgenN√¶ringFormData.egenN√¶ringResultat,\n        egenN√¶ringHattVarigEndringDeSiste4√Örene: visibility.isVisible(\n            EgenN√¶ringFormField.egenN√¶ringHattVarigEndringDeSiste4√Örene,\n        )\n            ? values.egenN√¶ringHattVarigEndringDeSiste4√Örene\n            : initialEgenN√¶ringFormData.egenN√¶ringHattVarigEndringDeSiste4√Örene,\n        egenN√¶ringVarigEndringDato: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringVarigEndringDato)\n            ? values.egenN√¶ringVarigEndringDato\n            : initialEgenN√¶ringFormData.egenN√¶ringVarigEndringDato,\n        egenN√¶ringVarigEndringBeskrivelse: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringVarigEndringBeskrivelse)\n            ? values.egenN√¶ringVarigEndringBeskrivelse\n            : initialEgenN√¶ringFormData.egenN√¶ringVarigEndringBeskrivelse,\n        egenN√¶ringVarigEndringInntektEtterEndring: visibility.isVisible(\n            EgenN√¶ringFormField.egenN√¶ringVarigEndringInntektEtterEndring,\n        )\n            ? values.egenN√¶ringVarigEndringInntektEtterEndring\n            : initialEgenN√¶ringFormData.egenN√¶ringVarigEndringInntektEtterEndring,\n        egenN√¶ringBlittYrkesaktivDe3Siste√Örene: visibility.isVisible(\n            EgenN√¶ringFormField.egenN√¶ringBlittYrkesaktivDe3Siste√Örene,\n        )\n            ? values.egenN√¶ringBlittYrkesaktivDe3Siste√Örene\n            : initialEgenN√¶ringFormData.egenN√¶ringBlittYrkesaktivDe3Siste√Örene,\n        egenN√¶ringYrkesAktivDato: visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringYrkesAktivDato)\n            ? values.egenN√¶ringYrkesAktivDato\n            : initialEgenN√¶ringFormData.egenN√¶ringYrkesAktivDato,\n    };\n    return cleanedData;\n};\n","import { TidsperiodeMedValgfriSluttdato } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { TidsperiodeDTOMedValgfriSluttdato } from './TidsperiodeDTO';\n\nexport enum AnnenInntektType {\n    JOBB_I_UTLANDET = 'JOBB_I_UTLANDET',\n}\n\nexport interface ArbeidIUtlandetInput {\n    fom: string;\n    tom: string | undefined;\n    p√•g√•ende: YesOrNo;\n    arbeidsgiverNavn: string;\n    land: string;\n}\n\nexport interface ArbeidIUtlandet {\n    type: AnnenInntektType.JOBB_I_UTLANDET;\n    tidsperiode: TidsperiodeMedValgfriSluttdato;\n    p√•g√•ende: boolean;\n    arbeidsgiverNavn: string;\n    land: string;\n}\n\nexport interface ArbeidIUtlandetDTO extends Omit<ArbeidIUtlandet, 'tidsperiode' | 'p√•g√•ende'> {\n    tidsperiode: TidsperiodeDTOMedValgfriSluttdato;\n}\n","import { Attachment } from './Attachment';\nimport { Barn, BarnDTO as BarnDTO } from './Barn';\nimport InformasjonOmUtenlandsopphold, { InformasjonOmUtenlandsoppholdDTO } from './InformasjonOmUtenlandsopphold';\nimport { S√∏ker, S√∏kerDTO } from './S√∏ker';\nimport { Tilrettelegging, TilretteleggingDTO } from './Tilrettelegging';\n\nexport interface S√∏knad {\n    barn: Barn;\n    harGodkjentVilk√•r: boolean;\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold;\n    s√∏ker: S√∏ker;\n    tilrettelegging: Tilrettelegging[];\n    harGodkjentOppsummering: boolean;\n}\n\nexport enum S√∏knadstype {\n    'SVANGERSKAPSPENGER' = 'svangerskapspenger',\n}\n\nexport interface S√∏knadDTO\n    extends Omit<\n        S√∏knad,\n        | 'informasjonOmUtenlandsopphold'\n        | 'barn'\n        | 'tilrettelegging'\n        | 's√∏ker'\n        | 'harGodkjentOppsummering'\n        | 'harGodkjentVilk√•r'\n    > {\n    type: S√∏knadstype;\n    erEndringss√∏knad: boolean;\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsoppholdDTO;\n    barn: BarnDTO;\n    tilrettelegging: TilretteleggingDTO[];\n    s√∏ker: S√∏kerDTO;\n    vedlegg: Attachment[];\n}\n","import { ISOStringToDate } from '@navikt/fp-common';\nimport { erVirksomhetRegnetSomNyoppstartet } from 'app/steps/egen-n√¶ring/egenN√¶ringFormUtils';\nimport { AnnenInntektType, ArbeidIUtlandet, ArbeidIUtlandetDTO } from 'app/types/ArbeidIUtlandet';\nimport { ArbeidsforholdDTO } from 'app/types/Arbeidsforhold';\nimport { Barn, BarnDTO } from 'app/types/Barn';\nimport { EgenN√¶ring, EgenN√¶ringDTO } from 'app/types/EgenN√¶ring';\nimport { Frilans, FrilansDTO } from 'app/types/Frilans';\nimport InformasjonOmUtenlandsopphold, {\n    InformasjonOmUtenlandsoppholdDTO,\n    Utenlandsopphold,\n    UtenlandsoppholdDTO,\n} from 'app/types/InformasjonOmUtenlandsopphold';\nimport { S√∏ker, S√∏kerDTO } from 'app/types/S√∏ker';\nimport { S√∏knad, S√∏knadDTO, S√∏knadstype } from 'app/types/S√∏knad';\nimport {\n    Arbeidsforholdstype,\n    DelvisTilretteleggingDTO,\n    HelTilretteleggingDTO,\n    IngenTilretteleggingDTO,\n    TilretteleggingDTO,\n    TilretteleggingPeriode,\n    Tilretteleggingstype,\n} from 'app/types/Tilrettelegging';\n\nconst getArbeidsforholdForInnsending = (periode: TilretteleggingPeriode): ArbeidsforholdDTO => {\n    if (\n        periode.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER ||\n        periode.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG\n    ) {\n        return {\n            type: periode.arbeidsforhold.type,\n            risikoFaktorer: periode.risikofaktorer!,\n            tilretteleggingstiltak: periode.tilretteleggingstiltak!,\n        };\n    }\n    return {\n        id: periode.arbeidsforhold.arbeidsgiverId!,\n        type: periode.arbeidsforhold.type,\n    };\n};\n\nconst mapBostedUtlandTilDTO = (utenlandsopphold: Utenlandsopphold): UtenlandsoppholdDTO => {\n    return {\n        land: utenlandsopphold.land,\n        tidsperiode: {\n            fom: ISOStringToDate(utenlandsopphold.tidsperiode.fom)!,\n            tom: ISOStringToDate(utenlandsopphold.tidsperiode.tom)!,\n        },\n    };\n};\n\nconst mapUtenlandsOppholdForInnsending = (\n    utenlandsopphold: InformasjonOmUtenlandsopphold,\n): InformasjonOmUtenlandsoppholdDTO => {\n    return {\n        iNorgeP√•Hendelsestidspunktet: utenlandsopphold.iNorgeP√•Hendelsestidspunktet,\n        iNorgeSiste12Mnd: utenlandsopphold.iNorgeSiste12Mnd,\n        iNorgeNeste12Mnd: utenlandsopphold.iNorgeNeste12Mnd,\n        jobbetINorgeSiste12Mnd: utenlandsopphold.jobbetINorgeSiste12Mnd,\n        tidligereOpphold: utenlandsopphold.tidligereOpphold.map((opphold) => {\n            return mapBostedUtlandTilDTO(opphold);\n        }),\n        senereOpphold: utenlandsopphold.senereOpphold.map((opphold) => {\n            return mapBostedUtlandTilDTO(opphold);\n        }),\n    };\n};\n\nconst mapBarnForInnsending = (barn: Barn): BarnDTO => {\n    return {\n        erBarnetF√∏dt: barn.erBarnetF√∏dt,\n        termindato: ISOStringToDate(barn.termindato)!,\n        f√∏dselsdatoer: barn.f√∏dselsdato ? [ISOStringToDate(barn.f√∏dselsdato)!] : undefined,\n    };\n};\n\nconst mapHelTilretteleggingForInnsending = (\n    periode: TilretteleggingPeriode,\n    arbeidsforhold: ArbeidsforholdDTO,\n): HelTilretteleggingDTO => {\n    return {\n        type: Tilretteleggingstype.HEL,\n        tilrettelagtArbeidFom: ISOStringToDate(periode.fom)!,\n        arbeidsforhold,\n        vedlegg: periode.vedlegg,\n        behovForTilretteleggingFom: ISOStringToDate(periode.behovForTilretteleggingFom)!,\n    };\n};\n\nconst mapDelvisTilretteleggingForInnsending = (\n    periode: TilretteleggingPeriode,\n    arbeidsforhold: ArbeidsforholdDTO,\n): DelvisTilretteleggingDTO => {\n    return {\n        type: Tilretteleggingstype.DELVIS,\n        tilrettelagtArbeidFom: ISOStringToDate(periode.fom)!,\n        arbeidsforhold,\n        vedlegg: periode.vedlegg,\n        behovForTilretteleggingFom: ISOStringToDate(periode.behovForTilretteleggingFom)!,\n        stillingsprosent: periode.stillingsprosent,\n    };\n};\n\nconst mapIngenTilretteleggingForInnsending = (\n    periode: TilretteleggingPeriode,\n    arbeidsforhold: ArbeidsforholdDTO,\n): IngenTilretteleggingDTO => {\n    return {\n        type: Tilretteleggingstype.INGEN,\n        slutteArbeidFom: ISOStringToDate(periode.fom)!,\n        arbeidsforhold,\n        vedlegg: periode.vedlegg,\n        behovForTilretteleggingFom: ISOStringToDate(periode.behovForTilretteleggingFom)!,\n    };\n};\n\nconst mapTilretteleggingPeriodeForInnsending = (periode: TilretteleggingPeriode): TilretteleggingDTO => {\n    const mappedArbeid = getArbeidsforholdForInnsending(periode);\n    if (periode.type === Tilretteleggingstype.HEL) {\n        return mapHelTilretteleggingForInnsending(periode, mappedArbeid);\n    }\n    if (periode.type === Tilretteleggingstype.DELVIS) {\n        return mapDelvisTilretteleggingForInnsending(periode, mappedArbeid);\n    }\n    return mapIngenTilretteleggingForInnsending(periode, mappedArbeid);\n};\n\nconst mapTilretteleggingerForInnsending = (\n    tilretteleggingsPerioder: TilretteleggingPeriode[],\n): TilretteleggingDTO[] => {\n    return tilretteleggingsPerioder.map((p: TilretteleggingPeriode) => {\n        return mapTilretteleggingPeriodeForInnsending(p);\n    });\n};\n\nconst mapEgenN√¶ringForInnsending = (n√¶ring: EgenN√¶ring | undefined): EgenN√¶ringDTO | undefined => {\n    if (n√¶ring) {\n        const erNyoppstartet = erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(n√¶ring.tidsperiode.fom));\n\n        const mappedN√¶ring = {\n            n√¶ringstyper: n√¶ring.n√¶ringstyper,\n            tidsperiode: {\n                fom: ISOStringToDate(n√¶ring.tidsperiode.fom),\n                tom: ISOStringToDate(n√¶ring.tidsperiode.tom),\n            },\n            n√¶ringsinntekt: n√¶ring.n√¶ringsinntekt ? parseInt(n√¶ring.n√¶ringsinntekt!, 10) : undefined,\n            navnP√•N√¶ringen: n√¶ring.navnP√•N√¶ringen,\n            organisasjonsnummer: n√¶ring.organisasjonsnummer ? n√¶ring.organisasjonsnummer : undefined,\n            registrertINorge: n√¶ring.registrertINorge,\n            registrertILand: n√¶ring.registrertILand ? n√¶ring.registrertILand : undefined,\n            harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene:\n                n√¶ring.harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene,\n        };\n        if (erNyoppstartet) {\n            return {\n                ...mappedN√¶ring,\n                harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene:\n                    n√¶ring.harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene,\n                oppstartsdato: n√¶ring.harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene\n                    ? n√¶ring.oppstartsdato\n                    : undefined,\n            };\n        } else {\n            return {\n                ...mappedN√¶ring,\n                hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r:\n                    n√¶ring.hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r,\n                endringAvN√¶ringsinntektInformasjon: n√¶ring.hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r\n                    ? {\n                          dato: ISOStringToDate(n√¶ring.varigEndringDato)!,\n                          n√¶ringsinntektEtterEndring: parseInt(n√¶ring.varigEndringInntektEtterEndring!),\n                          forklaring: n√¶ring.varigEndringBeskrivelse!,\n                      }\n                    : undefined,\n            };\n        }\n    }\n    return undefined;\n};\n\nconst mapFrilansForInnsending = (frilans: Frilans | undefined): FrilansDTO | undefined => {\n    if (frilans) {\n        return {\n            ...frilans,\n            oppstart: ISOStringToDate(frilans.oppstart)!,\n            // sluttDato: ISOStringToDate(frilans.sluttDato),\n        };\n    }\n    return undefined;\n};\n\nconst mapArbeidIUtlandetForInnsending = (arbeid: ArbeidIUtlandet): ArbeidIUtlandetDTO => {\n    return {\n        type: AnnenInntektType.JOBB_I_UTLANDET,\n        arbeidsgiverNavn: arbeid.arbeidsgiverNavn,\n        land: arbeid.land,\n        tidsperiode: {\n            fom: ISOStringToDate(arbeid.tidsperiode.fom)!,\n            tom: ISOStringToDate(arbeid.tidsperiode.tom),\n        },\n    };\n};\n\nconst mapS√∏kerForInnsending = (s√∏ker: S√∏ker): S√∏kerDTO => {\n    const mappedN√¶ring = mapEgenN√¶ringForInnsending(s√∏ker.selvstendigN√¶ringsdrivendeInformasjon);\n    const mappedArbeidIUtlandet = s√∏ker.andreInntekter\n        ? s√∏ker.andreInntekter.map((inntekt) => mapArbeidIUtlandetForInnsending(inntekt))\n        : undefined;\n    const mappedS√∏ker: S√∏kerDTO = {\n        rolle: s√∏ker.rolle,\n        spr√•kkode: s√∏ker.spr√•kkode,\n        frilansInformasjon: s√∏ker.harJobbetSomFrilans ? mapFrilansForInnsending(s√∏ker.frilansInformasjon) : undefined,\n        selvstendigN√¶ringsdrivendeInformasjon: mappedN√¶ring ? [mappedN√¶ring] : undefined,\n        andreInntekterSiste10Mnd: mappedArbeidIUtlandet,\n    };\n    return mappedS√∏ker;\n};\n\nexport const getS√∏knadForInnsending = (\n    s√∏knad: S√∏knad,\n    tilretteleggingsPerioder: TilretteleggingPeriode[],\n): S√∏knadDTO => {\n    const utenlandsoppholdForInnsending = mapUtenlandsOppholdForInnsending(s√∏knad.informasjonOmUtenlandsopphold);\n    const barnForInnsending = mapBarnForInnsending(s√∏knad.barn);\n    const tilretteleggingForInnsending = mapTilretteleggingerForInnsending(tilretteleggingsPerioder);\n    const s√∏kerForInnsending = mapS√∏kerForInnsending(s√∏knad.s√∏ker);\n    return {\n        type: S√∏knadstype.SVANGERSKAPSPENGER,\n        erEndringss√∏knad: false,\n        informasjonOmUtenlandsopphold: utenlandsoppholdForInnsending,\n        barn: barnForInnsending,\n        vedlegg: s√∏knad.tilrettelegging.map((t) => t.vedlegg).flat(1),\n        tilrettelegging: tilretteleggingForInnsending,\n        s√∏ker: s√∏kerForInnsending,\n    };\n};\n","import { Block, bemUtils, formatDate } from '@navikt/fp-common';\nimport countries from 'i18n-iso-countries';\nimport { FunctionComponent } from 'react';\nimport { BodyShort, Label } from '@navikt/ds-react';\nimport { Utenlandsopphold } from 'app/types/InformasjonOmUtenlandsopphold';\nimport { FormattedMessage } from 'react-intl';\n\nimport './utenlandsoppholdOppsummeringListe.css';\n\ninterface Props {\n    utenlandsopphold: Utenlandsopphold[];\n    tidligereOpphold: boolean;\n}\n\nconst UtenlandsoppholdOppsummeringListe: FunctionComponent<Props> = ({ utenlandsopphold, tidligereOpphold }) => {\n    const bem = bemUtils('utenlandsoppholdOppsummering');\n\n    return (\n        <>\n            {utenlandsopphold.map((opphold, index) => {\n                return (\n                    <Block key={index} padBottom={index !== utenlandsopphold.length - 1 ? 'l' : 'none'}>\n                        <div className={bem.block}>\n                            <Block padBottom=\"m\">\n                                {tidligereOpphold ? (\n                                    <Label>\n                                        <FormattedMessage\n                                            id=\"oppsummering.utenlandsopphold.harBoddINorge.utenlands\"\n                                            values={{ land: countries.getName(opphold.land, 'nb') }}\n                                        />\n                                    </Label>\n                                ) : (\n                                    <Label>\n                                        <FormattedMessage\n                                            id=\"oppsummering.utenlandsopphold.skalBoINorge.utenlands\"\n                                            values={{ land: countries.getName(opphold.land, 'nb') }}\n                                        />\n                                    </Label>\n                                )}\n                            </Block>\n                            <BodyShort>\n                                {formatDate(opphold.tidsperiode.fom)} - {formatDate(opphold.tidsperiode.tom)}\n                            </BodyShort>\n                        </div>\n                    </Block>\n                );\n            })}\n        </>\n    );\n};\n\nexport default UtenlandsoppholdOppsummeringListe;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport UtenlandsoppholdListe from './UtenlandsoppholdOppsummeringListe';\nimport { BodyShort } from '@navikt/ds-react';\nimport InformasjonOmUtenlandsopphold from 'app/types/InformasjonOmUtenlandsopphold';\nimport { useIntl } from 'react-intl';\n\ninterface Props {\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold;\n}\n\nconst UtenlandsoppholdOppsummering: FunctionComponent<Props> = ({ informasjonOmUtenlandsopphold }) => {\n    const intl = useIntl();\n    const visINorgeP√•Hendelsestidspunktet =\n        informasjonOmUtenlandsopphold.senereOpphold.length > 0 ||\n        informasjonOmUtenlandsopphold.tidligereOpphold.length > 0;\n    return (\n        <>\n            {informasjonOmUtenlandsopphold.tidligereOpphold.length > 0 && (\n                <Block padBottom=\"l\">\n                    <UtenlandsoppholdListe\n                        utenlandsopphold={informasjonOmUtenlandsopphold.tidligereOpphold}\n                        tidligereOpphold={true}\n                    />\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.senereOpphold.length > 0 && (\n                <Block padBottom=\"l\">\n                    <UtenlandsoppholdListe\n                        utenlandsopphold={informasjonOmUtenlandsopphold.senereOpphold}\n                        tidligereOpphold={false}\n                    />\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.tidligereOpphold.length === 0 && (\n                <Block padBottom=\"l\">\n                    <BodyShort>{intlUtils(intl, 'oppsummering.boddINorge')} </BodyShort>\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.senereOpphold.length === 0 && (\n                <Block padBottom=\"l\">\n                    <BodyShort>{intlUtils(intl, 'oppsummering.skalboINorge')} </BodyShort>\n                </Block>\n            )}\n            {visINorgeP√•Hendelsestidspunktet && (\n                <Block>\n                    <BodyShort>\n                        {informasjonOmUtenlandsopphold.iNorgeP√•Hendelsestidspunktet\n                            ? intlUtils(intl, 'oppsummering.iNorgeP√•Hendelsestidspunktet')\n                            : intlUtils(intl, 'oppsummering.ikkeINorgeP√•Hendelsestidspunktet')}\n                    </BodyShort>\n                </Block>\n            )}\n        </>\n    );\n};\n\nexport default UtenlandsoppholdOppsummering;\n","import { BodyShort, Label } from '@navikt/ds-react';\nimport { Block, bemUtils, formatDate } from '@navikt/fp-common';\nimport { Frilans } from 'app/types/Frilans';\nimport { FunctionComponent } from 'react';\nimport './frilans-visning.css';\ninterface Props {\n    frilans: Frilans;\n}\n\nconst FrilansVisning: FunctionComponent<Props> = ({ frilans }) => {\n    const bem = bemUtils('frilans-visning');\n    const frilansTekst = 'Arbeid som frilanser';\n    // const tilTekst = !frilans.jobberFremdelesSomFrilans && frilans.sluttDato ? formatDate(frilans.sluttDato) : 'P√•g√•ende';\n    const tilTekst = !frilans.jobberFremdelesSomFrilans ? '(Avsluttet)' : '(P√•g√•ende)';\n    return (\n        <Block padBottom=\"l\">\n            <div className={bem.block}>\n                <Label className={bem.element('tittel')}>{frilansTekst}</Label>\n                <BodyShort className={bem.element('dato')}>\n                    {`Startet: ${formatDate(frilans.oppstart)} ${tilTekst}`}\n                </BodyShort>\n            </div>\n        </Block>\n    );\n};\n\nexport default FrilansVisning;\n","import { Block, ISOStringToDate, bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\nimport { EgenN√¶ring } from 'app/types/EgenN√¶ring';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getCountryName } from '@navikt/sif-common-formik-ds/lib';\nimport './egen-n√¶ring-visning.css';\nimport { BodyShort, Label } from '@navikt/ds-react';\nimport { erVirksomhetRegnetSomNyoppstartet } from 'app/steps/egen-n√¶ring/egenN√¶ringFormUtils';\n\ninterface Props {\n    n√¶ring: EgenN√¶ring;\n    setSelectedN√¶ring?: React.Dispatch<React.SetStateAction<EgenN√¶ring | undefined>>;\n    deleteN√¶ring?: (n√¶ring: EgenN√¶ring) => void;\n}\n\nconst EgenN√¶ringVisning: FunctionComponent<Props> = ({ n√¶ring }) => {\n    const intl = useIntl();\n    const bem = bemUtils('egen-n√¶ring-visning');\n    const tilTekst = !n√¶ring.p√•g√•ende && n√¶ring.tidsperiode.tom ? formatDate(n√¶ring.tidsperiode.tom) : 'P√•g√•ende';\n    const erNyoppstartetN√¶ring = erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(n√¶ring.tidsperiode.fom));\n    return (\n        <div>\n            <Block padBottom=\"l\">\n                <div className={bem.block}>\n                    <div className={bem.element('data')}>\n                        <Label className={bem.element('tittel')}>{n√¶ring.navnP√•N√¶ringen}</Label>\n                        {n√¶ring.registrertINorge && (\n                            <BodyShort className={bem.element('orgnr')}>\n                                {intlUtils(intl, 'egenN√¶ring.visning.orgnr', {\n                                    orgnr: n√¶ring.organisasjonsnummer,\n                                })}\n                            </BodyShort>\n                        )}\n                        {!n√¶ring.registrertINorge && n√¶ring.registrertILand && (\n                            <BodyShort className={bem.element('orgnr')}>\n                                {getCountryName(n√¶ring.registrertILand, intl.locale)}\n                            </BodyShort>\n                        )}\n                        <BodyShort className={bem.element('dato')}>\n                            {formatDate(n√¶ring.tidsperiode.fom)} - {tilTekst}\n                        </BodyShort>\n                        {n√¶ring.n√¶ringsinntekt && (\n                            <BodyShort className={bem.element('inntekt')}>\n                                {intlUtils(intl, 'egenN√¶ring.visning.inntekt', {\n                                    inntekt: n√¶ring.n√¶ringsinntekt,\n                                })}\n                            </BodyShort>\n                        )}\n                    </div>\n                    {!erNyoppstartetN√¶ring && n√¶ring.hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r && (\n                        <div>\n                            <BodyShort>\n                                {intlUtils(intl, 'egenN√¶ring.visning.varigEndring', {\n                                    dato: formatDate(n√¶ring.varigEndringDato!),\n                                    inntekt: n√¶ring.varigEndringInntektEtterEndring,\n                                })}\n                            </BodyShort>\n                            <BodyShort>\n                                {intlUtils(intl, 'egenN√¶ring.visning.varigEndring.beskrivelse', {\n                                    beskrivelse: n√¶ring.varigEndringBeskrivelse,\n                                })}\n                            </BodyShort>\n                        </div>\n                    )}\n                    {!erNyoppstartetN√¶ring && !n√¶ring.hattVarigEndringAvN√¶ringsinntektSiste4Kalender√•r && (\n                        <div>\n                            <BodyShort>{intlUtils(intl, 'egenN√¶ring.visning.varigEndring.ingen', {})}</BodyShort>\n                        </div>\n                    )}\n                    {erNyoppstartetN√¶ring && n√¶ring.harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene && (\n                        <div>\n                            <BodyShort>\n                                {intlUtils(intl, 'egenN√¶ring.visning.yrkesaktivSiste3√•r', {\n                                    dato: formatDate(n√¶ring.oppstartsdato!),\n                                })}\n                            </BodyShort>\n                        </div>\n                    )}\n                    {erNyoppstartetN√¶ring && !n√¶ring.harBlittYrkesaktivIL√∏petAvDeTreSisteFerdigliknede√Örene && (\n                        <div>\n                            <BodyShort>{intlUtils(intl, 'egenN√¶ring.visning.ikkeYrkesaktivSiste3√•r')}</BodyShort>\n                        </div>\n                    )}\n                </div>\n            </Block>\n        </div>\n    );\n};\nexport default EgenN√¶ringVisning;\n","import { Block, bemUtils, formatDate } from '@navikt/fp-common';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getCountryName } from '@navikt/sif-common-formik-ds/lib';\nimport './arbeid-i-utlandet-visning.css';\nimport { BodyShort, Button, Label } from '@navikt/ds-react';\nimport { PencilWritingIcon, TrashIcon } from '@navikt/aksel-icons';\nimport { ArbeidIUtlandet } from 'app/types/ArbeidIUtlandet';\n\ninterface Props {\n    arbeidIUtlandet: ArbeidIUtlandet;\n    setSelectedAnnenInntekt?: React.Dispatch<React.SetStateAction<ArbeidIUtlandet | undefined>>;\n    deleteAnnenInntekt?: (arbeidIUtlandet: ArbeidIUtlandet) => void;\n}\n\nconst getTilTekst = (arbeid: ArbeidIUtlandet): string => {\n    return !arbeid.p√•g√•ende && arbeid.tidsperiode.tom ? formatDate(arbeid.tidsperiode.tom) : 'P√•g√•ende';\n};\n\nconst ArbeidIUtlandetVisning: FunctionComponent<Props> = ({\n    arbeidIUtlandet,\n    setSelectedAnnenInntekt,\n    deleteAnnenInntekt,\n}) => {\n    const intl = useIntl();\n    const bem = bemUtils('arbeidIUtlandetVisning');\n\n    return (\n        <div>\n            <Block padBottom=\"l\">\n                <div className={bem.block}>\n                    <Label className={bem.element('tittel')}>{arbeidIUtlandet.arbeidsgiverNavn}</Label>\n\n                    <BodyShort className={bem.element('land')}>\n                        {getCountryName(arbeidIUtlandet.land, intl.locale)}\n                    </BodyShort>\n\n                    <BodyShort className={bem.element('dato')}>\n                        {formatDate(arbeidIUtlandet.tidsperiode.fom)} - {getTilTekst(arbeidIUtlandet)}\n                    </BodyShort>\n                    {setSelectedAnnenInntekt && (\n                        <Button\n                            aria-label=\"rediger informasjon om arbeid i utlandet\"\n                            variant=\"secondary\"\n                            className={bem.element('rediger')}\n                            icon={<PencilWritingIcon aria-hidden />}\n                            onClick={() => setSelectedAnnenInntekt(arbeidIUtlandet)}\n                        />\n                    )}\n                    {deleteAnnenInntekt && (\n                        <Button\n                            aria-label=\"slett informasjon om arbeid i utlandet\"\n                            variant=\"secondary\"\n                            className={bem.element('slett')}\n                            icon={<TrashIcon aria-hidden />}\n                            onClick={() => deleteAnnenInntekt(arbeidIUtlandet)}\n                        />\n                    )}\n                </div>\n            </Block>\n        </div>\n    );\n};\n\nexport default ArbeidIUtlandetVisning;\n","import { FunctionComponent } from 'react';\nimport { TilretteleggingPeriode, Tilretteleggingstype } from 'app/types/Tilrettelegging';\nimport { Block, bemUtils, formatDate, intlUtils } from '@navikt/fp-common';\nimport { BodyShort, Label } from '@navikt/ds-react';\n\nimport './periodeVisning.css';\nimport dayjs from 'dayjs';\nimport { IntlShape, useIntl } from 'react-intl';\n\ninterface Props {\n    periode: TilretteleggingPeriode;\n    sisteDagForSvangerskapspenger: Date;\n    kanHaSvpFremTilTreUkerF√∏rTermin: boolean;\n}\n\nconst getDatoText = (\n    intl: IntlShape,\n    sisteDagForSvangerskapspenger: Date,\n    periode: TilretteleggingPeriode,\n    kanHaSvpFremTilTreUkerF√∏rTermin: boolean,\n) => {\n    const varerTilSisteDagMedSvp = dayjs(periode.tom).isSame(sisteDagForSvangerskapspenger, 'd');\n\n    if (!varerTilSisteDagMedSvp) {\n        return intlUtils(intl, 'oppsummering.periode.fraTil', {\n            fraDato: formatDate(periode.fom),\n            tilDato: formatDate(periode.tom),\n        });\n    } else if (kanHaSvpFremTilTreUkerF√∏rTermin) {\n        return intlUtils(intl, 'oppsummering.periode.fremTilTreUkerF√∏rTermin', {\n            fraDato: formatDate(periode.fom),\n        });\n    } else {\n        return intlUtils(intl, 'oppsummering.periode.fremTilF√∏dsel', {\n            fraDato: formatDate(periode.fom),\n        });\n    }\n};\n\nconst getStillingsprosentTekst = (periode: TilretteleggingPeriode, intl: IntlShape): string => {\n    if (periode.type === Tilretteleggingstype.HEL) {\n        return intlUtils(intl, 'oppsummering.periode.tilbakeIFullJobb');\n    }\n    if (periode.type === Tilretteleggingstype.INGEN) {\n        return intlUtils(intl, 'oppsummering.periode.ikkeJobbe');\n    }\n    return intlUtils(intl, 'oppsummering.periode.stillingsprosent', {\n        stillingsprosent: periode.stillingsprosent,\n    });\n};\n\nconst PeriodeVisning: FunctionComponent<Props> = ({\n    periode,\n    sisteDagForSvangerskapspenger,\n    kanHaSvpFremTilTreUkerF√∏rTermin,\n}) => {\n    const intl = useIntl();\n    const labelText = getDatoText(intl, sisteDagForSvangerskapspenger, periode, kanHaSvpFremTilTreUkerF√∏rTermin);\n\n    const stillingsprosentText = getStillingsprosentTekst(periode, intl);\n    const bem = bemUtils('periodeVisningInfoBox');\n\n    return (\n        <div className={bem.block}>\n            <div className={bem.element('topRow')}>\n                <Label>{labelText}</Label>\n                <div className={bem.element('arbeidsgiverNavn')}>\n                    <BodyShort>{periode.arbeidsforhold.navn.toUpperCase()}</BodyShort>\n                </div>\n            </div>\n            <Block padBottom=\"m\">\n                <BodyShort className={bem.element('stillingsprosent')}>{stillingsprosentText}</BodyShort>\n            </Block>\n        </div>\n    );\n};\n\nexport default PeriodeVisning;\n","import PeriodeVisning from 'app/components/periode-visning/PeriodeVisning';\nimport { Barn } from 'app/types/Barn';\nimport { TilretteleggingPeriode } from 'app/types/Tilrettelegging';\nimport { getKanHaSvpFremTilTreUkerF√∏rTermin } from 'app/utils/dateUtils';\nimport { FunctionComponent } from 'react';\n\ninterface Props {\n    perioder: TilretteleggingPeriode[];\n    sisteDagForSvangerskapspenger: Date;\n    barn: Barn;\n}\n\nconst PeriodeOppsummering: FunctionComponent<Props> = ({ perioder, sisteDagForSvangerskapspenger, barn }) => {\n    const kanHaSvpFremTilTreUkerF√∏rTermin = getKanHaSvpFremTilTreUkerF√∏rTermin(barn);\n    return perioder.map((periode, index) => {\n        return (\n            <PeriodeVisning\n                key={index}\n                periode={periode}\n                sisteDagForSvangerskapspenger={sisteDagForSvangerskapspenger}\n                kanHaSvpFremTilTreUkerF√∏rTermin={kanHaSvpFremTilTreUkerF√∏rTermin}\n            />\n        );\n    });\n};\n\nexport default PeriodeOppsummering;\n","import { bemUtils } from '@navikt/fp-common';\nimport { FunctionComponent, useCallback, useState, ReactNode } from 'react';\nimport { Accordion } from '@navikt/ds-react';\n\nimport '../accordion/accordion.css';\n\ninterface Props {\n    title: string;\n    children: ReactNode;\n}\n\nconst AccordionContent: FunctionComponent<Props> = ({ title, children }) => {\n    const bem = bemUtils('accordion');\n\n    const [isOpen, toggleOpen] = useState(false);\n    const toggle = useCallback(() => toggleOpen((open) => !open), []);\n\n    return (\n        <Accordion.Item className={bem.element('specificity')}>\n            <Accordion.Header className={isOpen ? 'accordion_headerOpen' : 'accordion_header'} onClick={toggle}>\n                {title}\n            </Accordion.Header>\n            <Accordion.Content>{children}</Accordion.Content>\n        </Accordion.Item>\n    );\n};\n\nexport default AccordionContent;\n","import { Block } from '@navikt/fp-common';\nimport { FunctionComponent, ReactNode } from 'react';\n\ninterface Props {\n    visible?: boolean;\n    children?: ReactNode;\n}\n\nconst Accordion: FunctionComponent<Props> = ({ visible, children }) => {\n    return (\n        <Block className=\"content_margin\" padBottom=\"l\" visible={visible}>\n            {children}\n        </Block>\n    );\n};\n\nexport default Accordion;\n","import { useEffect, useRef } from 'react';\n\nconst useAbortSignal = () => {\n    const controller = useRef<AbortController>(new AbortController());\n\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            controller.current.abort();\n        };\n    }, []);\n\n    return controller.current.signal;\n};\n\nexport default useAbortSignal;\n","import axios from 'axios';\nimport { Attachment } from '@navikt/fp-types';\n\nexport const attachmentApi = axios.create();\n\nconst getSaveAttachment =\n    (restApiUrl: string, type: 'foreldrepenger' | 'svangerskapspenger' | 'engangsstonad') =>\n    (attachment: Attachment) => {\n        const config = {\n            withCredentials: true,\n            timeout: 45 * 1000,\n            headers: {\n                'content-type': 'multipart/form-data',\n            },\n        };\n\n        const formData = new FormData();\n        formData.append('id', attachment.id);\n        formData.append('vedlegg', attachment.file, attachment.filename);\n\n        const url = `${restApiUrl}/storage/${type}/vedlegg`;\n        return attachmentApi.post(url, formData, config);\n    };\n\nexport default getSaveAttachment;\n","import { Accordion, BodyShort, Button } from '@navikt/ds-react';\nimport { Block, Step, StepButtonWrapper, bemUtils, formatDate, guid, intlUtils } from '@navikt/fp-common';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport stepConfig, { getBackLinkForOppsummeringSteg } from '../stepsConfig';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport { getAktiveArbeidsforhold, getTekstOmManglendeArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\nimport { Link } from 'react-router-dom';\nimport { PaperplaneIcon } from '@navikt/aksel-icons';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport {\n    OppsummeringFormComponents,\n    OppsummeringFormData,\n    OppsummeringFormField,\n    getInitialOppsummeringValues,\n} from './oppsummeringFormConfig';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { useEffect, useMemo, useState } from 'react';\nimport { validateHarGodkjentOppsummering } from './validation/oppsummeringValidation';\nimport Api from 'app/api/api';\nimport { redirect, redirectToLogin } from 'app/utils/redirectUtils';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport { getS√∏knadForInnsending } from 'app/utils/apiUtils';\nimport { mapTilretteleggingTilPerioder } from 'app/utils/tilretteleggingUtils';\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { FEIL_VED_INNSENDING, UKJENT_UUID, getErrorCallId, sendErrorMessageToSentry } from 'app/utils/errorUtils';\nimport { SendtS√∏knad } from 'app/types/SendtS√∏knad';\nimport Environment from 'app/Environment';\nimport UtenlandsoppholdOppsummering from './utenlandsopphold-oppsummering/UtenlandsoppholdOppsummering';\nimport ArbeidsforholdInformasjon from '../inntektsinformasjon/components/arbeidsforhold-informasjon/ArbeidsforholdInformasjon';\nimport FrilansVisning from 'app/components/frilans-visning/FrilansVisning';\nimport EgenN√¶ringVisning from 'app/components/egen-n√¶ring-visning/EgenN√¶ringVisning';\nimport ArbeidIUtlandetVisning from 'app/components/arbeid-i-utlandet-visning/ArbeidIUtlandetVisning';\nimport PeriodeOppsummering from './periode-oppsummering/PeriodeOppsummering';\nimport AccordionItem from 'app/components/accordion/AccordionItem';\nimport AccordionContent from 'app/components/accordion/AccordionContent';\nimport { getSisteDagForSvangerskapspenger } from 'app/utils/dateUtils';\nimport { useAbortSignal } from '@navikt/fp-api';\nimport './oppsummering.css';\n\nconst Oppsummering = () => {\n    useUpdateCurrentTilretteleggingId(undefined);\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, tilrettelegging } = s√∏knad;\n    const s√∏kerinfo = useS√∏kerinfo();\n    const { dispatch } = useSvangerskapspengerContext();\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [isSendingS√∏knad, setIsSendingS√∏knad] = useState(false);\n    const [submitError, setSubmitError] = useState<any>(undefined);\n    const [sendtS√∏knad, setSendtS√∏knad] = useState<undefined | SendtS√∏knad>(undefined);\n    useUpdateCurrentTilretteleggingId(undefined);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n    const abortSignal = useAbortSignal();\n    const { barn, informasjonOmUtenlandsopphold } = s√∏knad;\n    const { arbeidsforhold } = s√∏kerinfo;\n    const intl = useIntl();\n    const formatertTermindato = formatDate(barn.termindato);\n    const formatertF√∏dselsdato = barn.f√∏dselsdato ? formatDate(barn.f√∏dselsdato) : undefined;\n    const bem = bemUtils('oppsummering');\n    const sisteDagForSvangerskapspenger = getSisteDagForSvangerskapspenger(barn);\n    const allePerioderMedFomOgTom = useMemo(\n        () => mapTilretteleggingTilPerioder(s√∏knad.tilrettelegging, sisteDagForSvangerskapspenger),\n        [s√∏knad.tilrettelegging, sisteDagForSvangerskapspenger],\n    );\n    const s√∏knadForInnsending = useMemo(\n        () => getS√∏knadForInnsending(s√∏knad, allePerioderMedFomOgTom),\n        [s√∏knad, allePerioderMedFomOgTom],\n    );\n    const handleSubmit = (values: Partial<OppsummeringFormData>) => {\n        dispatch(actionCreator.setGodkjentOppsummering(values.harGodkjentOppsummering!));\n        setFormSubmitted(true);\n    };\n    const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, barn.termindato);\n    const tilretteleggingMedFrilans = tilrettelegging.find(\n        (t) => t.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER,\n    );\n    const tilretteleggingMedSN = tilrettelegging.find((t) => t.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG);\n    useEffect(() => {\n        if (formSubmitted && !isSendingS√∏knad) {\n            setIsSendingS√∏knad(true);\n\n            Api.sendS√∏knad(s√∏knadForInnsending, abortSignal)\n                .then((response) => {\n                    setSendtS√∏knad(response.data);\n                })\n                .catch((error) => {\n                    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setSubmitError(error);\n                    }\n                });\n        }\n    }, [formSubmitted, isSendingS√∏knad, s√∏knadForInnsending, abortSignal]);\n\n    useEffect(() => {\n        if (submitError !== undefined) {\n            sendErrorMessageToSentry(submitError);\n            const submitErrorCallId = getErrorCallId(submitError);\n            const callIdForBruker =\n                submitErrorCallId !== UKJENT_UUID ? submitErrorCallId.slice(0, 8) : submitErrorCallId;\n            throw new Error(FEIL_VED_INNSENDING + callIdForBruker);\n        }\n    }, [submitError]);\n\n    useEffect(() => {\n        if (sendtS√∏knad) {\n            let navigateTo = Environment.INNSYN;\n            if (sendtS√∏knad.saksNr) {\n                navigateTo = `${Environment.INNSYN}/sak/${sendtS√∏knad.saksNr}`;\n            }\n            const navigateToMedURLParams = `${navigateTo}/redirectFromSoknad`;\n            redirect(navigateToMedURLParams);\n        }\n    }, [sendtS√∏knad]);\n\n    return (\n        <OppsummeringFormComponents.FormikWrapper\n            initialValues={getInitialOppsummeringValues()}\n            onSubmit={handleSubmit}\n            renderForm={() => {\n                return (\n                    <OppsummeringFormComponents.Form includeButtons={false}>\n                        <Step\n                            bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                            activeStepId=\"oppsummering\"\n                            pageTitle=\"Oppsummering\"\n                            steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                            onCancel={onAvbrytS√∏knad}\n                            supportsTempSaving={false}\n                        >\n                            <Block padBottom=\"l\">\n                                <div className={bem.block}>\n                                    <Accordion>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omDeg')}>\n                                            <AccordionContent>\n                                                <Block padBottom=\"m\">\n                                                    <BodyShort>{`${s√∏kerinfo.person.fornavn} ${s√∏kerinfo.person.etternavn}`}</BodyShort>\n                                                </Block>\n                                                <Block>\n                                                    <BodyShort>{s√∏kerinfo.person.fnr}</BodyShort>\n                                                </Block>\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omBarnet')}>\n                                            <AccordionContent>\n                                                <BodyShort>{`Termindato: ${formatertTermindato}`}</BodyShort>\n                                                {barn.erBarnetF√∏dt && barn.f√∏dselsdato && (\n                                                    <Block margin=\"m\">\n                                                        <BodyShort>{`F√∏dselsdato: ${formatertF√∏dselsdato}`}</BodyShort>\n                                                    </Block>\n                                                )}\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omUtenlandsopphold')}>\n                                            <AccordionContent>\n                                                <UtenlandsoppholdOppsummering\n                                                    informasjonOmUtenlandsopphold={informasjonOmUtenlandsopphold}\n                                                />\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem title={intlUtils(intl, 'oppsummering.omArbeidsforhold')}>\n                                            <AccordionContent>\n                                                <Block padBottom=\"xl\">\n                                                    {aktiveArbeidsforhold.length > 0 && (\n                                                        <ArbeidsforholdInformasjon\n                                                            visManglerInfo={false}\n                                                            arbeidsforhold={aktiveArbeidsforhold}\n                                                        />\n                                                    )}\n                                                    {s√∏ker.harJobbetSomFrilans && s√∏ker.frilansInformasjon && (\n                                                        <FrilansVisning\n                                                            frilans={s√∏ker.frilansInformasjon}\n                                                        ></FrilansVisning>\n                                                    )}\n                                                    {s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende &&\n                                                        s√∏ker.selvstendigN√¶ringsdrivendeInformasjon && (\n                                                            <EgenN√¶ringVisning\n                                                                n√¶ring={s√∏ker.selvstendigN√¶ringsdrivendeInformasjon}\n                                                            ></EgenN√¶ringVisning>\n                                                        )}\n                                                    {s√∏ker.harHattAnnenInntekt &&\n                                                        s√∏ker.andreInntekter &&\n                                                        s√∏ker.andreInntekter.map((arbeid) => {\n                                                            return (\n                                                                <ArbeidIUtlandetVisning\n                                                                    key={guid()}\n                                                                    arbeidIUtlandet={arbeid}\n                                                                ></ArbeidIUtlandetVisning>\n                                                            );\n                                                        })}\n                                                    {(!s√∏ker.harJobbetSomFrilans ||\n                                                        !s√∏ker.harJobbetSomSelvstendigN√¶ringsdrivende ||\n                                                        !s√∏ker.harHattAnnenInntekt) && (\n                                                        <Block padBottom=\"m\">\n                                                            <BodyShort>\n                                                                {getTekstOmManglendeArbeidsforhold(s√∏ker, intl)}\n                                                            </BodyShort>\n                                                        </Block>\n                                                    )}\n                                                </Block>\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                        <AccordionItem\n                                            title={intlUtils(intl, 'oppsummering.periodeMedSvangerskapspenger')}\n                                        >\n                                            <AccordionContent>\n                                                {tilretteleggingMedFrilans && (\n                                                    <>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort className={bem.element('label')}>\n                                                                {'Risikofaktorer i jobben din som frilanser:'}\n                                                            </BodyShort>\n                                                            <BodyShort>\n                                                                {tilretteleggingMedFrilans.risikofaktorer}\n                                                            </BodyShort>\n                                                        </Block>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort className={bem.element('label')}>\n                                                                {'Tilretteleggingstiltak i jobben din som frilanser:'}\n                                                            </BodyShort>\n                                                            <BodyShort>\n                                                                {tilretteleggingMedFrilans.tilretteleggingstiltak}\n                                                            </BodyShort>\n                                                        </Block>\n                                                    </>\n                                                )}\n                                                {tilretteleggingMedSN && (\n                                                    <>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort\n                                                                className={bem.element('label')}\n                                                            >{`Risikofaktorer i ${tilretteleggingMedSN.arbeidsforhold.navn}`}</BodyShort>\n                                                            <BodyShort>{tilretteleggingMedSN.risikofaktorer}</BodyShort>\n                                                        </Block>\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort className={bem.element('label')}>\n                                                                {`Tilretteleggingstiltak i ${tilretteleggingMedSN.arbeidsforhold.navn}`}\n                                                            </BodyShort>\n                                                            <BodyShort>\n                                                                {tilretteleggingMedSN.tilretteleggingstiltak}\n                                                            </BodyShort>\n                                                        </Block>\n                                                    </>\n                                                )}\n                                                <PeriodeOppsummering\n                                                    perioder={allePerioderMedFomOgTom}\n                                                    sisteDagForSvangerskapspenger={sisteDagForSvangerskapspenger}\n                                                    barn={barn}\n                                                />\n                                            </AccordionContent>\n                                        </AccordionItem>\n                                    </Accordion>\n\n                                    <Block margin=\"xl\" padBottom=\"xl\">\n                                        <OppsummeringFormComponents.ConfirmationCheckbox\n                                            name={OppsummeringFormField.harGodkjentOppsummering}\n                                            label={intlUtils(intl, 'oppsummering.bekreft')}\n                                            validate={validateHarGodkjentOppsummering(intl)}\n                                        />\n                                    </Block>\n                                    <Block padBottom=\"l\">\n                                        <StepButtonWrapper>\n                                            <Button\n                                                variant=\"secondary\"\n                                                as={Link}\n                                                to={getBackLinkForOppsummeringSteg(tilrettelegging)}\n                                            >\n                                                <FormattedMessage id=\"backlink.label\" />\n                                            </Button>\n                                            <Button\n                                                icon={<PaperplaneIcon />}\n                                                iconPosition=\"right\"\n                                                type=\"submit\"\n                                                disabled={formSubmitted}\n                                                loading={formSubmitted}\n                                            >\n                                                {intlUtils(intl, 'send.s√∏knad')}\n                                            </Button>\n                                        </StepButtonWrapper>\n                                    </Block>\n                                </div>\n                            </Block>\n                        </Step>\n                    </OppsummeringFormComponents.Form>\n                );\n            }}\n        />\n    );\n};\n\nexport default Oppsummering;\n","import { ExclamationmarkTriangleIcon, FileIcon, XMarkIcon } from '@navikt/aksel-icons';\nimport { BodyShort, Button, Loader, Link } from '@navikt/ds-react';\nimport { FunctionComponent } from 'react';\nimport { Block, bemUtils } from '@navikt/fp-common';\nimport classNames from 'classnames';\nimport './attachmentVisning.css';\nimport { Attachment } from 'app/types/Attachment';\ninterface Props {\n    vedlegg: Attachment;\n    onDelete: (vedlegg: Attachment) => void;\n}\n\nconst getAttachmentIcon = (bem: any, vedlegg: Attachment) => {\n    if (vedlegg.error) {\n        return <ExclamationmarkTriangleIcon className={bem.element('icon')} title=\"Feil med fil\" />;\n    } else if (vedlegg.pending) {\n        return <Loader className={bem.element('icon')} size=\"small\" />;\n    } else {\n        return <FileIcon className={bem.element('icon')} title=\"Opplastet fil\" />;\n    }\n};\n\nconst AttachmentVisning: FunctionComponent<Props> = ({ vedlegg, onDelete }) => {\n    const bem = bemUtils('attachmentVisning');\n    const filst√∏rrelseKB = Math.round(vedlegg.filesize * 0.001);\n    const handleOnClickSlett = (vedlegg: Attachment) => {\n        onDelete(vedlegg);\n    };\n    return (\n        <div className={bem.block}>\n            {getAttachmentIcon(bem, vedlegg)}\n            <div>\n                <Block padBottom=\"s\">\n                    {vedlegg.url ? (\n                        <Link href={vedlegg.url} target=\"_blank\">\n                            {vedlegg.filename}\n                        </Link>\n                    ) : (\n                        <BodyShort className={bem.element('filename')} size=\"medium\">\n                            {vedlegg.filename}\n                        </BodyShort>\n                    )}\n                </Block>\n                <Block padBottom=\"s\">\n                    <BodyShort size=\"small\">{`${filst√∏rrelseKB} kB`}</BodyShort>\n                </Block>\n            </div>\n\n            <Button\n                aria-label=\"slett skjema\"\n                variant=\"tertiary\"\n                type=\"button\"\n                className={classNames(bem.element('slett'), vedlegg.pending ? bem.modifier('pending') : undefined)}\n                icon={<XMarkIcon aria-hidden />}\n                onClick={() => handleOnClickSlett(vedlegg)}\n            />\n        </div>\n    );\n};\n\nexport default AttachmentVisning;\n","import { FunctionComponent } from 'react';\nimport AttachmentVisning from '../attachment-visning.tsx/AttachmentVisning';\nimport { Attachment } from 'app/types/Attachment';\n\ninterface Props {\n    vedlegg: Attachment[];\n    onDelete: (value: Attachment) => void;\n}\n\nconst AttachmentList: FunctionComponent<Props> = ({ vedlegg, onDelete }) => {\n    return (\n        <>\n            {vedlegg &&\n                vedlegg.length > 0 &&\n                vedlegg.map((fil) => {\n                    return <AttachmentVisning key={fil.id} vedlegg={fil} onDelete={onDelete} />;\n                })}\n        </>\n    );\n};\n\nexport default AttachmentList;\n","export enum AttachmentType {\n    TILRETTELEGGING = 'tilrettelegging',\n    ANNEN_INNTEKT = 'anneninntektDokumentasjon',\n}\n","export enum Skjemanummer {\n    SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING = 'I000109',\n}\n","import { Label } from '@navikt/ds-react';\nimport { intlUtils } from '@navikt/fp-common';\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\n\nconst finnLabel = (intl: IntlShape, typeArbeid: Arbeidsforholdstype) => {\n    if (typeArbeid === Arbeidsforholdstype.FRILANSER) {\n        return intlUtils(intl, 'skjema.vedlegg.label.frilanser');\n    }\n    if (typeArbeid === Arbeidsforholdstype.SELVSTENDIG) {\n        return intlUtils(intl, 'skjema.vedlegg.label.selvstendig');\n    }\n    throw Error('Har ingen tekst for kode: ' + typeArbeid);\n};\n\ninterface Props {\n    typeArbeid: Arbeidsforholdstype;\n}\nconst SkjemaopplastningTekstFrilansSN: React.FunctionComponent<Props> = ({ typeArbeid }) => {\n    const intl = useIntl();\n    const label = finnLabel(intl, typeArbeid);\n    return (\n        <div style={{ marginBottom: '1rem' }}>\n            <div>\n                <Label>{label}</Label>\n            </div>\n            <FormattedMessage id=\"skjema.vedlegg.description.frilansSN\" />\n        </div>\n    );\n};\n\nexport default SkjemaopplastningTekstFrilansSN;\n","import { Label } from '@navikt/ds-react';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport links from 'app/links/links';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst SkjemaopplastningTekstArbeidsgiver: React.FunctionComponent = () => {\n    const intl = useIntl();\n\n    return (\n        <Block padBottom=\"xl\">\n            <div>\n                <Label>{intlUtils(intl, 'skjema.vedlegg.label.arbeidsgiver')}</Label>\n            </div>\n            <FormattedMessage\n                id={'skjema.vedlegg.description.arbeidsgiver'}\n                values={{\n                    a: (msg: any) => (\n                        <a\n                            className=\"lenke\"\n                            rel=\"noopener noreferrer\"\n                            href={links.arbeidstilsynetSkjema}\n                            target=\"_blank\"\n                        >\n                            {msg}\n                        </a>\n                    ),\n                }}\n            />\n        </Block>\n    );\n};\n\nexport default SkjemaopplastningTekstArbeidsgiver;\n","import { guid } from '@navikt/fp-common';\nimport { Attachment, InnsendingsType } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport Bytes from 'bytes';\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFilTilVedlegg = (\n    file: File,\n    type: AttachmentType,\n    skjemanummer: Skjemanummer,\n    innsendingsType?: InnsendingsType,\n): Attachment => ({\n    id: generateAttachmentId(),\n    file,\n    filename: file.name,\n    filesize: file.size,\n    uploaded: false,\n    pending: false,\n    type,\n    skjemanummer,\n    innsendingsType,\n});\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const deleteAttachment = (alleVedlegg: Attachment[], deleted: Attachment): Attachment[] => {\n    alleVedlegg = alleVedlegg.filter((att) => att !== deleted);\n    return alleVedlegg;\n};\n\nexport const isAttachmentWithError = ({ pending, uploaded, filesize }: Attachment) =>\n    (pending === false && uploaded === false) || filesize === 0;\n","import Environment from 'app/Environment';\nimport getAxiosInstance from './apiInterceptor';\nimport { Attachment } from 'app/types/Attachment';\n\nfunction saveAttachment(attachment: Attachment) {\n    const config = {\n        withCredentials: true,\n        timeout: 45 * 1000,\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n\n    const formData = new FormData();\n    formData.append('id', attachment.id);\n    formData.append('vedlegg', attachment.file, attachment.filename);\n\n    const url = `${Environment.REST_API_URL}/storage/svangerskapspenger/vedlegg`;\n    return getAxiosInstance().post(url, formData, config);\n}\n\nconst AttachmentApi = { saveAttachment };\n\nexport default AttachmentApi;\n","import { BodyShort } from '@navikt/ds-react';\nimport { FormikFileInput } from '@navikt/sif-common-formik-ds/lib';\nimport Block from '@navikt/fp-common/src/common/components/block/Block';\nimport { ArrayHelpers } from 'formik';\nimport { useState } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport { Attachment } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { mapFilTilVedlegg } from 'app/utils/attachmentUtils';\nimport { intlUtils } from '@navikt/fp-common';\nimport AttachmentApi from 'app/api/attachmentApi';\nimport { ScanDocumentInfo } from '@navikt/fp-ui';\n\nexport type FieldArrayReplaceFn = (index: number, value: any) => void;\nexport type FieldArrayPushFn = (obj: any) => void;\nexport type FieldArrayRemoveFn = (index: number) => undefined;\n\nexport interface Props {\n    attachmentType: AttachmentType;\n    attachments: Attachment[];\n    buttonLabel: string;\n    label: string;\n    legend: string;\n    name: any;\n    onFileInputClick?: () => void;\n    skjemanummer: Skjemanummer;\n    validateHasAttachment: boolean;\n    description?: string;\n}\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\nconst MAX_FIL_ST√òRRELSE_KB = 16777;\nconst KILOBYTES_IN_BYTE = 0.0009765625;\n\nconst mapFilerTilPendingVedlegg = (\n    filer: File[],\n    attachmentType: AttachmentType,\n    skjemanummer: Skjemanummer | 'default',\n): Attachment[] | undefined => {\n    if (skjemanummer === 'default') {\n        return undefined;\n    }\n    return filer.map((fil) => {\n        const nyttVedlegg = mapFilTilVedlegg(fil, attachmentType, skjemanummer);\n        nyttVedlegg.pending = true;\n        return nyttVedlegg;\n    });\n};\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\n};\n\nconst fileSizeIsValid = (filesizeInB: number): boolean => {\n    const filesizeInKb = filesizeInB * KILOBYTES_IN_BYTE;\n    return filesizeInKb <= MAX_FIL_ST√òRRELSE_KB;\n};\n\nconst sjekkVedlegg = (\n    alleNyeVedlegg: Attachment[],\n    setErrors: React.Dispatch<React.SetStateAction<string[]>>,\n    intl: IntlShape,\n): Attachment[] => {\n    return alleNyeVedlegg.filter((vedlegg) => {\n        const erGyldigFiltype = fileExtensionIsValid(vedlegg.filename);\n        if (!erGyldigFiltype) {\n            setErrors((oldState) =>\n                oldState.concat(intlUtils(intl, 'vedlegg.feilmelding.ugyldig.type', { filename: vedlegg.filename })),\n            );\n        }\n        const erGyldigFilst√∏rrelse = fileSizeIsValid(vedlegg.filesize);\n        if (!erGyldigFilst√∏rrelse) {\n            setErrors((oldState) =>\n                oldState.concat(\n                    intlUtils(intl, 'vedlegg.feilmelding.ugyldig.st√∏rrelse', {\n                        filename: vedlegg.filename,\n                        maxSt√∏rrelse: MAX_FIL_ST√òRRELSE_KB,\n                    }),\n                ),\n            );\n        }\n        return erGyldigFiltype && erGyldigFilst√∏rrelse;\n    });\n};\n\nconst lastOppVedlegg = (\n    alleNyeVedlegg: Attachment[],\n    replaceFn: FieldArrayReplaceFn,\n    removeFn: FieldArrayRemoveFn,\n    setErrors: React.Dispatch<React.SetStateAction<string[]>>,\n    antallEksisterendeVedlegg: number,\n    intl: IntlShape,\n): void => {\n    alleNyeVedlegg.forEach(async (vedlegg, index) => {\n        try {\n            const response = await AttachmentApi.saveAttachment(vedlegg);\n            vedlegg.pending = false;\n            vedlegg.url = response.headers.location;\n            vedlegg.uploaded = true;\n            vedlegg.uuid = response.data;\n            replaceFn(antallEksisterendeVedlegg + index, vedlegg);\n        } catch (error) {\n            removeFn(antallEksisterendeVedlegg + index);\n            setErrors((oldState) =>\n                oldState.concat(\n                    intlUtils(intl, 'vedlegg.feilmelding.opplasting.feilet', { filename: vedlegg.filename }),\n                ),\n            );\n        }\n    });\n};\n\nconst FormikFileUploader: React.FunctionComponent<Props> = ({\n    attachments,\n    name,\n    onFileInputClick,\n    attachmentType,\n    skjemanummer,\n    legend,\n    buttonLabel,\n    validateHasAttachment,\n    ...otherProps\n}) => {\n    const intl = useIntl();\n    const [errors, setErrors] = useState<string[]>([]);\n\n    return (\n        <>\n            <Block padBottom=\"xl\">\n                <FormikFileInput\n                    name={name}\n                    accept={VALID_EXTENSIONS.join(', ')}\n                    onFilesSelect={(files: File[], { push, replace, remove }: ArrayHelpers) => {\n                        const alleNyeVedlegg = mapFilerTilPendingVedlegg(files, attachmentType, skjemanummer);\n                        const alleNyeGyldigeVedlegg = alleNyeVedlegg\n                            ? sjekkVedlegg(alleNyeVedlegg, setErrors, intl)\n                            : undefined;\n                        if (alleNyeGyldigeVedlegg !== undefined) {\n                            alleNyeGyldigeVedlegg.forEach((nyttVedlegg) => push(nyttVedlegg));\n                            lastOppVedlegg(alleNyeGyldigeVedlegg, replace, remove, setErrors, attachments.length, intl);\n                        }\n                    }}\n                    validate={() => {\n                        if (validateHasAttachment && attachments.length === 0) {\n                            return 'Du m√• laste opp minst ett dokument';\n                        }\n\n                        return undefined;\n                    }}\n                    legend={legend}\n                    buttonLabel={buttonLabel}\n                    onClick={onFileInputClick}\n                    error={\n                        errors.length > 0\n                            ? errors.map((error) => <BodyShort key={error}>{error}</BodyShort>)\n                            : undefined\n                    }\n                    {...otherProps}\n                />\n            </Block>\n            <Block padBottom=\"l\">\n                <ScanDocumentInfo />\n            </Block>\n        </>\n    );\n};\n\nexport default FormikFileUploader;\n","import { Alert, Button } from '@navikt/ds-react';\nimport { Block, Step, StepButtonWrapper, intlUtils } from '@navikt/fp-common';\nimport AttachmentList from 'app/components/attachment-list/AttachmentList';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { SkjemaFormComponents, SkjemaFormData, SkjemaFormField } from './skjemaFormTypes';\nimport stepConfig, { getBackLinkForSkjemaSteg } from '../stepsConfig';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport actionCreator from 'app/context/action/actionCreator';\nimport {\n    getInitialSkjemaValuesFromState,\n    getSkjemaLegend,\n    getSkjemaSideTittel,\n    mapTilretteleggingMedSkjema,\n} from './skjemaFormUtils';\nimport { Link } from 'react-router-dom';\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport { FunctionComponent, useState } from 'react';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport SkjemaopplastningTekstFrilansSN from './components/SkjemaopplastningTekstFrilansSN';\nimport SkjemaopplastningTekstArbeidsgiver from './components/SkjemaopplastningTekstArbeidsgiver';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport Bedriftsbanner from 'app/components/bedriftsbanner/Bedriftsbanner';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport { deleteAttachment } from 'app/utils/attachmentUtils';\nimport { Attachment } from 'app/types/Attachment';\n\nconst MAX_ANTALL_VEDLEGG = 40;\ninterface Props {\n    id: string;\n    typeArbeid: Arbeidsforholdstype;\n    navn: string;\n}\n\nconst Skjema: FunctionComponent<Props> = ({ navn, id, typeArbeid }) => {\n    useUpdateCurrentTilretteleggingId(id);\n    const intl = useIntl();\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, barn, tilrettelegging } = s√∏knad;\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n    const [antallForMangeVedlegg, setAntallForMangeVedlegg] = useState(0);\n    const [submitClicked, setSubmitClicked] = useState(false);\n    const flereTilrettelegginger = tilrettelegging.length > 1;\n    const currentTilrettelegging = tilrettelegging.find((t) => t.id === id);\n    const nextRoute = `${S√∏knadRoutes.TILRETTELEGGING}/${currentTilrettelegging!.id}`;\n\n    const onValidSubmitHandler = (values: Partial<SkjemaFormData>) => {\n        const mappedTilrettelegging = mapTilretteleggingMedSkjema(\n            tilrettelegging,\n            currentTilrettelegging!,\n            values as SkjemaFormData,\n        );\n        return [actionCreator.setTilrettelegging(mappedTilrettelegging)];\n    };\n    const erFlereTilrettelegginger = tilrettelegging.length > 1;\n    const sideTittel = getSkjemaSideTittel(erFlereTilrettelegginger, intl, navn);\n    const key = id;\n    const skjemanummer = Skjemanummer.SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING;\n\n    const erSNEllerFrilans =\n        typeArbeid === Arbeidsforholdstype.FRILANSER || typeArbeid === Arbeidsforholdstype.SELVSTENDIG;\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    const handleOnSubmit = (values: any) => {\n        setSubmitClicked(true);\n\n        if (antallForMangeVedlegg <= 0) {\n            handleSubmit(values);\n        }\n    };\n    const legend = getSkjemaLegend(typeArbeid, intl);\n    return (\n        <SkjemaFormComponents.FormikWrapper\n            initialValues={getInitialSkjemaValuesFromState(currentTilrettelegging!)}\n            onSubmit={handleOnSubmit}\n            renderForm={({ values: formValues, setFieldValue }) => {\n                const hasPendingVedlegg = formValues.vedlegg && !!formValues.vedlegg.find((v) => v.pending);\n                const disableButtons = isSubmitting || hasPendingVedlegg;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId={`skjema-${id}`}\n                        pageTitle={sideTittel}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <SkjemaFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block key={key}>\n                                {flereTilrettelegginger && (\n                                    <Block padBottom=\"xxl\">\n                                        <Bedriftsbanner arbeid={currentTilrettelegging!.arbeidsforhold} />\n                                    </Block>\n                                )}\n                                <div>\n                                    {erSNEllerFrilans && <SkjemaopplastningTekstFrilansSN typeArbeid={typeArbeid} />}\n\n                                    {!erSNEllerFrilans && <SkjemaopplastningTekstArbeidsgiver />}\n                                    {formValues.vedlegg && formValues.vedlegg.length > 0 && (\n                                        <AttachmentList\n                                            vedlegg={formValues.vedlegg}\n                                            onDelete={(file: Attachment) => {\n                                                setSubmitClicked(false);\n                                                setFieldValue(\n                                                    SkjemaFormField.vedlegg,\n                                                    deleteAttachment(formValues.vedlegg!, file),\n                                                );\n                                            }}\n                                        />\n                                    )}\n                                    <Block padBottom=\"xl\">\n                                        <FormikFileUploader\n                                            name={SkjemaFormField.vedlegg}\n                                            buttonLabel={intlUtils(intl, 'skjema.vedlegg.buttonLabel')}\n                                            legend={legend}\n                                            label={`Last opp dokument`}\n                                            attachments={formValues.vedlegg || []}\n                                            attachmentType={AttachmentType.TILRETTELEGGING}\n                                            skjemanummer={skjemanummer}\n                                            validateHasAttachment={true}\n                                            onFileInputClick={() => setSubmitClicked(false)}\n                                        />\n                                    </Block>\n                                </div>\n                            </Block>\n\n                            {antallForMangeVedlegg > 0 && submitClicked && (\n                                <Block padBottom=\"l\">\n                                    <Alert variant=\"error\">\n                                        {intlUtils(intl, 'skjema.maks40Filer', {\n                                            antallVedlegg: antallForMangeVedlegg,\n                                        })}\n                                    </Alert>\n                                </Block>\n                            )}\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        disabled={disableButtons}\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkForSkjemaSteg(\n                                            barn.termindato,\n                                            arbeidsforhold,\n                                            s√∏ker,\n                                            tilrettelegging,\n                                            currentTilrettelegging!.id,\n                                        )}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={disableButtons}\n                                        loading={isSubmitting}\n                                        onClick={() => {\n                                            const antallVedleggAndreTilrettelegginger = tilrettelegging\n                                                .filter((t) => t.id !== currentTilrettelegging!.id)\n                                                .reduce(\n                                                    (total, tilrettelegging) => total + tilrettelegging.vedlegg.length,\n                                                    0,\n                                                );\n                                            const antallNyeVedlegg = formValues.vedlegg ? formValues.vedlegg.length : 0;\n                                            const antallVedlegg =\n                                                antallVedleggAndreTilrettelegginger + antallNyeVedlegg;\n                                            setAntallForMangeVedlegg(antallVedlegg - MAX_ANTALL_VEDLEGG);\n                                        }}\n                                    >\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </SkjemaFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Skjema;\n","import { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum FrilansFormField {\n    frilansFom = 'frilansFom',\n    // frilansTom = 'frilansTom',\n    jobberFremdelesSomFrilanser = 'jobberFremdelesSomFrilanser',\n}\n\nexport interface FrilansFormData {\n    [FrilansFormField.frilansFom]: string;\n    // [FrilansFormField.frilansTom]: string | undefined;\n    [FrilansFormField.jobberFremdelesSomFrilanser]: YesOrNo;\n}\n\nexport const FrilansFormComponents = getTypedFormComponents<FrilansFormField, FrilansFormData>();\n","import { Frilans } from 'app/types/Frilans';\nimport { FrilansFormData, FrilansFormField } from './frilansFormConfig';\nimport { QuestionVisibility, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { S√∏ker } from 'app/types/S√∏ker';\n\nexport const initialFrilansFormValues: FrilansFormData = {\n    [FrilansFormField.frilansFom]: '',\n    // [FrilansFormField.frilansTom]: undefined,\n    [FrilansFormField.jobberFremdelesSomFrilanser]: YesOrNo.UNANSWERED,\n};\n\nexport const getInitialFrilansFormValues = (frilans: Frilans | undefined): FrilansFormData => {\n    if (frilans === undefined) {\n        return initialFrilansFormValues;\n    }\n    return {\n        ...initialFrilansFormValues,\n        frilansFom: frilans.oppstart,\n        // frilansTom: frilans.sluttDato,\n        jobberFremdelesSomFrilanser: convertBooleanOrUndefinedToYesOrNo(frilans.jobberFremdelesSomFrilans),\n    };\n};\n\nexport const mapFrilansDataToS√∏kerState = (s√∏ker: S√∏ker, values: FrilansFormData): S√∏ker => {\n    return {\n        ...s√∏ker,\n        frilansInformasjon: {\n            jobberFremdelesSomFrilans: !!convertYesOrNoOrUndefinedToBoolean(values.jobberFremdelesSomFrilanser),\n            oppstart: values.frilansFom,\n            // sluttDato: values.frilansTom!,\n        },\n    };\n};\n\nexport const cleanupFrilansFormData = (\n    values: FrilansFormData,\n    visibility: QuestionVisibility<FrilansFormField>,\n): FrilansFormData => {\n    const cleanedData: FrilansFormData = {\n        frilansFom: visibility.isVisible(FrilansFormField.frilansFom)\n            ? values.frilansFom\n            : initialFrilansFormValues.frilansFom,\n        // frilansTom: visibility.isVisible(FrilansFormField.frilansTom)\n        //     ? values.frilansTom\n        //     : initialFrilansFormValues.frilansTom,\n        jobberFremdelesSomFrilanser: visibility.isVisible(FrilansFormField.jobberFremdelesSomFrilanser)\n            ? values.jobberFremdelesSomFrilanser\n            : initialFrilansFormValues.jobberFremdelesSomFrilanser,\n    };\n\n    return cleanedData;\n};\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { FrilansFormData, FrilansFormField } from './frilansFormConfig';\n\nconst FrilansFormConfig: QuestionConfig<FrilansFormData, FrilansFormField> = {\n    [FrilansFormField.frilansFom]: {\n        isIncluded: () => true,\n        isAnswered: ({ frilansFom }) => hasValue(frilansFom),\n    },\n    [FrilansFormField.jobberFremdelesSomFrilanser]: {\n        isIncluded: () => true,\n        isAnswered: ({ jobberFremdelesSomFrilanser }) => jobberFremdelesSomFrilanser !== YesOrNo.UNANSWERED,\n    },\n    // [FrilansFormField.frilansTom]: {\n    //     isIncluded: ({ jobberFremdelesSomFrilanser }) => jobberFremdelesSomFrilanser === YesOrNo.NO,\n    //     isAnswered: ({ frilansTom }) => hasValue(frilansTom),\n    // },\n};\n\nconst frilansSubformQuestionsConfig = Questions<FrilansFormData, FrilansFormField>(FrilansFormConfig);\n\nexport default frilansSubformQuestionsConfig;\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { intlUtils, isDateABeforeDateB, isDateInTheFuture } from '@navikt/fp-common';\nimport { YesOrNo, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { fireUkerSiden } from 'app/utils/dateUtils';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { IntlShape } from 'react-intl';\n\nexport const validateFrilansStart = (intl: IntlShape) => (fom: string) => {\n    if (!hasValue(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.p√•krevd');\n    }\n\n    if (!isISODateString(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n    }\n\n    if (isDateInTheFuture(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\n    }\n\n    // if (hasValue(tom) && isISODateString(tom) && isDateABeforeDateB(tom, fom)) {\n    //     return intlUtils(intl, 'valideringsfeil.fraOgMedDato.f√∏rTilDato');\n    // }\n\n    return undefined;\n};\n\nexport const validateFrilansSlutt = (intl: IntlShape, p√•g√•ende: YesOrNo, fom: string) => (tom: string) => {\n    if (p√•g√•ende === YesOrNo.YES) {\n        return undefined;\n    }\n    if (!hasValue(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.p√•krevd');\n    }\n\n    if (!isISODateString(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n    }\n\n    if (isDateInTheFuture(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\n    }\n\n    if (isDateABeforeDateB(tom, dateToISOString(fireUkerSiden(new Date())))) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.frilans.merEnn4UkerSiden');\n    }\n\n    if (hasValue(fom) && isISODateString(fom) && isDateABeforeDateB(tom, fom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\n    }\n\n    return undefined;\n};\n","import { FrilansFormComponents, FrilansFormData, FrilansFormField } from './frilansFormConfig';\nimport { cleanupFrilansFormData, getInitialFrilansFormValues, mapFrilansDataToS√∏kerState } from './frilansFormUtils';\nimport frilansSubformQuestionsConfig from './frilansFormQuestionsConfig';\nimport {\n    Block,\n    Step,\n    StepButtonWrapper,\n    date20YearsAgo,\n    dateToday,\n    intlUtils,\n    validateYesOrNoIsAnswered,\n} from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport stepConfig, { getNextRouteForFrilans, getPreviousSetStepHref } from 'app/steps/stepsConfig';\nimport { validateFrilansStart } from './frilansValidation';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { Button } from '@navikt/ds-react';\nimport { Link } from 'react-router-dom';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport { getFrilansTilretteleggingOption } from '../velg-arbeidsforhold/velgArbeidFormUtils';\nimport { s√∏kerHarKunEtAktivtArbeid } from 'app/utils/arbeidsforholdUtils';\n\nconst FrilansStep: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, barn, tilrettelegging } = s√∏knad;\n\n    const onValidSubmitHandler = (values: Partial<FrilansFormData>) => {\n        const s√∏kerMedFrilans = mapFrilansDataToS√∏kerState(s√∏ker, values as FrilansFormData);\n        const harKunEtAktivtArbeid = s√∏kerHarKunEtAktivtArbeid(\n            barn.termindato,\n            arbeidsforhold,\n            s√∏kerMedFrilans.harJobbetSomFrilans,\n            s√∏kerMedFrilans.harJobbetSomSelvstendigN√¶ringsdrivende,\n        );\n        if (harKunEtAktivtArbeid) {\n            const tilretteleggingOptions = [\n                getFrilansTilretteleggingOption(tilrettelegging, s√∏kerMedFrilans.frilansInformasjon!),\n            ];\n            return [actionCreator.setS√∏ker(s√∏kerMedFrilans), actionCreator.setTilrettelegging(tilretteleggingOptions)];\n        }\n        return [actionCreator.setS√∏ker(s√∏kerMedFrilans)];\n    };\n    const nextRoute = getNextRouteForFrilans(s√∏ker, barn.termindato, arbeidsforhold);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n    return (\n        <FrilansFormComponents.FormikWrapper\n            initialValues={getInitialFrilansFormValues(s√∏ker.frilansInformasjon)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = frilansSubformQuestionsConfig.getVisbility(formValues as FrilansFormData);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"frilans\"\n                        pageTitle={intlUtils(intl, 'steps.label.frilans')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <FrilansFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupFrilansFormData(values, visibility)}\n                        >\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(FrilansFormField.frilansFom)}>\n                                <FrilansFormComponents.DatePicker\n                                    name={FrilansFormField.frilansFom}\n                                    label={intlUtils(intl, 'frilans.oppstart')}\n                                    validate={validateFrilansStart(intl)}\n                                    maxDate={dateToday}\n                                    minDate={date20YearsAgo}\n                                    showYearSelector={true}\n                                    placeholder={'dd.mm.√•√•√•√•'}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(FrilansFormField.jobberFremdelesSomFrilanser)}\n                            >\n                                <FrilansFormComponents.YesOrNoQuestion\n                                    name={FrilansFormField.jobberFremdelesSomFrilanser}\n                                    legend={intlUtils(intl, 'frilans.jobberFremdelesSomFrilans')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.jobberFremdelesSomFrilans.p√•krevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            {/* <Block padBottom=\"xxl\" visible={visibility.isVisible(FrilansFormField.frilansTom)}>\n                                <FrilansFormComponents.DatePicker\n                                    name={FrilansFormField.frilansTom}\n                                    label={intlUtils(intl, 'frilans.slutt')}\n                                    minDate={getMinInputTilOgMedValue(formValues.frilansFom, date4WeeksAgo)}\n                                    maxDate={dateToday}\n                                    showYearSelector={true}\n                                    placeholder={'dd.mm.√•√•√•√•'}\n                                    validate={validateFrilansSlutt(\n                                        intl,\n                                        formValues.jobberFremdelesSomFrilanser!,\n                                        formValues.frilansFom!,\n                                    )}\n                                />\n                            </Block> */}\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getPreviousSetStepHref('frilans')}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </FrilansFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default FrilansStep;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { ArbeidIUtlandetInput } from 'app/types/ArbeidIUtlandet';\n\nexport enum ArbeidIUtlandetFormField {\n    arbeidIUtlandet = 'arbeidIUtlandet',\n}\n\nexport interface ArbeidIUtlandetFormData {\n    [ArbeidIUtlandetFormField.arbeidIUtlandet]: ArbeidIUtlandetInput[];\n}\n\nexport const ArbeidIUtlandetFormComponents = getTypedFormComponents<\n    ArbeidIUtlandetFormField | string,\n    ArbeidIUtlandetFormData\n>();\n","import { AnnenInntektType, ArbeidIUtlandet, ArbeidIUtlandetInput } from 'app/types/ArbeidIUtlandet';\n\nimport { ArbeidIUtlandetFormData, ArbeidIUtlandetFormField } from './arbeidIUtlandetFormConfig';\nimport {\n    convertBooleanOrUndefinedToYesOrNo,\n    convertYesOrNoOrUndefinedToBoolean,\n} from '@navikt/fp-common/src/common/utils/formUtils';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\n\nexport const getUferdigArbeidIUtlandetInput = (): ArbeidIUtlandetInput => {\n    return {\n        fom: '',\n        tom: '',\n        p√•g√•ende: undefined!,\n        arbeidsgiverNavn: '',\n        land: '',\n    };\n};\n\nexport const initialArbeidIUtlandetFormValues: ArbeidIUtlandetFormData = {\n    [ArbeidIUtlandetFormField.arbeidIUtlandet]: [getUferdigArbeidIUtlandetInput()],\n};\n\nexport const mapArbeidIUtlandetTilState = (formValues: Partial<ArbeidIUtlandetFormData>): ArbeidIUtlandet[] => {\n    const mappedAbeid = formValues.arbeidIUtlandet!.map((arbeid) => {\n        return {\n            type: AnnenInntektType.JOBB_I_UTLANDET,\n            tidsperiode: { fom: arbeid.fom, tom: arbeid.tom },\n            p√•g√•ende: !!convertYesOrNoOrUndefinedToBoolean(arbeid.p√•g√•ende),\n            arbeidsgiverNavn: arbeid.arbeidsgiverNavn,\n            land: arbeid.land,\n        };\n    });\n    return mappedAbeid;\n};\nexport const getInitialArbeidIUtlandetFormData = (\n    arbeidIUtlandet: ArbeidIUtlandet[] | undefined,\n): ArbeidIUtlandetFormData => {\n    if (arbeidIUtlandet === undefined || arbeidIUtlandet.length === 0) {\n        return initialArbeidIUtlandetFormValues;\n    }\n    const mappedArbeid = arbeidIUtlandet.map((arbeid) => {\n        return {\n            fom: arbeid.tidsperiode.fom,\n            tom: arbeid.tidsperiode.tom,\n            p√•g√•ende: convertBooleanOrUndefinedToYesOrNo(arbeid.p√•g√•ende),\n            arbeidsgiverNavn: arbeid.arbeidsgiverNavn,\n            land: arbeid.land,\n        };\n    });\n    return { arbeidIUtlandet: mappedArbeid };\n};\n\nexport const cleanUpArbeidIUtlandetFormData = (values: ArbeidIUtlandetFormData): ArbeidIUtlandetFormData => {\n    const cleanedArbeidIUtlandet = values.arbeidIUtlandet.map((arbeid) => {\n        return {\n            ...arbeid,\n            tom: arbeid.p√•g√•ende === YesOrNo.NO ? arbeid.tom : getUferdigArbeidIUtlandetInput().tom,\n        };\n    });\n    const cleanedData: ArbeidIUtlandetFormData = { arbeidIUtlandet: cleanedArbeidIUtlandet };\n    return cleanedData;\n};\n","import * as countries from 'i18n-iso-countries';\nimport * as langNB from 'i18n-iso-countries/langs/nb.json';\nimport * as langNN from 'i18n-iso-countries/langs/nn.json';\n\ncountries.registerLocale(langNB);\ncountries.registerLocale(langNN);\n\n/** Kilde:\n * https://www.nav.no/no/person/flere-tema/arbeid-og-opphold-i-utlandet/relatert-informasjon/eos-landene\n */\nexport const filteredListE√òSCountries = (countryOptionValue: string, shouldFilter?: boolean) => {\n    if (shouldFilter) {\n        switch (countryOptionValue) {\n            case 'BE': // Belgia\n            case 'BG': // Bulgaria\n            case 'DK': // Danmark\n            case 'EE': // Estland\n            case 'FI': // Finland\n            case 'FR': // Frankrike\n            case 'GR': // Hellas\n            case 'IE': // Irland\n            case 'IS': // Island\n            case 'IT': // Italia\n            case 'HR': // Kroatia\n            case 'CY': // Kypros\n            case 'LV': // Latvia\n            case 'LI': // Liechtenstein\n            case 'LT': // Litauen\n            case 'LU': // Luxembourg\n            case 'MT': // Malta\n            case 'NL': // Nederland\n            case 'NO': // Norge\n            case 'PL': // Polen\n            case 'PT': // Portugal\n            case 'RO': // Romania\n            case 'SK': // Slovakia\n            case 'SI': // Slovenia\n            case 'ES': // Spania\n            case 'CH': // Sveits\n            case 'SE': // Sverige\n            case 'CZ': // Tsjekkia\n            case 'DE': // Tyskland\n            case 'HU': // Ungarn\n            case 'AT': // √òsterrike\n                return true;\n            default:\n                return false;\n        }\n    } else {\n        // Filter ut Antarktis\n        return countryOptionValue !== 'AQ';\n    }\n};\n\nexport const getLocaleKey = (locale: string): string => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n\nexport const getCountryName = (alphaCode: string, locale: string): string => {\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer NAV sin landkode av Kosovo til i18n-iso-countries sin landkode for √• hente riktig landsnavn.\n    if (alphaCode === 'XXK') {\n        alphaCode = 'XKX';\n    }\n    return countries.getName(alphaCode, getLocaleKey(locale));\n};\n\nexport const getAlpha3Code = (alpha2Code: string) => {\n    const countryAlpha3Code = countries.alpha2ToAlpha3(alpha2Code).toUpperCase();\n\n    // i18n-iso-countries 7.5.0 bruker 'XKX' 'alpha3Code' for Kosovo. 'XXK' kode brukes i NAV.\n    // Endrer i18n-iso-countries sin landkode til landkode som brukes i NAV for √• sende riktig kode videre.\n    return countryAlpha3Code === 'XKX' ? 'XXK' : countryAlpha3Code;\n};\n\nexport const countryIsMemberOfE√∏sOrEfta = (isoCode: string) => {\n    let isoCodeToUse = isoCode.toUpperCase();\n    if (isoCodeToUse === 'XXK') {\n        isoCodeToUse = 'XKX';\n    }\n    isoCodeToUse = isoCodeToUse.length === 2 ? isoCodeToUse : countries.alpha3ToAlpha2(isoCodeToUse);\n    return filteredListE√òSCountries(isoCodeToUse.toUpperCase(), true) === true;\n};\n\nexport const getCountries = () => countries;\n\nexport const createCountryOptions = (): Record<string, any> => {\n    const lang = 'nb';\n    const countries = getCountries();\n\n    const names: Array<[string, any]> = Object.entries(countries.getNames(lang));\n    return names\n        .sort((a: string[], b: string[]) => a[1].localeCompare(b[1], lang))\n        .filter((countryOptionValue: string[]) => filteredListE√òSCountries(countryOptionValue[0], false));\n};\n","import dayjs from 'dayjs';\nimport { DATE_TODAY, DDMMYYYY_DATE_FORMAT, ISO_DATE_FORMAT } from '@navikt/fp-constants';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport { TIME_FORMAT } from '@navikt/fp-constants/src/dates';\n\ndayjs.extend(isBetween);\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isSameOrAfter);\n\ntype Period = { from: Date; to: Date };\n\ntype DateTypes = string | Date | dayjs.Dayjs;\nexport const formatDate = (date: Date | string) => dayjs(date).format(DDMMYYYY_DATE_FORMAT);\nexport const formatDateIso = (date: Date | string) => dayjs(date).format(ISO_DATE_FORMAT);\nexport const formatTime = (date: Date | string) => dayjs(date).format(TIME_FORMAT);\n\nexport const isToday = (date: DateTypes): boolean => dayjs(date).isSame(DATE_TODAY, 'day');\nexport const isAfterToday = (date: DateTypes): boolean => dayjs(date).isAfter(DATE_TODAY, 'day');\nexport const isBeforeToday = (date: DateTypes): boolean => dayjs(date).isBefore(DATE_TODAY, 'day');\nexport const isSameOrAfterToday = (date: DateTypes): boolean => dayjs(date).isSameOrAfter(DATE_TODAY, 'day');\nexport const isSameOrBeforeToday = (date: DateTypes): boolean => dayjs(date).isSameOrBefore(DATE_TODAY, 'day');\nexport const isDateASameOrBeforeDateB = (dateA: DateTypes, dateB: DateTypes): boolean =>\n    dayjs(dateA).isSameOrBefore(dateB, 'day');\nexport const isDateAAfterDateB = (dateA: DateTypes, dateB: DateTypes): boolean => dayjs(dateA).isAfter(dateB, 'day');\nexport const isDateWithinRange = (date: Date, minDate: Date, maxDate: Date): boolean =>\n    dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\n\nexport const erMyndig = (f√∏dselsdato: string) => {\n    const now = dayjs();\n    const momentDate = dayjs(f√∏dselsdato);\n    return now.diff(momentDate, 'years') >= 18;\n};\n\nconst sortDateRange = (d1: Period, d2: Period) => {\n    return dayjs(d1.from).isSameOrBefore(d2.from) ? -1 : 1;\n};\n\nexport const isDateRangesOverlapping = (ranges: Period[]) => {\n    if (ranges.length > 0) {\n        const sortedDates = [...ranges].sort(sortDateRange);\n        const hasOverlap = sortedDates.find((d, idx) => {\n            if (idx < sortedDates.length - 1) {\n                return dayjs(d.to).isSameOrAfter(sortedDates[idx + 1].from);\n            }\n            return false;\n        });\n        return hasOverlap !== undefined;\n    }\n    return false;\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { intlUtils, isDateABeforeDateB, isDateInTheFuture, validateTextInputField } from '@navikt/fp-common';\nimport { isDateAAfterDateB } from '@navikt/fp-utils';\nimport { femM√•nederSiden } from 'app/utils/dateUtils';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { IntlShape } from 'react-intl';\nimport { YesOrNo, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport dayjs from 'dayjs';\n\nexport const validateArbeidIUtlandetFom = (intl: IntlShape, tom: string | undefined) => (fom: string) => {\n    if (!hasValue(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.p√•krevd');\n    }\n    if (hasValue(fom) && !isISODateString(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n    }\n\n    if (hasValue(fom) && isDateInTheFuture(fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\n    }\n\n    if (hasValue(fom) && tom && isDateABeforeDateB(tom, fom)) {\n        return intlUtils(intl, 'valideringsfeil.fraOgMedDato.f√∏rTilDato');\n    }\n\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetTom = (intl: IntlShape, fom: string | undefined) => (tom: string) => {\n    if (!hasValue(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.p√•krevd');\n    }\n    if (!isISODateString(tom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n    }\n\n    if (isDateAAfterDateB(tom, dayjs().add(9, 'month'))) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\n    }\n\n    if (isDateABeforeDateB(tom, dateToISOString(femM√•nederSiden()))) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.arbeidIUtlandet.merEnn5M√•nederSiden');\n    }\n\n    if (fom && isDateABeforeDateB(tom, fom)) {\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\n    }\n\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetP√•g√•ende = (intl: IntlShape) => (p√•g√•ende: YesOrNo) => {\n    if (!hasValue(p√•g√•ende)) {\n        return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetP√•g√•ende.p√•krevd');\n    }\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetLand = (intl: IntlShape) => (land: string) => {\n    if (!hasValue(land)) {\n        return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetLand.p√•krevd');\n    }\n    return undefined;\n};\n\nexport const validateArbeidIUtlandetNavnArbeidsgiver =\n    (intl: IntlShape, navnP√•ArbeidsgiverLabel: string) => (navn: string) => {\n        if (!hasValue(navn)) {\n            return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetNavn.p√•krevd');\n        }\n        if (navn.length > 100) {\n            return intlUtils(intl, 'valideringsfeil.arbeidIUtlandetNavn.forLang');\n        }\n        return validateTextInputField(navn, navnP√•ArbeidsgiverLabel, intl);\n    };\n","const HorizontalLine = () => {\n    return (\n        <div\n            style={{\n                backgroundColor: '#99C4DD',\n                height: '2px',\n                marginTop: '1.5rem',\n                marginBottom: '2rem',\n                border: 'none',\n            }}\n        ></div>\n    );\n};\n\nexport default HorizontalLine;\n","import { Button } from '@navikt/ds-react';\nimport { Block, Step, StepButtonWrapper, date20YearsAgo, date5MonthsAgo, intlUtils } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport stepConfig, {\n    getBackLinkForArbeidIUtlandetSteg,\n    getNextRouteValgAvArbeidEllerSkjema,\n} from 'app/steps/stepsConfig';\nimport { Link } from 'react-router-dom';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport {\n    ArbeidIUtlandetFormComponents,\n    ArbeidIUtlandetFormData,\n    ArbeidIUtlandetFormField,\n} from './arbeidIUtlandetFormConfig';\nimport { FieldArray } from 'formik';\nimport {\n    cleanUpArbeidIUtlandetFormData,\n    getInitialArbeidIUtlandetFormData,\n    getUferdigArbeidIUtlandetInput,\n    mapArbeidIUtlandetTilState,\n} from './arbeidIUtlandetFormUtils';\nimport dayjs from 'dayjs';\nimport { getMinInputTilOgMedValue } from 'app/utils/validationUtils';\nimport { PlusIcon, TrashIcon } from '@navikt/aksel-icons';\nimport {\n    validateArbeidIUtlandetFom,\n    validateArbeidIUtlandetLand,\n    validateArbeidIUtlandetNavnArbeidsgiver,\n    validateArbeidIUtlandetP√•g√•ende,\n    validateArbeidIUtlandetTom,\n} from './arbeidIUtlandetValidation';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport HorizontalLine from 'app/components/horizontal-line/HorizontalLine';\n\nconst ArbeidIUtlandetStep: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, barn } = s√∏knad;\n    const arbeidIUtlandet = s√∏ker.andreInntekter;\n\n    const onValidSubmitHandler = (values: Partial<ArbeidIUtlandetFormData>) => {\n        const arbeidIUtlandet = mapArbeidIUtlandetTilState(values);\n        const s√∏kerMedArbeidIUtlandet = { ...s√∏ker, andreInntekter: arbeidIUtlandet };\n        return [actionCreator.setS√∏ker(s√∏kerMedArbeidIUtlandet)];\n    };\n    const nextRoute = getNextRouteValgAvArbeidEllerSkjema(barn.termindato, arbeidsforhold, s√∏ker);\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n\n    return (\n        <ArbeidIUtlandetFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getInitialArbeidIUtlandetFormData(arbeidIUtlandet)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const navnP√•ArbeidsgiverLabel = intlUtils(intl, 'arbeidIUtlandet.navn');\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"arbeidIUtlandet\"\n                        pageTitle={intlUtils(intl, 'steps.label.arbeidIUtlandet')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <ArbeidIUtlandetFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanUpArbeidIUtlandetFormData(values)}\n                        >\n                            <FieldArray\n                                validateOnChange={false}\n                                name={ArbeidIUtlandetFormField.arbeidIUtlandet}\n                                render={(arrayHelpers) =>\n                                    formValues.arbeidIUtlandet &&\n                                    formValues.arbeidIUtlandet.length > 0 &&\n                                    formValues.arbeidIUtlandet.map((_a, index) => (\n                                        <div key={index}>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.CountrySelect\n                                                    name={`arbeidIUtlandet.${index}.land`}\n                                                    style={{ width: 'var(--app-text-input-width)' }}\n                                                    label={intlUtils(intl, 'arbeidIUtlandet.land')}\n                                                    useAlpha3Code={false}\n                                                    validate={validateArbeidIUtlandetLand(intl)}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.TextField\n                                                    name={`arbeidIUtlandet.${index}.arbeidsgiverNavn`}\n                                                    style={{ width: 'var(--app-text-input-width)' }}\n                                                    label={navnP√•ArbeidsgiverLabel}\n                                                    validate={validateArbeidIUtlandetNavnArbeidsgiver(\n                                                        intl,\n                                                        navnP√•ArbeidsgiverLabel,\n                                                    )}\n                                                    maxLength={100}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.DatePicker\n                                                    name={`arbeidIUtlandet.${index}.fom`}\n                                                    label={intlUtils(intl, 'arbeidIUtlandet.fom')}\n                                                    placeholder=\"dd.mm.√•√•√•√•\"\n                                                    fullscreenOverlay={true}\n                                                    showYearSelector={true}\n                                                    validate={validateArbeidIUtlandetFom(\n                                                        intl,\n                                                        formValues.arbeidIUtlandet![index].tom,\n                                                    )}\n                                                    maxDate={dayjs().toDate()}\n                                                    minDate={date20YearsAgo}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <ArbeidIUtlandetFormComponents.YesOrNoQuestion\n                                                    name={`arbeidIUtlandet.${index}.p√•g√•ende`}\n                                                    legend={intlUtils(intl, 'egenN√¶ring.n√¶ring.p√•g√•ende')}\n                                                    validate={validateArbeidIUtlandetP√•g√•ende(intl)}\n                                                />\n                                            </Block>\n                                            <Block\n                                                padBottom=\"xxl\"\n                                                visible={formValues.arbeidIUtlandet![index].p√•g√•ende === YesOrNo.NO}\n                                            >\n                                                <ArbeidIUtlandetFormComponents.DatePicker\n                                                    name={`arbeidIUtlandet.${index}.tom`}\n                                                    label={intlUtils(intl, 'arbeidIUtlandet.tom')}\n                                                    description={intlUtils(intl, 'egenN√¶ring.arbeid.tom.description')}\n                                                    placeholder=\"dd.mm.√•√•√•√•\"\n                                                    fullscreenOverlay={true}\n                                                    showYearSelector={true}\n                                                    validate={validateArbeidIUtlandetTom(\n                                                        intl,\n                                                        formValues.arbeidIUtlandet![index].fom,\n                                                    )}\n                                                    maxDate={dayjs().add(9, 'month').toDate()}\n                                                    minDate={getMinInputTilOgMedValue(\n                                                        formValues.arbeidIUtlandet![index].fom,\n                                                        date5MonthsAgo,\n                                                    )}\n                                                />\n                                            </Block>\n                                            {index !== 0 && (\n                                                <Block>\n                                                    <Button\n                                                        icon={<TrashIcon />}\n                                                        type=\"button\"\n                                                        variant=\"tertiary\"\n                                                        onClick={() => arrayHelpers.remove(index)}\n                                                    >\n                                                        {intlUtils(intl, 'perioder.varierende.slett')}\n                                                    </Button>\n                                                </Block>\n                                            )}\n                                            {formValues.arbeidIUtlandet && formValues.arbeidIUtlandet.length > 1 && (\n                                                <HorizontalLine />\n                                            )}\n                                            {formValues.arbeidIUtlandet &&\n                                                index === formValues.arbeidIUtlandet.length - 1 && (\n                                                    <Block padBottom=\"xl\">\n                                                        <Button\n                                                            icon={<PlusIcon />}\n                                                            type=\"button\"\n                                                            variant=\"secondary\"\n                                                            onClick={() =>\n                                                                arrayHelpers.push(getUferdigArbeidIUtlandetInput())\n                                                            }\n                                                        >\n                                                            {intlUtils(intl, 'arbeidIUtlandet.tittel.ny')}\n                                                        </Button>\n                                                    </Block>\n                                                )}\n                                        </div>\n                                    ))\n                                }\n                            />\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getBackLinkForArbeidIUtlandetSteg(s√∏ker)}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </ArbeidIUtlandetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default ArbeidIUtlandetStep;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum VelgArbeidFormField {\n    arbeidMedTilrettelegging = 'arbeidMedTilrettelegging',\n}\n\nexport interface VelgArbeidFormData {\n    [VelgArbeidFormField.arbeidMedTilrettelegging]: string[];\n}\n\nexport const VelgArbeidFormComponents = getTypedFormComponents<VelgArbeidFormField, VelgArbeidFormData>();\n","import { FormattedMessage, useIntl } from 'react-intl';\nimport { BodyLong, GuidePanel } from '@navikt/ds-react';\nimport { Block, intlUtils, useDocumentTitle } from '@navikt/fp-common';\nimport { PageKeys, logAmplitudeEvent } from 'app/amplitude/amplitude';\n\nconst FlereArbeidsforholdGuidePanel: React.FunctionComponent = () => {\n    const intl = useIntl();\n    useDocumentTitle(intlUtils(intl, 's√∏knad.pageheading'));\n\n    logAmplitudeEvent('sidevisning', {\n        app: 'svangerskapspengerny',\n        team: 'foreldrepenger',\n        pageKey: PageKeys.Umyndig,\n    });\n    return (\n        <Block padBottom=\"xl\">\n            <GuidePanel>\n                <BodyLong>\n                    <FormattedMessage id=\"velgArbeid.guidepanel.tekst\" />\n                    <li>\n                        <FormattedMessage id=\"velgArbeid.guidepanel.liste.del1\" />\n                    </li>\n                    <li>\n                        <FormattedMessage id=\"velgArbeid.guidepanel.liste.del2\" />\n                    </li>\n                </BodyLong>\n            </GuidePanel>\n        </Block>\n    );\n};\n\nexport default FlereArbeidsforholdGuidePanel;\n","import { VelgArbeidFormComponents, VelgArbeidFormField } from './velgArbeidFormConfig';\nimport { Block, Step, StepButtonWrapper, intlUtils } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport stepConfig, { getBackLinkForVelgArbeidSteg } from 'app/steps/stepsConfig';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { Button } from '@navikt/ds-react';\nimport { Link } from 'react-router-dom';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport { getValgtTilrettelegging } from 'app/utils/tilretteleggingUtils';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport {\n    cleanupOmValgArbeidFormData,\n    getInitialVelgArbeidFormValues,\n    mapArbeidsforholdToVelgArbeidOptions,\n    validateVelgArbeidIsAnswered,\n} from './velgArbeidFormUtils';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport { useMemo, useState } from 'react';\nimport Tilrettelegging, { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\nimport { capitalizeFirstLetter } from '@navikt/fp-common/src/common/utils/stringUtils';\nimport FlereArbeidsforholdGuidePanel from './components/guidepanel/FlereArbeidsforholdGuidePanel';\n\nconst VelgArbeid: React.FunctionComponent = () => {\n    useUpdateCurrentTilretteleggingId(undefined);\n    const intl = useIntl();\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, tilrettelegging, barn } = s√∏knad;\n    const { termindato } = barn;\n    const { arbeidsforhold } = useS√∏kerinfo();\n\n    const [nextRoute, setNextRoute] = useState(S√∏knadRoutes.SKJEMA.toString());\n    const [valgtTilrettelegging, setValgtTilrettelegging] = useState<Tilrettelegging[]>([]);\n    const tilretteleggingOptions = useMemo(\n        () => mapArbeidsforholdToVelgArbeidOptions(tilrettelegging, s√∏ker, arbeidsforhold, termindato, intl),\n        [tilrettelegging, s√∏ker, arbeidsforhold, termindato, intl],\n    );\n    const onValidSubmitHandler = () => {\n        return [actionCreator.setTilrettelegging(valgtTilrettelegging)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n\n    return (\n        <VelgArbeidFormComponents.FormikWrapper\n            initialValues={getInitialVelgArbeidFormValues(tilrettelegging)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visInfo = formValues.arbeidMedTilrettelegging && formValues.arbeidMedTilrettelegging.length > 1;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"velgArbeid\"\n                        pageTitle={intlUtils(intl, 'steps.label.velgArbeid')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <VelgArbeidFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupOmValgArbeidFormData(values, tilretteleggingOptions)}\n                        >\n                            <Block padBottom=\"l\">\n                                <VelgArbeidFormComponents.CheckboxGroup\n                                    name={VelgArbeidFormField.arbeidMedTilrettelegging}\n                                    legend={intlUtils(intl, 'velgArbeid.hvor')}\n                                    checkboxes={tilretteleggingOptions.map((option) => ({\n                                        label:\n                                            option.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER\n                                                ? capitalizeFirstLetter(option.arbeidsforhold.navn)\n                                                : option.arbeidsforhold.navn,\n                                        value: option.id,\n                                    }))}\n                                    validate={(value) => validateVelgArbeidIsAnswered(value, intl)}\n                                />\n                            </Block>\n                            {visInfo && <FlereArbeidsforholdGuidePanel />}\n\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getBackLinkForVelgArbeidSteg(s√∏ker)}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isSubmitting}\n                                        loading={isSubmitting}\n                                        onClick={() => {\n                                            const tilretteleggingValg = getValgtTilrettelegging(\n                                                tilretteleggingOptions,\n                                                formValues.arbeidMedTilrettelegging!,\n                                            );\n                                            setValgtTilrettelegging(tilretteleggingValg);\n                                            const f√∏rsteTilretteleggingId =\n                                                tilretteleggingValg.length > 0 ? tilretteleggingValg[0].id : undefined;\n                                            if (f√∏rsteTilretteleggingId) {\n                                                setNextRoute(`${S√∏knadRoutes.SKJEMA}/${f√∏rsteTilretteleggingId}`);\n                                            }\n                                        }}\n                                    >\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </VelgArbeidFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default VelgArbeid;\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\nimport { hasValue } from 'app/utils/validationUtils';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { EgenN√¶ringFormData, EgenN√¶ringFormField } from './egenN√¶ringFormConfig';\nimport { ISOStringToDate } from '@navikt/fp-common';\nimport { erVirksomhetRegnetSomNyoppstartet } from './egenN√¶ringFormUtils';\n\nexport const visVarigEndringInput = (\n    egenN√¶ringFom: string,\n    egenN√¶ringHattVarigEndringDeSiste4√Örene: YesOrNo,\n): boolean => {\n    return (\n        hasValue(egenN√¶ringFom) &&\n        !erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenN√¶ringFom)) &&\n        hasValue(egenN√¶ringHattVarigEndringDeSiste4√Örene) &&\n        egenN√¶ringHattVarigEndringDeSiste4√Örene === YesOrNo.YES\n    );\n};\n\nconst EgenN√¶ringSubformConfig: QuestionConfig<EgenN√¶ringFormData, EgenN√¶ringFormField> = {\n    [EgenN√¶ringFormField.egenN√¶ringType]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenN√¶ringType }) => egenN√¶ringType !== undefined,\n    },\n    [EgenN√¶ringFormField.egenN√¶ringNavn]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenN√¶ringNavn }) => hasValue(egenN√¶ringNavn),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringRegistrertINorge]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenN√¶ringRegistrertINorge }) => egenN√¶ringRegistrertINorge !== YesOrNo.UNANSWERED,\n    },\n    [EgenN√¶ringFormField.egenN√¶ringOrgnr]: {\n        isIncluded: ({ egenN√¶ringRegistrertINorge }) => egenN√¶ringRegistrertINorge === YesOrNo.YES,\n        isAnswered: () => true,\n    },\n    [EgenN√¶ringFormField.egenN√¶ringLand]: {\n        isIncluded: ({ egenN√¶ringRegistrertINorge }) => egenN√¶ringRegistrertINorge === YesOrNo.NO,\n        isAnswered: ({ egenN√¶ringLand }) => hasValue(egenN√¶ringLand),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringFom]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenN√¶ringFom }) => hasValue(egenN√¶ringFom),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringP√•g√•ende]: {\n        isIncluded: () => true,\n        isAnswered: ({ egenN√¶ringP√•g√•ende }) => egenN√¶ringP√•g√•ende !== YesOrNo.UNANSWERED,\n    },\n    [EgenN√¶ringFormField.egenN√¶ringTom]: {\n        isIncluded: ({ egenN√¶ringP√•g√•ende }) => egenN√¶ringP√•g√•ende === YesOrNo.NO,\n        isAnswered: ({ egenN√¶ringTom }) => hasValue(egenN√¶ringTom),\n        visibilityFilter: ({ egenN√¶ringP√•g√•ende }) => egenN√¶ringP√•g√•ende === YesOrNo.NO,\n    },\n    [EgenN√¶ringFormField.egenN√¶ringResultat]: {\n        isIncluded: ({ egenN√¶ringFom }) => erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenN√¶ringFom)),\n        isAnswered: ({ egenN√¶ringResultat }) => hasValue(egenN√¶ringResultat),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringBlittYrkesaktivDe3Siste√Örene]: {\n        isIncluded: ({ egenN√¶ringFom }) => erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenN√¶ringFom)),\n        isAnswered: ({ egenN√¶ringBlittYrkesaktivDe3Siste√Örene }) =>\n            egenN√¶ringBlittYrkesaktivDe3Siste√Örene !== YesOrNo.UNANSWERED,\n    },\n    [EgenN√¶ringFormField.egenN√¶ringYrkesAktivDato]: {\n        isIncluded: ({ egenN√¶ringFom, egenN√¶ringBlittYrkesaktivDe3Siste√Örene }) =>\n            erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenN√¶ringFom)) &&\n            egenN√¶ringBlittYrkesaktivDe3Siste√Örene === YesOrNo.YES,\n        isAnswered: ({ egenN√¶ringYrkesAktivDato }) => hasValue(egenN√¶ringYrkesAktivDato),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringHattVarigEndringDeSiste4√Örene]: {\n        isIncluded: ({ egenN√¶ringFom }) =>\n            hasValue(egenN√¶ringFom) && !erVirksomhetRegnetSomNyoppstartet(ISOStringToDate(egenN√¶ringFom)),\n        isAnswered: ({ egenN√¶ringHattVarigEndringDeSiste4√Örene }) => hasValue(egenN√¶ringHattVarigEndringDeSiste4√Örene),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringDato]: {\n        isIncluded: ({ egenN√¶ringFom, egenN√¶ringHattVarigEndringDeSiste4√Örene }) =>\n            visVarigEndringInput(egenN√¶ringFom, egenN√¶ringHattVarigEndringDeSiste4√Örene),\n        isAnswered: ({ egenN√¶ringVarigEndringDato }) => hasValue(egenN√¶ringVarigEndringDato),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringBeskrivelse]: {\n        isIncluded: ({ egenN√¶ringFom, egenN√¶ringHattVarigEndringDeSiste4√Örene }) =>\n            visVarigEndringInput(egenN√¶ringFom, egenN√¶ringHattVarigEndringDeSiste4√Örene),\n        isAnswered: ({ egenN√¶ringVarigEndringBeskrivelse }) => hasValue(egenN√¶ringVarigEndringBeskrivelse),\n    },\n    [EgenN√¶ringFormField.egenN√¶ringVarigEndringInntektEtterEndring]: {\n        isIncluded: ({ egenN√¶ringFom, egenN√¶ringHattVarigEndringDeSiste4√Örene }) =>\n            visVarigEndringInput(egenN√¶ringFom, egenN√¶ringHattVarigEndringDeSiste4√Örene),\n        isAnswered: ({ egenN√¶ringVarigEndringInntektEtterEndring }) =>\n            hasValue(egenN√¶ringVarigEndringInntektEtterEndring),\n    },\n};\n\nexport const egenN√¶ringFormQuestionsConfig = Questions<EgenN√¶ringFormData, EgenN√¶ringFormField>(\n    EgenN√¶ringSubformConfig,\n);\n","import { getMod11 } from './numberUtils';\n\nconst onlyNumbersRegExp = /^\\d*$/;\n\nexport const er9Tall = (orgnr: string): boolean => {\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\n};\n\nexport const starterP√•8Eller9 = (orgnr: string): boolean => {\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\n};\n\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\n    if (!orgnr || er9Tall(orgnr) === false || starterP√•8Eller9(orgnr) === false) {\n        return false;\n    }\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport {\n    SkjemaelementFeil,\n    containsWhiteSpace,\n    intlUtils,\n    isDateABeforeDateB,\n    isDateInTheFuture,\n    validateStringAsNumberInput,\n    validateTextInputField,\n} from '@navikt/fp-common';\nimport { erGyldigNorskOrgnummer } from '@navikt/fp-common/src/common/utils/organisasjonUtils';\nimport { isDateAAfterDateB } from '@navikt/fp-utils';\nimport { getNumberFromNumberInputValue, dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { date4YearsAgo, femM√•nederSiden } from 'app/utils/dateUtils';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH, hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validateEgenN√¶ringFom =\n    (intl: IntlShape, tom: string) =>\n    (fom: string): SkjemaelementFeil => {\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.p√•krevd');\n        }\n\n        if (!isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n        }\n\n        if (isDateInTheFuture(fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.erIFremtiden');\n        }\n\n        if (isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.f√∏rTilDato');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenN√¶ringTom =\n    (intl: IntlShape, fom: string) =>\n    (tom: string): SkjemaelementFeil => {\n        if (!hasValue(tom)) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.p√•krevd');\n        }\n        if (!isISODateString(tom)) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n        }\n\n        if (isDateAAfterDateB(tom, dayjs().add(9, 'month'))) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.erIFremtiden');\n        }\n\n        if (isDateABeforeDateB(tom, dateToISOString(femM√•nederSiden()))) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.egenN√¶ring.merEnn5M√•nederSiden');\n        }\n\n        if (isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.tilOgMedDato.etterFraDato');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenN√¶ringOrgnr =\n    (intl: IntlShape) =>\n    (orgnr: string): SkjemaelementFeil => {\n        const trimmedOrgNr = orgnr.trim();\n        if (!hasValue(trimmedOrgNr)) {\n            return intlUtils(intl, 'valideringsfeil.egenN√¶ringOrgnr.p√•krevd');\n        }\n        if (containsWhiteSpace(trimmedOrgNr)) {\n            return intlUtils(intl, 'valideringsfeil.egenN√¶ringOrgnr.inneholderMellomrom');\n        }\n        if (!erGyldigNorskOrgnummer(trimmedOrgNr)) {\n            return intlUtils(intl, 'valideringsfeil.egenN√¶ringOrgnr.ugyldigFormat');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenN√¶ringYrkesAktivDatoDato = (intl: IntlShape) => (dato: string) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.yrkesaktiv.p√•krevd');\n    }\n\n    if (!isISODateString(dato)) {\n        return intlUtils(intl, 'valideringsfeil.yrkesaktiv.gyldigDato');\n    }\n\n    if (isDateInTheFuture(dato)) {\n        return intlUtils(intl, 'valideringsfeil.yrkesaktiv.erIFremtiden');\n    }\n\n    return undefined;\n};\n\nexport const validateEgenN√¶ringResultat = (intl: IntlShape) => (value: string) => {\n    if (!hasValue(value)) {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringInntekt.p√•krevd');\n    } else {\n        if (value.length > 9) {\n            return intlUtils(intl, 'valideringsfeil.n√¶ringsinntekt.forLang');\n        }\n        const valueNumber = getNumberFromNumberInputValue(value);\n        if (!valueNumber || Math.round(valueNumber) !== valueNumber) {\n            return intlUtils(intl, 'valideringsfeil.n√¶ringsinntekt.ugyldigFormat');\n        }\n        if (valueNumber && valueNumber < 0) {\n            return intlUtils(intl, 'valideringsfeil.n√¶ringsinntekt.mindreEnnNull');\n        }\n    }\n\n    return undefined;\n};\n\nexport const validateEgenN√¶ringVarigEndringDato =\n    (intl: IntlShape, fom: string, tom: string | undefined) =>\n    (endringDato: string): SkjemaelementFeil => {\n        if (!hasValue(endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.p√•krevd');\n        }\n\n        if (!isISODateString(endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.gyldigDato');\n        }\n\n        if (isDateInTheFuture(endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.erIFremtiden');\n        }\n        if (isDateABeforeDateB(endringDato, dateToISOString(date4YearsAgo))) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.mindreEnn4√ÖrSiden');\n        }\n\n        if (isDateABeforeDateB(endringDato, fom)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.f√∏rFraDato');\n        }\n        if (tom && hasValue(tom) && isDateABeforeDateB(tom, endringDato)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringDato.etterTilDato');\n        }\n\n        return undefined;\n    };\n\nexport const validateEgenN√¶ringVarigEndringInntekt =\n    (intl: IntlShape) =>\n    (value: string): SkjemaelementFeil => {\n        if (!hasValue(value)) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringInntekt.p√•krevd');\n        }\n        if (value.length > 9) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringInntekt.forLang');\n        }\n        const valueNumber = getNumberFromNumberInputValue(value);\n        if (valueNumber && valueNumber < 0) {\n            return intlUtils(intl, 'valideringsfeil.varigEndringInntekt.mindreEnnNull');\n        }\n        return validateStringAsNumberInput(value, intlUtils(intl, 'valideringsfeil.varigEndringInntekt.ugyldigFormat'));\n    };\n\nexport const validateEgenN√¶ringVarigEndringBeskrivelse = (intl: IntlShape, label: string) => (value: string) => {\n    if (!hasValue(value) || value.trim() === '') {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringVarigEndringBeskrivelse.p√•krevd');\n    }\n\n    if (value.length > TEXT_INPUT_MAX_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringVarigEndringBeskrivelse.forLang');\n    }\n\n    if (value.length < TEXT_INPUT_MIN_LENGTH) {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringVarigEndringBeskrivelse.forKort');\n    }\n\n    return validateTextInputField(value, label, intl);\n};\n\nexport const validateEgenN√¶ringNavn = (intl: IntlShape, label: string) => (value: string) => {\n    if (!hasValue(value)) {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringNavn.p√•krevd');\n    }\n    if (value.length > 100) {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringNavn.forLang');\n    }\n    return validateTextInputField(value, label, intl);\n};\n\nexport const validateEgenN√¶ringLand = (intl: IntlShape) => (value: string) => {\n    if (!hasValue(value)) {\n        return intlUtils(intl, 'valideringsfeil.egenN√¶ringLand.p√•krevd');\n    }\n    return undefined;\n};\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { validateEgenN√¶ringLand, validateEgenN√¶ringOrgnr } from '../../steps/egen-n√¶ring/egenN√¶ringValidation';\nimport { EgenN√¶ringFormComponents, EgenN√¶ringFormField } from 'app/steps/egen-n√¶ring/egenN√¶ringFormConfig';\n\ninterface Props {\n    visibility: QuestionVisibility<EgenN√¶ringFormField, undefined>;\n}\n\nconst OrgnummerEllerLand: FunctionComponent<Props> = ({ visibility }) => {\n    const intl = useIntl();\n\n    return (\n        <>\n            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringOrgnr)}>\n                <EgenN√¶ringFormComponents.NumberInput\n                    style={{ width: 'var(--app-text-input-width)' }}\n                    name={EgenN√¶ringFormField.egenN√¶ringOrgnr}\n                    label={intlUtils(intl, 'egenN√¶ring.orgnr')}\n                    validate={validateEgenN√¶ringOrgnr(intl)}\n                />\n            </Block>\n            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringLand)}>\n                <EgenN√¶ringFormComponents.CountrySelect\n                    style={{ width: 'var(--app-text-input-width)' }}\n                    name={EgenN√¶ringFormField.egenN√¶ringLand}\n                    label={intlUtils(intl, 'egenN√¶ring.registrertILand')}\n                    useAlpha3Code={false}\n                    validate={validateEgenN√¶ringLand(intl)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default OrgnummerEllerLand;\n","import { Block, ISOStringToDate, intlUtils, validateYesOrNoIsAnswered } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    validateEgenN√¶ringVarigEndringBeskrivelse,\n    validateEgenN√¶ringVarigEndringDato,\n    validateEgenN√¶ringVarigEndringInntekt,\n} from '../egenN√¶ringValidation';\nimport {\n    EgenN√¶ringFormComponents,\n    EgenN√¶ringFormData,\n    EgenN√¶ringFormField,\n} from 'app/steps/egen-n√¶ring/egenN√¶ringFormConfig';\nimport dayjs from 'dayjs';\nimport { TEXT_INPUT_MAX_LENGTH, TEXT_INPUT_MIN_LENGTH } from 'app/utils/validationUtils';\nimport { BodyShort, ReadMore } from '@navikt/ds-react';\n\ninterface Props {\n    visibility: QuestionVisibility<EgenN√¶ringFormField, undefined>;\n    formValues: Partial<EgenN√¶ringFormData>;\n}\n\nconst VarigEndringSp√∏rsm√•l: FunctionComponent<Props> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n    const egenN√¶ringVarigEndringBeskrivelseLabel = intlUtils(intl, 'egenN√¶ring.varigEndringBeskrivelse.label');\n    return (\n        <>\n            <Block\n                padBottom=\"xxl\"\n                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringHattVarigEndringDeSiste4√Örene)}\n            >\n                <EgenN√¶ringFormComponents.YesOrNoQuestion\n                    name={EgenN√¶ringFormField.egenN√¶ringHattVarigEndringDeSiste4√Örene}\n                    legend={intlUtils(intl, 'egenN√¶ring.egenN√¶ringHattVarigEndringDeSiste4√Örene')}\n                    validate={(value) =>\n                        validateYesOrNoIsAnswered(\n                            value,\n                            intlUtils(intl, 'valideringsfeil.egenN√¶ringHattVarigEndringDeSiste4√Örene.p√•krevd'),\n                        )\n                    }\n                />\n                <ReadMore header={intlUtils(intl, 'egenN√¶ring.egenN√¶ringHattVarigEndringDeSiste4√Örene.info.√•pneLabel')}>\n                    <BodyShort>\n                        <FormattedMessage id=\"egenN√¶ring.egenN√¶ringHattVarigEndringDeSiste4√Örene.info\"></FormattedMessage>\n                    </BodyShort>\n                </ReadMore>\n            </Block>\n            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringVarigEndringDato)}>\n                <EgenN√¶ringFormComponents.DatePicker\n                    name={EgenN√¶ringFormField.egenN√¶ringVarigEndringDato}\n                    label={intlUtils(intl, 'egenN√¶ring.egenN√¶ringVarigEndringDato')}\n                    placeholder=\"dd.mm.√•√•√•√•\"\n                    fullscreenOverlay={true}\n                    showYearSelector={true}\n                    validate={validateEgenN√¶ringVarigEndringDato(\n                        intl,\n                        formValues.egenN√¶ringFom!,\n                        formValues.egenN√¶ringTom,\n                    )}\n                    maxDate={dayjs().toDate()}\n                    minDate={ISOStringToDate(formValues.egenN√¶ringFom)}\n                />\n            </Block>\n            <Block\n                padBottom=\"xxl\"\n                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringVarigEndringInntektEtterEndring)}\n            >\n                <EgenN√¶ringFormComponents.TextField\n                    name={EgenN√¶ringFormField.egenN√¶ringVarigEndringInntektEtterEndring}\n                    label={intlUtils(intl, 'egenN√¶ring.egenN√¶ringVarigEndringInntektEtterEndring')}\n                    description={intlUtils(intl, 'egenN√¶ring.egenN√¶ringVarigEndringInntektEtterEndring.description')}\n                    validate={validateEgenN√¶ringVarigEndringInntekt(intl)}\n                    style={{ width: 'var(--app-text-input-width)' }}\n                />\n            </Block>\n            <Block\n                padBottom=\"xxl\"\n                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringVarigEndringBeskrivelse)}\n            >\n                <EgenN√¶ringFormComponents.Textarea\n                    name={EgenN√¶ringFormField.egenN√¶ringVarigEndringBeskrivelse}\n                    label={egenN√¶ringVarigEndringBeskrivelseLabel}\n                    minLength={TEXT_INPUT_MIN_LENGTH}\n                    maxLength={TEXT_INPUT_MAX_LENGTH}\n                    validate={validateEgenN√¶ringVarigEndringBeskrivelse(intl, egenN√¶ringVarigEndringBeskrivelseLabel)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default VarigEndringSp√∏rsm√•l;\n","import { EgenN√¶ringFormComponents, EgenN√¶ringFormData, EgenN√¶ringFormField } from './egenN√¶ringFormConfig';\nimport {\n    cleanupEgenN√¶ringFormData,\n    getInitialEgenN√¶ringFormValues,\n    mapN√¶ringDataToS√∏kerState,\n} from './egenN√¶ringFormUtils';\nimport { N√¶ringstype } from 'app/types/EgenN√¶ring';\nimport { egenN√¶ringFormQuestionsConfig } from './egenN√¶ringFormQuestions';\nimport {\n    Block,\n    Step,\n    StepButtonWrapper,\n    date20YearsAgo,\n    date5MonthsAgo,\n    intlUtils,\n    validateYesOrNoIsAnswered,\n} from '@navikt/fp-common';\nimport { getMinInputTilOgMedValue, hasValue } from 'app/utils/validationUtils';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport stepConfig, { getBackLinkForN√¶ringSteg, getNextRouteForN√¶ring } from 'app/steps/stepsConfig';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\n\nimport dayjs from 'dayjs';\nimport { Alert, BodyShort, Button, ReadMore } from '@navikt/ds-react';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport { Link } from 'react-router-dom';\nimport {\n    validateEgenN√¶ringFom,\n    validateEgenN√¶ringNavn,\n    validateEgenN√¶ringResultat,\n    validateEgenN√¶ringTom,\n    validateEgenN√¶ringYrkesAktivDatoDato,\n} from './egenN√¶ringValidation';\nimport OrgnummerEllerLand from '../../components/egen-n√¶ring-visning/OrgnummerEllerLand';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport { s√∏kerHarKunEtAktivtArbeid } from 'app/utils/arbeidsforholdUtils';\nimport VarigEndringSp√∏rsm√•l from './components/VarigEndringSp√∏rsm√•l';\nimport { getN√¶ringTilretteleggingOption } from '../velg-arbeidsforhold/velgArbeidFormUtils';\n\nconst EgenN√¶ringStep: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const s√∏knad = useS√∏knad();\n    const { s√∏ker, barn, tilrettelegging } = s√∏knad;\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const onValidSubmitHandler = (values: Partial<EgenN√¶ringFormData>) => {\n        const s√∏kerMedN√¶ring = mapN√¶ringDataToS√∏kerState(s√∏ker, values as EgenN√¶ringFormData);\n        if (\n            s√∏kerHarKunEtAktivtArbeid(\n                barn.termindato,\n                arbeidsforhold,\n                s√∏kerMedN√¶ring.harJobbetSomFrilans,\n                s√∏kerMedN√¶ring.harJobbetSomSelvstendigN√¶ringsdrivende,\n            )\n        ) {\n            const automatiskValgtTilrettelegging = [\n                getN√¶ringTilretteleggingOption(tilrettelegging, s√∏kerMedN√¶ring.selvstendigN√¶ringsdrivendeInformasjon!),\n            ];\n\n            return [\n                actionCreator.setS√∏ker(s√∏kerMedN√¶ring),\n                actionCreator.setTilrettelegging(automatiskValgtTilrettelegging),\n            ];\n        }\n\n        return [actionCreator.setS√∏ker(s√∏kerMedN√¶ring)];\n    };\n    const nextRoute = getNextRouteForN√¶ring(s√∏ker, barn.termindato, arbeidsforhold);\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n    const navnP√•N√¶ringLabel = intlUtils(intl, 'egenN√¶ring.navnP√•N√¶ring');\n    return (\n        <EgenN√¶ringFormComponents.FormikWrapper\n            initialValues={getInitialEgenN√¶ringFormValues(s√∏ker.selvstendigN√¶ringsdrivendeInformasjon)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = egenN√¶ringFormQuestionsConfig.getVisbility(formValues as EgenN√¶ringFormData);\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId=\"n√¶ring\"\n                        pageTitle={intlUtils(intl, 'steps.label.n√¶ring')}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <EgenN√¶ringFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupEgenN√¶ringFormData(values, visibility)}\n                        >\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringType)}>\n                                <EgenN√¶ringFormComponents.RadioGroup\n                                    name={EgenN√¶ringFormField.egenN√¶ringType}\n                                    legend={intlUtils(intl, 'egenN√¶ring.n√¶ringstype')}\n                                    radios={[\n                                        {\n                                            label: intlUtils(intl, 'egenN√¶ring.n√¶ringstype.dagmamma'),\n                                            value: N√¶ringstype.DAGMAMMA,\n                                        },\n                                        {\n                                            label: intlUtils(intl, 'egenN√¶ring.n√¶ringstype.fiske'),\n                                            value: N√¶ringstype.FISKER,\n                                        },\n                                        {\n                                            label: intlUtils(intl, 'egenN√¶ring.n√¶ringstype.jordbrukSkogbruk'),\n                                            value: N√¶ringstype.JORDBRUK,\n                                        },\n                                        {\n                                            label: intlUtils(intl, 'egenN√¶ring.n√¶ringstype.annen'),\n                                            value: N√¶ringstype.ANNET,\n                                        },\n                                    ]}\n                                    validate={(value) => {\n                                        if (!hasValue(value)) {\n                                            return intlUtils(intl, 'valideringsfeil.egenN√¶ringType.p√•krevd');\n                                        }\n                                        return undefined;\n                                    }}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringNavn)}>\n                                <EgenN√¶ringFormComponents.TextField\n                                    name={EgenN√¶ringFormField.egenN√¶ringNavn}\n                                    label={navnP√•N√¶ringLabel}\n                                    style={{ width: 'var(--app-text-input-width)' }}\n                                    maxLength={100}\n                                    validate={validateEgenN√¶ringNavn(intl, navnP√•N√¶ringLabel)}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringRegistrertINorge)}\n                            >\n                                <EgenN√¶ringFormComponents.YesOrNoQuestion\n                                    name={EgenN√¶ringFormField.egenN√¶ringRegistrertINorge}\n                                    legend={intlUtils(intl, 'egenN√¶ring.erN√¶ringenRegistrertINorge', {\n                                        navnP√•N√¶ringen: formValues.egenN√¶ringNavn,\n                                    })}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.egenN√¶ringRegistrertINorge.p√•krevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <OrgnummerEllerLand visibility={visibility} />\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringFom)}>\n                                <EgenN√¶ringFormComponents.DatePicker\n                                    name={EgenN√¶ringFormField.egenN√¶ringFom}\n                                    label={intlUtils(intl, 'egenN√¶ring.n√¶ring.fom', {\n                                        navnP√•N√¶ringen: formValues.egenN√¶ringNavn,\n                                    })}\n                                    placeholder=\"dd.mm.√•√•√•√•\"\n                                    fullscreenOverlay={true}\n                                    showYearSelector={true}\n                                    validate={validateEgenN√¶ringFom(intl, formValues.egenN√¶ringTom!)}\n                                    maxDate={dayjs().toDate()}\n                                    minDate={date20YearsAgo}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringP√•g√•ende)}\n                            >\n                                <EgenN√¶ringFormComponents.YesOrNoQuestion\n                                    name={EgenN√¶ringFormField.egenN√¶ringP√•g√•ende}\n                                    legend={intlUtils(intl, 'egenN√¶ring.n√¶ring.p√•g√•ende', {\n                                        navnP√•N√¶ringen: formValues.egenN√¶ringNavn,\n                                    })}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(intl, 'valideringsfeil.egenN√¶ringP√•g√•ende.p√•krevd'),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\" visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringTom)}>\n                                <EgenN√¶ringFormComponents.DatePicker\n                                    name={EgenN√¶ringFormField.egenN√¶ringTom}\n                                    label={intlUtils(intl, 'egenN√¶ring.n√¶ring.tom', {\n                                        navnP√•N√¶ringen: formValues.egenN√¶ringNavn,\n                                    })}\n                                    description={intlUtils(intl, 'egenN√¶ring.n√¶ring.tom.description')}\n                                    placeholder=\"dd.mm.√•√•√•√•\"\n                                    fullscreenOverlay={true}\n                                    showYearSelector={true}\n                                    validate={validateEgenN√¶ringTom(intl, formValues.egenN√¶ringFom!)}\n                                    maxDate={dayjs().add(9, 'month').toDate()}\n                                    minDate={getMinInputTilOgMedValue(formValues.egenN√¶ringFom, date5MonthsAgo)}\n                                />\n                            </Block>\n                            <VarigEndringSp√∏rsm√•l\n                                visibility={visibility}\n                                formValues={formValues}\n                            ></VarigEndringSp√∏rsm√•l>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringResultat)}\n                            >\n                                <EgenN√¶ringFormComponents.TextField\n                                    style={{ width: 'var(--app-text-input-width)' }}\n                                    name={EgenN√¶ringFormField.egenN√¶ringResultat}\n                                    label={intlUtils(intl, 'egenN√¶ring.n√¶ringsinntekt')}\n                                    description={intlUtils(intl, 'egenN√¶ring.n√¶ringsinntekt.description')}\n                                    validate={validateEgenN√¶ringResultat(intl)}\n                                />\n\n                                <ReadMore header={intlUtils(intl, 'egenN√¶ring.n√¶ringsinntekt.info.apneLabel')}>\n                                    <BodyShort>\n                                        <FormattedMessage id=\"egenN√¶ring.n√¶ringsinntekt.info\" />\n                                    </BodyShort>\n                                </ReadMore>\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(\n                                    EgenN√¶ringFormField.egenN√¶ringBlittYrkesaktivDe3Siste√Örene,\n                                )}\n                            >\n                                <EgenN√¶ringFormComponents.YesOrNoQuestion\n                                    name={EgenN√¶ringFormField.egenN√¶ringBlittYrkesaktivDe3Siste√Örene}\n                                    legend={intlUtils(intl, 'egenN√¶ring.blittYrkesaktivSiste3√Ör')}\n                                    validate={(value) =>\n                                        validateYesOrNoIsAnswered(\n                                            value,\n                                            intlUtils(\n                                                intl,\n                                                'valideringsfeil.egenN√¶ringBlittYrkesaktivDe3Siste√Örene.p√•krevd',\n                                            ),\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"xxl\"\n                                visible={visibility.isVisible(EgenN√¶ringFormField.egenN√¶ringYrkesAktivDato)}\n                            >\n                                <EgenN√¶ringFormComponents.DatePicker\n                                    name={EgenN√¶ringFormField.egenN√¶ringYrkesAktivDato}\n                                    label={intlUtils(intl, 'egenN√¶ring.yrkesaktivDato')}\n                                    placeholder=\"dd.mm.√•√•√•√•\"\n                                    fullscreenOverlay={true}\n                                    showYearSelector={true}\n                                    validate={validateEgenN√¶ringYrkesAktivDatoDato(intl)}\n                                    maxDate={dayjs().toDate()}\n                                />\n                            </Block>\n                            <Block padBottom=\"xxl\">\n                                <Alert variant=\"info\">{intlUtils(intl, 'egenN√¶ring.veileder')}</Alert>\n                            </Block>\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={Link} to={getBackLinkForN√¶ringSteg(s√∏ker)}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </EgenN√¶ringFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default EgenN√¶ringStep;\n","import { BoIUtlandetFormData, initialBoIUtlandetFormData } from './boIUtlandetFormConfig';\nimport dayjs from 'dayjs';\nimport { BostedUtland } from 'app/types/BostedUtland';\nimport { getMinInputTilOgMedValue, hasValue } from 'app/utils/validationUtils';\nimport InformasjonOmUtenlandsopphold, {\n    Utenlandsopphold,\n    UtenlandsoppholdInput,\n} from 'app/types/InformasjonOmUtenlandsopphold';\n\nexport const getUferdigBostedUtlandInput = (): UtenlandsoppholdInput => {\n    return {\n        fom: '',\n        tom: '',\n        land: '',\n    };\n};\n\nconst getErINorgeP√•Familiehendelsedato = (\n    familiehendelsedato: string,\n    tidligereOpphold: Utenlandsopphold[],\n    senereOpphold: Utenlandsopphold[],\n): boolean => {\n    let erINorge = true;\n\n    tidligereOpphold.forEach((tidOpphold) => {\n        if (dayjs(familiehendelsedato).isBetween(tidOpphold.tidsperiode.fom, tidOpphold.tidsperiode.tom, 'day', '[]')) {\n            erINorge = false;\n        }\n    });\n\n    senereOpphold.forEach((senOpphold) => {\n        if (dayjs(familiehendelsedato).isBetween(senOpphold.tidsperiode.fom, senOpphold.tidsperiode.tom, 'day', '[]')) {\n            erINorge = false;\n        }\n    });\n\n    return erINorge;\n};\n\nexport const getInitialBostedIUtlandetFormData = (\n    bostedIUtlandet: Utenlandsopphold[] | undefined,\n): BoIUtlandetFormData => {\n    if (bostedIUtlandet === undefined || bostedIUtlandet.length === 0) {\n        return initialBoIUtlandetFormData;\n    }\n    const mappedOpphold = bostedIUtlandet.map((opphold) => {\n        return {\n            fom: opphold.tidsperiode.fom,\n            tom: opphold.tidsperiode.tom,\n            land: opphold.land,\n        };\n    });\n\n    return { bostedIUtlandet: mappedOpphold };\n};\n\nexport const mapBostedUtland = (\n    formValues: Partial<BoIUtlandetFormData>,\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsopphold,\n    familiehendelsedato: string,\n    oppgirIFortid: boolean,\n): InformasjonOmUtenlandsopphold => {\n    const mappedUtenlandsopphold = formValues.bostedIUtlandet!.map((bosted) => {\n        return {\n            land: bosted.land,\n            tidsperiode: {\n                fom: bosted.fom,\n                tom: bosted.tom,\n            },\n        };\n    });\n\n    const tidligereOpphold = oppgirIFortid ? mappedUtenlandsopphold : informasjonOmUtenlandsopphold.tidligereOpphold;\n    const senereOpphold = oppgirIFortid ? informasjonOmUtenlandsopphold.senereOpphold : mappedUtenlandsopphold;\n    const iNorgeP√•Hendelsestidspunktet = getErINorgeP√•Familiehendelsedato(\n        familiehendelsedato,\n        tidligereOpphold,\n        senereOpphold,\n    );\n    if (oppgirIFortid) {\n        return {\n            ...informasjonOmUtenlandsopphold,\n            tidligereOpphold: mappedUtenlandsopphold,\n            iNorgeP√•Hendelsestidspunktet: iNorgeP√•Hendelsestidspunktet,\n        };\n    }\n    return {\n        ...informasjonOmUtenlandsopphold,\n        senereOpphold: mappedUtenlandsopphold,\n        iNorgeP√•Hendelsestidspunktet: iNorgeP√•Hendelsestidspunktet,\n    };\n};\n\nexport const getMinValueTomInput = (oppgirIFortid: boolean, fom: string | undefined, datobegrensning: Date) => {\n    if (oppgirIFortid) {\n        return fom && hasValue(fom) ? dayjs(fom).add(1, 'd').toDate() : undefined;\n    }\n    return getMinInputTilOgMedValue(fom, datobegrensning);\n};\n\nexport const getInitialOppholdFormData = (selectedOpphold: BostedUtland | undefined) => {\n    if (selectedOpphold === undefined) {\n        return { ...initialBoIUtlandetFormData };\n    }\n    return {\n        ...initialBoIUtlandetFormData,\n        fom: selectedOpphold.fom,\n        tom: selectedOpphold.tom,\n        land: selectedOpphold.landkode,\n    };\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\nimport { UtenlandsoppholdInput } from 'app/types/InformasjonOmUtenlandsopphold';\nimport { getUferdigBostedUtlandInput } from './boIUtlandetFormUtils';\n\nexport enum BoIUtlandetFormField {\n    bostedIUtlandet = 'bostedIUtlandet',\n}\n\nexport interface BoIUtlandetFormData {\n    [BoIUtlandetFormField.bostedIUtlandet]: UtenlandsoppholdInput[];\n}\n\nexport const initialBoIUtlandetFormData: BoIUtlandetFormData = {\n    [BoIUtlandetFormField.bostedIUtlandet]: [getUferdigBostedUtlandInput()],\n};\n\nexport const BoIUtlandetFormComponents = getTypedFormComponents<BoIUtlandetFormField | string, BoIUtlandetFormData>();\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { date1YearAgo, date1YearFromNow, formatDate, intlUtils } from '@navikt/fp-common';\nimport { getCountryName } from '@navikt/sif-common-formik-ds/lib';\nimport { UtenlandsoppholdInput } from 'app/types/InformasjonOmUtenlandsopphold';\nimport { hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validerDatoOverlapperAndreUtenlandsperioder = (\n    utenlandsperioder: UtenlandsoppholdInput[] | undefined,\n    dato: string | undefined,\n    intl: IntlShape,\n    currentOppholdIndex: number,\n    isFraOgMedDato: boolean,\n): string | undefined => {\n    if (!hasValue(dato) || !utenlandsperioder) {\n        return undefined;\n    }\n    const utenlandsperioderLagtTilEtterPerioden = utenlandsperioder\n        .filter((p) => p.fom && p.tom)\n        .filter((_t, index) => index > currentOppholdIndex);\n    const overlappendePerioder = utenlandsperioderLagtTilEtterPerioden.filter((tp) =>\n        dayjs(dato).isBetween(tp.fom, tp.tom, 'day', '[]'),\n    );\n    if (overlappendePerioder.length > 0) {\n        const values = {\n            land: getCountryName(overlappendePerioder[0].land, intl.locale),\n            fom: formatDate(overlappendePerioder[0].fom),\n            tom: formatDate(overlappendePerioder[0].tom),\n        };\n        return isFraOgMedDato\n            ? intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapper.fraOgMed', values)\n            : intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapper.tilOgMed', values);\n    }\n\n    return undefined;\n};\n\nexport const validateBostedUtlandFom =\n    (oppgirIFortid: boolean, intl: IntlShape, alleOpphold: UtenlandsoppholdInput[] | undefined, index: number) =>\n    (fom: string) => {\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fraOgMedDato.p√•krevd');\n        }\n        if (hasValue(fom) && !isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fraOgMedDato.gyldigDato');\n        }\n\n        if (oppgirIFortid && fom && dayjs(fom).isAfter(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fom.etterDagensDato');\n        }\n\n        if (!oppgirIFortid && fom && dayjs(fom).isBefore(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fom.f√∏rDagensDato');\n        }\n\n        if (!oppgirIFortid && hasValue(fom) && dayjs(fom).isAfter(date1YearFromNow, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.fom.merEnn1√ÖrFremITid');\n        }\n\n        return validerDatoOverlapperAndreUtenlandsperioder(alleOpphold, fom, intl, index, true);\n    };\n\nexport const validateBostedUtlandTom =\n    (\n        fom: string | undefined,\n        oppgirIFortid: boolean,\n        intl: IntlShape,\n        alleOpphold: UtenlandsoppholdInput[] | undefined,\n        index: number,\n    ) =>\n    (tom: string) => {\n        if (!hasValue(tom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tilOgMedDato.p√•krevd');\n        }\n        if (hasValue(tom) && !isISODateString(tom)) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tilOgMedDato.gyldigDato');\n        }\n        if (tom && fom && dayjs(fom).isSame(tom, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.sammeSomFom');\n        }\n\n        if (tom && dayjs(fom).isAfter(tom, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.f√∏rFom');\n        }\n\n        if (oppgirIFortid && tom && dayjs(tom).isAfter(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.etterDagensDato');\n        }\n\n        if (!oppgirIFortid && tom && dayjs(tom).isBefore(dayjs(), 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.f√∏rDagensDato');\n        }\n        if (oppgirIFortid && hasValue(tom) && dayjs(tom).isBefore(date1YearAgo, 'day')) {\n            return intlUtils(intl, 'valideringsfeil.bostedUtland.tom.merEnn1√ÖrSiden');\n        }\n\n        return validerDatoOverlapperAndreUtenlandsperioder(alleOpphold, tom, intl, index, false);\n    };\n\nexport const validateBostedUtlandLand = (intl: IntlShape) => (land: string) => {\n    if (!hasValue(land)) {\n        return intlUtils(intl, 'valideringsfeil.land.p√•krevd');\n    }\n\n    return undefined;\n};\n","import { Block, dateToday, intlUtils, Step, StepButtonWrapper } from '@navikt/fp-common';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport stepConfig, {\n    getBackLinkForBostedIFremtid,\n    getNextRouteForBostedIFortid,\n    getPreviousSetStepHref,\n} from '../stepsConfig';\nimport { Button } from '@navikt/ds-react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport { BoIUtlandetFormComponents, BoIUtlandetFormData, BoIUtlandetFormField } from './boIUtlandetFormConfig';\nimport { PlusIcon, TrashIcon } from '@navikt/aksel-icons';\nimport { FieldArray } from 'formik';\nimport {\n    getInitialBostedIUtlandetFormData,\n    getMinValueTomInput,\n    getUferdigBostedUtlandInput,\n    mapBostedUtland,\n} from './boIUtlandetFormUtils';\nimport { validateBostedUtlandLand, validateBostedUtlandFom, validateBostedUtlandTom } from './boIUtlandetValidering';\nimport HorizontalLine from 'app/components/horizontal-line/HorizontalLine';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\n\ninterface Props {\n    oppgirIFortid: boolean;\n}\nconst BoIUtlandet: React.FunctionComponent<Props> = ({ oppgirIFortid }) => {\n    const intl = useIntl();\n    const s√∏knad = useS√∏knad();\n    const { informasjonOmUtenlandsopphold, barn } = s√∏knad;\n    const { arbeidsforhold } = useS√∏kerinfo();\n\n    const familiehendelsedato = barn.erBarnetF√∏dt ? barn.f√∏dselsdato : barn.termindato;\n    const utenlandsopphold = oppgirIFortid\n        ? informasjonOmUtenlandsopphold.tidligereOpphold\n        : informasjonOmUtenlandsopphold.senereOpphold;\n    const nextRoute = oppgirIFortid ? getNextRouteForBostedIFortid(informasjonOmUtenlandsopphold) : S√∏knadRoutes.ARBEID;\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n\n    const backLink = oppgirIFortid\n        ? getPreviousSetStepHref('boIUtlandetIFortid')\n        : getBackLinkForBostedIFremtid(informasjonOmUtenlandsopphold);\n    const spmTekst = oppgirIFortid\n        ? intlUtils(intl, 'boIUtlandet.sp√∏rsm√•l.hvilketLandHarDuBoddI')\n        : intlUtils(intl, 'boIUtlandet.sp√∏rsm√•l.hvilketLandSkalDuBoI');\n    const stepId = `boIUtlandet${oppgirIFortid ? 'IFortid' : 'IFremtid'}`;\n    const pageTitle = oppgirIFortid\n        ? intlUtils(intl, 'steps.label.boIUtlandetIFortid')\n        : intlUtils(intl, 'steps.label.boIUtlandetIFremtid');\n\n    const onValidSubmitHandler = (values: Partial<BoIUtlandetFormData>) => {\n        const utenlandsopphold = mapBostedUtland(\n            values,\n            informasjonOmUtenlandsopphold,\n            familiehendelsedato!,\n            oppgirIFortid,\n        );\n        return [actionCreator.setUtenlandsopphold(utenlandsopphold)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n    return (\n        <BoIUtlandetFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getInitialBostedIUtlandetFormData(utenlandsopphold)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId={stepId}\n                        pageTitle={pageTitle}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <BoIUtlandetFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <FieldArray\n                                validateOnChange={false}\n                                name={BoIUtlandetFormField.bostedIUtlandet}\n                                render={(arrayHelpers) =>\n                                    formValues.bostedIUtlandet &&\n                                    formValues.bostedIUtlandet.length > 0 &&\n                                    formValues.bostedIUtlandet.map((_opphold, index) => (\n                                        <div key={index}>\n                                            <Block padBottom=\"xxl\">\n                                                <BoIUtlandetFormComponents.CountrySelect\n                                                    style={{ width: 'var(--app-text-input-width)' }}\n                                                    name={`bostedIUtlandet.${index}.land`}\n                                                    label={spmTekst}\n                                                    validate={validateBostedUtlandLand(intl)}\n                                                    useAlpha3Code={false}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <BoIUtlandetFormComponents.DatePicker\n                                                    name={`bostedIUtlandet.${index}.fom`}\n                                                    label={intlUtils(intl, 'boIUtlandet.fraogmed')}\n                                                    validate={validateBostedUtlandFom(\n                                                        oppgirIFortid,\n                                                        intl,\n                                                        formValues.bostedIUtlandet,\n                                                        index,\n                                                    )}\n                                                    maxDate={oppgirIFortid ? dateToday : undefined}\n                                                    minDate={!oppgirIFortid ? dateToday : undefined}\n                                                    showYearSelector={true}\n                                                    placeholder={'dd.mm.√•√•√•√•'}\n                                                />\n                                            </Block>\n                                            <Block padBottom=\"xxl\">\n                                                <BoIUtlandetFormComponents.DatePicker\n                                                    name={`bostedIUtlandet.${index}.tom`}\n                                                    label={intlUtils(intl, 'boIUtlandet.tilogmed')}\n                                                    validate={validateBostedUtlandTom(\n                                                        formValues.bostedIUtlandet![index].fom,\n                                                        oppgirIFortid,\n                                                        intl,\n                                                        formValues.bostedIUtlandet,\n                                                        index,\n                                                    )}\n                                                    maxDate={oppgirIFortid ? dateToday : undefined}\n                                                    minDate={getMinValueTomInput(\n                                                        oppgirIFortid,\n                                                        formValues.bostedIUtlandet![index].fom,\n                                                        dateToday,\n                                                    )}\n                                                    showYearSelector={true}\n                                                    placeholder={'dd.mm.√•√•√•√•'}\n                                                />\n                                            </Block>\n                                            {index !== 0 && (\n                                                <Block>\n                                                    <Button\n                                                        icon={<TrashIcon />}\n                                                        type=\"button\"\n                                                        variant=\"tertiary\"\n                                                        onClick={() => arrayHelpers.remove(index)}\n                                                    >\n                                                        {intlUtils(intl, 'boIUtlandet.slett')}\n                                                    </Button>\n                                                </Block>\n                                            )}\n                                            {formValues.bostedIUtlandet && formValues.bostedIUtlandet.length > 1 && (\n                                                <HorizontalLine />\n                                            )}\n\n                                            {formValues.bostedIUtlandet &&\n                                                index === formValues.bostedIUtlandet.length - 1 && (\n                                                    <Block padBottom=\"xxl\">\n                                                        <Button\n                                                            icon={<PlusIcon />}\n                                                            type=\"button\"\n                                                            variant=\"secondary\"\n                                                            onClick={() =>\n                                                                arrayHelpers.push(getUferdigBostedUtlandInput())\n                                                            }\n                                                        >\n                                                            {intlUtils(intl, 'boIUtlandet.ny')}\n                                                        </Button>\n                                                    </Block>\n                                                )}\n                                        </div>\n                                    ))\n                                }\n                            />\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button variant=\"secondary\" as={RouterLink} to={backLink}>\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </BoIUtlandetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default BoIUtlandet;\n","import { Alert } from '@navikt/ds-react';\n\nconst S√∏knadSendt = () => {\n    return (\n        <>\n            <Alert variant=\"success\">S√∏knaden er sendt</Alert>\n        </>\n    );\n};\n\nexport default S√∏knadSendt;\n","import { Tidsperiode } from '@navikt/fp-common';\nimport dayjs from 'dayjs';\n\nexport const overlapperTidsperioder = (t1: Tidsperiode, t2: Tidsperiode) => {\n    return (\n        dayjs(t1.fom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t1.tom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t2.fom).isBetween(t1.fom, t1.tom, 'day', '[]') ||\n        dayjs(t2.tom).isBetween(t1.fom, t1.tom, 'day', '[]')\n    );\n};\n\nexport const getTidsperiode = (fom: string, tom: string): Tidsperiode => {\n    return {\n        fom,\n        tom,\n    };\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { formatDate, intlUtils, isDateABeforeDateB } from '@navikt/fp-common';\nimport { dateToISOString } from '@navikt/sif-common-formik-ds/lib';\nimport { PeriodeMedVariasjon, TilOgMedDatoType } from 'app/types/Tilrettelegging';\nimport { getTidsperiode, overlapperTidsperioder } from 'app/utils/tidsperiodeUtils';\nimport { getSlutteTekst, hasValue } from 'app/utils/validationUtils';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const validatePeriodeFom =\n    (\n        intl: IntlShape,\n        index: number,\n        allePerioder: PeriodeMedVariasjon[] | undefined,\n        behovForTilretteleggingFom: string | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerF√∏rTermin: boolean,\n    ) =>\n    (fom: string) => {\n        const tom = allePerioder && allePerioder.length > 0 ? allePerioder[index].tom : undefined;\n        const tomType = allePerioder && allePerioder.length > 0 ? allePerioder[index].tomType : undefined;\n        if (!hasValue(fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.p√•krevd');\n        }\n        if (hasValue(fom) && !isISODateString(fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.gyldigDato');\n        }\n\n        if (hasValue(fom) && tom && isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.f√∏rTilDato');\n        }\n\n        if (\n            hasValue(fom) &&\n            hasValue(behovForTilretteleggingFom) &&\n            dayjs(fom).isBefore(dayjs(behovForTilretteleggingFom), 'd')\n        ) {\n            return intlUtils(intl, 'valideringsfeil.periode.fom.f√∏rBehovForTilretteleggingFom');\n        }\n\n        if (hasValue(fom) && dayjs(fom).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            return kanHaSVPFremTilTreUkerF√∏rTermin\n                ? intlUtils(intl, 'valideringsfeil.periode.fom.etterTreUkerF√∏rTermin')\n                : intlUtils(intl, 'valideringsfeil.periode.fom.etterF√∏dsel');\n        }\n\n        if (sluttDatoArbeid && dayjs(fom).isAfter(dayjs(sluttDatoArbeid), 'd')) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.periode.fom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n\n        const overlappendePerioderFeil = validateAtPeriodeIkkeOverlapper(\n            fom,\n            tom,\n            tomType,\n            allePerioder,\n            index,\n            intl,\n            sisteDagForSvangerskapspenger,\n        );\n        if (overlappendePerioderFeil) {\n            return overlappendePerioderFeil;\n        }\n\n        return validateSammenhengendePerioderFom(fom, allePerioder, sisteDagForSvangerskapspenger, intl);\n    };\n\nexport const validatePeriodeTom =\n    (\n        intl: IntlShape,\n        index: number,\n        allePerioder: PeriodeMedVariasjon[] | undefined,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerF√∏rTermin: boolean,\n    ) =>\n    (tom: string) => {\n        const fom = allePerioder && allePerioder.length > 0 ? allePerioder[index].fom : undefined;\n        if (!hasValue(tom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.tom.p√•krevd');\n        }\n        if (hasValue(tom) && !isISODateString(tom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.tom.gyldigDato');\n        }\n\n        if (hasValue(tom) && fom && isDateABeforeDateB(tom, fom)) {\n            return intlUtils(intl, 'valideringsfeil.periode.tom.etterTilDato');\n        }\n\n        if (hasValue(tom) && dayjs(tom).isAfter(dayjs(sisteDagForSvangerskapspenger), 'd')) {\n            return kanHaSVPFremTilTreUkerF√∏rTermin\n                ? intlUtils(intl, 'valideringsfeil.periode.tom.etterTreUkerF√∏rTermin')\n                : intlUtils(intl, 'valideringsfeil.periode.tom.etterF√∏dsel');\n        }\n        if (sluttDatoArbeid && dayjs(tom).isAfter(dayjs(sluttDatoArbeid), 'd')) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.periode.tom.etterSluttDatoArbeid', {\n                dato: formatDate(sluttDatoArbeid),\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n\n        return undefined;\n    };\n\nexport const validatePeriodeTomType =\n    (\n        intl: IntlShape,\n        sisteDagForSvangerskapspenger: Date,\n        arbeidNavn: string,\n        sluttDatoArbeid: string | undefined,\n        kanHaSVPFremTilTreUkerF√∏rTermin: boolean,\n    ) =>\n    (value: TilOgMedDatoType) => {\n        if (!hasValue(value)) {\n            return kanHaSVPFremTilTreUkerF√∏rTermin\n                ? intlUtils(intl, 'valideringsfeil.periode.tomType.p√•krevd.termin')\n                : intlUtils(intl, 'valideringsfeil.periode.tomType.p√•krevd.f√∏dsel');\n        }\n        if (\n            sluttDatoArbeid &&\n            value === TilOgMedDatoType.SISTE_DAG_MED_SVP &&\n            dayjs(sisteDagForSvangerskapspenger).isAfter(dayjs(sluttDatoArbeid), 'd')\n        ) {\n            const slutteTekst = getSlutteTekst(sluttDatoArbeid, intl);\n            return intlUtils(intl, 'valideringsfeil.periode.tomType.etterSluttDatoArbeid', {\n                navn: arbeidNavn,\n                slutteTekst,\n            });\n        }\n        return undefined;\n    };\n\nexport const validateAtPeriodeIkkeOverlapper = (\n    fom: string | undefined,\n    tom: string | undefined,\n    tomType: TilOgMedDatoType | undefined,\n    allePerioder: PeriodeMedVariasjon[] | undefined,\n    index: number,\n    intl: IntlShape,\n    sisteDagForSvangerskapspenger: Date,\n) => {\n    if ((hasValue(tom) || hasValue(tomType)) && hasValue(fom) && allePerioder && allePerioder.length > 0) {\n        const andrePerioderLagtTilEtter = allePerioder.filter((_p, i) => i > index);\n        const overlappendePerioder = andrePerioderLagtTilEtter.filter((p) => {\n            let periodeTom = undefined;\n            if (hasValue(p.tomType) && p.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP) {\n                periodeTom = dateToISOString(sisteDagForSvangerskapspenger);\n            }\n            if (hasValue(p.tom)) {\n                periodeTom = p.tom;\n            }\n            if (periodeTom) {\n                return overlapperTidsperioder(\n                    getTidsperiode(fom!, tom || dateToISOString(sisteDagForSvangerskapspenger)),\n                    getTidsperiode(p.fom, periodeTom),\n                );\n            }\n            return false;\n        });\n        if (overlappendePerioder.length > 0) {\n            const tilOgMedDato = overlappendePerioder[0].tom\n                ? overlappendePerioder[0].tom\n                : sisteDagForSvangerskapspenger;\n            return intlUtils(intl, 'valideringsfeil.periode.overlapper', {\n                fom: formatDate(overlappendePerioder[0].fom),\n                tom: formatDate(tilOgMedDato),\n            });\n        }\n    }\n    return undefined;\n};\n\nexport const validateSammenhengendePerioderFom = (\n    fom: string | undefined,\n    allePerioder: PeriodeMedVariasjon[] | undefined,\n    sisteDagForSvangerskapspenger: Date,\n    intl: IntlShape,\n) => {\n    const alleFom = allePerioder\n        ? allePerioder.filter((p) => p.fom && isISODateString(p.fom)).map((periode) => dayjs(periode.fom))\n        : undefined;\n    const minstAvAlleFom = alleFom ? dayjs.min(alleFom) : undefined;\n    if (minstAvAlleFom && dayjs(fom).isSameOrBefore(minstAvAlleFom, 'day')) {\n        return undefined;\n    }\n    const alleTom = allePerioder\n        ? allePerioder\n              .filter((p) => (p.tom && isISODateString(p.tom)) || p.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP)\n              .map((periode) => {\n                  return periode.tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP\n                      ? dayjs(sisteDagForSvangerskapspenger)\n                      : dayjs(periode.tom);\n              })\n        : undefined;\n    const tomSomErDagenF√∏rFom = alleTom\n        ? alleTom.find((tom) => dayjs(fom).subtract(1, 'd').isSame(dayjs(tom), 'day'))\n        : undefined;\n    if (!tomSomErDagenF√∏rFom) {\n        return intlUtils(intl, 'valideringsfeil.periode.ikkeSammenhengende');\n    }\n    return undefined;\n};\n","import { isISODateString } from '@navikt/ds-datepicker';\nimport { ISOStringToDate, formatDate, intlUtils } from '@navikt/fp-common';\nimport { PerioderFormData } from 'app/steps/perioder/perioderStepFormConfig';\nimport { TilOgMedDatoType } from 'app/types/Tilrettelegging';\nimport { IntlShape } from 'react-intl';\n\nexport const getPeriodeInfoTekst = (\n    formValues: Partial<PerioderFormData>,\n    index: number,\n    sisteDagForSvangerskapspenger: Date,\n    intl: IntlShape,\n) => {\n    if (\n        formValues &&\n        formValues.varierendePerioder &&\n        formValues.varierendePerioder[index] &&\n        formValues.varierendePerioder[index].fom &&\n        isISODateString(formValues.varierendePerioder[index].fom) &&\n        (formValues.varierendePerioder[index].tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP ||\n            (formValues.varierendePerioder[index].tom && isISODateString(formValues.varierendePerioder[index].tom)))\n    ) {\n        const tomDato =\n            formValues.varierendePerioder[index].tomType === TilOgMedDatoType.SISTE_DAG_MED_SVP\n                ? sisteDagForSvangerskapspenger\n                : ISOStringToDate(formValues.varierendePerioder[index].tom)!;\n        return `${formatDate(formValues.varierendePerioder[index].fom)} - ${formatDate(tomDato)}`;\n    }\n    return intlUtils(intl, 'ny.periode');\n};\n","import { Block, Step, StepButtonWrapper, bemUtils, intlUtils } from '@navikt/fp-common';\nimport S√∏knadRoutes from 'app/routes/routes';\nimport stepConfig, { getBackLinkPerioderSteg } from '../stepsConfig';\nimport { Alert, BodyShort, Button, Heading, ReadMore, Tag } from '@navikt/ds-react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { PerioderFormComponents, PerioderFormData, PerioderFormField } from './perioderStepFormConfig';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport { TilOgMedDatoType } from 'app/types/Tilrettelegging';\nimport { Link } from 'react-router-dom';\nimport { FunctionComponent } from 'react';\nimport useAvbrytS√∏knad from 'app/utils/hooks/useAvbrytS√∏knad';\nimport useUpdateCurrentTilretteleggingId from 'app/utils/hooks/useUpdateCurrentTilretteleggingId';\nimport { getNesteTilretteleggingId } from 'app/routes/Svangerskapspenges√∏knadRoutes';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport { validatePeriodeFom, validatePeriodeTom, validatePeriodeTomType } from './perioderValidation';\nimport { FieldArray } from 'formik';\nimport { PlusIcon, TrashIcon } from '@navikt/aksel-icons';\nimport HorizontalLine from 'app/components/horizontal-line/HorizontalLine';\nimport {\n    getDescriptionTekst,\n    getMinDatoTom,\n    getM√•SendeNyS√∏knad,\n    getPeriodeDerS√∏kerErTilbakeIFullStilling,\n    getPeriodeSideTittel,\n    getPerioderInitialValues,\n    getUferdigPeriodeInput,\n    mapPerioderFormDataToState,\n} from './perioderStepUtils';\nimport { validateStillingsprosentP√•Perioder } from '../tilrettelegging/tilretteleggingValidation';\nimport Bedriftsbanner from 'app/components/bedriftsbanner/Bedriftsbanner';\nimport { getPeriodeInfoTekst } from 'app/utils/perioderUtils';\nimport './perioderStep.css';\nimport useS√∏kerinfo from 'app/utils/hooks/useS√∏kerinfo';\nimport dayjs from 'dayjs';\nimport {\n    getSisteDagForSvangerskapspenger,\n    getKanHaSvpFremTilTreUkerF√∏rTermin,\n    getDefaultMonth,\n} from 'app/utils/dateUtils';\nimport { getRadioOptionsTomType } from '../tilrettelegging/tilretteleggingStepUtils';\nimport { getOpprinneligStillingsprosent } from 'app/utils/tilretteleggingUtils';\n\ninterface Props {\n    id: string;\n    navn: string;\n}\n\nconst PerioderStep: FunctionComponent<Props> = ({ navn, id }) => {\n    useUpdateCurrentTilretteleggingId(id);\n    const intl = useIntl();\n    const bem = bemUtils('perioderStep');\n    const s√∏knad = useS√∏knad();\n    const { tilrettelegging: tilretteleggingFraState, barn } = s√∏knad;\n    const { state } = useSvangerskapspengerContext();\n    const { arbeidsforhold } = useS√∏kerinfo();\n    const onAvbrytS√∏knad = useAvbrytS√∏knad();\n\n    const currentTilrettelegging = tilretteleggingFraState.find((t) => t.id === id);\n    const aktiveStillinger = currentTilrettelegging!.arbeidsforhold.stillinger;\n    const sisteDagForSvangerskapspenger = getSisteDagForSvangerskapspenger(barn);\n    const erFlereTilrettelegginger = tilretteleggingFraState.length > 1;\n\n    const onValidSubmitHandler = (values: Partial<PerioderFormData>) => {\n        const mappedTilrettelegging = mapPerioderFormDataToState(id, values, tilretteleggingFraState);\n        return [actionCreator.setTilrettelegging(mappedTilrettelegging)];\n    };\n\n    const nesteTilretteleggingId = getNesteTilretteleggingId(tilretteleggingFraState, state.currentTilretteleggingId);\n    let nextRoute = S√∏knadRoutes.OPPSUMMERING.toString();\n    if (nesteTilretteleggingId) {\n        nextRoute = `${S√∏knadRoutes.SKJEMA}/${nesteTilretteleggingId}`;\n    }\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(onValidSubmitHandler, nextRoute);\n\n    const sluttDatoArbeid = currentTilrettelegging!.arbeidsforhold.sluttdato;\n    const kanHaSVPFremTilTreUkerF√∏rTermin = getKanHaSvpFremTilTreUkerF√∏rTermin(barn);\n    const maxDato = sluttDatoArbeid\n        ? dayjs.min(dayjs(sisteDagForSvangerskapspenger), dayjs(sluttDatoArbeid))!.toDate()\n        : sisteDagForSvangerskapspenger;\n    const minDatoFom = new Date(currentTilrettelegging!.behovForTilretteleggingFom);\n    const sideTittel = getPeriodeSideTittel(erFlereTilrettelegginger, navn, intl);\n    const descriptionTekst = getDescriptionTekst(kanHaSVPFremTilTreUkerF√∏rTermin, intl);\n    const defaultMonthFom = getDefaultMonth(minDatoFom, maxDato);\n\n    return (\n        <PerioderFormComponents.FormikWrapper\n            enableReinitialize={true}\n            initialValues={getPerioderInitialValues(currentTilrettelegging!)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const opprinneligStillingsprosent = getOpprinneligStillingsprosent(\n                    formValues.varierendePerioder,\n                    aktiveStillinger,\n                );\n                const periodeDerS√∏kerErTilbakeIOpprinneligStilling = getPeriodeDerS√∏kerErTilbakeIFullStilling(\n                    formValues.varierendePerioder,\n                    opprinneligStillingsprosent,\n                );\n\n                const uferdigDelvisTilretteleggingInput = getUferdigPeriodeInput(\n                    formValues,\n                    sisteDagForSvangerskapspenger,\n                );\n\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 's√∏knad.pageheading')}\n                        activeStepId={`periode-${id}`}\n                        pageTitle={sideTittel}\n                        onCancel={onAvbrytS√∏knad}\n                        steps={stepConfig(intl, s√∏knad, arbeidsforhold)}\n                        supportsTempSaving={false}\n                    >\n                        <PerioderFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            {erFlereTilrettelegginger && (\n                                <Block padBottom=\"xxl\">\n                                    <Bedriftsbanner arbeid={currentTilrettelegging!.arbeidsforhold} />\n                                </Block>\n                            )}\n                            <Block padBottom=\"xl\">\n                                <Heading size=\"small\">{intlUtils(intl, 'perioder.varierende.heading')}</Heading>\n                                <BodyShort>{descriptionTekst}</BodyShort>\n                            </Block>\n                            <FieldArray\n                                validateOnChange={false}\n                                name={PerioderFormField.varierendePerioder}\n                                render={(arrayHelpers) =>\n                                    formValues.varierendePerioder &&\n                                    formValues.varierendePerioder.length > 0 &&\n                                    formValues.varierendePerioder.map((p, index) => {\n                                        const m√•SendeNyS√∏knad = getM√•SendeNyS√∏knad(\n                                            periodeDerS√∏kerErTilbakeIOpprinneligStilling,\n                                            p,\n                                            opprinneligStillingsprosent,\n                                        );\n                                        const minDatoTom = getMinDatoTom(\n                                            formValues.varierendePerioder![index].fom,\n                                            minDatoFom,\n                                        );\n                                        const defaultMonthTom = getDefaultMonth(minDatoTom, maxDato);\n                                        return (\n                                            <div key={index}>\n                                                <Block padBottom=\"xxl\">\n                                                    <HorizontalLine />\n                                                    <Block padBottom=\"l\" className={bem.element('info')}>\n                                                        <Tag variant=\"info\" className={bem.element('tag')}>\n                                                            {getPeriodeInfoTekst(\n                                                                formValues,\n                                                                index,\n                                                                sisteDagForSvangerskapspenger,\n                                                                intl,\n                                                            )}\n                                                        </Tag>\n                                                        {index !== 0 && (\n                                                            <Button\n                                                                icon={<TrashIcon />}\n                                                                type=\"button\"\n                                                                variant=\"tertiary\"\n                                                                onClick={() => arrayHelpers.remove(index)}\n                                                            >\n                                                                {intlUtils(intl, 'perioder.varierende.slett')}\n                                                            </Button>\n                                                        )}\n                                                    </Block>\n                                                    <PerioderFormComponents.DatePicker\n                                                        key={`varierendePerioder.${index}.fom`}\n                                                        minDate={minDatoFom}\n                                                        maxDate={maxDato}\n                                                        name={`varierendePerioder.${index}.fom`}\n                                                        label={intlUtils(intl, 'perioder.varierende.fom.label')}\n                                                        validate={validatePeriodeFom(\n                                                            intl,\n                                                            index,\n                                                            formValues.varierendePerioder,\n                                                            currentTilrettelegging!.behovForTilretteleggingFom,\n                                                            sisteDagForSvangerskapspenger,\n                                                            currentTilrettelegging!.arbeidsforhold.navn,\n                                                            sluttDatoArbeid,\n                                                            kanHaSVPFremTilTreUkerF√∏rTermin,\n                                                        )}\n                                                        dayPickerProps={{ defaultMonth: defaultMonthFom }}\n                                                    />\n                                                </Block>\n                                                <Block padBottom=\"xxl\">\n                                                    <PerioderFormComponents.RadioGroup\n                                                        name={`varierendePerioder.${index}.tomType`}\n                                                        key={`varierendePerioder.${index}.tomType`}\n                                                        legend={intlUtils(intl, 'perioder.varierende.tomType.label')}\n                                                        radios={getRadioOptionsTomType(\n                                                            intl,\n                                                            kanHaSVPFremTilTreUkerF√∏rTermin,\n                                                        )}\n                                                        validate={validatePeriodeTomType(\n                                                            intl,\n                                                            sisteDagForSvangerskapspenger,\n                                                            currentTilrettelegging!.arbeidsforhold.navn,\n                                                            sluttDatoArbeid,\n                                                            kanHaSVPFremTilTreUkerF√∏rTermin,\n                                                        )}\n                                                    />\n                                                </Block>\n                                                <Block\n                                                    padBottom=\"xxl\"\n                                                    visible={\n                                                        formValues.varierendePerioder![index].tomType ===\n                                                        TilOgMedDatoType.VALGFRI_DATO\n                                                    }\n                                                >\n                                                    <PerioderFormComponents.DatePicker\n                                                        key={`varierendePerioder.${index}.tom`}\n                                                        name={`varierendePerioder.${index}.tom`}\n                                                        label={intlUtils(intl, 'perioder.varierende.tom.label')}\n                                                        validate={validatePeriodeTom(\n                                                            intl,\n                                                            index,\n                                                            formValues.varierendePerioder,\n                                                            sisteDagForSvangerskapspenger,\n                                                            currentTilrettelegging!.arbeidsforhold.navn,\n                                                            sluttDatoArbeid,\n                                                            kanHaSVPFremTilTreUkerF√∏rTermin,\n                                                        )}\n                                                        minDate={minDatoTom}\n                                                        maxDate={maxDato}\n                                                        dayPickerProps={{ defaultMonth: defaultMonthTom }}\n                                                    />\n                                                </Block>\n                                                <Block padBottom=\"xxl\">\n                                                    <Block padBottom=\"m\">\n                                                        <PerioderFormComponents.NumberInput\n                                                            key={`varierendePerioder.${index}.stillingsprosent`}\n                                                            name={`varierendePerioder.${index}.stillingsprosent`}\n                                                            label={intlUtils(\n                                                                intl,\n                                                                'perioder.varierende.stillingsprosent.label',\n                                                            )}\n                                                            description={intlUtils(\n                                                                intl,\n                                                                'tilrettelegging.tilrettelagtArbeidType.description',\n                                                            )}\n                                                            validate={validateStillingsprosentP√•Perioder(\n                                                                intl,\n                                                                m√•SendeNyS√∏knad,\n                                                                periodeDerS√∏kerErTilbakeIOpprinneligStilling,\n                                                                formValues.varierendePerioder,\n                                                                opprinneligStillingsprosent,\n                                                            )}\n                                                            onClick={(e: any) => e.preventDefault()}\n                                                        />\n                                                    </Block>\n                                                    <ReadMore\n                                                        size=\"medium\"\n                                                        header={intlUtils(\n                                                            intl,\n                                                            'tilrettelegging.varierendePerioderStillingsprosent.info.tittel',\n                                                        )}\n                                                    >\n                                                        <Block padBottom=\"l\">\n                                                            <BodyShort>\n                                                                <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del1\"></FormattedMessage>\n                                                            </BodyShort>\n                                                        </Block>\n                                                        <Block>\n                                                            <BodyShort>\n                                                                <FormattedMessage id=\"tilrettelegging.varierendePerioderStillingsprosent.info.tekst.del2\"></FormattedMessage>\n                                                            </BodyShort>\n                                                        </Block>\n                                                    </ReadMore>\n                                                </Block>\n                                                {m√•SendeNyS√∏knad && (\n                                                    <Block padBottom=\"xxl\">\n                                                        <Alert variant=\"warning\">\n                                                            <Block padBottom=\"m\">\n                                                                <Heading size=\"small\">\n                                                                    {intlUtils(intl, 'perioder.alert.nyS√∏knad.title')}\n                                                                </Heading>\n                                                            </Block>\n                                                            <Block padBottom=\"m\">\n                                                                {intlUtils(intl, 'perioder.alert.nyS√∏knad.del1')}\n                                                            </Block>\n                                                            <Block padBottom=\"m\">\n                                                                {intlUtils(intl, 'perioder.alert.nyS√∏knad.del2')}\n                                                            </Block>\n                                                        </Alert>\n                                                    </Block>\n                                                )}\n                                                {formValues.varierendePerioder &&\n                                                    index === formValues.varierendePerioder.length - 1 && (\n                                                        <Block padBottom=\"xl\">\n                                                            <Button\n                                                                icon={<PlusIcon />}\n                                                                type=\"button\"\n                                                                variant=\"secondary\"\n                                                                onClick={() =>\n                                                                    arrayHelpers.push({\n                                                                        ...uferdigDelvisTilretteleggingInput,\n                                                                    })\n                                                                }\n                                                            >\n                                                                {intlUtils(intl, 'perioder.varierende.leggTil')}\n                                                            </Button>\n                                                        </Block>\n                                                    )}\n                                            </div>\n                                        );\n                                    })\n                                }\n                            />\n\n                            <Block padBottom=\"l\">\n                                <StepButtonWrapper>\n                                    <Button\n                                        variant=\"secondary\"\n                                        as={Link}\n                                        to={getBackLinkPerioderSteg(state.currentTilretteleggingId)}\n                                    >\n                                        <FormattedMessage id=\"backlink.label\" />\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n                                        {intlUtils(intl, 's√∏knad.g√•Videre')}\n                                    </Button>\n                                </StepButtonWrapper>\n                            </Block>\n                        </PerioderFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default PerioderStep;\n","import { FunctionComponent, useEffect, useState } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport S√∏knadRoutes from './routes';\nimport isAvailable from './isAvailable';\nimport Forside from 'app/pages/forside/Forside';\nimport { useSvangerskapspengerContext } from 'app/context/hooks/useSvangerskapspengerContext';\nimport Barnet from 'app/steps/barnet/Barnet';\nimport Inntektsinformasjon from 'app/steps/inntektsinformasjon/Inntektsinformasjon';\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\nimport TilretteleggingStep from 'app/steps/tilrettelegging/TilretteleggingStep';\nimport Oppsummering from 'app/steps/oppsummering/Oppsummering';\nimport Skjema from 'app/steps/skjema/Skjema';\nimport Tilrettelegging, { TilretteleggingstypeOptions } from 'app/types/Tilrettelegging';\nimport useS√∏knad from 'app/utils/hooks/useS√∏knad';\nimport FrilansStep from 'app/steps/frilans/FrilansStep';\nimport ArbeidIUtlandetStep from 'app/steps/arbeid-i-utlandet/ArbeidIUtlandetStep';\nimport VelgArbeid from 'app/steps/velg-arbeidsforhold/VelgArbeid';\nimport EgenN√¶ringStep from 'app/steps/egen-n√¶ring/EgenN√¶ringStep';\nimport BoIUtlandet from 'app/steps/bo-i-utlandet/BoIUtlandet';\nimport S√∏knadSendt from 'app/pages/s√∏knad-sendt/S√∏knadSendt';\nimport { DelivisTilretteleggingPeriodeType } from 'app/steps/tilrettelegging/tilretteleggingStepFormConfig';\nimport PerioderStep from 'app/steps/perioder/PerioderStep';\nimport { LocaleNo } from '@navikt/fp-types';\ninterface Props {\n    currentRoute: S√∏knadRoutes;\n    locale: LocaleNo;\n    onChangeLocale: (locale: LocaleNo) => void;\n}\n\nexport const getForrigeTilrettelegging = (\n    tilretteleggingBehov: Tilrettelegging[],\n    currentTilretteleggingId: string | undefined,\n) => {\n    if (currentTilretteleggingId === undefined && tilretteleggingBehov.length > 0) {\n        return tilretteleggingBehov[tilretteleggingBehov.length - 1];\n    }\n    const forrigeTilretteleggingIndex = tilretteleggingBehov.findIndex((t) => t.id === currentTilretteleggingId) - 1;\n    if (forrigeTilretteleggingIndex < 0) {\n        return undefined;\n    }\n    return tilretteleggingBehov[forrigeTilretteleggingIndex];\n};\n\nexport const getNesteTilretteleggingId = (\n    tilretteleggingBehov: Tilrettelegging[],\n    currentTilretteleggingId: string | undefined,\n) => {\n    if (currentTilretteleggingId === undefined && tilretteleggingBehov.length > 0) {\n        return tilretteleggingBehov[0].id;\n    }\n    const nesteTilretteleggingIndex = tilretteleggingBehov.findIndex((t) => t.id === currentTilretteleggingId) + 1;\n    if (nesteTilretteleggingIndex === tilretteleggingBehov.length) {\n        return undefined;\n    }\n    return tilretteleggingBehov[nesteTilretteleggingIndex].id;\n};\n\nexport const findNextRoute = (\n    currentRoute: S√∏knadRoutes,\n    nextRoute: S√∏knadRoutes,\n    currentTilretteleggingId: string | undefined,\n    tilretteleggingBehov: Tilrettelegging[],\n): any => {\n    if (currentRoute !== S√∏knadRoutes.SKJEMA && currentRoute !== S√∏knadRoutes.TILRETTELEGGING) {\n        return nextRoute;\n    }\n\n    const nesteTilretteleggingId = getNesteTilretteleggingId(tilretteleggingBehov, currentTilretteleggingId);\n\n    if (nesteTilretteleggingId) {\n        return `${S√∏knadRoutes.TILRETTELEGGING}/${nesteTilretteleggingId}`;\n    } else {\n        return S√∏knadRoutes.OPPSUMMERING;\n    }\n};\n\nconst getSkjemaRoutes = (tilretteleggingValg: Tilrettelegging[] | undefined) => {\n    return tilretteleggingValg?.map((tilrettelegging) => {\n        return (\n            <Route\n                key={tilrettelegging.id}\n                path={`${S√∏knadRoutes.SKJEMA}/${tilrettelegging.id}`}\n                element={\n                    <Skjema\n                        key={tilrettelegging.id}\n                        id={tilrettelegging.id}\n                        typeArbeid={tilrettelegging.arbeidsforhold.type}\n                        navn={tilrettelegging.arbeidsforhold.navn}\n                    />\n                }\n            />\n        );\n    });\n};\n\nconst getPerioderRoutes = (tilretteleggingValg: Tilrettelegging[] | undefined) => {\n    return tilretteleggingValg\n        ?.filter(\n            (t) =>\n                t.type === TilretteleggingstypeOptions.DELVIS &&\n                t.delvisTilretteleggingPeriodeType === DelivisTilretteleggingPeriodeType.VARIERTE_PERIODER,\n        )\n        .map((tilrettelegging) => {\n            return (\n                <Route\n                    key={tilrettelegging.id}\n                    path={`${S√∏knadRoutes.PERIODER}/${tilrettelegging.id}`}\n                    element={\n                        <PerioderStep\n                            key={tilrettelegging.id}\n                            id={tilrettelegging.id}\n                            navn={tilrettelegging.arbeidsforhold.navn}\n                        />\n                    }\n                />\n            );\n        });\n};\n\nconst getTilretteleggingRoutes = (tilretteleggingValg: Tilrettelegging[] | undefined) => {\n    return tilretteleggingValg?.map((tilrettelegging) => {\n        return (\n            <Route\n                key={tilrettelegging.id}\n                path={`${S√∏knadRoutes.TILRETTELEGGING}/${tilrettelegging.id}`}\n                element={\n                    <TilretteleggingStep\n                        key={tilrettelegging.id}\n                        id={tilrettelegging.id}\n                        typeArbeid={tilrettelegging.arbeidsforhold.type}\n                        navn={tilrettelegging.arbeidsforhold.navn}\n                    />\n                }\n            />\n        );\n    });\n};\n\nconst renderS√∏knadRoutes = (harGodkjentVilk√•r: boolean, tilretteleggingBehov: Tilrettelegging[]) => {\n    if (!harGodkjentVilk√•r) {\n        return <Route path=\"*\" element={<Navigate to={S√∏knadRoutes.FORSIDE} />} />;\n    }\n    return (\n        <>\n            <Route path={S√∏knadRoutes.BARNET} element={<Barnet />} />\n            <Route path={S√∏knadRoutes.UTENLANDSOPPHOLD} element={<Utenlandsopphold />} />\n            <Route\n                path={S√∏knadRoutes.HAR_BODD_I_UTLANDET}\n                element={<BoIUtlandet key={'iFortid'} oppgirIFortid={true} />}\n            />\n            <Route\n                path={S√∏knadRoutes.SKAL_BO_I_UTLANDET}\n                element={<BoIUtlandet key={'iFremtid'} oppgirIFortid={false} />}\n            />\n            <Route path={S√∏knadRoutes.UTENLANDSOPPHOLD} element={<Utenlandsopphold />} />\n            <Route path={S√∏knadRoutes.ARBEID} element={<Inntektsinformasjon />} />\n            <Route path={S√∏knadRoutes.FRILANS} element={<FrilansStep />} />\n            <Route path={S√∏knadRoutes.N√ÜRING} element={<EgenN√¶ringStep />} />\n            <Route path={S√∏knadRoutes.ARBEID_I_UTLANDET} element={<ArbeidIUtlandetStep />} />\n            <Route path={S√∏knadRoutes.VELG_ARBEID} element={<VelgArbeid />} />\n            {getSkjemaRoutes(tilretteleggingBehov)}\n            {getTilretteleggingRoutes(tilretteleggingBehov)}\n            {getPerioderRoutes(tilretteleggingBehov)}\n            <Route path={S√∏knadRoutes.OPPSUMMERING} element={<Oppsummering />} />\n            <Route path={S√∏knadRoutes.S√òKNAD_SENDT} element={<S√∏knadSendt />} />\n        </>\n    );\n};\n\nconst Svangerskapspenges√∏knadRoutes: FunctionComponent<Props> = ({ currentRoute, locale, onChangeLocale }) => {\n    const { state } = useSvangerskapspengerContext();\n    const { tilrettelegging } = useS√∏knad();\n    const navigate = useNavigate();\n    const harGodkjentVilk√•r = state.s√∏knad.harGodkjentVilk√•r;\n    const [isFirstTimeLoadingApp, setIsFirstTimeLoadingApp] = useState(true);\n\n    useEffect(() => {\n        if (currentRoute && harGodkjentVilk√•r && isFirstTimeLoadingApp) {\n            setIsFirstTimeLoadingApp(false);\n            if (isAvailable(currentRoute, harGodkjentVilk√•r)) {\n                navigate(currentRoute);\n            }\n        }\n    }, [currentRoute, harGodkjentVilk√•r, navigate, isFirstTimeLoadingApp]);\n\n    return (\n        <Routes>\n            <Route path={S√∏knadRoutes.FORSIDE} element={<Forside locale={locale} onChangeLocale={onChangeLocale} />} />\n\n            {renderS√∏knadRoutes(harGodkjentVilk√•r, tilrettelegging)}\n        </Routes>\n    );\n};\n\nexport default Svangerskapspenges√∏knadRoutes;\n"],"names":["bind","fn","thisArg","toString","getPrototypeOf","kindOf","cache","thing","str","kindOfTest","type","typeOfTest","isArray","isUndefined","isBuffer","val","isFunction","isArrayBuffer","isArrayBufferView","result","isString","isNumber","isObject","isBoolean","isPlainObject","prototype","isDate","isFile","isBlob","isFileList","isStream","isFormData","kind","isURLSearchParams","trim","forEach","obj","allOwnKeys","i","l","keys","len","key","findKey","_key","_global","isContextDefined","context","merge","caseless","assignValue","targetKey","extend","a","b","stripBOM","content","inherits","constructor","superConstructor","props","descriptors","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","lastIndex","toArray","arr","isTypedArray","TypedArray","forEachEntry","iterator","pair","matchAll","regExp","matches","isHTMLForm","toCamelCase","m","p1","p2","hasOwnProperty","isRegExp","reduceDescriptors","reducer","reducedDescriptors","descriptor","name","ret","freezeMethods","value","toObjectSet","arrayOrString","delimiter","define","noop","toFiniteNumber","defaultValue","ALPHA","DIGIT","ALPHABET","generateString","size","alphabet","length","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","utils$1","AxiosError","message","code","config","request","response","utils","error","customProps","axiosError","httpAdapter","isVisitable","removeBrackets","renderKey","path","dots","token","isFlatArray","predicates","toFormData","formData","options","option","metaTokens","visitor","defaultVisitor","indexes","useBlob","convertValue","el","index","exposedHelpers","build","encode","charMap","match","AxiosURLSearchParams","params","encoder","_encode","buildURL","url","serializeFn","serializedParams","hashmarkIndex","InterceptorManager","fulfilled","rejected","id","h","InterceptorManager$1","transitionalDefaults","URLSearchParams$1","FormData$1","Blob$1","platform$1","URLSearchParams","FormData","Blob","hasBrowserEnv","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","platform","toURLEncodedForm","data","helpers","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","stringifySafely","rawValue","parser","e","defaults","headers","contentType","hasJSONContentType","isObjectPayload","_FormData","transitional","forcedJSONParsing","JSONRequested","strictJSONParsing","status","method","defaults$1","ignoreDuplicateOf","parseHeaders","rawHeaders","parsed","line","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders","valueOrRewrite","rewrite","self","setHeader","_value","_header","_rewrite","lHeader","setHeaders","matcher","deleted","deleteHeader","format","normalized","targets","asStrings","first","computed","accessors","defineAccessor","mapped","headerValue","AxiosHeaders$1","transformData","fns","isCancel","CanceledError","settle","resolve","reject","validateStatus","cookies","expires","domain","secure","cookie","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","isURLSameOrigin","msie","urlParsingNode","originURL","resolveURL","href","requestURL","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","now","startedAt","bytesCount","passed","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","progressBytes","rate","inRange","isXHRAdapterSupported","xhrAdapter","requestData","requestHeaders","responseType","onCanceled","done","username","password","fullPath","onloadend","responseHeaders","err","timeoutErrorMessage","xsrfValue","cancel","protocol","knownAdapters","renderReason","reason","isResolvedHandle","adapter","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","assertOptions","schema","allowUnknown","Axios","instanceConfig","configOrUrl","paramsSerializer","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","Axios$1","CancelToken","executor","resolvePromise","onfulfilled","_resolve","c","CancelToken$1","spread","callback","isAxiosError","payload","HttpStatusCode","HttpStatusCode$1","createInstance","defaultConfig","instance","axios","promises","axios$1","Environment","settingsNode","appSettings","Environment$1","apiBaseUrl","AxiosInstance","getAxiosInstance","fnr","AccordionContext","createContext","__rest","this","t","p","AccordionItemContext","AccordionItem","forwardRef","_a","ref","children","className","open","defaultOpen","rest","internalOpen","setInternalOpen","useState","useContext","_open","_setOpen","shouldAnimate","useRef","handleOpen","newOpen","React","cl","omit","AccordionItem$2","AccordionContent","BodyLong","AccordionContent$3","SvgBuldings3","title","_titleId","titleId","useId","React.createElement","Buldings3Icon","SvgExclamationmarkTriangle","ExclamationmarkTriangleIcon","SvgFile","FileIcon","SvgFileCheckmark","FileCheckmarkIcon","SvgPaperplane","PaperplaneIcon","SvgPencilWriting","PencilWritingIcon","SvgPlus","PlusIcon","SvgTrash","TrashIcon","AccordionHeader","_b","onClick","itemContext","accordionContext","ChevronDownIcon","Heading","AccordionHeader$1","Accordion","variant","headingSize","indent","Accordion$2","isValidDate","day","ExpansionCardContext","ExpansionCardContent","panelContext","ExpansionCardContent$1","ExpansionCardDescription","ExpansionCardHeader","ExpansionCardHeader$1","ExpansionCardTitle","Component","ExpansionCard","onToggle","shouldFade","ExpansionCard$1","Tag","BodyShort","Tag$1","getResponsiveValue","componentName","componentProp","responsiveProp","breakpointAlias","responsiveValue","translateExceptionToCSS","exception","translateTokenStringToCSS","tokenString","tokenSubgroup","tokenExceptions","invert","x","_","output","getResponsiveProps","styleProps","aliasOrScale","Stack","align","justify","wrap","gap","_style","direction","style","HStack","VStack","Spacer","getMod11","strValue","checkNbr","mod","numberRegExp","trimNumberValue","getFloatFromString","trimmedValue","replaceInvisibleCharsWithSpace","inputString","usynligeCharsRegex","capitalizeFirstLetter","convertBooleanOrUndefinedToYesOrNo","YesOrNo","convertYesOrNoOrUndefinedToBoolean","baseIteratee","require$$0","baseUniq","require$$1","uniqBy","array","iteratee","uniqBy_1","ContentWrapper","bem","bemUtils","jsx","objectToString","isBuiltin","wat","isGlobalObj","GLOBAL_OBJ","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","PREFIX","CONSOLE_LEVELS","consoleSandbox","originalConsole","wrappedLevels","level","originalWrappedFunc","makeLogger","enabled","logger","args","dropUndefinedKeys","inputValue","_dropUndefinedKeys","memoizationMap","memoVal","returnValue","item","uuid4","crypto","getRandomByte","arrayify","maybeArray","isBrowserBundle","isNodeEnv","dynamicRequire","States","RESOLVED","REJECTED","SyncPromise","onrejected","onfinally","isRejected","cachedHandlers","handler","WINDOW","dateTimestampSource","getBrowserPerformance","performance","timeOrigin","getNodePerformance","platformPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","navigationStartDelta","navigationStartIsReliable","DEFAULT_ENVIRONMENT","makeSession","startingTime","session","sessionToJSON","updateSession","duration","closeSession","DEFAULT_MAX_BREADCRUMBS","Scope","generatePropagationContext","scope","newScope","user","requestSession","tags","extras","extra","fingerprint","span","captureContext","updatedScope","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","attachment","event","hint","transaction","transactionName","getGlobalEventProcessors","newData","processors","processor","final","API_VERSION","DEFAULT_BREADCRUMBS","Hub","client","_version","top","eventId","syntheticException","beforeBreadcrumb","finalBreadcrumb","oldHub","makeMain","integration","customSamplingContext","endSession","release","environment","userAgent","currentSession","sentry","getMainCarrier","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","getGlobalHub","hasHubOnCarrier","carrier","captureException","captureMessage","withScope","links","dayjs","getLanguageMessages","locale","nbMessages","nnMessages","enMessages","UiIntlProvider","useIntl","messages","useMemo","Provider","ErrorPage","appName","errorMessage","retryCallback","jsxs","FormattedMessage","Alert","Link","Button","Label","ErrorBoundary","errorInfo","Sentry.withScope","Sentry.captureException","ErrorSummaryFp","errorRef","errors","ErrorSummary","FileInput","multiple","accept","onFilesSelect","hasUplodedAttachements","onFileSelect","useCallback","files","inputElement","openFileDialog","Fragment","UploadIcon","useCustomIntl","intl","i18nId","values","s4","guid","bytesString","Bytes","generateAttachmentId","mapFileToAttachment","file","skjemanummer","AttachmentInfo","showFileSize","onDelete","i18n","Loader","XMarkIcon","AttachmentList","attachments","Fragment2","FileUploadError","MAX_FIL_ST√òRRELSE_KB","FailedAttachment","failedAttachment","FailedAttachmentList","failedAttachments","VALID_EXTENSIONS","KILOBYTES_IN_BYTE","getPendingAttachmentFromFile","attachmentType","newAttachment","fileExtensionIsValid","filename","ext","fileSizeIsValid","filesizeInB","uploadAttachment","saveAttachment","EMPTY_ATTACHMENT_LIST","FileUploader","existingAttachments","updateAttachments","setAttachments","useEffect","saveFiles","uploadAttachments","allPendingAttachments2","pendingAttachment","currentAttachments","allPendingAttachments","ca","pa","deleteAttachment","uploadedAttachments","StepButtons","goToPreviousStep","nextButtonText","nextButtonOnClick","isSubmitting","disabled","setDisabled","onClickNextButton","StepButtonWrapper","createIntlCache","createIntl","createReactIntl","useUiIntl","ScanDocumentInfo","logAmplitudeEvent","eventName","eventData","logToConsoleOnly","amplitude","getTitleText","appnavn","Umyndig","titleText","useDocumentTitle","GuidePanel","ArrowRightIcon","IntlProvider","messagesGroupedByLocale","UKJENT_UUID","FEIL_VED_INNSENDING","getErrorCallId","getErrorTimestamp","sendErrorMessageToSentry","errorCallId","errorTimestamp","hideNumbersAndTrim","tekst","errorString","Sentry.captureMessage","isAvailable","route","harGodkjentVilk√•r","S√∏knadRoutes","BarnetFormField","BarnetFormComponents","getTypedFormComponents","isBetween","isSameOrAfter","niM√•nederFremITid","dato","et√ÖrSiden","enM√•nedSiden","tiM√•nederSidenDato","halvannet√ÖrSiden","date4YearsAgo","treUkerSiden","femM√•nederSiden","dagenF√∏r","getDagenF√∏rTreUkerF√∏rTermin","termindato","getKanHaSvpFremTilTreUkerF√∏rTermin","barn","dagenF√∏rTreUkerF√∏rTermin","dagenF√∏rF√∏dsel","getSisteDagForSvangerskapspenger","getDefaultMonth","minDato","maxDato","minMax","TEXT_INPUT_MIN_LENGTH","TEXT_INPUT_MAX_LENGTH","hasValue","v","getMinInputTilOgMedValue","fom","otherMinDate","minDayjs","getSlutteTekst","sluttDatoArbeid","intlUtils","getInitValues","cleanupOmBarnetFormData","visibility","getBarnetInitialValues","initialOmBarnetValues","mapOmBarnetFormDataToState","getMinDatoTermin","erBarnetF√∏dt","f√∏dselsdato","BarnetFormConfig","barnetQuestionsConfig","Questions","TilretteleggingstypeOptions","Tilretteleggingstype","Arbeidsforholdstype","TilOgMedDatoType","egenN√¶ringId","N√¶ringstype","frilansId","getInitialVelgArbeidFormValues","tilretteleggingsBehov","getN√¶ringTilretteleggingOption","tilrettelegginger","n√¶ring","n√¶ringTilretteleggingFraState","getFrilansTilretteleggingOption","frilans","frilansTilretteleggingFraState","getArbeidsforholdTilretteleggingOptions","arbeidsforhold","getUnikeArbeidsforhold","forhold","tilretteleggingFraState","mapArbeidsforholdToVelgArbeidOptions","s√∏ker","harN√¶ring","erFrilanser","unikeArbeidsforhold","n√¶ringValg","frilansValg","validateVelgArbeidIsAnswered","cleanupOmValgArbeidFormData","tilrettelegging","getAktiveArbeidsforhold","arb","getArbeidsgiverId","getTotalStillingsprosentP√•Skj√¶ringstidspunktet","stillinger","skj√¶ringstidspunkt","isISODateString","perioderISkj√¶ringstidspunktet","ar","stillingsprosent","getStillingerForLikeArbeidsforhold","likeArbeidsforhold","aktiveArbeidsforhold","arbeid","alleTom","dateToISOString","tom","s√∏kerHarKunEtAktivtArbeid","harEgenN√¶ring","aktiveUnikeArbeidsforhold","s√∏kerHarKunEttARegArbeidsforholdForTilrettelegging","formValues","getAutomatiskValgtTilretteleggingHvisKunEtArbeid","automatiskValgtTilrettelegging","getTekstOmManglendeArbeidsforhold","harJobbetIUtlandet","DelivisTilretteleggingPeriodeType","TilretteleggingFormField","TilretteleggingFormComponents","PerioderFormField","PerioderFormComponents","getValgtTilrettelegging","allTilretteleggingOptions","valgtTilrettelegging","o","mapTilretteleggingTilPeriode","getPeriodeMedHelTilretteleggingFremTilSisteSvpDag","sistePeriode","sisteDagForSvangerskapspenger","opprinneligStillingsprosent","mappedTilretteleggingMedEnPeriode","opprinneligstillingsprosent","perioder","mappedPeriode","mappedTilretteleggingMedVarierendePerioder","allePerioder","periode","sorterTilretteleggingsperioder","mapTilretteleggingTilPerioder","tilretteleggingMedEnPeriode","tilretteleggingMedVarierendePerioder","mappedTilretteleggingerMedEnPeriode","mappedTilretteleggingAvFlerePerioder","getOpprinneligStillingsprosent","getNesteDagEtterSistePeriode","formvalues","alleTomDatoer","maxTomDato","sorterePerioder","f√∏rstePeriodeFom","getM√•SendeNyS√∏knad","periodeDerS√∏kerErTilbakeIOpprinneligStilling","currentPeriode","getInitPerioderFormDataValues","getPerioderInitialValues","initValues","mapPerioderFormDataToState","oppdatert","getPeriodeDerS√∏kerErTilbakeIFullStilling","varierendePerioder","getUferdigPeriodeInput","getPeriodeSideTittel","erFlereTilrettelegginger","navn","getDescriptionTekst","kanHaSVPFremTilTreUkerF√∏rTermin","getMinDatoTom","minDatoFom","ISOStringToDate","getInitTilretteleggingFormDataValues","getTilretteleggingInitialValues","mapOmTilretteleggingFormDataToState","tilretteleggingForOppdatering","harVariertePerioder","oppdaterteVarierendePerioder","cleanUpTilretteleggingStepFormValues","getLabelPeriodeFom","tilretteleggingType","getLabelPeriodeTomType","getLabelPeriodeTom","getMinDatoPeriodeFom","minDatoBehovFom","getMinDatoTilbakeIJobb","getTilretteleggingTypeLabel","typeArbeid","navnArbeidsgiver","getBehovForTilretteleggingFomLabel","getRadioOptionsTomType","getTilretteleggingSideTittel","SkjemaFormField","initialSkjemaFormData","SkjemaFormComponents","getInitialSkjemaValuesFromState","currentTilrettelegging","vedleggForTilrettelegging","mapTilretteleggingMedSkjema","getSkjemaLegend","getSkjemaSideTittel","stepConfigF√∏rstegangss√∏knad","s√∏knad","steps","stepConfig","getN√¶ringRouteIfN√¶ring","getFrilansRouteIfFrilans","getArbeidUtlandRouteIfArbeidUtland","getBackLinkForTilretteleggingSteg","currentTilretteleggingId","getBackLinkForOppsummeringSteg","sisteTilrettelegging","getBackLinkForSkjemaSteg","forrigeTilrettelegging","getForrigeTilrettelegging","getBackLinkForVelgArbeidSteg","getBackLinkPerioderSteg","getBackLinkForN√¶ringSteg","getBackLinkForArbeidIUtlandetSteg","getBackLinkForBostedIFremtid","informasjonOmUtenlandsopphold","getBackLinkForArbeidSteg","getPreviousSetStepHref","assertUnreachable","getNextRouteForTilretteleggingSteg","nesteTilretteleggingId","getNesteTilretteleggingId","nextRoute","getNextRouteForInntektsinformasjon","getNextRouteForUtenlandsopphold","getNextRouteForBostedIFortid","getNextRouteValgAvArbeidEllerSkjema","frilansEllerN√¶ringId","getNextRouteForFrilans","getNextRouteForN√¶ring","validateTermindato","validateF√∏dselsdato","etterDagensDato","useS√∏knad","useSvangerskapspengerContext","useAvbrytS√∏knad","navigate","useNavigate","dispatch","actionCreator","useS√∏kerinfo","Barnet","onValidSubmitHandler","barn2","handleSubmit","useOnValidSubmit","onAvbrytS√∏knad","minDatoTermin","Step","Block","validateYesOrNoIsAnswered","ReadMore","HarIkkeArbeidsforhold","harArbeidsforhold","HarArbeidsforhold","arbforhold","formatDate","ArbeidsforholdInformasjon","visManglerInfo","InntektsinformasjonFormField","InntektsinformasjonFormComponents","initialInntektsinformasjonFormValues","mapInntektsinformasjonFormDataToState","oppdatertFrilansInfo","oppdatertN√¶ringInfo","oppdatertArbeidUtlandInfo","S√∏kerrolle","getInitialInntektsinformasjonFormValues","InfoTilFiskere","msg","InfoOmF√∏rstegangstjeneste","HvemKanDriveMedEgenN√¶ring","BrukerKanIkkeS√∏ke","InfoOmArbeidIUtlandet","HvemKanV√¶reFrilanser","Inntektsinformasjon","setNextRoute","autoValgtTilrettelegging","setAutoValgtTilrettelegging","updatedS√∏ker","kanIkkeS√∏ke","UtenlandsoppholdField","initialUtenlandsoppholdFormData","UtenlandsoppholdFormComponents","getInitialUtenlandsoppholdValuesFromState","init","mapUtenlandsoppholdFormDataToState","harBoddINorgeSiste12Mnd","skalBoINorgeNeste12Mnd","oppdaterteTidligereOpphold","oppdaterteSenereOpphold","iNorgeP√•Hendelsestidspunktet","UtenlandsoppholdFormConfig","utenlandsoppholdFormQuestions","InformasjonOmUtenlandsopphold","Utenlandsopphold","utenlandsopphold","RouterLink","useUpdateCurrentTilretteleggingId","TilretteleggingFormConfig","behovForTilretteleggingFom","delvisTilretteleggingPeriodeType","enPeriodeMedTilretteleggingFom","enPeriodeMedTilretteleggingStillingsprosent","enPeriodeMedTilretteleggingTomType","enPeriodeMedTilretteleggingTilbakeIJobbDato","arbeidsType","tilretteleggingstiltak","risikofaktorer","tilretteleggingQuestionsConfig","validerStillingsprosentInput","validateStillingsprosentP√•Perioder","m√•S√∏keSendeNyS√∏knad","periodeDerTilbakeIFullJobb","opprinneligStillingsProsent","valideringsFeil","validateStillingsprosentEnDelvisPeriode","initValidering","validateTilretteleggingstiltak","label","validateTextInputField","validateSammePeriodeFremTilTerminFom","tilretteleggingstype","arbeidNavn","erDelvis","slutteTekst","validateSammePeriodeFremTilTerminTilbakeIJobbDato","validateBehovForTilretteleggingFom","startDatoArbeid","kanHaSvpFremTilTreUkerF√∏rTermin","erFrilansTilrettelegging","navnTekst","validateTilrettelagtArbeidType","validerTilretteleggingTomType","validateTilretteleggingPeriodetype","finnFeilmeldingForP√•krevd","finnFeilmeldingForOverMakslengde","finnFeilmeldingForUnderMinLengde","validateRisikofaktorer","Bedriftsbanner","detailTekst","finnRisikofaktorLabel","TilretteleggingStep","termindatoDate","mappedTilrettelegging","sideTittel","risikofaktorerLabel","tilretteleggingTypeLabel","behovForTilretteleggingFomLabel","labelTiltak","harSkjema","maxDatoBehovFom","defaultMonthBehovFomDato","labelPeriodeFomTekst","labelPeriodeTomTypeTekst","labelPeriodeTomTekst","minDatoPeriodeFom","defaultMonthPeriodeFom","minDatoTilbakeIJobb","defaultMonthTilbakeIJobb","OppsummeringFormField","initialOppsummeringValues","getInitialOppsummeringValues","OppsummeringFormComponents","validateHarGodkjentOppsummering","RequestStatus","redirect","redirectToLogin","DEFAULT_OPTIONS","useGetRequest","setData","setError","requestStatus","setRequestStatus","axiosInstance","res","sendS√∏knadUrl","sendS√∏knad","signal","Api","EgenN√¶ringFormField","initialEgenN√¶ringFormData","EgenN√¶ringFormComponents","erVirksomhetRegnetSomNyoppstartet","oppstartsdato","mapEgenN√¶ringFormValuesToState","hattVarigEndring","getInitialEgenN√¶ringFormValues","mapN√¶ringDataToS√∏kerState","cleanupEgenN√¶ringFormData","AnnenInntektType","S√∏knadstype","getArbeidsforholdForInnsending","mapBostedUtlandTilDTO","mapUtenlandsOppholdForInnsending","opphold","mapBarnForInnsending","mapHelTilretteleggingForInnsending","mapDelvisTilretteleggingForInnsending","mapIngenTilretteleggingForInnsending","mapTilretteleggingPeriodeForInnsending","mappedArbeid","mapTilretteleggingerForInnsending","tilretteleggingsPerioder","mapEgenN√¶ringForInnsending","erNyoppstartet","mappedN√¶ring","mapFrilansForInnsending","mapArbeidIUtlandetForInnsending","mapS√∏kerForInnsending","mappedArbeidIUtlandet","inntekt","getS√∏knadForInnsending","utenlandsoppholdForInnsending","barnForInnsending","tilretteleggingForInnsending","s√∏kerForInnsending","UtenlandsoppholdOppsummeringListe","tidligereOpphold","countries","UtenlandsoppholdOppsummering","visINorgeP√•Hendelsestidspunktet","UtenlandsoppholdListe","FrilansVisning","frilansTekst","tilTekst","EgenN√¶ringVisning","erNyoppstartetN√¶ring","getCountryName","getTilTekst","ArbeidIUtlandetVisning","arbeidIUtlandet","setSelectedAnnenInntekt","deleteAnnenInntekt","getDatoText","getStillingsprosentTekst","PeriodeVisning","labelText","stillingsprosentText","PeriodeOppsummering","isOpen","toggleOpen","toggle","visible","useAbortSignal","controller","Oppsummering","s√∏kerinfo","formSubmitted","setFormSubmitted","isSendingS√∏knad","setIsSendingS√∏knad","submitError","setSubmitError","sendtS√∏knad","setSendtS√∏knad","abortSignal","formatertTermindato","formatertF√∏dselsdato","allePerioderMedFomOgTom","s√∏knadForInnsending","tilretteleggingMedFrilans","tilretteleggingMedSN","submitErrorCallId","callIdForBruker","navigateTo","navigateToMedURLParams","getAttachmentIcon","vedlegg","AttachmentVisning","filst√∏rrelseKB","handleOnClickSlett","vedlegg2","classNames","fil","AttachmentType","Skjemanummer","finnLabel","SkjemaopplastningTekstFrilansSN","SkjemaopplastningTekstArbeidsgiver","mapFilTilVedlegg","innsendingsType","alleVedlegg","att","AttachmentApi","mapFilerTilPendingVedlegg","filer","nyttVedlegg","sjekkVedlegg","alleNyeVedlegg","setErrors","erGyldigFiltype","oldState","erGyldigFilst√∏rrelse","lastOppVedlegg","replaceFn","removeFn","antallEksisterendeVedlegg","FormikFileUploader","onFileInputClick","legend","buttonLabel","validateHasAttachment","otherProps","FormikFileInput","push","replace","remove","alleNyeGyldigeVedlegg","MAX_ANTALL_VEDLEGG","Skjema","antallForMangeVedlegg","setAntallForMangeVedlegg","submitClicked","setSubmitClicked","flereTilrettelegginger","erSNEllerFrilans","handleOnSubmit","setFieldValue","hasPendingVedlegg","disableButtons","antallVedleggAndreTilrettelegginger","tilrettelegging2","antallNyeVedlegg","antallVedlegg","FrilansFormField","FrilansFormComponents","initialFrilansFormValues","getInitialFrilansFormValues","mapFrilansDataToS√∏kerState","cleanupFrilansFormData","FrilansFormConfig","frilansFom","jobberFremdelesSomFrilanser","frilansSubformQuestionsConfig","validateFrilansStart","isDateInTheFuture","FrilansStep","s√∏kerMedFrilans","tilretteleggingOptions","dateToday","date20YearsAgo","ArbeidIUtlandetFormField","ArbeidIUtlandetFormComponents","getUferdigArbeidIUtlandetInput","initialArbeidIUtlandetFormValues","mapArbeidIUtlandetTilState","getInitialArbeidIUtlandetFormData","cleanUpArbeidIUtlandetFormData","countries.registerLocale","langNB","langNN","isSameOrBefore","isDateAAfterDateB","dateA","dateB","validateArbeidIUtlandetFom","isDateABeforeDateB","validateArbeidIUtlandetTom","validateArbeidIUtlandetP√•g√•ende","p√•g√•ende","validateArbeidIUtlandetLand","land","validateArbeidIUtlandetNavnArbeidsgiver","navnP√•ArbeidsgiverLabel","HorizontalLine","ArbeidIUtlandetStep","arbeidIUtlandet2","s√∏kerMedArbeidIUtlandet","FieldArray","arrayHelpers","date5MonthsAgo","VelgArbeidFormField","VelgArbeidFormComponents","FlereArbeidsforholdGuidePanel","PageKeys","VelgArbeid","setValgtTilrettelegging","visInfo","tilretteleggingValg","f√∏rsteTilretteleggingId","visVarigEndringInput","egenN√¶ringFom","egenN√¶ringHattVarigEndringDeSiste4√Örene","EgenN√¶ringSubformConfig","egenN√¶ringType","egenN√¶ringNavn","egenN√¶ringRegistrertINorge","egenN√¶ringLand","egenN√¶ringP√•g√•ende","egenN√¶ringTom","egenN√¶ringResultat","egenN√¶ringBlittYrkesaktivDe3Siste√Örene","egenN√¶ringYrkesAktivDato","egenN√¶ringVarigEndringDato","egenN√¶ringVarigEndringBeskrivelse","egenN√¶ringVarigEndringInntektEtterEndring","egenN√¶ringFormQuestionsConfig","onlyNumbersRegExp","er9Tall","orgnr","starterP√•8Eller9","erGyldigNorskOrgnummer","validateEgenN√¶ringFom","validateEgenN√¶ringTom","validateEgenN√¶ringOrgnr","trimmedOrgNr","containsWhiteSpace","validateEgenN√¶ringYrkesAktivDatoDato","validateEgenN√¶ringResultat","valueNumber","getNumberFromNumberInputValue","validateEgenN√¶ringVarigEndringDato","endringDato","validateEgenN√¶ringVarigEndringInntekt","validateStringAsNumberInput","validateEgenN√¶ringVarigEndringBeskrivelse","validateEgenN√¶ringNavn","validateEgenN√¶ringLand","OrgnummerEllerLand","VarigEndringSp√∏rsm√•l","egenN√¶ringVarigEndringBeskrivelseLabel","EgenN√¶ringStep","s√∏kerMedN√¶ring","navnP√•N√¶ringLabel","getUferdigBostedUtlandInput","getErINorgeP√•Familiehendelsedato","familiehendelsedato","senereOpphold","erINorge","tidOpphold","senOpphold","getInitialBostedIUtlandetFormData","bostedIUtlandet","initialBoIUtlandetFormData","mapBostedUtland","oppgirIFortid","mappedUtenlandsopphold","bosted","getMinValueTomInput","datobegrensning","BoIUtlandetFormField","BoIUtlandetFormComponents","validerDatoOverlapperAndreUtenlandsperioder","utenlandsperioder","currentOppholdIndex","isFraOgMedDato","overlappendePerioder","_t","tp","validateBostedUtlandFom","alleOpphold","date1YearFromNow","validateBostedUtlandTom","date1YearAgo","validateBostedUtlandLand","BoIUtlandet","backLink","spmTekst","stepId","pageTitle","utenlandsopphold2","_opphold","S√∏knadSendt","overlapperTidsperioder","t1","t2","getTidsperiode","validatePeriodeFom","tomType","overlappendePerioderFeil","validateAtPeriodeIkkeOverlapper","validateSammenhengendePerioderFom","validatePeriodeTom","validatePeriodeTomType","_p","periodeTom","tilOgMedDato","alleFom","minstAvAlleFom","getPeriodeInfoTekst","tomDato","PerioderStep","aktiveStillinger","descriptionTekst","defaultMonthFom","uferdigDelvisTilretteleggingInput","m√•SendeNyS√∏knad","minDatoTom","defaultMonthTom","tilretteleggingBehov","forrigeTilretteleggingIndex","nesteTilretteleggingIndex","getSkjemaRoutes","Route","getPerioderRoutes","getTilretteleggingRoutes","renderS√∏knadRoutes","Navigate","Svangerskapspenges√∏knadRoutes","currentRoute","onChangeLocale","isFirstTimeLoadingApp","setIsFirstTimeLoadingApp","Routes","Forside"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89]}