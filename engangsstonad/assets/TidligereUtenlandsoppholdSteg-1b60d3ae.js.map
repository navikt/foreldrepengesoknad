{"version":3,"file":"TidligereUtenlandsoppholdSteg-1b60d3ae.js","sources":["../../src/sider/steg/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPeriode.tsx","../../src/sider/steg/utenlandsoppholdTidligere/TidligereUtenlandsoppholdSteg.tsx"],"sourcesContent":["import { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { useFormContext } from 'react-hook-form';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\n\nimport { createCountryOptions, formatDate } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { UtenlandsoppholdPeriode } from 'types/Utenlandsopphold';\nimport { DATE_TODAY, DATE_1_YEAR_AGO } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\nimport { useCustomIntl } from '@navikt/fp-ui';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useCustomIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdSiste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdSiste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdSiste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdSiste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateFom = tom ? dayjs(tom).toDate() : dayjs(DATE_TODAY).toDate();\n\n    const minDateTom = fom ? dayjs(fom).toDate() : dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateTom = dayjs(DATE_TODAY).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdSiste12Mnd.${index}.landkode`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Spørsmål.HvilketLandHarDuBoddI\" />}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuHarBoddIPåkrevd')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={minDateFom}\n                maxDate={maxDateFom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuHarBoddIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { notEmpty } from '@navikt/fp-validation';\nimport { ErrorSummaryHookForm, StepButtonsHookForm, Form } from '@navikt/fp-form-hooks';\n\nimport useEsNavigator from 'appData/useEsNavigator';\nimport { Path } from 'appData/paths';\nimport { EsDataType, useEsStateData, useEsStateSaveFn } from 'appData/EsDataContext';\nimport useStepData from 'appData/useStepData';\nimport { UtenlandsoppholdTidligere, UtenlandsoppholdPeriode } from 'types/Utenlandsopphold';\nimport TidligereUtenlandsoppholdPeriode from './TidligereUtenlandsoppholdPeriode';\nimport { useCustomIntl } from '@navikt/fp-ui';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdSiste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdTidligere;\n\nconst TidligereUtenlandsoppholdSteg: React.FunctionComponent = () => {\n    const { i18n } = useCustomIntl();\n\n    const stepData = useStepData();\n    const navigator = useEsNavigator();\n\n    const utenlandsopphold = notEmpty(useEsStateData(EsDataType.UTENLANDSOPPHOLD));\n    const sisteUtenlandsopphold = useEsStateData(EsDataType.UTENLANDSOPPHOLD_TIDLIGERE);\n    const lagreTidligereUtenlandsopphold = useEsStateSaveFn(EsDataType.UTENLANDSOPPHOLD_TIDLIGERE);\n\n    const defaultValues = useMemo(() => sisteUtenlandsopphold || DEFAULT_FORM_VALUES, []);\n    const formMethods = useForm<UtenlandsoppholdTidligere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdSiste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    const lagre = useCallback((formValues: UtenlandsoppholdTidligere) => {\n        lagreTidligereUtenlandsopphold(formValues);\n        navigator.goToNextStep(\n            utenlandsopphold.skalBoUtenforNorgeNeste12Mnd ? Path.SENERE_UTENLANDSOPPHOLD : Path.OPPSUMMERING,\n        );\n    }, []);\n\n    return (\n        <Step\n            bannerTitle={i18n('Søknad.Pageheading')}\n            pageTitle={i18n('TidligereUtenlandsoppholdSteg.Tidligere')}\n            onCancel={navigator.avbrytSøknad}\n            steps={stepData.stepConfig}\n            activeStepId={stepData.activeStepId}\n            useNoTempSavingText\n        >\n            <Form formMethods={formMethods} onSubmit={lagre}>\n                <VStack gap=\"10\">\n                    <ErrorSummaryHookForm />\n                    <VStack gap=\"10\" align=\"start\">\n                        {fields.map((field, index) => (\n                            <Fragment key={field.id}>\n                                <TidligereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                            </Fragment>\n                        ))}\n                        <Button\n                            type=\"button\"\n                            variant=\"secondary\"\n                            size=\"small\"\n                            icon={<PlusIcon aria-hidden />}\n                            onClick={leggTilOpphold}\n                        >\n                            <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                        </Button>\n                    </VStack>\n                    <StepButtonsHookForm<UtenlandsoppholdTidligere>\n                        goToPreviousStep={navigator.goToPreviousDefaultStep}\n                        saveDataOnPreviousClick={lagreTidligereUtenlandsopphold}\n                    />\n                </VStack>\n            </Form>\n        </Step>\n    );\n};\n\nexport default TidligereUtenlandsoppholdSteg;\n"],"names":["TidligereUtenlandsoppholdPanel","index","fjernOpphold","i18n","useCustomIntl","watch","trigger","isSubmitted","useFormContext","alleAndreUtenlandsopphold","_u","i","fom","tom","minDateFom","dayjs","DATE_1_YEAR_AGO","maxDateFom","DATE_TODAY","minDateTom","maxDateTom","jsxs","VStack","jsx","Select","FormattedMessage","isRequired","createCountryOptions","o","Datepicker","isValidDate","isDatesNotTheSame","isBeforeOrSame","isDateWithinRange","formatDate","isPeriodNotOverlappingOthers","isAfterOrSame","Button","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","TidligereUtenlandsoppholdSteg","stepData","useStepData","navigator","useEsNavigator","utenlandsopphold","notEmpty","useEsStateData","EsDataType","sisteUtenlandsopphold","lagreTidligereUtenlandsopphold","useEsStateSaveFn","defaultValues","useMemo","formMethods","useForm","fields","append","remove","useFieldArray","leggTilOpphold","useCallback","lagre","formValues","Path","Step","Form","ErrorSummaryHookForm","field","Fragment","TidligereUtenlandsoppholdPeriode","PlusIcon","StepButtonsHookForm","TidligereUtenlandsoppholdSteg$1"],"mappings":"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"}