{"version":3,"file":"SenereUtenlandsoppholdSteg-f3ee6fee.js","sources":["../../src/sider/steg/utenlandsoppholdSenere/SenereUtenlandsoppholdPeriode.tsx","../../src/sider/steg/utenlandsoppholdSenere/SenereUtenlandsoppholdSteg.tsx"],"sourcesContent":["import { FormattedMessage } from 'react-intl';\nimport { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { DATE_1_YEAR_FROM_NOW, DATE_TODAY } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\nimport { useCustomIntl } from '@navikt/fp-ui';\n\nimport { UtenlandsoppholdPeriode } from 'types/Utenlandsopphold';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useCustomIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdNeste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdNeste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdNeste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdNeste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_TODAY).toDate();\n    const maxDateFom = tom ? dayjs(tom).toDate() : dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    const minDateTom = dayjs(fom || DATE_TODAY).toDate();\n    const maxDateTom = dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdNeste12Mnd.${index}.landkode`}\n                label={\n                    <FormattedMessage\n                        id={'SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Spørsmål.HvilketLandSkalDuBoI'}\n                    />\n                }\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuSkalBoIPåkreved')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={dayjs(DATE_TODAY).toDate()}\n                maxDate={tom ? dayjs(tom).toDate() : dayjs(DATE_1_YEAR_FROM_NOW).toDate()}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\n\nimport { Form, ErrorSummaryHookForm, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport SenereUtenlandsoppholdPeriode from './SenereUtenlandsoppholdPeriode';\nimport useEsNavigator from 'appData/useEsNavigator';\nimport { EsDataType, useEsStateData, useEsStateSaveFn } from 'appData/EsDataContext';\nimport { UtenlandsoppholdSenere, UtenlandsoppholdPeriode } from 'types/Utenlandsopphold';\nimport useStepData from 'appData/useStepData';\nimport { useCustomIntl } from '@navikt/fp-ui';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdNeste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdSenere;\n\nconst SenereUtenlandsoppholdSteg: React.FunctionComponent = () => {\n    const { i18n } = useCustomIntl();\n\n    const stepData = useStepData();\n    const navigator = useEsNavigator();\n\n    const senereUtenlandsopphold = useEsStateData(EsDataType.UTENLANDSOPPHOLD_SENERE);\n    const lagreSenereUtenlandsopphold = useEsStateSaveFn(EsDataType.UTENLANDSOPPHOLD_SENERE);\n\n    const defaultValues = useMemo(() => senereUtenlandsopphold || DEFAULT_FORM_VALUES, []);\n    const formMethods = useForm<UtenlandsoppholdSenere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdNeste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    const lagre = useCallback((formValues: UtenlandsoppholdSenere) => {\n        lagreSenereUtenlandsopphold(formValues);\n        navigator.goToNextDefaultStep();\n    }, []);\n\n    return (\n        <Step\n            bannerTitle={i18n('Søknad.Pageheading')}\n            pageTitle={i18n('SenereUtenlandsoppholdSteg.Fremtidig')}\n            onCancel={navigator.avbrytSøknad}\n            steps={stepData.stepConfig}\n            activeStepId={stepData.activeStepId}\n            useNoTempSavingText\n        >\n            <Form formMethods={formMethods} onSubmit={lagre}>\n                <VStack gap=\"10\">\n                    <ErrorSummaryHookForm />\n                    <VStack gap=\"10\" align=\"start\">\n                        {fields.map((field, index) => (\n                            <Fragment key={field.id}>\n                                <SenereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                            </Fragment>\n                        ))}\n                        <Button\n                            type=\"button\"\n                            variant=\"secondary\"\n                            size=\"small\"\n                            icon={<PlusIcon aria-hidden />}\n                            onClick={leggTilOpphold}\n                        >\n                            <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                        </Button>\n                    </VStack>\n                    <StepButtonsHookForm<UtenlandsoppholdSenere>\n                        goToPreviousStep={navigator.goToPreviousDefaultStep}\n                        saveDataOnPreviousClick={lagreSenereUtenlandsopphold}\n                    />\n                </VStack>\n            </Form>\n        </Step>\n    );\n};\n\nexport default SenereUtenlandsoppholdSteg;\n"],"names":["SenereUtenlandsoppholdPanel","index","fjernOpphold","i18n","useCustomIntl","watch","trigger","isSubmitted","useFormContext","alleAndreUtenlandsopphold","_u","i","fom","tom","minDateFom","dayjs","DATE_TODAY","maxDateFom","DATE_1_YEAR_FROM_NOW","minDateTom","maxDateTom","jsxs","VStack","jsx","Select","FormattedMessage","isRequired","createCountryOptions","Datepicker","isValidDate","isDatesNotTheSame","isBeforeOrSame","isDateWithinRange","formatDate","isPeriodNotOverlappingOthers","isAfterOrSame","Button","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","SenereUtenlandsoppholdSteg","stepData","useStepData","navigator","useEsNavigator","senereUtenlandsopphold","useEsStateData","EsDataType","lagreSenereUtenlandsopphold","useEsStateSaveFn","defaultValues","useMemo","formMethods","useForm","fields","append","remove","useFieldArray","leggTilOpphold","useCallback","lagre","formValues","Step","Form","ErrorSummaryHookForm","field","Fragment","SenereUtenlandsoppholdPeriode","PlusIcon","StepButtonsHookForm","SenereUtenlandsoppholdSteg$1"],"mappings":"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"}