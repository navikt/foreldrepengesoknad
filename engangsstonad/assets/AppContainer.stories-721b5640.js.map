{"version":3,"file":"AppContainer.stories-721b5640.js","sources":["../../../../packages/utils/src/loginUtils.ts","../../src/appData/api.ts","../../../../packages/api/src/apiHooks.ts","../../../../node_modules/.pnpm/react-router-dom@6.15.0_react-dom@18.2.0_react@18.2.0/node_modules/react-router-dom/dist/index.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/message.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/dateTime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/displayName.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/list.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/plural.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/relativeTime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/number.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.1.6/node_modules/@formatjs/intl/lib/src/create-intl.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.1.6/node_modules/react-intl/lib/src/components/provider.js","../../../../packages/fp-common/src/common/utils/localeUtils.ts","../../src/Engangsstønad.tsx","../../src/intl/IntlProvider.tsx","../../src/AppContainer.tsx"],"sourcesContent":["export const redirect = (url: string) => {\n    window.location.href = url;\n};\n\nexport const redirectToLogin = (loginUrl: string) => {\n    redirect(loginUrl + '?redirect=' + window.location.origin);\n};\n","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport { Locale } from '@navikt/fp-common';\nimport { redirectToLogin } from '@navikt/fp-utils';\nimport Environment from './Environment';\nimport { OmBarnet, erAdopsjon, erBarnetFødt, erBarnetIkkeFødt } from 'types/OmBarnet';\nimport { UtenlandsoppholdSenere, UtenlandsoppholdTidligere } from 'types/Utenlandsopphold';\nimport Kvittering from 'types/Kvittering';\nimport Dokumentasjon, { erTerminDokumentasjon } from 'types/Dokumentasjon';\n\n// TODO Flytt generell api-logikk til api-pakka\n\nconst UKJENT_UUID = 'ukjent uuid';\nconst FEIL_VED_INNSENDING =\n    'Det har oppstått et problem med innsending av søknaden. Vennligst prøv igjen senere. Hvis problemet vedvarer, kontakt oss og oppgi feil id: ';\n\nconst isAxiosError = (candidate: unknown): candidate is AxiosError<any> => {\n    if (candidate && typeof candidate === 'object' && 'isAxiosError' in candidate) {\n        return true;\n    }\n    return false;\n};\n\nexport const engangsstønadApi = axios.create({\n    baseURL: Environment.REST_API_URL,\n    withCredentials: true,\n});\n\nengangsstønadApi.interceptors.request.use((config) => {\n    config.withCredentials = true;\n    config.timeout = 60 * 1000;\n    return config;\n});\n\nconst ERROR_STATUS_CODES = [401, 403];\n\nengangsstønadApi.interceptors.response.use(\n    (response: AxiosResponse) => {\n        return response;\n    },\n    (error: AxiosError) => {\n        if (\n            error.response &&\n            ERROR_STATUS_CODES.includes(error.response.status) &&\n            error?.config?.url &&\n            !error.config.url.includes('/soknad/engangssoknad')\n        ) {\n            redirectToLogin(Environment.LOGIN_URL);\n        }\n        return Promise.reject(error);\n    },\n);\n\nconst getPerson = () => {\n    return engangsstønadApi.get('/personinfo');\n};\n\nconst mapBarn = (omBarnet: OmBarnet, dokumentasjon?: Dokumentasjon) => {\n    // TODO Vurder om ein heller bør mappa fram og tilbake i barn-komponenten. Er nok bedre å gjera det, men\n    // avvent og sjekk om det er realistisk å gjera det på den måten i dei andre appane.\n    const vedleggreferanser = dokumentasjon?.vedlegg.map((v) => v.id) || [];\n    if (erAdopsjon(omBarnet)) {\n        return {\n            type: 'adopsjon',\n            antallBarn: omBarnet.antallBarn,\n            fødselsdatoer: omBarnet.fødselsdatoer.map((f) => f.dato),\n            adopsjonsdato: omBarnet.adopsjonsdato,\n            adopsjonAvEktefellesBarn: omBarnet.adopsjonAvEktefellesBarn,\n            vedleggreferanser,\n        };\n    }\n    if (erBarnetFødt(omBarnet)) {\n        return {\n            type: 'fødsel',\n            antallBarn: omBarnet.antallBarn,\n            fødselsdato: omBarnet.fødselsdato,\n            vedleggreferanser: [],\n        };\n    }\n\n    if (erBarnetIkkeFødt(omBarnet) && dokumentasjon && erTerminDokumentasjon(dokumentasjon)) {\n        return {\n            type: 'termin',\n            antallBarn: omBarnet.antallBarn,\n            termindato: omBarnet.termindato,\n            terminbekreftelseDato: dokumentasjon.terminbekreftelsedato,\n            vedleggreferanser,\n        };\n    }\n\n    throw Error('Det er feil i data om barnet');\n};\n\nconst getSendSøknad =\n    (locale: Locale, setKvittering: (kvittering: Kvittering | (() => never)) => void) =>\n    async (\n        abortSignal: AbortSignal,\n        omBarnet: OmBarnet,\n        dokumentasjon?: Dokumentasjon,\n        tidligereUtenlandsopphold?: UtenlandsoppholdTidligere,\n        senereUtenlandsopphold?: UtenlandsoppholdSenere,\n    ) => {\n        const søknad = {\n            type: 'engangsstønad',\n            språkkode: locale,\n            barn: mapBarn(omBarnet, dokumentasjon),\n            utenlandsopphold: {\n                utenlandsoppholdSiste12Mnd: tidligereUtenlandsopphold?.utenlandsoppholdSiste12Mnd || [],\n                utenlandsoppholdNeste12Mnd: senereUtenlandsopphold?.utenlandsoppholdNeste12Mnd || [],\n            },\n            vedlegg: dokumentasjon?.vedlegg || [],\n        };\n\n        try {\n            const response = await engangsstønadApi.post<Kvittering>('/soknad/engangssoknad', søknad, {\n                headers: {\n                    'content-type': 'application/json;',\n                },\n                signal: abortSignal,\n            });\n            setKvittering(response.data);\n        } catch (error: unknown) {\n            // TODO Håndter på same måte i alle appar. Flytt til api-pakke\n            if (isAxiosError(error) && error.code !== 'ERR_CANCELED') {\n                const submitErrorCallId =\n                    error.response && error.response.data && error.response.data.uuid\n                        ? error.response.data.uuid\n                        : UKJENT_UUID;\n                const callIdForBruker =\n                    submitErrorCallId !== UKJENT_UUID ? submitErrorCallId.slice(0, 8) : submitErrorCallId;\n                // Kast feilmelding inne funksjon som set state => hack for å at ErrorBoundary skal snappa opp feilen\n                setKvittering(() => {\n                    throw new Error(FEIL_VED_INNSENDING + callIdForBruker);\n                });\n            }\n        }\n    };\n\nconst Api = { getPerson, getSendSøknad };\nexport default Api;\n","import { useState, useEffect } from 'react';\nimport { AxiosResponse, AxiosError } from 'axios';\n\nexport const useRequest = <T>(request: () => Promise<AxiosResponse<any, any>>) => {\n    const [data, setData] = useState<T>();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<AxiosError<any> | null>(null);\n\n    useEffect(() => {\n        let ignore = false;\n        const fetch = async () => {\n            try {\n                setLoading(true);\n                const response = await request();\n                if (!ignore) {\n                    setData(response.data);\n                }\n            } catch (err: any) {\n                setError(err);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetch();\n        return () => {\n            ignore = true;\n        };\n    }, [request]);\n\n    return { data, loading, error };\n};\n","/**\n * React Router DOM v6.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","import { __assign } from \"tslib\";\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { IntlMessageFormat, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from './error';\nimport { TYPE } from '@formatjs/icu-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport var formatMessage = function (_a, state, messageDescriptor, values, opts) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, fallbackOnEmptyString = _a.fallbackOnEmptyString, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (fallbackOnEmptyString === false && message === '') {\n            return message;\n        }\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, (opts || {})));\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n};\n","import { __assign } from \"tslib\";\nimport { filterProps, getNamedFormat } from './utils';\nimport { IntlFormatError } from './error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n    'fractionalSecondDigits',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second &&\n        !filteredOptions.timeStyle &&\n        !filteredOptions.dateStyle) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatDateTimeRange(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\n    try {\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting date time range.', config.locale, e));\n    }\n    return String(from);\n}\nexport function formatDateToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return [];\n}\n","import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'style',\n    'type',\n    'fallback',\n    'languageDisplay',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting display name.', locale, e));\n    }\n}\n","import { __assign } from \"tslib\";\nimport { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar LIST_FORMAT_OPTIONS = [\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return \"\".concat(now, \"_\").concat(i, \"_\").concat(now);\n}\nexport function formatList(opts, getListFormat, values, options) {\n    if (options === void 0) { options = {}; }\n    var results = formatListToParts(opts, getListFormat, values, options).reduce(function (all, el) {\n        var val = el.value;\n        if (typeof val !== 'string') {\n            all.push(val);\n        }\n        else if (typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += val;\n        }\n        else {\n            all.push(val);\n        }\n        return all;\n    }, []);\n    return results.length === 1 ? results[0] : results.length === 0 ? '' : results;\n}\nexport function formatListToParts(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        return getListFormat(locale, filteredOptions)\n            .formatToParts(serializedValues)\n            .map(function (part) {\n            return part.type === 'literal'\n                ? part\n                : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });\n        });\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting list.', locale, e));\n    }\n    // @ts-ignore\n    return values;\n}\n","import { filterProps } from './utils';\nimport { IntlFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting plural.', locale, e));\n    }\n    return 'other';\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting relative time.', config.locale, e));\n    }\n    return String(value);\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { IntlFormatError } from './error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'numberingSystem',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return [];\n}\n","import { __assign } from \"tslib\";\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\nimport { InvalidConfigError, MissingDataError } from './error';\nimport { formatNumber, formatNumberToParts } from './number';\nimport { formatRelativeTime } from './relativeTime';\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, formatDateTimeRange, } from './dateTime';\nimport { formatPlural } from './plural';\nimport { formatMessage } from './message';\nimport { formatList, formatListToParts } from './list';\nimport { formatDisplayName } from './displayName';\nfunction messagesContainString(messages) {\n    var firstMessage = messages ? messages[Object.keys(messages)[0]] : undefined;\n    return typeof firstMessage === 'string';\n}\nfunction verifyConfigMessages(config) {\n    if (config.onWarn &&\n        config.defaultRichTextElements &&\n        messagesContainString(config.messages || {})) {\n        config.onWarn(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\n    }\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\".concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\")));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.NumberFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    verifyConfigMessages(resolvedConfig);\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), \n        // @ts-expect-error TODO: will get to this later\n        formatMessage: formatMessage.bind(null, resolvedConfig, formatters), \n        // @ts-expect-error TODO: will get to this later\n        $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var rest = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        rest[_i - 4] = arguments[_i];\n    }\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\n        formatters,\n        descriptor,\n        values], rest, false));\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\n    var resolvedConfig = {\n        locale: coreIntl.locale,\n        timeZone: coreIntl.timeZone,\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n        formats: coreIntl.formats,\n        defaultLocale: coreIntl.defaultLocale,\n        defaultFormats: coreIntl.defaultFormats,\n        messages: coreIntl.messages,\n        onError: coreIntl.onError,\n        defaultRichTextElements: defaultRichTextElements,\n    };\n    return __assign(__assign({}, coreIntl), { \n        // @ts-expect-error fix this\n        formatMessage: formatMessage.bind(null, resolvedConfig, coreIntl.formatters), \n        // @ts-expect-error fix this\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","import { Locale } from '../types/Locale';\n\nconst LocaleSessionKey = 'selectedLocale';\n\nexport const getLocaleFromSessionStorage = (): Locale => {\n    return (sessionStorage.getItem(LocaleSessionKey) as Locale) || 'nb';\n};\n\nexport const setLocaleInSessionStorage = (locale: Locale): void => {\n    sessionStorage.setItem(LocaleSessionKey, locale);\n};\n\nexport const getNynorskLocale = () => {\n    if (Intl.NumberFormat.supportedLocalesOf('no-NN').length > 0) {\n        return 'no-NN';\n    }\n    return 'nn';\n};\n\nexport const getBokmålLocale = () => {\n    if (Intl.NumberFormat.supportedLocalesOf('no-NB').length > 0) {\n        return 'no-NB';\n    }\n    return 'nb';\n};\n\nexport const getLocaleForApi = (locale: string): Locale => {\n    switch (locale) {\n        case 'nn':\n        case 'no-NN':\n            return 'nn';\n        default:\n            return 'nb';\n    }\n};\n","import { useState } from 'react';\nimport { Loader } from '@navikt/ds-react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Locale } from '@navikt/fp-common';\nimport SøkersituasjonSteg from './sider/steg/sokersituasjon/SøkersituasjonSteg';\nimport Velkommen from './sider/velkommen/Velkommen';\nimport OmBarnetSteg from './sider/steg/omBarnet/OmBarnetSteg';\nimport UtenlandsoppholdSteg from './sider/steg/utenlandsopphold/UtenlandsoppholdSteg';\nimport { useRequest } from '@navikt/fp-api';\nimport { erMyndig, redirect } from '@navikt/fp-utils';\nimport { ErrorPage, Umyndig } from '@navikt/fp-ui';\n\nimport Api from 'appData/api';\nimport { Path } from 'appData/paths';\nimport { EsDataContext } from 'appData/EsDataContext';\nimport Environment from 'appData/Environment';\nimport Kvittering from 'types/Kvittering';\nimport Person from './types/Person';\nimport OppsummeringSteg from './sider/steg/oppsummering/OppsummeringSteg';\nimport DokumentasjonSteg from './sider/steg/dokumentasjon/DokumentasjonSteg';\nimport SenereUtenlandsoppholdSteg from './sider/steg/utenlandsoppholdSenere/SenereUtenlandsoppholdSteg';\nimport TidligereUtenlandsoppholdSteg from './sider/steg/utenlandsoppholdTidligere/TidligereUtenlandsoppholdSteg';\n\nconst Spinner: React.FunctionComponent = () => (\n    <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n        <Loader size=\"2xlarge\" />\n    </div>\n);\n\ninterface Props {\n    locale: Locale;\n    onChangeLocale: (locale: Locale) => void;\n}\n\nconst Engangsstønad: React.FunctionComponent<Props> = ({ locale, onChangeLocale }) => {\n    const [erVelkommen, setVelkommen] = useState(false);\n    const [kvittering, setKvittering] = useState<Kvittering>();\n\n    const { data: person, loading, error } = useRequest<Person>(Api.getPerson);\n\n    if (kvittering) {\n        if (Environment.INNSYN) {\n            redirect(\n                kvittering.saksNr\n                    ? `${Environment.INNSYN}/sak/${kvittering.saksNr}/redirectFromSoknad`\n                    : `${Environment.INNSYN}/redirectFromSoknad`,\n            );\n            return <Spinner />;\n        }\n        return <div>Redirected to Innsyn</div>;\n    }\n\n    if (error !== null) {\n        if (error.response?.status === 401 || error.response?.status === 403) {\n            return <Spinner />;\n        }\n        return <ErrorPage appnavn=\"Engangsstønad\" feilmelding={error.message} søkPåNytt={() => location.reload()} />;\n    }\n\n    if (loading || !person) {\n        return <Spinner />;\n    }\n\n    if (!erMyndig(person.fødselsdato)) {\n        return <Umyndig appnavn=\"Engangsstønad\" />;\n    }\n\n    const sendSøknad = Api.getSendSøknad(locale, setKvittering);\n\n    return (\n        <EsDataContext>\n            <Routes>\n                {!erVelkommen && <Route path=\"*\" element={<Navigate to={Path.VELKOMMEN} />} />}\n                <Route\n                    path={Path.VELKOMMEN}\n                    element={\n                        <Velkommen\n                            locale={locale}\n                            onChangeLocale={onChangeLocale}\n                            startSøknad={setVelkommen}\n                            erVelkommen={erVelkommen}\n                        />\n                    }\n                />\n                {erVelkommen && (\n                    <>\n                        <Route path={Path.SØKERSITUASJON} element={<SøkersituasjonSteg />} />\n                        <Route path={Path.OM_BARNET} element={<OmBarnetSteg kjønn={person.kjønn} />} />\n                        <Route path={Path.TERMINBEKREFTELSE} element={<DokumentasjonSteg />} />\n                        <Route path={Path.ADOPSJONSBEKREFTELSE} element={<DokumentasjonSteg />} />\n                        <Route path={Path.UTENLANDSOPPHOLD} element={<UtenlandsoppholdSteg />} />\n                        <Route path={Path.TIDLIGERE_UTENLANDSOPPHOLD} element={<TidligereUtenlandsoppholdSteg />} />\n                        <Route path={Path.SENERE_UTENLANDSOPPHOLD} element={<SenereUtenlandsoppholdSteg />} />\n                        <Route\n                            path={Path.OPPSUMMERING}\n                            element={<OppsummeringSteg person={person} sendSøknad={sendSøknad} />}\n                        />\n                    </>\n                )}\n            </Routes>\n        </EsDataContext>\n    );\n};\n\nexport default Engangsstønad;\n","import { IntlProvider as Provider } from 'react-intl';\nimport { allCommonMessages } from '@navikt/fp-common';\nimport { Språkkode } from './types';\nimport nnMessages from './messages/nn_NO.json';\nimport nbMessages from './messages/nb_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    språkkode: Språkkode;\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (språkkode: Språkkode) => {\n    if (språkkode === 'nb') {\n        return { ...nbMessages, ...allCommonMessages.nb };\n    } else if (språkkode === 'nn') {\n        return { ...nnMessages, ...allCommonMessages.nn };\n    } else {\n        return { ...enMessages, ...allCommonMessages.en };\n    }\n};\n\nconst IntlProvider: React.FunctionComponent<Props> = ({ språkkode, children }) => {\n    return (\n        <Provider locale={språkkode} messages={getLanguageMessages(språkkode) || {}}>\n            {children}\n        </Provider>\n    );\n};\nexport default IntlProvider;\n","import { useCallback, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { ErrorBoundary } from '@navikt/fp-ui';\nimport { getLocaleFromSessionStorage, Locale, setLocaleInSessionStorage } from '@navikt/fp-common';\nimport Engangsstønad from './Engangsstønad';\nimport IntlProvider from './intl/IntlProvider';\n\nconst localeFromSessionStorage = getLocaleFromSessionStorage();\n\ndayjs.locale(localeFromSessionStorage);\n\nconst AppContainer = () => {\n    const [locale, setLocale] = useState<Locale>(localeFromSessionStorage);\n\n    const changeLocale = useCallback((activeLocale: Locale) => {\n        setLocaleInSessionStorage(activeLocale);\n        setLocale(activeLocale);\n    }, []);\n\n    return (\n        <IntlProvider språkkode={locale}>\n            <ErrorBoundary appnavn=\"Engangsstønad\">\n                <BrowserRouter>\n                    <Engangsstønad locale={locale} onChangeLocale={changeLocale} />\n                </BrowserRouter>\n            </ErrorBoundary>\n        </IntlProvider>\n    );\n};\n\nexport default AppContainer;\n"],"names":["redirect","url","redirectToLogin","loginUrl","UKJENT_UUID","FEIL_VED_INNSENDING","isAxiosError","candidate","engangsstønadApi","axios","Environment","config","ERROR_STATUS_CODES","response","error","_a","getPerson","mapBarn","omBarnet","dokumentasjon","vedleggreferanser","v","erAdopsjon","f","erBarnetFødt","erBarnetIkkeFødt","erTerminDokumentasjon","getSendSøknad","locale","setKvittering","abortSignal","tidligereUtenlandsopphold","senereUtenlandsopphold","søknad","submitErrorCallId","callIdForBruker","Api","useRequest","request","data","setData","useState","loading","setLoading","setError","useEffect","ignore","err","START_TRANSITION","startTransitionImpl","React","BrowserRouter","_ref","basename","children","future","window","historyRef","React.useRef","createBrowserHistory","history","state","setStateImpl","React.useState","v7_startTransition","setState","React.useCallback","newState","React.useLayoutEffect","React.createElement","Router","DataRouterHook","DataRouterStateHook","setTimeZoneInOptions","opts","timeZone","all","k","__assign","deepMergeOptions","opts1","opts2","keys","deepMergeFormatsAndSetTimeZone","f1","mfFormats","IntlMessageFormat","formatMessage","messageDescriptor","values","formats","messages","defaultLocale","defaultFormats","fallbackOnEmptyString","onError","defaultRichTextElements","msgId","defaultMessage","invariant","id","message","TYPE","MissingTranslationError","formatter","e","MessageFormatError","DATE_TIME_FORMAT_OPTIONS","getFormatter","type","getDateTimeFormat","options","format","defaults","getNamedFormat","filteredOptions","filterProps","formatDate","_i","value","_b","date","IntlFormatError","formatTime","formatDateTimeRange","from","to","formatDateToParts","formatTimeToParts","DISPLAY_NAMES_OPTONS","formatDisplayName","getDisplayNames","DisplayNames","FormatError","ErrorCode","LIST_FORMAT_OPTIONS","now","generateToken","i","formatList","getListFormat","results","formatListToParts","el","val","ListFormat","richValues_1","serializedValues","part","PLURAL_FORMAT_OPTIONS","formatPlural","getPluralRules","RELATIVE_TIME_FORMAT_OPTIONS","getRelativeTimeFormat","formatRelativeTime","unit","RelativeTimeFormat","NUMBER_FORMAT_OPTIONS","getNumberFormat","formatNumber","formatNumberToParts","messagesContainString","firstMessage","verifyConfigMessages","createIntl","cache","formatters","createFormatters","resolvedConfig","DEFAULT_INTL_CONFIG","MissingDataError","InvalidConfigError","processIntlConfig","assignUniqueKeysToFormatXMLElementFnArgument","acc","isFormatXMLElementFn","assignUniqueKeysToParts","descriptor","rawValues","rest","chunks","coreFormatMessage","__spreadArray","React.Children","rawDefaultRichTextElements","__rest","coreIntl","coreCreateIntl","IntlProvider","_super","__extends","_this","createIntlCache","props","prevConfig","shallowEqual","invariantIntlContext","Provider","React.PureComponent","LocaleSessionKey","getLocaleFromSessionStorage","setLocaleInSessionStorage","Spinner","jsx","Loader","Engangsstønad","onChangeLocale","erVelkommen","setVelkommen","kvittering","person","ErrorPage","erMyndig","Umyndig","sendSøknad","EsDataContext","jsxs","Routes","Route","Navigate","Path","Velkommen","Fragment","SøkersituasjonSteg","OmBarnetSteg","DokumentasjonSteg","UtenlandsoppholdSteg","TidligereUtenlandsoppholdSteg","SenereUtenlandsoppholdSteg","OppsummeringSteg","getLanguageMessages","språkkode","nbMessages","allCommonMessages","nnMessages","enMessages","localeFromSessionStorage","dayjs","AppContainer","setLocale","changeLocale","useCallback","activeLocale","ErrorBoundary","AppContainer$1"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12]}