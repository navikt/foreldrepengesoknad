{"version":3,"file":"OmBarnetSteg-97219bd9.js","sources":["../../../../packages/utils/src/objectUtils.ts","../../src/steg/omBarnet/FødselPanel.tsx","../../src/steg/omBarnet/AdopsjonFodselFieldArray.tsx","../../src/steg/omBarnet/AdopsjonPanel.tsx","../../src/steg/omBarnet/OmBarnetSteg.tsx"],"sourcesContent":["export const omitOne = <T, K extends keyof T>(object: T, keyToOmit: K): Omit<T, K> => {\n    const o: Omit<T, K> & Partial<Pick<T, K>> = { ...object };\n    delete o[keyToOmit];\n    return o;\n};\n\nexport const omitMany = <T, K extends keyof T>(object: T, keysToOmit: K[]): Omit<T, K> => {\n    let result = object as Omit<T, K>;\n    keysToOmit.forEach((key) => {\n        result = omitOne(result, key as unknown as keyof Omit<T, K>) as Omit<T, K>;\n    });\n    return result;\n};\n","import { useFormContext } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { Radio } from '@navikt/ds-react';\nimport { RadioGroup, Select, Datepicker } from '@navikt/fp-form-hooks';\nimport { useCustomIntl } from '@navikt/fp-ui';\nimport {\n    erI22SvangerskapsukeEllerSenere,\n    isAfterOrSameAsSixMonthsAgo,\n    isBeforeTodayOrToday,\n    isLessThanThreeWeeksAgo,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\n\nimport { Fødsel } from 'types/OmBarnet';\n\nexport type FormValues = {\n    antallBarnDropDown?: string;\n} & Fødsel;\n\nconst FødselPanel: React.FunctionComponent = () => {\n    const { i18n } = useCustomIntl();\n\n    const { watch } = useFormContext<FormValues>();\n\n    const erBarnetFødt = watch('erBarnetFødt');\n    const antallBarn = watch('antallBarn');\n\n    return (\n        <>\n            <RadioGroup\n                name=\"erBarnetFødt\"\n                label={<FormattedMessage id=\"FødselPanel.Spørsmål.ErBarnetFødt\" />}\n                validate={[isRequired(i18n('FødselPanel.Spørsmål.ErBarnetFødt.Required'))]}\n            >\n                <Radio value={true}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Ja\" />\n                </Radio>\n                <Radio value={false}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Nei\" />\n                </Radio>\n            </RadioGroup>\n            {erBarnetFødt && (\n                <Datepicker\n                    name=\"fødselsdato\"\n                    label={<FormattedMessage id=\"FødselPanel.Fødselsdato\" />}\n                    description={i18n('FødselPanel.TermindatoFodselsdato.beskrivelse')}\n                    minDate={dayjs().subtract(6, 'month').toDate()}\n                    maxDate={dayjs().toDate()}\n                    validate={[\n                        isRequired(i18n('FødselPanel.Fødselsdato.DuMåOppgi')),\n                        isValidDate(i18n('FødselPanel.Fødselsdato.Gyldig')),\n                        isBeforeTodayOrToday(i18n('FødselPanel.Fodselsdato.MåVæreIdagEllerTidligere')),\n                        isAfterOrSameAsSixMonthsAgo(i18n('FødselPanel.Fodselsdato.IkkeMerEnn6MånederTilbake')),\n                    ]}\n                />\n            )}\n            {!erBarnetFødt && (\n                <Datepicker\n                    name=\"termindato\"\n                    label={<FormattedMessage id=\"FødselPanel.Termindato\" />}\n                    description={i18n('FødselPanel.TermindatoFodselsdato.beskrivelse')}\n                    minDate={dayjs().subtract(3, 'week').toDate()}\n                    maxDate={dayjs().add(18, 'weeks').add(3, 'days').toDate()}\n                    validate={[\n                        isRequired(i18n('FødselPanel.Termindato.DuMåOppgi')),\n                        isValidDate(i18n('FødselPanel.Termindato.Gyldig')),\n                        isLessThanThreeWeeksAgo(i18n('FødselPanel.Termindato.TermindatoKanIkkeVære3UkerFraIdag')),\n                        erI22SvangerskapsukeEllerSenere(i18n('FødselPanel.Termindato.DuMåVæreIUke22')),\n                    ]}\n                />\n            )}\n\n            <RadioGroup\n                name=\"antallBarn\"\n                label={erBarnetFødt ? i18n('FødselPanel.AntallBarn.Født') : i18n('FødselPanel.AntallBarn.Termin')}\n                description={i18n('FødselPanel.AntallBarn.TerminBeskrivelse')}\n                validate={[\n                    isRequired(\n                        erBarnetFødt\n                            ? i18n('FødselPanel.AntallBarn.Født.Required')\n                            : i18n('FødselPanel.AntallBarn.Venter.Required'),\n                    ),\n                ]}\n            >\n                <Radio value={1}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Ettbarn\" />\n                </Radio>\n                <Radio value={2}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Tvillinger\" />\n                </Radio>\n                <Radio value={3}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Flere\" />\n                </Radio>\n            </RadioGroup>\n            {antallBarn >= 3 && (\n                <Select\n                    name=\"antallBarnDropDown\"\n                    label={erBarnetFødt ? i18n('FødselPanel.AntallBarn.Født') : i18n('FødselPanel.AntallBarn.Termin')}\n                    validate={[\n                        isRequired(\n                            erBarnetFødt\n                                ? i18n('FødselPanel.AntallBarn.Født.Required')\n                                : i18n('FødselPanel.AntallBarn.Venter.Required'),\n                        ),\n                    ]}\n                >\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </Select>\n            )}\n        </>\n    );\n};\n\nexport default FødselPanel;\n","import { useEffect } from 'react';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { Datepicker } from '@navikt/fp-form-hooks';\nimport { VStack } from '@navikt/ds-react';\nimport { useCustomIntl } from '@navikt/fp-ui';\nimport { isBeforeTodayOrToday, isRequired, isValidDate } from '@navikt/fp-validation';\n\nexport type FormValues = {\n    fødselsdatoer?: Array<{\n        dato?: string;\n    }>;\n};\n\ninterface Props {\n    antallBarn?: number;\n    antallBarnDropDown?: string;\n    adopsjonsdato?: string;\n}\n\nconst AdopsjonFodselFieldArray: React.FunctionComponent<Props> = ({\n    adopsjonsdato,\n    antallBarn,\n    antallBarnDropDown,\n}) => {\n    const { i18n } = useCustomIntl();\n    const { control } = useFormContext<FormValues>();\n    const { fields, remove, append } = useFieldArray({\n        control,\n        name: 'fødselsdatoer',\n    });\n\n    useEffect(() => {\n        if (!antallBarn || (antallBarn === 3 && !antallBarnDropDown)) {\n            return;\n        }\n        const antall = antallBarn < 3 || !antallBarnDropDown ? antallBarn : Number.parseInt(antallBarnDropDown, 10);\n        const diff = fields.length - antall;\n        if (diff > 0) {\n            [...new Array(diff)].forEach((_unused, index) => {\n                remove(fields.length - index - 1);\n            });\n        }\n        if (diff < 0) {\n            [...new Array(antall - fields.length)].forEach(() => {\n                append({ dato: undefined });\n            });\n        }\n    }, [antallBarn, antallBarnDropDown, append, fields.length, remove]);\n\n    return (\n        <VStack gap=\"10\">\n            {fields.map((field, index) => (\n                <Datepicker\n                    key={field.id}\n                    name={`fødselsdatoer.${index}.dato`}\n                    minDate={dayjs().subtract(15, 'year').toDate()}\n                    maxDate={dayjs().toDate()}\n                    label={\n                        fields.length === 1\n                            ? i18n('AdopsjonFodselFieldArray.Fødselsdato')\n                            : i18n(`AdopsjonFodselFieldArray.Spørsmål.Fødselsdato.${index + 1}`)\n                    }\n                    validate={[\n                        isRequired(i18n('AdopsjonFodselFieldArray.Fodselsdato.DuMåOppgi')),\n                        isValidDate(i18n('AdopsjonFodselFieldArray.Fødselsdato.Gyldig')),\n                        (fødselsdato) => {\n                            return !fødselsdato || !adopsjonsdato\n                                ? undefined\n                                : isBeforeTodayOrToday(\n                                      i18n('AdopsjonFodselFieldArray.fodselsdato.MåVæreIdagEllerTidligere'),\n                                  )(fødselsdato);\n                        },\n                    ]}\n                />\n            ))}\n        </VStack>\n    );\n};\n\nexport default AdopsjonFodselFieldArray;\n","import { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { FormattedMessage } from 'react-intl';\nimport { Radio } from '@navikt/ds-react';\nimport { Kjønn } from '@navikt/fp-common';\nimport { RadioGroup, Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { useCustomIntl } from '@navikt/fp-ui';\nimport { isMaxOneYearIntoTheFuture, isRequired, isValidDate } from '@navikt/fp-validation';\n\nimport AdopsjonFodselFieldArray from './AdopsjonFodselFieldArray';\nimport { Adopsjon } from 'types/OmBarnet';\n\nexport type FormValues = {\n    antallBarnDropDown?: string;\n} & Adopsjon;\n\ninterface Props {\n    kjønn: Kjønn;\n}\n\nconst AdopsjonPanel: React.FunctionComponent<Props> = ({ kjønn }) => {\n    const { i18n } = useCustomIntl();\n\n    const { watch } = useFormContext<FormValues>();\n\n    const { adopsjonAvEktefellesBarn, adopsjonsdato, antallBarn, antallBarnDropDown } = watch();\n\n    return (\n        <>\n            <RadioGroup\n                name=\"adopsjonAvEktefellesBarn\"\n                label={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.Stebarnsadopsjon\" />}\n                validate={[isRequired(i18n('AdopsjonPanel.Spørsmål.Required'))]}\n            >\n                <Radio value={true}>\n                    <FormattedMessage id=\"AdopsjonPanel.Ja\" />\n                </Radio>\n                <Radio value={false}>\n                    <FormattedMessage id=\"AdopsjonPanel.Nei\" />\n                </Radio>\n            </RadioGroup>\n            <Datepicker\n                name=\"adopsjonsdato\"\n                label={\n                    adopsjonAvEktefellesBarn\n                        ? i18n('AdopsjonPanel.Spørsmål.Stebarnsadopsjondato')\n                        : i18n('AdopsjonPanel.Spørsmål.Overtaomsorgdato')\n                }\n                minDate={dayjs().subtract(6, 'month').toDate()}\n                validate={[\n                    isRequired(\n                        adopsjonAvEktefellesBarn\n                            ? i18n('AdopsjonPanel.EktefellensBarn.DuMåOppgi')\n                            : i18n('AdopsjonPanel.OvertaOmsorg.DuMåOppgi'),\n                    ),\n                    isValidDate(\n                        adopsjonAvEktefellesBarn\n                            ? i18n('AdopsjonPanel.Adopsjonsdato.GyldigFormat')\n                            : i18n('AdopsjonPanel.Omsorgsovertakelsen.GyldigFormat'),\n                    ),\n                    isMaxOneYearIntoTheFuture(i18n('AdopsjonPanel.AdopsjonDato.ForLangtFremITid')),\n                ]}\n            />\n            <RadioGroup\n                name=\"antallBarn\"\n                label={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.AntallBarnAdoptert\" />}\n                description={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.AntallBarnAdoptert.Beskrivelse\" />}\n                validate={[isRequired(i18n('AdopsjonPanel.Antallbarn.Required'))]}\n            >\n                <Radio value={1}>\n                    <FormattedMessage id=\"AdopsjonPanel.Radiobutton.Ettbarn\" />\n                </Radio>\n                <Radio value={2}>\n                    <FormattedMessage id=\"AdopsjonPanel.Radiobutton.ToBarn\" />\n                </Radio>\n                <Radio value={3}>\n                    <FormattedMessage id=\"AdopsjonPanel.Radiobutton.Flere\" />\n                </Radio>\n            </RadioGroup>\n            {antallBarn && antallBarn >= 3 && (\n                <Select\n                    name=\"antallBarnDropDown\"\n                    label={<FormattedMessage id=\"AdopsjonPanel.AntallBarn.Omsorgsovertakelse\" />}\n                    validate={[isRequired(i18n('AdopsjonPanel.Antallbarndropdown.Required'))]}\n                >\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </Select>\n            )}\n            <AdopsjonFodselFieldArray\n                adopsjonsdato={adopsjonsdato}\n                antallBarn={antallBarn}\n                antallBarnDropDown={antallBarnDropDown}\n            />\n            {kjønn === 'M' && adopsjonAvEktefellesBarn === false && (\n                <RadioGroup\n                    name=\"søkerAdopsjonAlene\"\n                    label={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.AdoptererDuAlene\" />}\n                    validate={[isRequired(i18n('AdopsjonPanel.AdoptererDuAlene.Required'))]}\n                >\n                    <Radio value={true}>\n                        <FormattedMessage id=\"AdopsjonPanel.Ja\" />\n                    </Radio>\n                    <Radio value={false}>\n                        <FormattedMessage id=\"AdopsjonPanel.Nei\" />\n                    </Radio>\n                </RadioGroup>\n            )}\n        </>\n    );\n};\n\nexport default AdopsjonPanel;\n","import { useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Kjønn, Step } from '@navikt/fp-common';\nimport { VStack } from '@navikt/ds-react';\nimport { useCustomIntl } from '@navikt/fp-ui';\nimport { StepButtonsHookForm, Form, ErrorSummaryHookForm } from '@navikt/fp-form-hooks';\nimport { notEmpty } from '@navikt/fp-validation';\nimport { omitOne } from '@navikt/fp-utils';\n\nimport { Søkersituasjon, SøkersituasjonEnum } from 'types/Søkersituasjon';\nimport { EsDataType, useEsStateData, useEsStateSaveFn } from 'appData/EsDataContext';\nimport useEsNavigator from 'appData/useEsNavigator';\nimport useStepData from 'appData/useStepData';\nimport { Path } from 'appData/paths';\nimport { OmBarnet } from 'types/OmBarnet';\nimport FødselPanel, { FormValues as FødtFormValues } from './FødselPanel';\nimport AdopsjonPanel, { FormValues as AdopsjonFormValues } from './AdopsjonPanel';\n\ntype FormValues = FødtFormValues & AdopsjonFormValues;\n\nconst utledNesteSteg = (formValues: FormValues, søkersituasjon: Søkersituasjon) => {\n    if (søkersituasjon.situasjon === SøkersituasjonEnum.ADOPSJON) {\n        return Path.ADOPSJONSBEKREFTELSE;\n    }\n    if (formValues.erBarnetFødt === false) {\n        return Path.TERMINBEKREFTELSE;\n    }\n    return Path.UTENLANDSOPPHOLD;\n};\n\nconst mapOmBarnetFraFormTilState = (formValues: FormValues) => ({\n    ...omitOne(formValues, 'antallBarnDropDown'),\n    antallBarn:\n        formValues.antallBarn > 2 && formValues.antallBarnDropDown\n            ? Number.parseInt(formValues.antallBarnDropDown, 10)\n            : formValues.antallBarn,\n});\n\nconst mapOmBarnetFraStateTilForm = (omBarnet: OmBarnet) => ({\n    ...omBarnet,\n    antallBarn: omBarnet.antallBarn > 2 ? 3 : omBarnet.antallBarn,\n    antallBarnDropDown: omBarnet.antallBarn > 2 ? omBarnet.antallBarn.toString() : undefined,\n});\n\nexport interface Props {\n    kjønn: Kjønn;\n}\n\nconst OmBarnetSteg: React.FunctionComponent<Props> = ({ kjønn }) => {\n    const { i18n } = useCustomIntl();\n\n    const stepData = useStepData();\n    const navigator = useEsNavigator();\n\n    const omBarnet = useEsStateData(EsDataType.OM_BARNET);\n    const lagreOmBarnet = useEsStateSaveFn(EsDataType.OM_BARNET);\n    const lagreDokumentasjon = useEsStateSaveFn(EsDataType.DOKUMENTASJON);\n    const søkersituasjon = notEmpty(useEsStateData(EsDataType.SØKERSITUASJON));\n\n    const mapOgLagreOmBarnet = useCallback(\n        (formValues: FormValues) => lagreOmBarnet(mapOmBarnetFraFormTilState(formValues)),\n        [lagreOmBarnet],\n    );\n\n    const onSubmit = useCallback(\n        (formValues: FormValues) => {\n            mapOgLagreOmBarnet(formValues);\n            if (formValues.erBarnetFødt === true) {\n                lagreDokumentasjon(undefined);\n            }\n            navigator.goToNextStep(utledNesteSteg(formValues, søkersituasjon));\n        },\n        [lagreDokumentasjon, mapOgLagreOmBarnet, navigator, søkersituasjon],\n    );\n\n    const formMethods = useForm<FormValues>({\n        defaultValues: omBarnet ? mapOmBarnetFraStateTilForm(omBarnet) : {},\n    });\n\n    return (\n        <Step\n            bannerTitle={i18n('Søknad.Pageheading')}\n            pageTitle={i18n('OmBarnetSteg.OmBarnet')}\n            onCancel={navigator.avbrytSøknad}\n            steps={stepData.stepConfig}\n            activeStepId={stepData.activeStepId}\n            useNoTempSavingText\n        >\n            <Form formMethods={formMethods} onSubmit={onSubmit}>\n                <VStack gap=\"10\">\n                    <ErrorSummaryHookForm />\n                    {søkersituasjon?.situasjon === SøkersituasjonEnum.ADOPSJON && <AdopsjonPanel kjønn={kjønn} />}\n                    {søkersituasjon?.situasjon === SøkersituasjonEnum.FØDSEL && <FødselPanel />}\n                    <StepButtonsHookForm<FormValues>\n                        goToPreviousStep={navigator.goToPreviousDefaultStep}\n                        saveDataOnPreviousClick={mapOgLagreOmBarnet}\n                    />\n                </VStack>\n            </Form>\n        </Step>\n    );\n};\n\nexport default OmBarnetSteg;\n"],"names":["omitOne","object","keyToOmit","o","FødselPanel","i18n","useCustomIntl","watch","useFormContext","erBarnetFødt","antallBarn","jsxs","Fragment","RadioGroup","jsx","FormattedMessage","isRequired","Radio","Datepicker","dayjs","isValidDate","isBeforeTodayOrToday","isAfterOrSameAsSixMonthsAgo","isLessThanThreeWeeksAgo","erI22SvangerskapsukeEllerSenere","Select","AdopsjonFodselFieldArray","adopsjonsdato","antallBarnDropDown","control","fields","remove","append","useFieldArray","useEffect","antall","diff","_unused","index","VStack","field","fødselsdato","AdopsjonPanel","kjønn","adopsjonAvEktefellesBarn","isMaxOneYearIntoTheFuture","utledNesteSteg","formValues","søkersituasjon","SøkersituasjonEnum","Path","mapOmBarnetFraFormTilState","mapOmBarnetFraStateTilForm","omBarnet","OmBarnetSteg","stepData","useStepData","navigator","useEsNavigator","useEsStateData","EsDataType","lagreOmBarnet","useEsStateSaveFn","lagreDokumentasjon","notEmpty","mapOgLagreOmBarnet","useCallback","onSubmit","formMethods","useForm","Step","Form","ErrorSummaryHookForm","StepButtonsHookForm","OmBarnetSteg$1"],"mappings":"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"}