{"version":3,"file":"OmBarnetSteg-6f4c2e94.js","sources":["../../../../packages/utils/src/objectUtils.ts","../../src/sider/steg/omBarnet/FødselPanel.tsx","../../src/sider/steg/omBarnet/AdopsjonFodselFieldArray.tsx","../../src/sider/steg/omBarnet/AdopsjonPanel.tsx","../../src/sider/steg/omBarnet/OmBarnetSteg.tsx"],"sourcesContent":["export const omitOne = <T, K extends keyof T>(object: T, keyToOmit: K): Omit<T, K> => {\n    const o: Omit<T, K> & Partial<Pick<T, K>> = { ...object };\n    delete o[keyToOmit];\n    return o;\n};\n\nexport const omitMany = <T, K extends keyof T>(object: T, keysToOmit: K[]): Omit<T, K> => {\n    let result = object as Omit<T, K>;\n    keysToOmit.forEach((key) => {\n        result = omitOne(result, key as unknown as keyof Omit<T, K>) as Omit<T, K>;\n    });\n    return result;\n};\n","import { useFormContext } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { Radio } from '@navikt/ds-react';\nimport { RadioGroupPanel, Select, Datepicker } from '@navikt/fp-form-hooks';\nimport { useFormValidators } from '@navikt/fp-validation';\n\nimport { Fødsel } from 'types/OmBarnet';\n\nexport type FormValues = {\n    antallBarnDropDown?: string;\n} & Fødsel;\n\nconst FødselPanel: React.FunctionComponent = () => {\n    const {\n        isRequired,\n        date: {\n            isValidDate,\n            isBeforeTodayOrToday,\n            isAfterOrSameAsSixMonthsAgo,\n            isLessThanThreeWeeksAgo,\n            erI22SvangerskapsukeEllerSenere,\n        },\n    } = useFormValidators();\n\n    const { watch } = useFormContext<FormValues>();\n\n    const erBarnetFødt = watch('erBarnetFødt');\n    const antallBarn = watch('antallBarn');\n\n    return (\n        <>\n            <RadioGroupPanel\n                name=\"erBarnetFødt\"\n                label={<FormattedMessage id=\"FødselPanel.Spørsmål.ErBarnetFødt\" />}\n                validate={[isRequired('FødselPanel.Spørsmål.ErBarnetFødt.Required')]}\n            >\n                <Radio value={true}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Ja\" />\n                </Radio>\n                <Radio value={false}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Nei\" />\n                </Radio>\n            </RadioGroupPanel>\n            {erBarnetFødt && (\n                <Datepicker\n                    name=\"fødselsdatoer.0\"\n                    label={<FormattedMessage id=\"FødselPanel.Fødselsdato\" />}\n                    minDate={dayjs().subtract(6, 'month').toDate()}\n                    maxDate={dayjs().toDate()}\n                    validate={[\n                        isRequired('FødselPanel.Fødselsdato.DuMåOppgi'),\n                        isValidDate('FødselPanel.Fødselsdato.Gyldig'),\n                        isBeforeTodayOrToday('FødselPanel.Fodselsdato.MåVæreIdagEllerTidligere'),\n                        isAfterOrSameAsSixMonthsAgo('FødselPanel.Fodselsdato.IkkeMerEnn6MånederTilbake'),\n                    ]}\n                />\n            )}\n            {!erBarnetFødt && (\n                <Datepicker\n                    name=\"termindato\"\n                    label={<FormattedMessage id=\"FødselPanel.Termindato\" />}\n                    minDate={dayjs().subtract(3, 'week').toDate()}\n                    maxDate={dayjs().add(18, 'weeks').add(3, 'days').toDate()}\n                    validate={[\n                        isRequired('FødselPanel.Termindato.DuMåOppgi'),\n                        isValidDate('FødselPanel.Termindato.Gyldig'),\n                        isLessThanThreeWeeksAgo('FødselPanel.Termindato.TermindatoKanIkkeVære3UkerFraIdag'),\n                        erI22SvangerskapsukeEllerSenere('FødselPanel.Termindato.DuMåVæreIUke22'),\n                    ]}\n                />\n            )}\n\n            <RadioGroupPanel\n                name=\"antallBarn\"\n                label={\n                    <FormattedMessage\n                        id={erBarnetFødt ? 'FødselPanel.AntallBarn.Født' : 'FødselPanel.AntallBarn.Termin'}\n                    />\n                }\n                validate={[\n                    isRequired(\n                        erBarnetFødt\n                            ? 'FødselPanel.AntallBarn.Født.Required'\n                            : 'FødselPanel.AntallBarn.Venter.Required',\n                    ),\n                ]}\n            >\n                <Radio value={1}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Ettbarn\" />\n                </Radio>\n                <Radio value={2}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Tvillinger\" />\n                </Radio>\n                <Radio value={3}>\n                    <FormattedMessage id=\"FødselPanel.Radiobutton.Flere\" />\n                </Radio>\n            </RadioGroupPanel>\n            {antallBarn >= 3 && (\n                <Select\n                    name=\"antallBarnDropDown\"\n                    label={\n                        <FormattedMessage\n                            id={erBarnetFødt ? 'FødselPanel.AntallBarn.Født' : 'FødselPanel.AntallBarn.Termin'}\n                        />\n                    }\n                    validate={[\n                        isRequired(\n                            erBarnetFødt\n                                ? 'FødselPanel.AntallBarn.Født.Required'\n                                : 'FødselPanel.AntallBarn.Venter.Required',\n                        ),\n                    ]}\n                >\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </Select>\n            )}\n        </>\n    );\n};\n\nexport default FødselPanel;\n","import { useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { Datepicker } from '@navikt/fp-form-hooks';\nimport { VStack } from '@navikt/ds-react';\nimport { useFormValidators } from '@navikt/fp-validation';\n\nexport type FormValues = {\n    fødselsdatoer?: Array<{\n        dato?: string;\n    }>;\n};\n\ninterface Props {\n    antallBarn?: number;\n    antallBarnDropDown?: string;\n    adopsjonsdato?: string;\n}\n\nconst AdopsjonFodselFieldArray: React.FunctionComponent<Props> = ({\n    adopsjonsdato,\n    antallBarn,\n    antallBarnDropDown,\n}) => {\n    const {\n        isRequired,\n        date: { isValidDate, isBeforeTodayOrToday },\n    } = useFormValidators();\n\n    const { control } = useFormContext<FormValues>();\n    const { fields, remove, append } = useFieldArray({\n        control,\n        name: 'fødselsdatoer',\n    });\n\n    useEffect(() => {\n        if (!antallBarn || (antallBarn === 3 && !antallBarnDropDown)) {\n            return;\n        }\n        const antall = antallBarn < 3 || !antallBarnDropDown ? antallBarn : Number.parseInt(antallBarnDropDown, 10);\n        const diff = fields.length - antall;\n        if (diff > 0) {\n            [...new Array(diff)].forEach((_unused, index) => {\n                remove(fields.length - index - 1);\n            });\n        }\n        if (diff < 0) {\n            [...new Array(antall - fields.length)].forEach(() => {\n                append({ dato: undefined });\n            });\n        }\n    }, [antallBarn, antallBarnDropDown]);\n\n    return (\n        <VStack gap=\"10\">\n            {fields.map((field, index) => (\n                <Datepicker\n                    key={field.id}\n                    name={`fødselsdatoer.${index}.dato`}\n                    minDate={dayjs().subtract(15, 'year').toDate()}\n                    maxDate={dayjs().toDate()}\n                    label={\n                        <FormattedMessage\n                            id={\n                                fields.length === 1\n                                    ? 'AdopsjonFodselFieldArray.Fødselsdato'\n                                    : `AdopsjonFodselFieldArray.Spørsmål.Fødselsdato.${index + 1}`\n                            }\n                        />\n                    }\n                    validate={[\n                        isRequired('AdopsjonFodselFieldArray.Fodselsdato.DuMåOppgi'),\n                        isValidDate('AdopsjonFodselFieldArray.Fødselsdato.Gyldig'),\n                        (fødselsdato) => {\n                            return !fødselsdato || !adopsjonsdato\n                                ? undefined\n                                : isBeforeTodayOrToday('AdopsjonFodselFieldArray.fodselsdato.MåVæreIdagEllerTidligere')(\n                                      fødselsdato,\n                                  );\n                        },\n                    ]}\n                />\n            ))}\n        </VStack>\n    );\n};\n\nexport default AdopsjonFodselFieldArray;\n","import { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { FormattedMessage } from 'react-intl';\nimport { Radio } from '@navikt/ds-react';\nimport { Kjønn } from '@navikt/fp-common';\nimport { RadioGroupPanel, Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { useFormValidators } from '@navikt/fp-validation';\n\nimport AdopsjonFodselFieldArray from './AdopsjonFodselFieldArray';\nimport { Adopsjon } from 'types/OmBarnet';\n\nexport type FormValues = {\n    antallBarnDropDown?: string;\n} & Adopsjon;\n\ninterface Props {\n    kjønn: Kjønn;\n}\n\nconst AdopsjonPanel: React.FunctionComponent<Props> = ({ kjønn }) => {\n    const {\n        isRequired,\n        date: { isValidDate, isMaxOneYearIntoTheFuture },\n    } = useFormValidators();\n\n    const { watch } = useFormContext<FormValues>();\n\n    const { adopsjonAvEktefellesBarn, adopsjonsdato, antallBarn, antallBarnDropDown } = watch();\n\n    return (\n        <>\n            <RadioGroupPanel\n                name=\"adopsjonAvEktefellesBarn\"\n                label={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.Stebarnsadopsjon\" />}\n                validate={[isRequired('AdopsjonPanel.Spørsmål.Required')]}\n            >\n                <Radio value={true}>\n                    <FormattedMessage id=\"AdopsjonPanel.Ja\" />\n                </Radio>\n                <Radio value={false}>\n                    <FormattedMessage id=\"AdopsjonPanel.Nei\" />\n                </Radio>\n            </RadioGroupPanel>\n            <Datepicker\n                name=\"adopsjonsdato\"\n                label={\n                    <FormattedMessage\n                        id={\n                            adopsjonAvEktefellesBarn\n                                ? 'AdopsjonPanel.Spørsmål.Stebarnsadopsjondato'\n                                : 'AdopsjonPanel.Spørsmål.Overtaomsorgdato'\n                        }\n                    />\n                }\n                minDate={dayjs().subtract(6, 'month').toDate()}\n                validate={[\n                    isRequired(\n                        adopsjonAvEktefellesBarn\n                            ? 'AdopsjonPanel.EktefellensBarn.DuMåOppgi'\n                            : 'AdopsjonPanel.OvertaOmsorg.DuMåOppgi',\n                    ),\n                    isValidDate(\n                        adopsjonAvEktefellesBarn\n                            ? 'AdopsjonPanel.Adopsjonsdato.GyldigFormat'\n                            : 'AdopsjonPanel.Omsorgsovertakelsen.GyldigFormat',\n                    ),\n                    isMaxOneYearIntoTheFuture('AdopsjonPanel.AdopsjonDato.ForLangtFremITid'),\n                ]}\n            />\n            <RadioGroupPanel\n                name=\"antallBarn\"\n                label={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.AntallBarnAdoptert\" />}\n                description={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.AntallBarnAdoptert.Beskrivelse\" />}\n                validate={[isRequired('AdopsjonPanel.Antallbarn.Required')]}\n            >\n                <Radio value={1}>\n                    <FormattedMessage id=\"AdopsjonPanel.Radiobutton.Ettbarn\" />\n                </Radio>\n                <Radio value={2}>\n                    <FormattedMessage id=\"AdopsjonPanel.Radiobutton.ToBarn\" />\n                </Radio>\n                <Radio value={3}>\n                    <FormattedMessage id=\"AdopsjonPanel.Radiobutton.Flere\" />\n                </Radio>\n            </RadioGroupPanel>\n            {antallBarn && antallBarn >= 3 && (\n                <Select\n                    name=\"antallBarnDropDown\"\n                    label={<FormattedMessage id=\"AdopsjonPanel.AntallBarn.Omsorgsovertakelse\" />}\n                    validate={[isRequired('AdopsjonPanel.Antallbarndropdown.Required')]}\n                >\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </Select>\n            )}\n            <AdopsjonFodselFieldArray\n                adopsjonsdato={adopsjonsdato}\n                antallBarn={antallBarn}\n                antallBarnDropDown={antallBarnDropDown}\n            />\n            {kjønn === 'M' && adopsjonAvEktefellesBarn === false && (\n                <RadioGroupPanel\n                    name=\"søkerAdopsjonAlene\"\n                    label={<FormattedMessage id=\"AdopsjonPanel.Spørsmål.AdoptererDuAlene\" />}\n                    validate={[isRequired('AdopsjonPanel.AdoptererDuAlene.Required')]}\n                >\n                    <Radio value={true}>\n                        <FormattedMessage id=\"AdopsjonPanel.Ja\" />\n                    </Radio>\n                    <Radio value={false}>\n                        <FormattedMessage id=\"AdopsjonPanel.Nei\" />\n                    </Radio>\n                </RadioGroupPanel>\n            )}\n        </>\n    );\n};\n\nexport default AdopsjonPanel;\n","import { useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { Kjønn, Step, useDocumentTitle } from '@navikt/fp-common';\nimport { VStack } from '@navikt/ds-react';\n\nimport { StepButtonsHookForm, Form, ErrorSummaryHookForm } from '@navikt/fp-form-hooks';\nimport { notEmpty } from '@navikt/fp-validation';\nimport { omitOne } from '@navikt/fp-utils';\nimport { Søkersituasjon, SøkersituasjonEnum } from 'types/Søkersituasjon';\nimport { EsDataType, useEsStateData, useEsStateSaveFn } from 'appData/EsDataContext';\nimport useEsNavigator from 'appData/useEsNavigator';\nimport useStepData from 'appData/useStepData';\nimport { Path } from 'appData/paths';\nimport FødselPanel, { FormValues as FødtFormValues } from './FødselPanel';\nimport AdopsjonPanel, { FormValues as AdopsjonFormValues } from './AdopsjonPanel';\n\ntype FormValues = FødtFormValues & AdopsjonFormValues;\n\nconst utledNesteSteg = (formValues: FormValues, søkersituasjon: Søkersituasjon) => {\n    if (søkersituasjon.situasjon === SøkersituasjonEnum.ADOPSJON) {\n        return Path.ADOPSJONSBEKREFTELSE;\n    }\n    if (formValues.erBarnetFødt === false) {\n        return Path.TERMINBEKREFTELSE;\n    }\n    return Path.UTENLANDSOPPHOLD;\n};\n\nexport interface Props {\n    kjønn: Kjønn;\n}\n\nconst OmBarnetSteg: React.FunctionComponent<Props> = ({ kjønn }) => {\n    const intl = useIntl();\n\n    useDocumentTitle(intl.formatMessage({ id: 'OmBarnetSteg.OmBarnet' }));\n\n    const stepData = useStepData();\n    const navigator = useEsNavigator();\n    const omBarnet = useEsStateData(EsDataType.OM_BARNET);\n    const lagreOmBarnet = useEsStateSaveFn(EsDataType.OM_BARNET);\n    const lagreDokumentasjon = useEsStateSaveFn(EsDataType.DOKUMENTASJON);\n    const søkersituasjon = notEmpty(useEsStateData(EsDataType.SØKERSITUASJON));\n\n    const lagre = useCallback((formValues: FormValues) => {\n        const { antallBarnDropDown } = formValues;\n        lagreOmBarnet({\n            ...omitOne(formValues, 'antallBarnDropDown'),\n            antallBarn: antallBarnDropDown ? Number.parseInt(antallBarnDropDown, 10) : formValues.antallBarn,\n        });\n        if (formValues.erBarnetFødt === true) {\n            lagreDokumentasjon(undefined);\n        }\n        navigator.goToNextStep(utledNesteSteg(formValues, søkersituasjon));\n    }, []);\n\n    const formMethods = useForm<FormValues>({\n        defaultValues: omBarnet,\n    });\n\n    return (\n        <Step\n            bannerTitle={intl.formatMessage({ id: 'Søknad.Pageheading' })}\n            pageTitle={intl.formatMessage({ id: 'OmBarnetSteg.OmBarnet' })}\n            onCancel={navigator.avbrytSøknad}\n            steps={stepData.stepConfig}\n            activeStepId={stepData.activeStepId}\n            useNoTempSavingText\n        >\n            <Form formMethods={formMethods} onSubmit={lagre}>\n                <VStack gap=\"10\">\n                    <ErrorSummaryHookForm />\n                    {søkersituasjon?.situasjon === SøkersituasjonEnum.ADOPSJON && <AdopsjonPanel kjønn={kjønn} />}\n                    {søkersituasjon?.situasjon === SøkersituasjonEnum.FØDSEL && <FødselPanel />}\n                    <StepButtonsHookForm<FormValues>\n                        goToPreviousStep={navigator.goToPreviousDefaultStep}\n                        saveDataOnPreviousClick={lagreOmBarnet}\n                    />\n                </VStack>\n            </Form>\n        </Step>\n    );\n};\n\nexport default OmBarnetSteg;\n"],"names":["omitOne","object","keyToOmit","o","FødselPanel","isRequired","isValidDate","isBeforeTodayOrToday","isAfterOrSameAsSixMonthsAgo","isLessThanThreeWeeksAgo","erI22SvangerskapsukeEllerSenere","useFormValidators","watch","useFormContext","erBarnetFødt","antallBarn","jsxs","Fragment","RadioGroupPanel","jsx","FormattedMessage","Radio","Datepicker","dayjs","Select","AdopsjonFodselFieldArray","adopsjonsdato","antallBarnDropDown","control","fields","remove","append","useFieldArray","useEffect","antall","diff","_unused","index","VStack","field","fødselsdato","AdopsjonPanel","kjønn","isMaxOneYearIntoTheFuture","adopsjonAvEktefellesBarn","utledNesteSteg","formValues","søkersituasjon","SøkersituasjonEnum","Path","OmBarnetSteg","intl","useIntl","useDocumentTitle","stepData","useStepData","navigator","useEsNavigator","omBarnet","useEsStateData","EsDataType","lagreOmBarnet","useEsStateSaveFn","lagreDokumentasjon","notEmpty","lagre","useCallback","formMethods","useForm","Step","Form","ErrorSummaryHookForm","StepButtonsHookForm","OmBarnetSteg$1"],"mappings":"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"}