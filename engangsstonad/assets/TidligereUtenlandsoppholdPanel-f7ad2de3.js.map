{"version":3,"file":"TidligereUtenlandsoppholdPanel-f7ad2de3.js","sources":["../../../../packages/utenlandsopphold/src/intl/useUtenlandsoppholdIntl.ts","../../../../packages/utenlandsopphold/src/intl/UtenlandsoppholdIntlProvider.tsx","../../../../packages/utenlandsopphold/src/utenlandsopphold/UtenlandsoppholdPanel.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdSenere/SenereUtenlandsoppholdPeriode.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdSenere/SenereUtenlandsoppholdPanel.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPeriode.tsx","../../../../packages/utenlandsopphold/src/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPanel.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport { FormatXMLElementFn } from 'intl-messageformat';\nimport { useIntl, PrimitiveType, createIntl as createReactIntl, createIntlCache, IntlShape } from 'react-intl';\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst cache = createIntlCache();\n\nconst createIntl = (locale: string, messages: Record<string, string>): IntlShape =>\n    createReactIntl(\n        {\n            locale,\n            messages,\n        },\n        cache,\n    );\n\nconst useUtenlandsoppholdIntl = () => {\n    const { locale } = useIntl();\n\n    const intl = useMemo(() => {\n        const messages = getLanguageMessages(locale) || {};\n        return createIntl(locale, messages);\n    }, [locale]);\n\n    return {\n        i18n: (i18nId: string, values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>) =>\n            intl.formatMessage({ id: i18nId }, values),\n    };\n};\n\nexport default useUtenlandsoppholdIntl;\n","import { useMemo } from 'react';\nimport { IntlProvider as Provider, useIntl } from 'react-intl';\n\nimport nbMessages from './messages/nb_NO.json';\nimport nnMessages from './messages/nn_NO.json';\nimport enMessages from './messages/en_US.json';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst getLanguageMessages = (locale: string) => {\n    if (locale === 'nb') {\n        return nbMessages;\n    } else if (locale === 'nn') {\n        return nnMessages;\n    } else {\n        return enMessages;\n    }\n};\n\nconst UtenlandsoppholdIntlProvider: React.FunctionComponent<Props> = ({ children }) => {\n    const { locale } = useIntl();\n\n    const messages = useMemo(() => getLanguageMessages(locale) || {}, [locale]);\n    return (\n        <Provider locale={locale} messages={messages}>\n            {children}\n        </Provider>\n    );\n};\nexport default UtenlandsoppholdIntlProvider;\n","import { useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { Link, VStack, Radio, ExpansionCard, BodyLong, Heading, HStack, BodyShort } from '@navikt/ds-react';\nimport { Form, ErrorSummaryHookForm, RadioGroup, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport { Step } from '@navikt/fp-common';\nimport { links } from '@navikt/fp-constants';\nimport { isRequired } from '@navikt/fp-validation';\nimport { StepConfig, Utenlandsopphold } from '@navikt/fp-types';\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nexport interface Props {\n    utenlandsopphold?: Utenlandsopphold;\n    saveOnNext: (formValues: Utenlandsopphold) => void;\n    saveOnPrevious: (formValues: Utenlandsopphold | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    stønadstype: 'Engangsstønad' | 'Foreldrepenger' | 'Svangerskapspenger';\n    supportsTempSaving?: boolean;\n}\n\nconst UtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    utenlandsopphold,\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    stepConfig,\n    stønadstype,\n    supportsTempSaving = true,\n}) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const formMethods = useForm<Utenlandsopphold>({\n        defaultValues: utenlandsopphold,\n    });\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                steps={stepConfig}\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                useNoTempSavingText={supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <RadioGroup\n                            name=\"harBoddUtenforNorgeSiste12Mnd\"\n                            label={<FormattedMessage id=\"UtenlandsoppholdSteg.Siste12Måneder.Spørsmål\" />}\n                            validate={[isRequired(i18n('UtenlandsoppholdSteg.Siste12Måneder.IsRequired'))]}\n                        >\n                            <Radio value={false}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Siste12MånederInfotekst.Radiobutton.BoddINorge\" />\n                            </Radio>\n                            <Radio value={true}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Siste12MånederInfotekst.Radiobutton.BoddIUtlandet\" />\n                            </Radio>\n                        </RadioGroup>\n                        <RadioGroup\n                            name=\"skalBoUtenforNorgeNeste12Mnd\"\n                            label={<FormattedMessage id=\"UtenlandsoppholdSteg.Neste12Måneder.Spørsmål\" />}\n                            validate={[isRequired(i18n('UtenlandsoppholdSteg.Neste12Måneder.IsRequired'))]}\n                        >\n                            <Radio value={false}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Neste12MånederInfotekst.Radiobutton.BoddINorge\" />\n                            </Radio>\n                            <Radio value={true}>\n                                <FormattedMessage id=\"UtenlandsoppholdSteg.Neste12MånederInfotekst.Radiobutton.BoddIUtlandet\" />\n                            </Radio>\n                        </RadioGroup>\n                        <ExpansionCard size=\"small\" aria-label={i18n('UtenlandsoppholdSteg.StotteFraNav')}>\n                            <ExpansionCard.Header>\n                                <ExpansionCard.Title size=\"small\">\n                                    <FormattedMessage id=\"UtenlandsoppholdSteg.StotteFraNav\" />\n                                </ExpansionCard.Title>\n                            </ExpansionCard.Header>\n                            <ExpansionCard.Content>\n                                <VStack gap=\"10\">\n                                    <VStack gap=\"5\">\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del1\" />\n                                        </BodyLong>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del2\" />\n                                        </BodyLong>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del3\" />\n                                        </BodyLong>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del4\" />\n                                        </BodyLong>\n                                    </VStack>\n                                    <VStack gap=\"5\">\n                                        <Heading size=\"small\">\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Undertittel\" />\n                                        </Heading>\n                                        <BodyLong>\n                                            <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del5\" />\n                                        </BodyLong>\n                                        <HStack gap=\"1\">\n                                            <BodyShort>\n                                                <FormattedMessage id=\"UtenlandsoppholdSteg.Info.Del6\" />\n                                            </BodyShort>\n                                            <BodyShort>\n                                                {stønadstype === 'Engangsstønad' && (\n                                                    <Link href={links.engangsstonadHvem}>\n                                                        nav.no/engangsstonad#hvem\n                                                    </Link>\n                                                )}\n                                                {stønadstype === 'Foreldrepenger' && (\n                                                    <Link href={links.foreldrepengerUtland}>\n                                                        nav.no/foreldrepenger#utland\n                                                    </Link>\n                                                )}\n                                            </BodyShort>\n                                        </HStack>\n                                    </VStack>\n                                </VStack>\n                            </ExpansionCard.Content>\n                        </ExpansionCard>\n                        <StepButtonsHookForm<Utenlandsopphold>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default UtenlandsoppholdPanel;\n","import { FormattedMessage } from 'react-intl';\nimport { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate, isSameOrAfterToday } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\nimport { DATE_1_YEAR_FROM_NOW, DATE_TODAY } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\n\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdNeste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdNeste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdNeste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdNeste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_TODAY).toDate();\n    const maxDateFom = tom ? dayjs(tom).subtract(1, 'days').toDate() : dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    const minDateTom = fom && isSameOrAfterToday(fom) ? dayjs(fom).add(1, 'days').toDate() : dayjs(DATE_TODAY).toDate();\n    const maxDateTom = dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdNeste12Mnd.${index}.landkode`}\n                label={\n                    <FormattedMessage\n                        id={'SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Spørsmål.HvilketLandSkalDuBoI'}\n                    />\n                }\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuSkalBoIPåkreved')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={minDateFom}\n                maxDate={maxDateFom}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n                defaultMonth={fom ? dayjs(fom).toDate() : undefined}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { Form, ErrorSummaryHookForm, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport { StepConfig, UtenlandsoppholdPeriode, UtenlandsoppholdSenere } from '@navikt/fp-types';\n\nimport SenereUtenlandsoppholdPeriode from './SenereUtenlandsoppholdPeriode';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdNeste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdSenere;\n\nexport interface Props {\n    senereUtenlandsopphold?: UtenlandsoppholdSenere;\n    saveOnNext: (formValues: UtenlandsoppholdSenere) => void;\n    saveOnPrevious: (formValues: UtenlandsoppholdSenere | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    supportsTempSaving?: boolean;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    senereUtenlandsopphold,\n    stepConfig,\n    supportsTempSaving = true,\n}) => {\n    const defaultValues = useMemo(() => senereUtenlandsopphold || DEFAULT_FORM_VALUES, [senereUtenlandsopphold]);\n    const formMethods = useForm<UtenlandsoppholdSenere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdNeste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                steps={stepConfig}\n                useNoTempSavingText={!supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <VStack gap=\"10\" align=\"start\">\n                            {fields.map((field, index) => (\n                                <Fragment key={field.id}>\n                                    <SenereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                    {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                                </Fragment>\n                            ))}\n                            <Button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                size=\"small\"\n                                icon={<PlusIcon aria-hidden />}\n                                onClick={leggTilOpphold}\n                            >\n                                <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                            </Button>\n                        </VStack>\n                        <StepButtonsHookForm<UtenlandsoppholdSenere>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n","import { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { useFormContext } from 'react-hook-form';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate, isDateAAfterDateB } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { DATE_TODAY, DATE_1_YEAR_AGO } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdSiste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdSiste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdSiste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdSiste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateFom = tom ? dayjs(tom).subtract(1, 'days').toDate() : dayjs(DATE_TODAY).toDate();\n\n    const minDateTom =\n        fom && isDateAAfterDateB(fom, DATE_1_YEAR_AGO)\n            ? dayjs(fom).add(1, 'days').toDate()\n            : dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateTom = dayjs(DATE_TODAY).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdSiste12Mnd.${index}.landkode`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Spørsmål.HvilketLandHarDuBoddI\" />}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuHarBoddIPåkrevd')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={minDateFom}\n                maxDate={maxDateFom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n                defaultMonth={tom ? dayjs(tom).toDate() : undefined}\n            />\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuHarBoddIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { ErrorSummaryHookForm, StepButtonsHookForm, Form } from '@navikt/fp-form-hooks';\nimport { StepConfig, UtenlandsoppholdPeriode, UtenlandsoppholdTidligere } from '@navikt/fp-types';\n\nimport TidligereUtenlandsoppholdPeriode from './TidligereUtenlandsoppholdPeriode';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdSiste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdTidligere;\n\nexport interface Props {\n    tidligereUtenlandsopphold?: UtenlandsoppholdTidligere;\n    saveOnNext: (formValues: UtenlandsoppholdTidligere) => void;\n    saveOnPrevious: (data: UtenlandsoppholdTidligere | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    supportsTempSaving?: boolean;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    tidligereUtenlandsopphold,\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    stepConfig,\n    supportsTempSaving = true,\n}) => {\n    const defaultValues = useMemo(() => tidligereUtenlandsopphold || DEFAULT_FORM_VALUES, [tidligereUtenlandsopphold]);\n    const formMethods = useForm<UtenlandsoppholdTidligere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdSiste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                steps={stepConfig}\n                useNoTempSavingText={!supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <VStack gap=\"10\" align=\"start\">\n                            {fields.map((field, index) => (\n                                <Fragment key={field.id}>\n                                    <TidligereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                    {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                                </Fragment>\n                            ))}\n                            <Button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                size=\"small\"\n                                icon={<PlusIcon aria-hidden />}\n                                onClick={leggTilOpphold}\n                            >\n                                <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                            </Button>\n                        </VStack>\n                        <StepButtonsHookForm<UtenlandsoppholdTidligere>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n"],"names":["getLanguageMessages","locale","nbMessages","nnMessages","enMessages","cache","createIntlCache","createIntl","messages","createReactIntl","useUtenlandsoppholdIntl","useIntl","intl","useMemo","i18nId","values","UtenlandsoppholdIntlProvider","children","jsx","Provider","UtenlandsoppholdPanel","utenlandsopphold","saveOnNext","saveOnPrevious","cancelApplication","onContinueLater","goToPreviousStep","stepConfig","stønadstype","supportsTempSaving","i18n","formMethods","useForm","Step","Form","jsxs","VStack","ErrorSummaryHookForm","RadioGroup","FormattedMessage","isRequired","Radio","ExpansionCard","BodyLong","Heading","HStack","BodyShort","Link","links","StepButtonsHookForm","SenereUtenlandsoppholdPanel","index","fjernOpphold","watch","trigger","isSubmitted","useFormContext","alleAndreUtenlandsopphold","_u","i","fom","tom","minDateFom","dayjs","DATE_TODAY","maxDateFom","DATE_1_YEAR_FROM_NOW","minDateTom","isSameOrAfterToday","maxDateTom","Select","createCountryOptions","o","Datepicker","isValidDate","isDatesNotTheSame","isBeforeOrSame","isDateWithinRange","formatDate","isPeriodNotOverlappingOthers","isAfterOrSame","Button","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","senereUtenlandsopphold","defaultValues","fields","append","remove","useFieldArray","leggTilOpphold","useCallback","field","Fragment","SenereUtenlandsoppholdPeriode","PlusIcon","TidligereUtenlandsoppholdPanel","DATE_1_YEAR_AGO","isDateAAfterDateB","tidligereUtenlandsopphold","TidligereUtenlandsoppholdPeriode"],"mappings":"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"}