{"version":3,"file":"OmBarnetSteg-896d23fe.js","sources":["../../src/fpcommon/util/objectUtils.ts","../../src/sider/steg/omBarnet/FødselPanel.tsx","../../src/sider/steg/omBarnet/AdopsjonFodselFieldArray.tsx","../../src/sider/steg/omBarnet/AdopsjonPanel.tsx","../../src/sider/steg/omBarnet/OmBarnetSteg.tsx"],"sourcesContent":["export const omitOne = <T, K extends keyof T>(object: T, keyToOmit: K): Omit<T, K> => {\n    const o: Omit<T, K> & Partial<Pick<T, K>> = { ...object };\n    delete o[keyToOmit];\n    return o;\n};\n\nexport const omitMany = <T, K extends keyof T>(object: T, keysToOmit: K[]): Omit<T, K> => {\n    let result = object as Omit<T, K>;\n    keysToOmit.forEach((key) => {\n        result = omitOne(result, key as unknown as keyof Omit<T, K>) as Omit<T, K>;\n    });\n    return result;\n};\n","import { useFormContext } from 'react-hook-form';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { Radio } from '@navikt/ds-react';\nimport { erMindreEnn3UkerSiden, sisteDatoBarnetKanVæreFødt, sisteMuligeTermindato } from '@navikt/fp-common';\n\nimport RadioGroupPanel from 'fpcommon/form/RadioGroupPanel';\nimport Select from 'fpcommon/form/Select';\nimport Datepicker from 'fpcommon/form/Datepicker';\nimport { isAfterToday, isRequired, isValidDate } from 'fpcommon/validering/valideringsregler';\nimport { Fødsel } from 'types/OmBarnet';\n\nexport type FormValues = {\n    antallBarnDropDown?: string;\n} & Fødsel;\n\nconst FødselPanel: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { watch } = useFormContext<FormValues>();\n\n    const erBarnetFødt = watch('erBarnetFødt');\n    const antallBarn = watch('antallBarn');\n\n    return (\n        <>\n            <RadioGroupPanel\n                name=\"erBarnetFødt\"\n                label={<FormattedMessage id=\"omBarnet.spørsmål.erBarnetFødt\" />}\n                validate={[isRequired(intl.formatMessage({ id: 'omBarnet.spørsmål.erBarnetFødt.required' }))]}\n            >\n                <Radio value={true}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.ja\" />\n                </Radio>\n                <Radio value={false}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.nei\" />\n                </Radio>\n            </RadioGroupPanel>\n            {erBarnetFødt && (\n                <Datepicker\n                    name=\"fødselsdatoer.0\"\n                    label={<FormattedMessage id=\"søknad.fødselsdato\" />}\n                    minDate={dayjs().subtract(6, 'month').toDate()}\n                    maxDate={dayjs().toDate()}\n                    validate={[\n                        isRequired(\n                            intl.formatMessage({ id: 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåOppgi' }),\n                        ),\n                        isValidDate(intl.formatMessage({ id: 'invalidFormatErrorKey.fødselsdato' })),\n                        isAfterToday(\n                            intl.formatMessage({ id: 'valideringsfeil.omBarnet.fodselsdato.måVæreIdagEllerTidligere' }),\n                        ),\n                        (dato) => {\n                            if (sisteDatoBarnetKanVæreFødt(dato)) {\n                                return intl.formatMessage({\n                                    id: 'valideringsfeil.omBarnet.fodselsdato.ikkeMerEnn6MånederTilbake',\n                                });\n                            }\n                            return undefined;\n                        },\n                    ]}\n                />\n            )}\n            {!erBarnetFødt && (\n                <Datepicker\n                    name=\"termindato\"\n                    label={<FormattedMessage id=\"søknad.termindato\" />}\n                    minDate={dayjs().subtract(3, 'week').toDate()}\n                    maxDate={dayjs().add(18, 'weeks').add(3, 'days').toDate()}\n                    validate={[\n                        isRequired(intl.formatMessage({ id: 'valideringsfeil.omBarnet.termindato.duMåOppgi' })),\n                        isValidDate(intl.formatMessage({ id: 'invalidFormatErrorKey.termindato' })),\n                        (dato) => {\n                            if (!erMindreEnn3UkerSiden(dato)) {\n                                return intl.formatMessage({\n                                    id: 'valideringsfeil.omBarnet.termindato.termindatoKanIkkeVære3UkerFraIdag',\n                                });\n                            }\n                            if (sisteMuligeTermindato(dato)) {\n                                return intl.formatMessage({ id: 'valideringsfeil.omBarnet.termindato.duMåVæreIUke22' });\n                            }\n                            return undefined;\n                        },\n                    ]}\n                />\n            )}\n\n            <RadioGroupPanel\n                name=\"antallBarn\"\n                label={\n                    <FormattedMessage\n                        id={erBarnetFødt ? 'omBarnet.text.antallBarn.født' : 'omBarnet.text.antallBarn.termin'}\n                    />\n                }\n                validate={[\n                    isRequired(\n                        intl.formatMessage({\n                            id: erBarnetFødt\n                                ? 'omBarnet.text.antallBarn.født.required'\n                                : 'omBarnet.text.antallBarn.venter.required',\n                        }),\n                    ),\n                ]}\n            >\n                <Radio value={1}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.ettbarn\" />\n                </Radio>\n                <Radio value={2}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.tvillinger\" />\n                </Radio>\n                <Radio value={3}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.flere\" />\n                </Radio>\n            </RadioGroupPanel>\n            {antallBarn >= 3 && (\n                <Select\n                    name=\"antallBarnDropDown\"\n                    label={\n                        <FormattedMessage\n                            id={erBarnetFødt ? 'omBarnet.text.antallBarn.født' : 'omBarnet.text.antallBarn.termin'}\n                        />\n                    }\n                    validate={[\n                        isRequired(\n                            intl.formatMessage({\n                                id: erBarnetFødt\n                                    ? 'omBarnet.text.antallBarn.født.required'\n                                    : 'omBarnet.text.antallBarn.venter.required',\n                            }),\n                        ),\n                    ]}\n                >\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </Select>\n            )}\n        </>\n    );\n};\n\nexport default FødselPanel;\n","import { useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\n\nimport Datepicker from 'fpcommon/form/Datepicker';\nimport { validateAdopsjonFødselDate } from 'fpcommon/validering/valideringsregler';\nimport { VStack } from '@navikt/ds-react';\n\nexport type FormValues = {\n    fødselsdatoer?: Array<{\n        dato?: string;\n    }>;\n};\n\ninterface Props {\n    antallBarn?: number;\n    antallBarnDropDown?: string;\n    adopsjonsdato?: string;\n}\n\nconst AdopsjonFodselFieldArray: React.FunctionComponent<Props> = ({\n    adopsjonsdato,\n    antallBarn,\n    antallBarnDropDown,\n}) => {\n    const intl = useIntl();\n\n    const { control } = useFormContext<FormValues>();\n    const { fields, remove, append } = useFieldArray({\n        control,\n        name: 'fødselsdatoer',\n    });\n\n    useEffect(() => {\n        if (!antallBarn || (antallBarn === 3 && !antallBarnDropDown)) {\n            return;\n        }\n        const antall = antallBarn < 3 || !antallBarnDropDown ? antallBarn : Number.parseInt(antallBarnDropDown, 10);\n        const diff = fields.length - antall;\n        if (diff > 0) {\n            [...new Array(diff)].forEach((_unused, index) => {\n                remove(fields.length - index - 1);\n            });\n        }\n        if (diff < 0) {\n            [...new Array(antall - fields.length)].forEach(() => {\n                append({ dato: undefined });\n            });\n        }\n    }, [antallBarn, antallBarnDropDown]);\n\n    return (\n        <VStack gap=\"10\">\n            {fields.map((field, index) => (\n                <Datepicker\n                    key={field.id}\n                    name={`fødselsdatoer.${index}.dato`}\n                    minDate={dayjs().subtract(15, 'year').toDate()}\n                    maxDate={dayjs().toDate()}\n                    label={\n                        <FormattedMessage\n                            id={\n                                fields.length === 1\n                                    ? 'søknad.fødselsdato'\n                                    : `omBarnet.adopsjon.spørsmål.fødselsdato.${index + 1}`\n                            }\n                        />\n                    }\n                    validate={[(fødselsdato) => validateAdopsjonFødselDate(fødselsdato, adopsjonsdato, intl)]}\n                />\n            ))}\n        </VStack>\n    );\n};\n\nexport default AdopsjonFodselFieldArray;\n","import { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\nimport { Radio } from '@navikt/ds-react';\nimport { Kjønn, hasValue, sisteMuligeDatoForOvertaOmsorg } from '@navikt/fp-common';\n\nimport AdopsjonFodselFieldArray from './AdopsjonFodselFieldArray';\nimport RadioGroupPanel from 'fpcommon/form/RadioGroupPanel';\nimport Datepicker from 'fpcommon/form/Datepicker';\nimport Select from 'fpcommon/form/Select';\nimport { isRequired, isValidFormattedDateString } from 'fpcommon/validering/valideringsregler';\nimport { Adopsjon } from 'types/OmBarnet';\n\nexport type FormValues = {\n    antallBarnDropDown?: string;\n} & Adopsjon;\n\nconst validateEktefellensBarnAdopsjonDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intl.formatMessage({ id: 'valideringsfeil.omBarnet.adopsjonDato.ektefellensBarn.duMåOppgi' });\n    }\n\n    if (!isValidFormattedDateString(dato)) {\n        return intl.formatMessage({ id: 'invalidFormatErrorKey.adopsjonsdato' });\n    }\n\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\n        return intl.formatMessage({ id: 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid' });\n    }\n\n    return undefined;\n};\n\nconst validateOvertaOmsorgAdopsjonDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intl.formatMessage({ id: 'valideringsfeil.omBarnet.adopsjonDato.overtaOmsorg.duMåOppgi' });\n    }\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\n        return intl.formatMessage({ id: 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid' });\n    }\n    return undefined;\n};\n\ninterface Props {\n    kjønn: Kjønn;\n}\n\nconst AdopsjonPanel: React.FunctionComponent<Props> = ({ kjønn }) => {\n    const intl = useIntl();\n    const { watch } = useFormContext<FormValues>();\n\n    const { adopsjonAvEktefellesBarn, adopsjonsdato, antallBarn, antallBarnDropDown } = watch();\n\n    return (\n        <>\n            <RadioGroupPanel\n                name=\"adopsjonAvEktefellesBarn\"\n                label={<FormattedMessage id=\"omBarnet.adopsjon.spørsmål.stebarnsadopsjon\" />}\n                validate={[isRequired(intl.formatMessage({ id: 'omBarnet.adopsjon.spørsmål.required' }))]}\n            >\n                <Radio value={true}>\n                    <FormattedMessage id=\"omBarnet.adopsjon.text.ja\" />\n                </Radio>\n                <Radio value={false}>\n                    <FormattedMessage id=\"omBarnet.adopsjon.text.nei\" />\n                </Radio>\n            </RadioGroupPanel>\n            <Datepicker\n                name=\"adopsjonsdato\"\n                label={\n                    <FormattedMessage\n                        id={\n                            adopsjonAvEktefellesBarn\n                                ? 'omBarnet.adopsjon.spørsmål.stebarnsadopsjondato'\n                                : 'omBarnet.adopsjon.spørsmål.overtaomsorgdato'\n                        }\n                    />\n                }\n                minDate={dayjs().subtract(6, 'month').toDate()}\n                validate={[\n                    adopsjonAvEktefellesBarn\n                        ? (value) => validateEktefellensBarnAdopsjonDate(value, intl)\n                        : (value) => validateOvertaOmsorgAdopsjonDate(value, intl),\n                ]}\n            />\n            <RadioGroupPanel\n                name=\"antallBarn\"\n                label={<FormattedMessage id=\"omBarnet.adopsjon.spørsmål.antallBarnAdoptert\" />}\n                description={<FormattedMessage id=\"omBarnet.adopsjon.spørsmål.antallBarnAdoptert.beskrivelse\" />}\n                validate={[isRequired(intl.formatMessage({ id: 'omBarnet.adopsjon.antallbarn.required' }))]}\n            >\n                <Radio value={1}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.ettbarn\" />\n                </Radio>\n                <Radio value={2}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.toBarn\" />\n                </Radio>\n                <Radio value={3}>\n                    <FormattedMessage id=\"omBarnet.radiobutton.flere\" />\n                </Radio>\n            </RadioGroupPanel>\n            {antallBarn && antallBarn >= 3 && (\n                <Select\n                    name=\"antallBarnDropDown\"\n                    label={<FormattedMessage id=\"omBarnet.text.antallBarn.omsorgsovertakelse\" />}\n                    validate={[isRequired(intl.formatMessage({ id: 'omBarnet.adopsjon.antallbarndropdown.required' }))]}\n                >\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </Select>\n            )}\n            <AdopsjonFodselFieldArray\n                adopsjonsdato={adopsjonsdato}\n                antallBarn={antallBarn}\n                antallBarnDropDown={antallBarnDropDown}\n            />\n            {kjønn === 'M' && adopsjonAvEktefellesBarn === false && (\n                <RadioGroupPanel\n                    name=\"søkerAdopsjonAlene\"\n                    label={<FormattedMessage id=\"omBarnet.adopsjon.spørsmål.adoptererDuAlene\" />}\n                    validate={[isRequired(intl.formatMessage({ id: 'omBarnet.adopsjon.adoptererDuAlene.required' }))]}\n                >\n                    <Radio value={true}>\n                        <FormattedMessage id=\"omBarnet.adopsjon.text.ja\" />\n                    </Radio>\n                    <Radio value={false}>\n                        <FormattedMessage id=\"omBarnet.adopsjon.text.nei\" />\n                    </Radio>\n                </RadioGroupPanel>\n            )}\n        </>\n    );\n};\n\nexport default AdopsjonPanel;\n","import { useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { Kjønn, Step, useDocumentTitle } from '@navikt/fp-common';\nimport { VStack } from '@navikt/ds-react';\n\nimport StepButtonsHookForm from 'fpcommon/form/StepButtonsHookForm';\nimport { notEmpty } from 'fpcommon/validering/valideringUtil';\nimport Form from 'fpcommon/form/Form';\nimport { Søkersituasjon, SøkersituasjonEnum } from 'types/Søkersituasjon';\nimport { EsDataType, useEsStateData, useEsStateSaveFn } from 'appData/EsDataContext';\nimport useEsNavigator from 'appData/useEsNavigator';\nimport useStepData from 'appData/useStepData';\nimport ErrorSummaryHookForm from 'fpcommon/form/ErrorSummaryHookForm';\nimport { Path } from 'appData/paths';\nimport { omitOne } from 'fpcommon/util/objectUtils';\nimport FødselPanel, { FormValues as FødtFormValues } from './FødselPanel';\nimport AdopsjonPanel, { FormValues as AdopsjonFormValues } from './AdopsjonPanel';\n\ntype FormValues = FødtFormValues & AdopsjonFormValues;\n\nconst utledNesteSteg = (formValues: FormValues, søkersituasjon: Søkersituasjon) => {\n    if (søkersituasjon.situasjon === SøkersituasjonEnum.ADOPSJON) {\n        return Path.ADOPSJONSBEKREFTELSE;\n    }\n    if (formValues.erBarnetFødt === false) {\n        return Path.TERMINBEKREFTELSE;\n    }\n    return Path.UTENLANDSOPPHOLD;\n};\n\nexport interface Props {\n    kjønn: Kjønn;\n}\n\nconst OmBarnetSteg: React.FunctionComponent<Props> = ({ kjønn }) => {\n    const intl = useIntl();\n\n    useDocumentTitle(intl.formatMessage({ id: 'OmBarnetSteg.OmBarnet' }));\n\n    const stepData = useStepData();\n    const navigator = useEsNavigator();\n    const omBarnet = useEsStateData(EsDataType.OM_BARNET);\n    const lagreOmBarnet = useEsStateSaveFn(EsDataType.OM_BARNET);\n    const lagreDokumentasjon = useEsStateSaveFn(EsDataType.DOKUMENTASJON);\n    const søkersituasjon = notEmpty(useEsStateData(EsDataType.SØKERSITUASJON));\n\n    const lagre = useCallback((formValues: FormValues) => {\n        const { antallBarnDropDown } = formValues;\n        lagreOmBarnet({\n            ...omitOne(formValues, 'antallBarnDropDown'),\n            antallBarn: antallBarnDropDown ? Number.parseInt(antallBarnDropDown, 10) : formValues.antallBarn,\n        });\n        if (formValues.erBarnetFødt === true) {\n            lagreDokumentasjon(undefined);\n        }\n        navigator.goToNextStep(utledNesteSteg(formValues, søkersituasjon));\n    }, []);\n\n    const formMethods = useForm<FormValues>({\n        defaultValues: omBarnet,\n    });\n\n    return (\n        <Step\n            bannerTitle={intl.formatMessage({ id: 'Søknad.Pageheading' })}\n            pageTitle={intl.formatMessage({ id: 'OmBarnetSteg.OmBarnet' })}\n            onCancel={navigator.avbrytSøknad}\n            steps={stepData.stepConfig}\n            activeStepId={stepData.activeStepId}\n            useNoTempSavingText\n        >\n            <Form formMethods={formMethods} onSubmit={lagre}>\n                <VStack gap=\"10\">\n                    <ErrorSummaryHookForm />\n                    {søkersituasjon?.situasjon === SøkersituasjonEnum.ADOPSJON && <AdopsjonPanel kjønn={kjønn} />}\n                    {søkersituasjon?.situasjon === SøkersituasjonEnum.FØDSEL && <FødselPanel />}\n                    <StepButtonsHookForm<FormValues>\n                        goToPreviousStep={navigator.goToPreviousDefaultStep}\n                        saveDataOnPreviousClick={lagreOmBarnet}\n                    />\n                </VStack>\n            </Form>\n        </Step>\n    );\n};\n\nexport default OmBarnetSteg;\n"],"names":["omitOne","object","keyToOmit","o","FødselPanel","intl","useIntl","watch","useFormContext","erBarnetFødt","antallBarn","jsxs","Fragment","RadioGroupPanel","jsx","FormattedMessage","isRequired","Radio","Datepicker","dayjs","isValidDate","isAfterToday","dato","sisteDatoBarnetKanVæreFødt","erMindreEnn3UkerSiden","sisteMuligeTermindato","Select","AdopsjonFodselFieldArray","adopsjonsdato","antallBarnDropDown","control","fields","remove","append","useFieldArray","useEffect","antall","diff","_unused","index","VStack","field","fødselsdato","validateAdopsjonFødselDate","validateEktefellensBarnAdopsjonDate","hasValue","isValidFormattedDateString","sisteMuligeDatoForOvertaOmsorg","validateOvertaOmsorgAdopsjonDate","AdopsjonPanel","kjønn","adopsjonAvEktefellesBarn","value","utledNesteSteg","formValues","søkersituasjon","SøkersituasjonEnum","Path","OmBarnetSteg","useDocumentTitle","stepData","useStepData","navigator","useEsNavigator","omBarnet","useEsStateData","EsDataType","lagreOmBarnet","useEsStateSaveFn","lagreDokumentasjon","notEmpty","lagre","useCallback","formMethods","useForm","Step","Form","ErrorSummaryHookForm","StepButtonsHookForm","OmBarnetSteg$1"],"mappings":"moBAAa,MAAAA,EAAU,CAAuBC,EAAWC,IAA6B,CAC5E,MAAAC,EAAsC,CAAE,GAAGF,GACjD,cAAOE,EAAED,CAAS,EACXC,CACX,ECYAC,EAAA,IAAA,CACI,MAAAC,EAAAC,IACA,CAAA,MAAAC,GAAAC,IAEAC,EAAAF,EAAA,cAAA,EACAG,EAAAH,EAAA,YAAA,EAEA,OAAAI,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEQD,EAAA,KAAAE,EAAC,CAAA,KAAA,eACQ,MAAAC,EAAAA,IAAAC,EAAA,CAAA,GAAA,gCAAA,CAAA,EACwD,SAAA,CAAAC,EAAAX,EAAA,cAAA,CAAA,GAAA,yCAAA,CAAA,CAAA,CAAA,EAC+B,SAAA,CAE5FS,EAAAA,IAAAG,EAAA,CAAA,MAAA,GAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,yBAAA,CAAA,CAAA,CAAA,EAEAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,GAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,0BAAA,CAAA,CAAA,CAAA,CAGA,CAAA,CAAA,EACJN,GAAAK,EAAA,IAEII,EAAC,CAAA,KAAA,kBACQ,MAAAJ,EAAAA,IAAAC,EAAA,CAAA,GAAA,oBAAA,CAAA,EAC4C,QAAAI,EAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EACJ,QAAAA,EAAA,EAAA,OAAA,EACrB,SAAA,CACdH,EACNX,EAAA,cAAA,CAAA,GAAA,0DAAA,CAAA,CACyF,EACzFe,EAAAf,EAAA,cAAA,CAAA,GAAA,mCAAA,CAAA,CAAA,EAC2EgB,EAC3EhB,EAAA,cAAA,CAAA,GAAA,+DAAA,CAAA,CAC8F,EAC9FiB,GAAA,CAEI,GAAAC,EAAAD,CAAA,EACI,OAAAjB,EAAA,cAAA,CAA0B,GAAA,gEAClB,CAAA,CAGL,CACX,CACJ,CAAA,EACJ,CAAAI,GAAAK,EAAA,IAGAI,EAAC,CAAA,KAAA,aACQ,MAAAJ,EAAAA,IAAAC,EAAA,CAAA,GAAA,mBAAA,CAAA,EAC2C,QAAAI,EAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EACJ,QAAAA,EAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EACY,SAAA,CAC9CH,EAAAX,EAAA,cAAA,CAAA,GAAA,+CAAA,CAAA,CAAA,EACgFe,EAAAf,EAAA,cAAA,CAAA,GAAA,kCAAA,CAAA,CAAA,EACZiB,GAAA,CAEtE,GAAA,CAAAE,EAAAF,CAAA,EACI,OAAAjB,EAAA,cAAA,CAA0B,GAAA,uEAClB,CAAA,EAGZ,GAAAoB,EAAAH,CAAA,EACI,OAAAjB,EAAA,cAAA,CAAA,GAAA,oDAAA,CAAA,CAEG,CACX,CACJ,CAAA,EACJM,EAAA,KAGJE,EAAC,CAAA,KAAA,aACQ,MAAAC,EAAA,IAEDC,EAAC,CAAA,GAAAN,EAAA,gCAAA,iCACwD,CAAA,EACzD,SAAA,CAEMO,EACNX,EAAA,cAAA,CACuB,GAAAI,EAAA,yCAAA,0CAGT,CAAA,CACT,CACL,EACJ,SAAA,CAEAK,EAAAA,IAAAG,EAAA,CAAA,MAAA,EAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,8BAAA,CAAA,CAAA,CAAA,EAEAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,EAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,iCAAA,CAAA,CAAA,CAAA,EAGAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,EAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,4BAAA,CAAA,CAAA,CAAA,CAGA,CAAA,CAAA,EACJL,GAAA,GAAAC,EAAA,KAEIe,EAAC,CAAA,KAAA,qBACQ,MAAAZ,EAAA,IAEDC,EAAC,CAAA,GAAAN,EAAA,gCAAA,iCACwD,CAAA,EACzD,SAAA,CAEMO,EACNX,EAAA,cAAA,CACuB,GAAAI,EAAA,yCAAA,0CAGT,CAAA,CACT,CACL,EACJ,SAAA,CAEAK,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EAAmBA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,CACA,CAAA,CAAA,CACvB,CAAA,CAAA,CAIhB,4HCzHA,MAAAa,EAAA,CAAA,CAAkE,cAAAC,EAC9D,WAAAlB,EACA,mBAAAmB,CAEJ,IAAA,CACI,MAAAxB,EAAAC,IAEA,CAAA,QAAAwB,GAAAtB,IACA,CAAA,OAAAuB,EAAA,OAAAC,EAAA,OAAAC,CAAA,EAAAC,EAAA,CAAiD,QAAAJ,EAC7C,KAAA,eACM,CAAA,EAGVK,OAAAA,EAAAA,UAAA,IAAA,CACI,GAAA,CAAAzB,GAAAA,IAAA,GAAA,CAAAmB,EACI,OAEJ,MAAAO,EAAA1B,EAAA,GAAA,CAAAmB,EAAAnB,EAAA,OAAA,SAAAmB,EAAA,EAAA,EACAQ,EAAAN,EAAA,OAAAK,EACAC,EAAA,GACI,CAAA,GAAA,IAAA,MAAAA,CAAA,CAAA,EAAA,QAAA,CAAAC,EAAAC,IAAA,CACIP,EAAAD,EAAA,OAAAQ,EAAA,CAAA,CAAgC,CAAA,EAGxCF,EAAA,GACI,CAAA,GAAA,IAAA,MAAAD,EAAAL,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,CACIE,EAAA,CAAA,KAAA,MAAA,CAAA,CAA0B,CAAA,CAElC,EAAA,CAAAvB,EAAAmB,CAAA,CAAA,EAGJf,MAAA0B,EAAA,CAAA,IAAA,KAAA,SAAAT,EAAA,IAAA,CAAAU,EAAAF,IAAAzB,EAAA,IAGYI,EAAC,CAAA,KAAA,iBAAAqB,CAAA,QAE+B,QAAApB,EAAA,EAAA,SAAA,GAAA,MAAA,EAAA,OAAA,EACiB,QAAAA,EAAA,EAAA,OAAA,EACrB,MAAAL,EAAA,IAEpBC,EAAC,CAAA,GAAAgB,EAAA,SAAA,EAAA,qBAAA,0CAAAQ,EAAA,CAAA,EAIgE,CAAA,EAEjE,SAAA,CAAAG,GAAAC,EAAAD,EAAAd,EAAAvB,CAAA,CAAA,CAEoF,EAAAoC,EAAA,EAb7E,CAAA,CAAA,CAAA,CAkB/B,8bCzDA,MAAAG,EAAA,CAAAtB,EAAAjB,IAAA,CACI,GAAA,CAAAwC,EAAAvB,CAAA,EACI,OAAAjB,EAAA,cAAA,CAAA,GAAA,iEAAA,CAAA,EAGJ,GAAA,CAAAyC,EAAAxB,CAAA,EACI,OAAAjB,EAAA,cAAA,CAAA,GAAA,qCAAA,CAAA,EAGJ,GAAA0C,EAAAzB,CAAA,EACI,OAAAjB,EAAA,cAAA,CAAA,GAAA,wDAAA,CAAA,CAIR,EAEA2C,GAAA,CAAA1B,EAAAjB,IAAA,CACI,GAAA,CAAAwC,EAAAvB,CAAA,EACI,OAAAjB,EAAA,cAAA,CAAA,GAAA,8DAAA,CAAA,EAEJ,GAAA0C,EAAAzB,CAAA,EACI,OAAAjB,EAAA,cAAA,CAAA,GAAA,wDAAA,CAAA,CAGR,EAMA4C,EAAA,CAAA,CAAA,MAAAC,KAAA,CACI,MAAA7C,EAAAC,IACA,CAAA,MAAAC,GAAAC,IAEA,CAAA,yBAAA2C,EAAA,cAAAvB,EAAA,WAAAlB,EAAA,mBAAAmB,CAAA,EAAAtB,IAEA,OAAAI,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEQD,EAAA,KAAAE,EAAC,CAAA,KAAA,2BACQ,MAAAC,EAAAA,IAAAC,EAAA,CAAA,GAAA,6CAAA,CAAA,EACqE,SAAA,CAAAC,EAAAX,EAAA,cAAA,CAAA,GAAA,qCAAA,CAAA,CAAA,CAAA,EACc,SAAA,CAExFS,EAAAA,IAAAG,EAAA,CAAA,MAAA,GAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,2BAAA,CAAA,CAAA,CAAA,EAEAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,GAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,4BAAA,CAAA,CAAA,CAAA,CAGA,CAAA,CAAA,EACJD,EAAA,IACAI,EAAC,CAAA,KAAA,gBACQ,MAAAJ,EAAA,IAEDC,EAAC,CAAA,GAAAoC,EAAA,kDAAA,6CAIa,CAAA,EAEd,QAAAhC,EAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAEyC,SAAA,CACnCgC,EAAAC,GAAAR,EAAAQ,EAAA/C,CAAA,EAAA+C,GAAAJ,GAAAI,EAAA/C,CAAA,CAGuD,CACjE,CAAA,EACJM,EAAA,KACAE,EAAC,CAAA,KAAA,aACQ,MAAAC,EAAAA,IAAAC,EAAA,CAAA,GAAA,+CAAA,CAAA,EACuE,YAAAD,EAAAA,IAAAC,EAAA,CAAA,GAAA,2DAAA,CAAA,EACkB,SAAA,CAAAC,EAAAX,EAAA,cAAA,CAAA,GAAA,uCAAA,CAAA,CAAA,CAAA,EACJ,SAAA,CAE1FS,EAAAA,IAAAG,EAAA,CAAA,MAAA,EAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,8BAAA,CAAA,CAAA,CAAA,EAEAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,EAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,6BAAA,CAAA,CAAA,CAAA,EAGAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,EAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,4BAAA,CAAA,CAAA,CAAA,CAGA,CAAA,CAAA,EACJL,GAAAA,GAAA,GAAAC,EAAA,KAEIe,EAAC,CAAA,KAAA,qBACQ,MAAAZ,EAAAA,IAAAC,EAAA,CAAA,GAAA,6CAAA,CAAA,EACqE,SAAA,CAAAC,EAAAX,EAAA,cAAA,CAAA,GAAA,+CAAA,CAAA,CAAA,CAAA,EACwB,SAAA,CAElGS,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EAAmBA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,EACAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,IAAA,CACA,CAAA,CAAA,EACvBA,EAAA,IAEJa,EAAC,CAAA,cAAAC,EACG,WAAAlB,EACA,mBAAAmB,CACA,CAAA,EACJqB,IAAA,KAAAC,IAAA,IAAAxC,EAAA,KAEIE,EAAC,CAAA,KAAA,qBACQ,MAAAC,EAAAA,IAAAC,EAAA,CAAA,GAAA,6CAAA,CAAA,EACqE,SAAA,CAAAC,EAAAX,EAAA,cAAA,CAAA,GAAA,6CAAA,CAAA,CAAA,CAAA,EACsB,SAAA,CAEhGS,EAAAA,IAAAG,EAAA,CAAA,MAAA,GAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,2BAAA,CAAA,CAAA,CAAA,EAEAD,EAAAA,IAAAG,EAAA,CAAA,MAAA,GAAA,SAAAH,MAAAC,EAAA,CAAA,GAAA,4BAAA,CAAA,CAAA,CAAA,CAGA,CAAA,CAAA,CACJ,CAAA,CAAA,CAIhB,wOCpHA,MAAAsC,GAAA,CAAAC,EAAAC,IACIA,EAAA,YAAAC,EAAA,SACIC,EAAA,qBAEJH,EAAA,eAAA,GACIG,EAAA,kBAEJA,EAAA,iBAOJC,EAAA,CAAA,CAAA,MAAAR,KAAA,CACI,MAAA7C,EAAAC,IAEAqD,EAAAtD,EAAA,cAAA,CAAA,GAAA,uBAAA,CAAA,CAAA,EAEA,MAAAuD,EAAAC,IACAC,EAAAC,IACAC,EAAAC,EAAAC,EAAA,SAAA,EACAC,EAAAC,EAAAF,EAAA,SAAA,EACAG,EAAAD,EAAAF,EAAA,aAAA,EACAX,EAAAe,EAAAL,EAAAC,EAAA,cAAA,CAAA,EAEAK,EAAAC,cAAAlB,GAAA,CACI,KAAA,CAAA,mBAAAzB,CAAA,EAAAyB,EACAa,EAAA,CAAc,GAAAnE,EAAAsD,EAAA,oBAAA,EACiC,WAAAzB,EAAA,OAAA,SAAAA,EAAA,EAAA,EAAAyB,EAAA,UAC2C,CAAA,EAE1FA,EAAA,eAAA,IACIe,EAAA,MAAA,EAEJP,EAAA,aAAAT,GAAAC,EAAAC,CAAA,CAAA,CAAiE,EAAA,CAAA,CAAA,EAGrEkB,EAAAC,EAAA,CAAwC,cAAAV,CACrB,CAAA,EAGnB,OAAAlD,EAAA,IACI6D,EAAC,CAAA,YAAAtE,EAAA,cAAA,CAAA,GAAA,oBAAA,CAAA,EAC+D,UAAAA,EAAA,cAAA,CAAA,GAAA,uBAAA,CAAA,EACC,SAAAyD,EAAA,aACzC,MAAAF,EAAA,WACJ,aAAAA,EAAA,aACO,oBAAA,GACJ,SAAA9C,EAAAA,IAAA8D,EAAA,CAAA,YAAAH,EAAA,SAAAF,EAAA,SAAA5D,EAAA,KAAA6B,EAAA,CAAA,IAAA,KAAA,SAAA,CAIX1B,EAAA,IAAA+D,EAAA,EAAA,GAAsBtB,GAAA,YAAAA,EAAA,aAAAC,EAAA,UAAA1C,EAAAA,IAAAmC,EAAA,CAAA,MAAAC,EAAA,GACqEK,GAAA,YAAAA,EAAA,aAAAC,EAAA,QAAA1C,EAAA,IAAAV,EAAA,EAAA,EAClBU,EAAA,IACzEgE,EAAC,CAAA,iBAAAhB,EAAA,wBAC+B,wBAAAK,CACH,CAAA,CAC7B,CAAA,CAAA,CAAA,CAAA,CAER,CAAA,CAGZ,EAEAY,GAAArB"}