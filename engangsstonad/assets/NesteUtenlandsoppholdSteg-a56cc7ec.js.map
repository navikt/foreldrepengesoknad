{"version":3,"file":"NesteUtenlandsoppholdSteg-a56cc7ec.js","sources":["../../src/sider/steg/utenlandsoppholdNeste/NesteUtenlandsoppholdPanel.tsx","../../src/sider/steg/utenlandsoppholdNeste/NesteUtenlandsoppholdSteg.tsx"],"sourcesContent":["import { FormattedMessage, IntlShape, useIntl } from 'react-intl';\nimport { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { date1YearFromNow, dateRangesCollide, dateToday } from '@navikt/fp-common';\n\nimport { createCountryOptions } from 'fpcommon/util/countryUtils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport {\n    isRequired,\n    validateDatesNotEqual,\n    validateFromDate,\n    validateToDate,\n} from 'fpcommon/validering/valideringsregler';\nimport { UtenlandsoppholdPeriode } from 'types/Utenlandsopphold';\n\nconst TIDENES_ENDE = dayjs('9999-31-12').toDate();\n\nconst validerPeriodeOverlapp = (\n    intl: IntlShape,\n    alleAndrePerioder: UtenlandsoppholdPeriode[],\n    fom: string,\n    tom?: string,\n): string | null => {\n    const dateRanges = alleAndrePerioder.map((u) => ({\n        from: dayjs(u.fom).toDate(),\n        to: u.tom ? dayjs(u.tom).toDate() : TIDENES_ENDE,\n    }));\n\n    const allDateRanges = dateRanges.concat({\n        from: dayjs(fom).toDate(),\n        to: tom ? dayjs(tom).toDate() : TIDENES_ENDE,\n    });\n\n    if (dateRangesCollide(allDateRanges)) {\n        return intl.formatMessage({\n            id: 'valideringsfeil.utenlandsopphold.overlapp',\n        });\n    }\n    return null;\n};\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst NesteUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const intl = useIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdNeste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdNeste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdNeste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdNeste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(dateToday).toDate();\n    const maxDateFom = tom ? dayjs(tom).toDate() : dayjs(date1YearFromNow).toDate();\n\n    const minDateTom = dayjs(fom || dateToday).toDate();\n    const maxDateTom = dayjs(date1YearFromNow).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdNeste12Mnd.${index}.landkode`}\n                label={\n                    <FormattedMessage id={'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandSkalDuBoI'} />\n                }\n                validate={[\n                    isRequired(\n                        intl.formatMessage({\n                            id: 'valideringsfeil.leggTilUtenlandsopphold.landDuSkalBoIPåkreved',\n                        }),\n                    ),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"utenlandsopphold.leggTilUtenlandsopphold.fraogmed\" />}\n                minDate={dayjs(dateToday).toDate()}\n                maxDate={tom ? dayjs(tom).toDate() : dayjs(date1YearFromNow).toDate()}\n                validate={[\n                    isRequired(\n                        intl.formatMessage({\n                            id: 'valideringsfeil.leggTilUtenlandsopphold.landFomDuSkalBoIPåkreved',\n                        }),\n                    ),\n                    validateDatesNotEqual(\n                        intl.formatMessage({\n                            id: 'valideringsfeil.fomErLikTom',\n                        }),\n                        tom,\n                    ),\n                    (fomValue) => {\n                        return validateFromDate(\n                            intl,\n                            dayjs(fomValue).toDate(),\n                            minDateFom,\n                            maxDateFom,\n                            dayjs(tom).toDate(),\n                        );\n                    },\n                    (fomValue) => {\n                        return validerPeriodeOverlapp(intl, alleAndreUtenlandsopphold, fomValue, tom);\n                    },\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"utenlandsopphold.leggTilUtenlandsopphold.tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    validateDatesNotEqual(\n                        intl.formatMessage({\n                            id: 'valideringsfeil.tomErLikFom',\n                        }),\n                        fom,\n                    ),\n                    (tomValue) => {\n                        const tom = tomValue || TIDENES_ENDE;\n                        return validateToDate(\n                            intl,\n                            dayjs(tom).toDate(),\n                            dayjs(fom || dateToday).toDate(),\n                            dayjs(date1YearFromNow).toDate(),\n                            dayjs(fom).toDate(),\n                        );\n                    },\n                    (tomValue) => {\n                        return validerPeriodeOverlapp(intl, alleAndreUtenlandsopphold, fom, tomValue);\n                    },\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"utenlandsopphold.knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default NesteUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\n\nimport { Form, ErrorSummaryHookForm, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport NesteUtenlandsoppholdPanel from './NesteUtenlandsoppholdPanel';\nimport useEsNavigator from 'appData/useEsNavigator';\nimport { EsDataType, useEsStateData, useEsStateSaveFn } from 'appData/EsDataContext';\nimport { UtenlandsoppholdNeste, UtenlandsoppholdPeriode } from 'types/Utenlandsopphold';\nimport useStepData from 'appData/useStepData';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdNeste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdNeste;\n\nconst NesteUtenlandsoppholdSteg: React.FunctionComponent = () => {\n    const intl = useIntl();\n\n    const stepData = useStepData();\n    const navigator = useEsNavigator();\n    const nesteUtenlandsopphold = useEsStateData(EsDataType.UTENLANDSOPPHOLD_NESTE);\n    const lagreNesteUtenlandsopphold = useEsStateSaveFn(EsDataType.UTENLANDSOPPHOLD_NESTE);\n\n    const defaultValues = useMemo(() => nesteUtenlandsopphold || DEFAULT_FORM_VALUES, []);\n    const formMethods = useForm<UtenlandsoppholdNeste>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdNeste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    const lagre = useCallback((formValues: UtenlandsoppholdNeste) => {\n        lagreNesteUtenlandsopphold(formValues);\n        navigator.goToNextDefaultStep();\n    }, []);\n\n    return (\n        <Step\n            bannerTitle={intl.formatMessage({ id: 'Søknad.Pageheading' })}\n            pageTitle={intl.formatMessage({ id: 'søknad.utenlandsopphold.fremtidig' })}\n            onCancel={navigator.avbrytSøknad}\n            steps={stepData.stepConfig}\n            activeStepId={stepData.activeStepId}\n            useNoTempSavingText\n        >\n            <Form formMethods={formMethods} onSubmit={lagre}>\n                <VStack gap=\"10\">\n                    <ErrorSummaryHookForm />\n                    <VStack gap=\"10\" align=\"start\">\n                        {fields.map((field, index) => (\n                            <Fragment key={field.id}>\n                                <NesteUtenlandsoppholdPanel index={index} fjernOpphold={fjernOpphold} />\n                                {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                            </Fragment>\n                        ))}\n                        <Button\n                            type=\"button\"\n                            variant=\"secondary\"\n                            size=\"small\"\n                            icon={<PlusIcon aria-hidden />}\n                            onClick={leggTilOpphold}\n                        >\n                            <FormattedMessage id=\"utenlandsopphold.knapp.leggTilLand\" />\n                        </Button>\n                    </VStack>\n                    <StepButtonsHookForm<UtenlandsoppholdNeste>\n                        goToPreviousStep={navigator.goToPreviousDefaultStep}\n                        saveDataOnPreviousClick={lagreNesteUtenlandsopphold}\n                    />\n                </VStack>\n            </Form>\n        </Step>\n    );\n};\n\nexport default NesteUtenlandsoppholdSteg;\n"],"names":["TIDENES_ENDE","dayjs","validerPeriodeOverlapp","intl","alleAndrePerioder","fom","tom","allDateRanges","u","dateRangesCollide","NesteUtenlandsoppholdPanel","index","fjernOpphold","useIntl","watch","trigger","isSubmitted","useFormContext","alleAndreUtenlandsopphold","_u","i","minDateFom","dateToday","maxDateFom","date1YearFromNow","minDateTom","maxDateTom","jsxs","VStack","jsx","Select","FormattedMessage","isRequired","createCountryOptions","o","Datepicker","validateDatesNotEqual","fomValue","validateFromDate","tomValue","validateToDate","Button","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","NesteUtenlandsoppholdSteg","stepData","useStepData","navigator","useEsNavigator","nesteUtenlandsopphold","useEsStateData","EsDataType","lagreNesteUtenlandsopphold","useEsStateSaveFn","defaultValues","useMemo","formMethods","useForm","fields","append","remove","useFieldArray","leggTilOpphold","useCallback","lagre","formValues","Step","Form","ErrorSummaryHookForm","field","Fragment","PlusIcon","StepButtonsHookForm","NesteUtenlandsoppholdSteg$1"],"mappings":"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"}