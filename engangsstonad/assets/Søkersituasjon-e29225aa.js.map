{"version":3,"file":"Søkersituasjon-e29225aa.js","sources":["../../src/app/steps/sokersituasjon/søkersituasjonUtils.ts","../../src/app/steps/sokersituasjon/søkersituasjonQuestionsConfig.ts","../../src/app/steps/sokersituasjon/Søkersituasjon.tsx"],"sourcesContent":["import { SøkersituasjonFormData } from './søkersituasjonFormConfig';\n\nexport const cleanupSøkersituasjon = (formData: SøkersituasjonFormData): SøkersituasjonFormData => {\n    const cleanedData: Partial<SøkersituasjonFormData> = {};\n    cleanedData.situasjon = formData.situasjon;\n\n    return cleanedData as SøkersituasjonFormData;\n};\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { SøkersituasjonFormData, SøkersituasjonFormField } from './søkersituasjonFormConfig';\n\nconst SøkersituasjonFormConfig: QuestionConfig<SøkersituasjonFormData, SøkersituasjonFormField> = {\n    [SøkersituasjonFormField.situasjon]: {\n        isIncluded: () => true,\n        isAnswered: ({ situasjon }) => situasjon !== undefined,\n    },\n};\n\nconst søkersituasjonQuestionsConfig = Questions<SøkersituasjonFormData, SøkersituasjonFormField>(\n    SøkersituasjonFormConfig\n);\n\nexport default søkersituasjonQuestionsConfig;\n","import { bemUtils, Block, intlUtils, Step } from '@navikt/fp-common';\nimport stepConfig from 'app/step-config/stepConfig';\nimport getMessage from 'common/util/i18nUtils';\n\nimport { Button } from '@navikt/ds-react';\nimport { useIntl } from 'react-intl';\nimport actionCreator from 'app/context/action/actionCreator';\nimport {\n    SøkersituasjonFormComponents,\n    SøkersituasjonFormData,\n    SøkersituasjonFormField,\n} from './søkersituasjonFormConfig';\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\n\nimport { cleanupSøkersituasjon } from './søkersituasjonUtils';\nimport { UnansweredQuestionsInfo } from '@navikt/sif-common-formik-ds/lib';\nimport søkersituasjonQuestionsConfig from './søkersituasjonQuestionsConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\n\nconst Søkersituasjon: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const bem = bemUtils('søkersituasjon');\n    const navigate = useNavigate();\n    const { state, dispatch } = useEngangsstønadContext();\n    const søkersituasjonValues = state.søknad.søkersituasjon;\n\n    const onValidSubmit = (values: Partial<SøkersituasjonFormData>) => {\n        dispatch(\n            actionCreator.setSøkersituasjon({\n                situasjon: values.situasjon,\n            })\n        );\n        navigate('/soknad/om-barnet');\n    };\n\n    return (\n        <SøkersituasjonFormComponents.FormikWrapper\n            initialValues={søkersituasjonValues}\n            onSubmit={(values) => onValidSubmit(values)}\n            renderForm={({ values: formValues }) => {\n                const visibility = søkersituasjonQuestionsConfig.getVisbility(formValues);\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\n                return (\n                    <Step\n                        bannerTitle={getMessage(intl, 'søknad.pageheading')}\n                        activeStepId=\"søkersituasjon\"\n                        pageTitle={getMessage(intl, 'søknad.søkersituasjon')}\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\n                        steps={stepConfig}\n                    >\n                        <SøkersituasjonFormComponents.Form\n                            includeButtons={false}\n                            cleanup={() => cleanupSøkersituasjon(formValues)}\n                            noButtonsContentRenderer={\n                                allQuestionsAnswered\n                                    ? undefined\n                                    : () => (\n                                          <UnansweredQuestionsInfo>\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\n                                          </UnansweredQuestionsInfo>\n                                      )\n                            }\n                        >\n                            <div className={bem.block}>\n                                <Block margin=\"xl\">\n                                    <SøkersituasjonFormComponents.RadioGroup\n                                        name={SøkersituasjonFormField.situasjon}\n                                        radios={[\n                                            {\n                                                label: intlUtils(intl, 'søkersituasjon.radiobutton.fødsel'),\n                                                value: 'fødsel',\n                                            },\n                                            {\n                                                label: intlUtils(intl, 'søkersituasjon.radiobutton.adopsjon'),\n                                                value: 'adopsjon',\n                                            },\n                                        ]}\n                                        legend={getMessage(intl, 'søkersituasjon.text.situasjon')}\n                                    />\n                                </Block>\n                                {allQuestionsAnswered && (\n                                    <Block margin=\"xl\" textAlignCenter={true}>\n                                        <Button type=\"submit\">{getMessage(intl, 'søknad.gåVidere')}</Button>\n                                    </Block>\n                                )}\n                            </div>\n                        </SøkersituasjonFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\nexport default Søkersituasjon;\n"],"names":["cleanupSøkersituasjon","formData","cleanedData","SøkersituasjonFormConfig","SøkersituasjonFormField","situasjon","søkersituasjonQuestionsConfig","Questions","Søkersituasjon","intl","useIntl","bem","bemUtils","navigate","useNavigate","state","dispatch","useEngangsstønadContext","søkersituasjonValues","onValidSubmit","values","actionCreator","jsx","SøkersituasjonFormComponents","formValues","allQuestionsAnswered","Step","getMessage","onAvbrytSøknad","stepConfig","UnansweredQuestionsInfo","intlUtils","jsxs","Block","Button","Søkersituasjon$1"],"mappings":"0YAEa,MAAAA,EAAyBC,GAA6D,CAC/F,MAAMC,EAA+C,CAAA,EACrD,OAAAA,EAAY,UAAYD,EAAS,UAE1BC,CACX,ECJMC,EAA4F,CAC9F,CAACC,EAAwB,SAAS,EAAG,CACjC,WAAY,IAAM,GAClB,WAAY,CAAC,CAAE,UAAAC,KAAgBA,IAAc,MACjD,CACJ,EAEMC,EAAgCC,EAClCJ,CACJ,ECQAK,EAAA,IAAA,CACI,MAAAC,EAAAC,IACAC,EAAAC,EAAA,gBAAA,EACAC,EAAAC,IACA,CAAA,MAAAC,EAAA,SAAAC,CAAA,EAAAC,EAAA,EACAC,EAAAH,EAAA,OAAA,eAEAI,EAAAC,GAAA,CACIJ,EAAAK,EAAA,kBAAA,CACoC,UAAAD,EAAA,SACV,CAAA,CACrB,EAELP,EAAA,mBAAA,CAA4B,EAGhC,OAAAS,EACIC,EAAA,cAA8B,CAA7B,cAAAL,EACkB,SAAAE,GAAAD,EAAAC,CAAA,EAC2B,WAAA,CAAA,CAAA,OAAAI,KAAA,CAGtC,MAAAC,EADAnB,EAAA,aAAAkB,CAAA,EACA,0BACA,OAAAF,EACII,EAAC,CAAA,YAAAC,EAAAlB,EAAA,oBAAA,EACqD,aAAA,iBACrC,UAAAkB,EAAAlB,EAAA,uBAAA,EACsC,SAAA,IAAAmB,EAAAZ,EAAAH,CAAA,EACF,MAAAgB,EAC1C,SAAAP,EAEPC,EAAA,KAA8B,CAA7B,eAAA,GACmB,QAAA,IAAAvB,EAAAwB,CAAA,EAC+B,yBAAAC,EAAA,OAAA,IAAAH,EAAAQ,EAAA,CAAA,SAAAC,EAAAtB,EAAA,kCAAA,CAAA,CAAA,EAOjC,SAAAuB,EAAA,MAAA,CAAA,UAAArB,EAAA,MAAA,SAAA,CAKVW,EAAAW,EAAA,CAAA,OAAA,KAAA,SAAAX,EACIC,EAAA,WAA8B,CAA7B,KAAAnB,EAAA,UACiC,OAAA,CACtB,CACJ,MAAA2B,EAAAtB,EAAA,mCAAA,EAC8D,MAAA,QACnD,EACX,CACA,MAAAsB,EAAAtB,EAAA,qCAAA,EACgE,MAAA,UACrD,CACX,EACJ,OAAAkB,EAAAlB,EAAA,+BAAA,CACwD,CAAA,EAAA,EAEhEgB,GAAAH,EAAAW,EAAA,CAAA,OAAA,KAAA,gBAAA,GAAA,SAAAX,EAAAY,EAAA,CAAA,KAAA,SAAA,SAAAP,EAAAlB,EAAA,iBAAA,CAAA,CAAA,EAAA,CAII,EAAA,CAER,CAAA,CACJ,CAAA,CACJ,CAER,CAAA,CAGZ,EACA0B,EAAA3B"}