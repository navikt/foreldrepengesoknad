{"version":3,"file":"dateUtils-f8664f5c.js","sources":["../../../../packages/fp-common/src/common/utils/dateUtils.ts"],"sourcesContent":["import { Tidsperiode, TidsperiodeMedValgfriSluttdato } from './../types/Tidsperiode';\nimport dayjs from 'dayjs';\n\nconst dateFormat = 'DD.MM.YYYY';\nconst dateFormatExtended = 'DD. MMM YYYY';\n\nexport const formatDate = (date: Date | string) => dayjs(date).format(dateFormat);\nexport const formatDateExtended = (date: Date | string) => dayjs(date).format(dateFormatExtended);\n\nexport const formatTidsperiode = (tidsperiode: Tidsperiode) => {\n    return `${formatDate(tidsperiode.fom)} - ${formatDate(tidsperiode.tom)}`;\n};\n\nexport const formatTidsperiodeMedValgfriSluttdato = (tidsperiode: TidsperiodeMedValgfriSluttdato) => {\n    const tomString = tidsperiode.tom ? formatDate(tidsperiode.tom) : 'pågående';\n\n    return `${formatDate(tidsperiode.fom)} - ${tomString}`;\n};\n\nexport const doesTidsperiodeContainDate = (tidsperiode: Tidsperiode, date: string) => {\n    return dayjs(date).isBetween(tidsperiode.fom, tidsperiode.tom, 'day', '[]');\n};\n\nexport const doesTidsperiodeMedValgfriSluttdatoContainDate = (\n    tidsperiode: TidsperiodeMedValgfriSluttdato,\n    date: string\n) => {\n    if (tidsperiode.tom === undefined) {\n        return false;\n    }\n\n    return dayjs(date).isBetween(tidsperiode.fom, tidsperiode.tom, 'day', '[]');\n};\n"],"names":["dateFormat","dateFormatExtended","formatDate","date","dayjs","formatDateExtended"],"mappings":"+CAGA,MAAMA,EAAa,aACbC,EAAqB,eAEdC,EAAcC,GAAwBC,EAAMD,CAAI,EAAE,OAAOH,CAAU,EACnEK,EAAsBF,GAAwBC,EAAMD,CAAI,EAAE,OAAOF,CAAkB"}