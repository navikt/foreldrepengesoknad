{"version":3,"file":"useEsNavigator-196eef3f.js","sources":["../../src/fpcommon/validering/valideringUtil.ts","../../src/appData/EsDataContext.tsx","../../src/appData/useStepData.ts","../../src/appData/useEsNavigator.ts"],"sourcesContent":["export function notEmpty<T>(data: T): NonNullable<T> {\n    if (data === undefined || data === null) {\n        throw Error('Data er ikke oppgitt');\n    }\n    return data;\n}\n","import { createContext, useReducer, FunctionComponent, ReactNode, useContext, useCallback } from 'react';\nimport Dokumentasjon from 'types/Dokumentasjon';\nimport { OmBarnet } from 'types/OmBarnet';\nimport { Søkersituasjon } from 'types/Søkersituasjon';\nimport { Utenlandsopphold, UtenlandsoppholdNeste, UtenlandsoppholdSiste } from 'types/Utenlandsopphold';\n\nexport enum EsDataType {\n    SØKERSITUASJON = 'SØKERSITUASJON',\n    OM_BARNET = 'OM_BARNET',\n    DOKUMENTASJON = 'DOKUMENTASJON',\n    UTENLANDSOPPHOLD = 'UTENLANDSOPPHOLD',\n    UTENLANDSOPPHOLD_NESTE = 'UTENLANDSOPPHOLD_NESTE',\n    UTENLANDSOPPHOLD_SISTE = 'UTENLANDSOPPHOLD_SISTE',\n}\n\nexport type EsDataMap = {\n    [EsDataType.SØKERSITUASJON]?: Søkersituasjon;\n    [EsDataType.OM_BARNET]?: OmBarnet;\n    [EsDataType.DOKUMENTASJON]?: Dokumentasjon;\n    [EsDataType.UTENLANDSOPPHOLD]?: Utenlandsopphold;\n    [EsDataType.UTENLANDSOPPHOLD_NESTE]?: UtenlandsoppholdNeste;\n    [EsDataType.UTENLANDSOPPHOLD_SISTE]?: UtenlandsoppholdSiste;\n};\n\nconst defaultInitialState = {} as EsDataMap;\n\nexport type Action = { type: 'update'; key: EsDataType; data: any } | { type: 'reset' };\ntype Dispatch = (action: Action) => void;\ntype State = EsDataMap;\n\nconst EsStateContext = createContext<State>(defaultInitialState);\nconst EsDispatchContext = createContext<Dispatch | undefined>(undefined);\n\ninterface OwnProps {\n    children: ReactNode;\n    initialState?: EsDataMap;\n    testDispatcher?: (action: Action) => void;\n}\n\nexport const EsDataContext: FunctionComponent<OwnProps> = ({ children, initialState, testDispatcher }): JSX.Element => {\n    const [state, dispatch] = useReducer((oldState: State, action: Action) => {\n        switch (action.type) {\n            case 'update':\n                return {\n                    ...oldState,\n                    [action.key]: action.data,\n                };\n            case 'reset':\n                return {};\n            default:\n                throw new Error();\n        }\n    }, initialState || defaultInitialState);\n\n    const dispatchWrapper = useCallback((a: Action) => {\n        if (testDispatcher) {\n            testDispatcher(a);\n        }\n        dispatch(a);\n    }, []);\n\n    return (\n        <EsStateContext.Provider value={state}>\n            <EsDispatchContext.Provider value={dispatchWrapper}>{children}</EsDispatchContext.Provider>\n        </EsStateContext.Provider>\n    );\n};\n\n/** Hook returns save function for one specific data type */\nexport const useEsStateSaveFn = <TYPE extends EsDataType>(key: TYPE): ((data: EsDataMap[TYPE]) => void) => {\n    const dispatch = useContext(EsDispatchContext);\n    return useCallback((data: EsDataMap[TYPE]) => {\n        if (dispatch) {\n            dispatch({ type: 'update', key, data });\n        }\n    }, []);\n};\n\n/** Hook returns save function usable with all data types  */\nexport const useAllStateSaveFn = () => {\n    const dispatch = useContext(EsDispatchContext);\n    return useCallback(<TYPE extends EsDataType>(key: TYPE, data: EsDataMap[TYPE]) => {\n        if (dispatch) {\n            dispatch({ type: 'update', key, data });\n        }\n    }, []);\n};\n\n/** Hook returns state reset function  */\nexport const useEsStateResetFn = () => {\n    const dispatch = useContext(EsDispatchContext);\n    return useCallback(() => {\n        if (dispatch) {\n            dispatch({ type: 'reset' });\n        }\n    }, []);\n};\n\n/** Hook returns data for one specific data type  */\nexport const useEsStateData = <TYPE extends EsDataType>(key: TYPE): EsDataMap[TYPE] => {\n    const state = useContext(EsStateContext);\n    return state[key];\n};\n\n/** Hook returns function capable of getting all types of data from context state  */\nexport const useEsStateAllDataFn = () => {\n    const state = useContext(EsStateContext);\n\n    return useCallback(<TYPE extends EsDataType>(key: TYPE) => {\n        return state[key];\n    }, []);\n};\n","import { useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\nimport { notEmpty } from 'fpcommon/validering/valideringUtil';\nimport { EsDataType, EsDataMap, useEsStateAllDataFn } from './EsDataContext';\nimport { Path, REQUIRED_APP_STEPS, PATH_ORDER } from './paths';\n\n// TODO Denne bør flyttast ut\nconst PATH_TO_LABEL_MAP = {\n    [Path.SØKERSITUASJON]: 'SøkersituasjonSteg.Søkersituasjon',\n    [Path.OM_BARNET]: 'OmBarnetSteg.OmBarnet',\n    [Path.TERMINBEKREFTELSE]: 'søknad.termin',\n    [Path.ADOPSJONSBEKREFTELSE]: 'søknad.adopsjon',\n    [Path.UTENLANDSOPPHOLD]: 'søknad.utenlandsopphold',\n    [Path.SISTE_UTENLANDSOPPHOLD]: 'søknad.utenlandsopphold.tidligere',\n    [Path.NESTE_UTENLANDSOPPHOLD]: 'søknad.utenlandsopphold.fremtidig',\n    [Path.OPPSUMMERING]: 'søknad.oppsummering',\n} as Record<string, string>;\n\nconst isAfterStep = (previousStepPath: Path, currentStepPath: Path): boolean => {\n    return PATH_ORDER.indexOf(currentStepPath) > PATH_ORDER.indexOf(previousStepPath);\n};\n\nconst isVisible = (\n    shouldGoToStep: boolean,\n    dataTypeStep: EsDataType,\n    previousStepPath: Path,\n    currentPath: Path,\n    getStateData: <TYPE extends EsDataType>(key: TYPE) => EsDataMap[TYPE],\n) => {\n    return (shouldGoToStep && isAfterStep(previousStepPath, currentPath)) || !!getStateData(dataTypeStep);\n};\n\nconst showUtenlandsoppholdStep = (\n    path: Path,\n    currentPath: Path,\n    getData: <TYPE extends EsDataType>(key: TYPE) => EsDataMap[TYPE],\n): boolean => {\n    if (path === Path.SISTE_UTENLANDSOPPHOLD) {\n        const utenlandsopphold = getData(EsDataType.UTENLANDSOPPHOLD);\n        const boddErSatt = !!utenlandsopphold?.harBoddUtenforNorgeSiste12Mnd;\n        return isVisible(boddErSatt, EsDataType.UTENLANDSOPPHOLD_SISTE, Path.UTENLANDSOPPHOLD, currentPath, getData);\n    }\n    if (path === Path.NESTE_UTENLANDSOPPHOLD) {\n        const utenlandsopphold = getData(EsDataType.UTENLANDSOPPHOLD);\n        const skalBoErSatt = !!utenlandsopphold?.skalBoUtenforNorgeNeste12Mnd;\n        return isVisible(skalBoErSatt, EsDataType.UTENLANDSOPPHOLD_NESTE, Path.UTENLANDSOPPHOLD, currentPath, getData);\n    }\n    return false;\n};\n\nconst showDokumentasjonStep = (\n    path: Path,\n    currentPath: Path,\n    getStateData: <TYPE extends EsDataType>(key: TYPE) => EsDataMap[TYPE],\n): boolean => {\n    const omBarnet = getStateData(EsDataType.OM_BARNET);\n    if (path === Path.TERMINBEKREFTELSE && omBarnet && 'erBarnetFødt' in omBarnet) {\n        return isVisible(!omBarnet.erBarnetFødt, EsDataType.DOKUMENTASJON, Path.OM_BARNET, currentPath, getStateData);\n    }\n    if (path === Path.ADOPSJONSBEKREFTELSE && omBarnet && 'adopsjonAvEktefellesBarn' in omBarnet) {\n        return isVisible(true, EsDataType.DOKUMENTASJON, Path.OM_BARNET, currentPath, getStateData);\n    }\n    return false;\n};\n\nconst useStepData = () => {\n    const intl = useIntl();\n    const location = useLocation();\n    const getStateData = useEsStateAllDataFn();\n\n    const currentPath = useMemo(\n        () => notEmpty(Object.values(Path).find((v) => v === decodeURIComponent(location.pathname))),\n        [],\n    );\n\n    const appPathList = useMemo(\n        () =>\n            PATH_ORDER.flatMap((path) =>\n                REQUIRED_APP_STEPS.includes(path) ||\n                showUtenlandsoppholdStep(path, currentPath, getStateData) ||\n                showDokumentasjonStep(path, currentPath, getStateData)\n                    ? [path]\n                    : [],\n            ),\n        [],\n    );\n\n    return useMemo(\n        () => ({\n            activeStepId: currentPath,\n            stepConfig: appPathList.map((p, index) => ({\n                id: p,\n                label: intl.formatMessage({ id: PATH_TO_LABEL_MAP[p] }),\n                index,\n            })),\n        }),\n        [],\n    );\n};\n\nexport default useStepData;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { logAmplitudeEvent } from 'fpcommon/amplitude/amplitude';\nimport { useEsStateResetFn } from './EsDataContext';\nimport { Path } from './paths';\nimport useStepData from './useStepData';\n\nconst useEsNavigator = () => {\n    const navigate = useNavigate();\n    const { activeStepId, stepConfig } = useStepData();\n    const resetEsData = useEsStateResetFn();\n\n    useEffect(() => {\n        logAmplitudeEvent('sidevisning', {\n            app: 'engangsstonadny',\n            team: 'foreldrepenger',\n            pageKey: activeStepId,\n        });\n    }, []);\n\n    const goToPreviousDefaultStep = useCallback(() => {\n        const index = stepConfig.findIndex((s) => s.id === activeStepId) - 1;\n        const previousPath = stepConfig[index]?.id || Path.VELKOMMEN;\n        navigate(previousPath);\n    }, [navigate, stepConfig, activeStepId]);\n\n    const goToNextStep = useCallback(\n        (path: Path) => {\n            navigate(path);\n        },\n        [navigate],\n    );\n\n    const goToNextDefaultStep = useCallback(() => {\n        const index = stepConfig.findIndex((s) => s.id === activeStepId) + 1;\n        const nextPath = stepConfig[index]?.id || Path.KVITTERING;\n        navigate(nextPath);\n    }, [navigate, stepConfig, activeStepId]);\n\n    const avbrytSøknad = useCallback(() => {\n        resetEsData();\n        navigate(Path.VELKOMMEN);\n    }, []);\n\n    return useMemo(\n        () => ({\n            goToPreviousDefaultStep,\n            goToNextStep,\n            goToNextDefaultStep,\n            avbrytSøknad,\n        }),\n        [goToPreviousDefaultStep, goToNextDefaultStep, goToNextStep],\n    );\n};\n\nexport default useEsNavigator;\n"],"names":["notEmpty","data","EsDataType","EsDataType2","defaultInitialState","EsStateContext","createContext","EsDispatchContext","EsDataContext","children","initialState","testDispatcher","state","dispatch","useReducer","oldState","action","dispatchWrapper","useCallback","a","jsx","useEsStateSaveFn","key","useContext","useAllStateSaveFn","useEsStateResetFn","useEsStateData","useEsStateAllDataFn","PATH_TO_LABEL_MAP","Path","isAfterStep","previousStepPath","currentStepPath","PATH_ORDER","isVisible","shouldGoToStep","dataTypeStep","currentPath","getStateData","showUtenlandsoppholdStep","path","getData","utenlandsopphold","boddErSatt","skalBoErSatt","showDokumentasjonStep","omBarnet","useStepData","intl","useIntl","location","useLocation","useMemo","v","appPathList","REQUIRED_APP_STEPS","p","index","useEsNavigator","navigate","useNavigate","activeStepId","stepConfig","resetEsData","useEffect","logAmplitudeEvent","goToPreviousDefaultStep","s","previousPath","_a","goToNextStep","goToNextDefaultStep","nextPath","avbrytSøknad"],"mappings":"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"}