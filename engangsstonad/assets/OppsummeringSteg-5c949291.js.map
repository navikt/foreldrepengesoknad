{"version":3,"file":"OppsummeringSteg-5c949291.js","sources":["../../../../packages/api/src/useAbortSignal.ts","../../src/types/Person.ts","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionContext.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionItem.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionContent.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/AccordionHeader.js","../../../../node_modules/.pnpm/@navikt+ds-react@5.12.0_@types+react@18.2.20_react-dom@18.2.0_react@18.2.0/node_modules/@navikt/ds-react/esm/accordion/Accordion.js","../../src/steg/oppsummering/Oppsummeringspunkt.tsx","../../src/types/Dokumentasjon.ts","../../src/steg/oppsummering/OmBarnetOppsummering.tsx","../../src/steg/oppsummering/LandOppsummering.tsx","../../src/steg/oppsummering/UtenlandsoppholdOppsummering.tsx","../../src/steg/oppsummering/OppsummeringSteg.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst useAbortSignal = () => {\n    const controller = useRef<AbortController>(new AbortController());\n\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            controller.current.abort();\n        };\n    }, []);\n\n    return controller.current.signal;\n};\n\nexport default useAbortSignal;\n","import Bankkonto from './Bankkonto';\n\nexport enum Kj√∏nn {\n    MANN = 'M',\n    KVINNE = 'K',\n}\n\ntype Person = {\n    fnr: string;\n    fornavn: string;\n    mellomnavn?: string;\n    etternavn: string;\n    adresse: string;\n    kj√∏nn: Kj√∏nn;\n    f√∏dselsdato: string;\n    bankkonto?: Bankkonto;\n};\n\nexport default Person;\n","import { createContext } from \"react\";\nexport const AccordionContext = createContext({\n    headingSize: \"small\",\n    size: \"medium\",\n    openItems: [],\n    mounted: false,\n});\n//# sourceMappingURL=AccordionContext.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { createContext, forwardRef, useContext, useRef, useState, } from \"react\";\nimport { AccordionContext } from \"./AccordionContext\";\nimport { omit } from \"../util\";\nexport const AccordionItemContext = createContext(null);\nconst AccordionItem = forwardRef((_a, ref) => {\n    var { children, className, open, defaultOpen = false } = _a, rest = __rest(_a, [\"children\", \"className\", \"open\", \"defaultOpen\"]);\n    const [internalOpen, setInternalOpen] = useState(defaultOpen);\n    const context = useContext(AccordionContext);\n    const [_open, _setOpen] = useState(defaultOpen);\n    const shouldAnimate = useRef(!(Boolean(open) || defaultOpen));\n    const handleOpen = () => {\n        if (open === undefined) {\n            const newOpen = !_open;\n            _setOpen(newOpen);\n            setInternalOpen(newOpen);\n        }\n        else {\n            setInternalOpen(!open);\n        }\n        shouldAnimate.current = true;\n    };\n    if (!(context === null || context === void 0 ? void 0 : context.mounted)) {\n        console.error(\"<Accordion.Item> has to be used within an <Accordion>\");\n    }\n    return (React.createElement(\"div\", Object.assign({ className: cl(\"navds-accordion__item\", className, {\n            \"navds-accordion__item--open\": open !== null && open !== void 0 ? open : internalOpen,\n            \"navds-accordion__item--neutral\": (context === null || context === void 0 ? void 0 : context.variant) === \"neutral\",\n            \"navds-accordion__item--no-animation\": !shouldAnimate.current,\n        }), ref: ref }, omit(rest, [\"onClick\"])),\n        React.createElement(AccordionItemContext.Provider, { value: {\n                open: open !== null && open !== void 0 ? open : internalOpen,\n                toggleOpen: handleOpen,\n            } }, children)));\n});\nexport default AccordionItem;\n//# sourceMappingURL=AccordionItem.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { BodyLong } from \"../typography\";\nimport { AccordionItemContext } from \"./AccordionItem\";\nconst AccordionContent = forwardRef((_a, ref) => {\n    var { children, className } = _a, rest = __rest(_a, [\"children\", \"className\"]);\n    const context = useContext(AccordionItemContext);\n    if (context === null) {\n        console.error(\"<Accordion.Content> has to be used within an <Accordion.Item>\");\n        return null;\n    }\n    return (React.createElement(BodyLong, Object.assign({}, rest, { as: \"div\", ref: ref, className: cl(\"navds-accordion__content\", {\n            \"navds-accordion__content--closed\": !context.open,\n        }, className), \"aria-hidden\": !context.open || undefined }), children));\n});\nexport default AccordionContent;\n//# sourceMappingURL=AccordionContent.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChevronDownIcon } from \"@navikt/aksel-icons\";\nimport cl from \"clsx\";\nimport React, { forwardRef, useContext } from \"react\";\nimport { Heading } from \"../typography\";\nimport { AccordionContext } from \"./AccordionContext\";\nimport { AccordionItemContext } from \"./AccordionItem\";\nconst AccordionHeader = forwardRef((_a, ref) => {\n    var _b;\n    var { children, className, onClick } = _a, rest = __rest(_a, [\"children\", \"className\", \"onClick\"]);\n    const itemContext = useContext(AccordionItemContext);\n    const accordionContext = useContext(AccordionContext);\n    if (itemContext === null) {\n        console.error(\"<Accordion.Header> has to be used within an <Accordion.Item>, which in turn must be within an <Accordion>\");\n        return null;\n    }\n    return (React.createElement(\"button\", Object.assign({ ref: ref }, rest, { className: cl(\"navds-accordion__header\", className), onClick: (e) => {\n            itemContext.toggleOpen();\n            onClick && onClick(e);\n        }, \"aria-expanded\": itemContext.open, type: \"button\" }),\n        React.createElement(\"span\", { className: \"navds-accordion__icon-wrapper\" },\n            React.createElement(ChevronDownIcon, { className: \"navds-accordion__header-chevron\", title: \"Vis mer\", \"aria-hidden\": true })),\n        React.createElement(Heading, { size: (_b = accordionContext === null || accordionContext === void 0 ? void 0 : accordionContext.headingSize) !== null && _b !== void 0 ? _b : \"small\", as: \"span\", className: \"navds-accordion__header-content\" }, children)));\n});\nexport default AccordionHeader;\n//# sourceMappingURL=AccordionHeader.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport cl from \"clsx\";\nimport React, { forwardRef } from \"react\";\nimport AccordionItem from \"./AccordionItem\";\nimport AccordionContent from \"./AccordionContent\";\nimport AccordionHeader from \"./AccordionHeader\";\nimport { AccordionContext } from \"./AccordionContext\";\n/**\n * A component that displays collapsible content sections.\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/accordion)\n * @see üè∑Ô∏è {@link AccordionProps}\n *\n * @example\n * ```jsx\n * <Accordion>\n *   <Accordion.Item>\n *     <Accordion.Header>Section 1</Accordion.Header>\n *     <Accordion.Content>Content 1</Accordion.Content>\n *   </Accordion.Item>\n *   <Accordion.Item>\n *     <Accordion.Header>Section 2</Accordion.Header>\n *     <Accordion.Content>Content 2</Accordion.Content>\n *   </Accordion.Item>\n * </Accordion>\n * ```\n */\nexport const Accordion = forwardRef((_a, ref) => {\n    var { className, variant = \"default\", headingSize = \"small\", size = \"medium\", indent = true } = _a, rest = __rest(_a, [\"className\", \"variant\", \"headingSize\", \"size\", \"indent\"]);\n    return (React.createElement(AccordionContext.Provider, { value: {\n            variant,\n            headingSize,\n            size,\n            mounted: true,\n        } },\n        React.createElement(\"div\", Object.assign({}, rest, { className: cl(\"navds-accordion\", className, `navds-accordion--${size}`, { \"navds-accordion--indent\": indent }), ref: ref }))));\n});\nAccordion.Header = AccordionHeader;\nAccordion.Content = AccordionContent;\nAccordion.Item = AccordionItem;\nexport default Accordion;\n//# sourceMappingURL=Accordion.js.map","import { ReactNode, useState } from 'react';\nimport { Accordion, Heading } from '@navikt/ds-react';\nimport { bemUtils } from '@navikt/fp-common';\n\nimport './oppsummeringspunkt.css';\n\ninterface Props {\n    tittel: string;\n    children: ReactNode;\n}\n\nconst Oppsummeringspunkt = ({ tittel, children }: Props) => {\n    const [isOpen, toggleOpen] = useState(false);\n\n    return (\n        <Accordion.Item>\n            <Accordion.Header\n                className={isOpen ? bemUtils('accordian_header').block : undefined}\n                onClick={() => toggleOpen((open) => !open)}\n            >\n                <Heading level=\"2\" size=\"small\">\n                    {tittel}\n                </Heading>\n            </Accordion.Header>\n            <Accordion.Content>\n                <div className={bemUtils('content_margin').block}>{children}</div>\n            </Accordion.Content>\n        </Accordion.Item>\n    );\n};\n\nexport default Oppsummeringspunkt;\n","import { Attachment } from '@navikt/fp-types';\n\ntype Vedlegg = {\n    vedlegg: Attachment[];\n};\n\nexport type TerminDokumentasjon = {\n    terminbekreftelsedato: string;\n} & Vedlegg;\n\nexport type AdopsjonDokumentasjon = Vedlegg;\n\ntype Dokumentasjon = TerminDokumentasjon | AdopsjonDokumentasjon;\n\nexport default Dokumentasjon;\n\nexport const erTerminDokumentasjon = (dokumentasjon: Dokumentasjon): dokumentasjon is TerminDokumentasjon => {\n    if ((dokumentasjon as TerminDokumentasjon).terminbekreftelsedato) {\n        return true;\n    }\n    return false;\n};\n","import { FormattedMessage } from 'react-intl';\nimport { BodyLong, BodyShort, HStack, Label, VStack } from '@navikt/ds-react';\nimport { AttachmentList, useCustomIntl } from '@navikt/fp-ui';\nimport { notEmpty } from '@navikt/fp-validation';\nimport { formatDate } from '@navikt/fp-utils';\nimport { OmBarnet, erAdopsjon, erBarnetF√∏dt, erBarnetIkkeF√∏dt } from 'types/OmBarnet';\nimport Dokumentasjon, { erTerminDokumentasjon } from 'types/Dokumentasjon';\n\ninterface Props {\n    omBarnet: OmBarnet;\n    dokumentasjon?: Dokumentasjon;\n}\n\nconst OmBarnetOppsummering: React.FunctionComponent<Props> = ({ omBarnet, dokumentasjon }) => {\n    const { i18n } = useCustomIntl();\n\n    const harAdoptert = erAdopsjon(omBarnet);\n    const harTermin = erBarnetIkkeF√∏dt(omBarnet);\n    const harF√∏dt = erBarnetF√∏dt(omBarnet);\n\n    let antallBarnSummaryText;\n    if (omBarnet.antallBarn === 1) {\n        antallBarnSummaryText = i18n('OmBarnetOppsummering.EttBarn');\n    } else if (omBarnet.antallBarn === 2 && !harAdoptert) {\n        antallBarnSummaryText = i18n('OmBarnetOppsummering.Tvillinger');\n    } else if (omBarnet.antallBarn === 2 && harAdoptert) {\n        antallBarnSummaryText = i18n('OmBarnetOppsummering.ToBarn');\n    } else {\n        antallBarnSummaryText = i18n('OmBarnetOppsummering.FlereBarn', {\n            antall: omBarnet.antallBarn,\n        });\n    }\n\n    return (\n        <VStack gap=\"4\">\n            <HStack gap=\"2\">\n                <BodyShort>\n                    <FormattedMessage id={'OmBarnetOppsummering.SoknadenGjelder'} />\n                </BodyShort>\n                <BodyShort>{antallBarnSummaryText}</BodyShort>\n            </HStack>\n            {harAdoptert && (\n                <>\n                    <HStack gap=\"2\">\n                        <BodyShort>\n                            <FormattedMessage id={'OmBarnetOppsummering.MedAdopsjonsdato'} />\n                        </BodyShort>\n                        <BodyShort>{formatDate(omBarnet.adopsjonsdato)}</BodyShort>\n                    </HStack>\n                    <HStack gap=\"2\">\n                        <BodyShort>\n                            {omBarnet.f√∏dselsdatoer.length > 1\n                                ? i18n('OmBarnetOppsummering.MedF√∏dselsdatoer')\n                                : i18n('OmBarnetOppsummering.MedF√∏dselsdato')}\n                        </BodyShort>\n                        <BodyLong>\n                            {omBarnet.f√∏dselsdatoer\n                                .map((_, index) => {\n                                    return formatDate(omBarnet.f√∏dselsdatoer[index].dato);\n                                })\n                                .join(', ')}\n                        </BodyLong>\n                    </HStack>\n                    <Label>\n                        <FormattedMessage id={'OmBarnetOppsummering.VedlagtOmsorgsovertakelseBekreftelse'} />\n                    </Label>\n                    <AttachmentList attachments={notEmpty(dokumentasjon).vedlegg} />\n                </>\n            )}\n            {harF√∏dt && (\n                <HStack gap=\"2\">\n                    <BodyShort>\n                        <FormattedMessage id={'OmBarnetOppsummering.MedF√∏dselsdato'} />\n                    </BodyShort>\n                    <BodyShort>{formatDate(omBarnet.f√∏dselsdato)}</BodyShort>\n                </HStack>\n            )}\n            {harTermin && dokumentasjon && erTerminDokumentasjon(dokumentasjon) && (\n                <>\n                    <HStack gap=\"2\">\n                        <BodyShort>\n                            <FormattedMessage id={'OmBarnetOppsummering.MedTermindato'} />\n                        </BodyShort>\n                        <BodyShort>{formatDate(omBarnet.termindato)}</BodyShort>\n                    </HStack>\n                    <HStack gap=\"2\">\n                        <BodyShort>\n                            <FormattedMessage id={'OmBarnetOppsummering.SomErDatert'} />\n                        </BodyShort>\n                        <BodyShort>{formatDate(dokumentasjon.terminbekreftelsedato)}</BodyShort>\n                    </HStack>\n                    <Label>\n                        <FormattedMessage id={'OmBarnetOppsummering.VedlagtTerminbekreftelse'} />\n                    </Label>\n                    <AttachmentList attachments={dokumentasjon.vedlegg} />\n                </>\n            )}\n        </VStack>\n    );\n};\nexport default OmBarnetOppsummering;\n","import { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport * as countries from 'i18n-iso-countries';\nimport { BodyLong, Label, VStack } from '@navikt/ds-react';\nimport { useCustomIntl, I18nFn } from '@navikt/fp-ui';\nimport { formatDate, isBeforeToday, isToday } from '@navikt/fp-utils';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\n\nconst formaterDato = (dato: string, i18n: I18nFn) => {\n    if (isToday(dato)) {\n        return i18n('LandOppsummering.IDag');\n    }\n    return formatDate(dato);\n};\n\nconst sortOpphold = (o1: UtenlandsoppholdPeriode, o2: UtenlandsoppholdPeriode) => {\n    return dayjs(o1.fom).isAfter(o2.fom, 'day') ? 1 : 0;\n};\n\ninterface Props {\n    utenlandsoppholdListe: UtenlandsoppholdPeriode[];\n}\n\nconst LandOppsummering: React.FunctionComponent<Props> = ({ utenlandsoppholdListe }) => {\n    const { i18n } = useCustomIntl();\n    //TODO Bytt ut div under med Box n√•r aksel-dep blir oppdatert\n    return (\n        <>\n            {utenlandsoppholdListe.sort(sortOpphold).map((opphold) => (\n                <div\n                    key={`${opphold.landkode}${opphold.fom}`}\n                    style={{ backgroundColor: 'var(--a-blue-100)', padding: '16px', borderRadius: '2px' }}\n                >\n                    <VStack gap=\"1\">\n                        <Label>\n                            {isBeforeToday(opphold.fom) && (\n                                <FormattedMessage\n                                    id=\"LandOppsummering.HarBodd\"\n                                    values={{ country: countries.getName(opphold.landkode, 'nb') }}\n                                />\n                            )}\n                            {!isBeforeToday(opphold.fom) && (\n                                <FormattedMessage\n                                    id=\"LandOppsummering.SkalBo\"\n                                    values={{ country: countries.getName(opphold.landkode, 'nb') }}\n                                />\n                            )}\n                        </Label>\n                        <BodyLong>\n                            {formaterDato(opphold.fom, i18n)} - {formaterDato(opphold.tom, i18n)}\n                        </BodyLong>\n                    </VStack>\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default LandOppsummering;\n","import { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { BodyShort, HStack, VStack } from '@navikt/ds-react';\nimport { notEmpty } from '@navikt/fp-validation';\nimport { useCustomIntl } from '@navikt/fp-ui';\nimport { OmBarnet, erBarnetF√∏dt, erBarnetIkkeF√∏dt } from 'types/OmBarnet';\nimport LandOppsummering from './LandOppsummering';\nimport {\n    Utenlandsopphold,\n    UtenlandsoppholdPeriode,\n    UtenlandsoppholdSenere,\n    UtenlandsoppholdTidligere,\n} from '@navikt/fp-types';\n\nconst erDatoITidsperiode = (dato: string, fom: string, tom: string) => {\n    return dayjs(dato).isBetween(dayjs(fom), dayjs(tom), 'day', '[]');\n};\n\nconst erFamiliehendelsedatoIEnUtenlandsoppholdPeriode = (\n    familiehendelsedato: string,\n    utenlandsoppholdSiste12Mnd: UtenlandsoppholdPeriode[] = [],\n    utenlandsoppholdNeste12Mnd: UtenlandsoppholdPeriode[] = [],\n) => {\n    return (\n        utenlandsoppholdSiste12Mnd.some((tidligereOpphold) =>\n            erDatoITidsperiode(familiehendelsedato, tidligereOpphold.fom, tidligereOpphold.tom),\n        ) ||\n        utenlandsoppholdNeste12Mnd.some((senereOpphold) =>\n            erDatoITidsperiode(familiehendelsedato, senereOpphold.fom, senereOpphold.tom),\n        )\n    );\n};\n\ninterface Props {\n    omBarnet: OmBarnet;\n    utenlandsopphold: Utenlandsopphold;\n    tidligereUtenlandsopphold?: UtenlandsoppholdTidligere;\n    senereUtenlandsopphold?: UtenlandsoppholdSenere;\n}\n\nconst UtenlandsoppholdOppsummering: React.FunctionComponent<Props> = ({\n    omBarnet,\n    utenlandsopphold,\n    tidligereUtenlandsopphold,\n    senereUtenlandsopphold,\n}) => {\n    const { i18n } = useCustomIntl();\n    const harTermin = erBarnetIkkeF√∏dt(omBarnet);\n    const harF√∏dt = erBarnetF√∏dt(omBarnet);\n\n    return (\n        <VStack gap=\"5\">\n            <VStack gap=\"2\">\n                {utenlandsopphold.harBoddUtenforNorgeSiste12Mnd && (\n                    <LandOppsummering\n                        utenlandsoppholdListe={notEmpty(tidligereUtenlandsopphold).utenlandsoppholdSiste12Mnd}\n                    />\n                )}\n                {utenlandsopphold.skalBoUtenforNorgeNeste12Mnd && (\n                    <LandOppsummering\n                        utenlandsoppholdListe={notEmpty(senereUtenlandsopphold).utenlandsoppholdNeste12Mnd}\n                    />\n                )}\n            </VStack>\n            {utenlandsopphold.harBoddUtenforNorgeSiste12Mnd === false && (\n                <BodyShort>\n                    <FormattedMessage\n                        id={'UtenlandsoppholdOppsummering.BoddSisteTolv'}\n                        values={{ country: i18n('UtenlandsoppholdOppsummering.Norge') }}\n                    />\n                </BodyShort>\n            )}\n            {utenlandsopphold.skalBoUtenforNorgeNeste12Mnd === false && (\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"UtenlandsoppholdOppsummering.BoNesteTolv\"\n                        values={{ country: i18n('UtenlandsoppholdOppsummering.Norge') }}\n                    />\n                </BodyShort>\n            )}\n            {harTermin && (\n                <HStack gap=\"2\">\n                    <BodyShort>\n                        <FormattedMessage\n                            id={'UtenlandsoppholdOppsummering.Text.OgKommerP√•F√∏dselstidspunktet'}\n                            values={{\n                                country: erFamiliehendelsedatoIEnUtenlandsoppholdPeriode(\n                                    omBarnet.termindato,\n                                    tidligereUtenlandsopphold?.utenlandsoppholdSiste12Mnd,\n                                    senereUtenlandsopphold?.utenlandsoppholdNeste12Mnd,\n                                )\n                                    ? i18n('UtenlandsoppholdOppsummering.Utlandet')\n                                    : i18n('UtenlandsoppholdOppsummering.Norge'),\n                            }}\n                        />\n                    </BodyShort>\n                </HStack>\n            )}\n            {harF√∏dt && (\n                <BodyShort>\n                    <FormattedMessage\n                        id={'UtenlandsoppholdOppsummering.VarP√•F√∏dselstidspunktet'}\n                        values={{\n                            country: erFamiliehendelsedatoIEnUtenlandsoppholdPeriode(\n                                omBarnet.f√∏dselsdato,\n                                tidligereUtenlandsopphold?.utenlandsoppholdSiste12Mnd,\n                                senereUtenlandsopphold?.utenlandsoppholdNeste12Mnd,\n                            )\n                                ? i18n('UtenlandsoppholdOppsummering.Utlandet')\n                                : i18n('UtenlandsoppholdOppsummering.Norge'),\n                        }}\n                    />\n                </BodyShort>\n            )}\n        </VStack>\n    );\n};\n\nexport default UtenlandsoppholdOppsummering;\n","import { useState } from 'react';\nimport { Step } from '@navikt/fp-common';\nimport { Accordion, BodyShort, ConfirmationPanel, VStack } from '@navikt/ds-react';\nimport { useAbortSignal } from '@navikt/fp-api';\nimport { notEmpty } from '@navikt/fp-validation';\nimport { StepButtons, useCustomIntl } from '@navikt/fp-ui';\nimport Person from 'types/Person';\nimport useEsNavigator from 'appData/useEsNavigator';\nimport useStepConfig from 'appData/useStepConfig';\nimport { ContextDataType, useContextGetData } from 'appData/EsDataContext';\nimport Oppsummeringspunkt from './Oppsummeringspunkt';\nimport OmBarnetOppsummering from './OmBarnetOppsummering';\nimport UtenlandsoppholdOppsummering from './UtenlandsoppholdOppsummering';\n\nconst fullNameFormat = (fornavn: string, etternavn: string, mellomnavn?: string) => {\n    return mellomnavn ? `${fornavn} ${mellomnavn} ${etternavn}` : `${fornavn} ${etternavn}`;\n};\n\nexport interface Props {\n    person: Person;\n    sendS√∏knad: (abortSignal: AbortSignal) => Promise<void>;\n    mellomlagreOgNaviger: () => Promise<void>;\n}\n\nconst OppsummeringSteg: React.FunctionComponent<Props> = ({ person, sendS√∏knad, mellomlagreOgNaviger }) => {\n    const { i18n } = useCustomIntl();\n\n    const stepConfig = useStepConfig();\n    const navigator = useEsNavigator(mellomlagreOgNaviger);\n\n    const omBarnet = notEmpty(useContextGetData(ContextDataType.OM_BARNET));\n    const utenlandsopphold = notEmpty(useContextGetData(ContextDataType.UTENLANDSOPPHOLD));\n    const dokumentasjon = useContextGetData(ContextDataType.DOKUMENTASJON);\n    const tidligereUtenlandsopphold = useContextGetData(ContextDataType.UTENLANDSOPPHOLD_TIDLIGERE);\n    const senereUtenlandsopphold = useContextGetData(ContextDataType.UTENLANDSOPPHOLD_SENERE);\n    const abortSignal = useAbortSignal();\n\n    const [isChecked, setChecked] = useState(false);\n    const [isSubmitting, setSubmitting] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const send = (setButtonsDisabled: (isDisabled: boolean) => void) => {\n        setSubmitting(true);\n        if (!isChecked) {\n            setIsError(true);\n        } else {\n            setButtonsDisabled(true);\n            sendS√∏knad(abortSignal);\n        }\n    };\n\n    return (\n        <Step\n            bannerTitle={i18n('S√∏knad.Pageheading')}\n            onCancel={navigator.avbrytS√∏knad}\n            onContinueLater={navigator.fortsettS√∏knadSenere}\n            steps={stepConfig}\n        >\n            <VStack gap=\"10\">\n                <Accordion indent={false}>\n                    <Oppsummeringspunkt tittel={i18n('OppsummeringSteg.OmDeg')}>\n                        <VStack gap=\"4\">\n                            <BodyShort>{fullNameFormat(person.fornavn, person.etternavn, person.mellomnavn)}</BodyShort>\n                            <BodyShort>{person.fnr}</BodyShort>\n                        </VStack>\n                    </Oppsummeringspunkt>\n                    <Oppsummeringspunkt tittel={i18n('OppsummeringSteg.OmBarnet')}>\n                        <OmBarnetOppsummering omBarnet={omBarnet} dokumentasjon={dokumentasjon} />\n                    </Oppsummeringspunkt>\n                    <Oppsummeringspunkt tittel={i18n('OppsummeringSteg.Utenlandsopphold')}>\n                        <UtenlandsoppholdOppsummering\n                            omBarnet={omBarnet}\n                            utenlandsopphold={utenlandsopphold}\n                            tidligereUtenlandsopphold={tidligereUtenlandsopphold}\n                            senereUtenlandsopphold={senereUtenlandsopphold}\n                        />\n                    </Oppsummeringspunkt>\n                </Accordion>\n                <ConfirmationPanel\n                    label={i18n('OppsummeringSteg.Samtykke')}\n                    onChange={() => setChecked((state) => !state)}\n                    checked={isChecked}\n                    error={isError && !isChecked && i18n('OppsummeringSteg.Validering.BekrefteOpplysninger')}\n                />\n                <StepButtons\n                    goToPreviousStep={navigator.goToPreviousDefaultStep}\n                    nextButtonText={i18n('OppsummeringSteg.Button.SendS√∏knad')}\n                    nextButtonOnClick={send}\n                    isSubmitting={isSubmitting}\n                />\n            </VStack>\n        </Step>\n    );\n};\n\nexport default OppsummeringSteg;\n"],"names":["useAbortSignal","controller","useRef","useEffect","Kj√∏nn","AccordionContext","createContext","__rest","this","s","e","t","p","i","AccordionItemContext","AccordionItem","forwardRef","_a","ref","children","className","open","defaultOpen","rest","internalOpen","setInternalOpen","useState","context","useContext","_open","_setOpen","shouldAnimate","handleOpen","newOpen","React","cl","omit","AccordionItem$1","AccordionContent","BodyLong","AccordionContent$1","AccordionHeader","_b","onClick","itemContext","accordionContext","ChevronDownIcon","Heading","AccordionHeader$1","Accordion","variant","headingSize","size","indent","Accordion$1","Oppsummeringspunkt","tittel","isOpen","toggleOpen","jsxs","jsx","bemUtils","erTerminDokumentasjon","dokumentasjon","OmBarnetOppsummering","omBarnet","i18n","useCustomIntl","harAdoptert","erAdopsjon","harTermin","erBarnetIkkeF√∏dt","harF√∏dt","erBarnetF√∏dt","antallBarnSummaryText","VStack","HStack","BodyShort","FormattedMessage","Fragment","formatDate","_","index","Label","AttachmentList","notEmpty","formaterDato","dato","isToday","sortOpphold","o1","o2","dayjs","LandOppsummering","utenlandsoppholdListe","opphold","isBeforeToday","countries.getName","erDatoITidsperiode","fom","tom","erFamiliehendelsedatoIEnUtenlandsoppholdPeriode","familiehendelsedato","utenlandsoppholdSiste12Mnd","utenlandsoppholdNeste12Mnd","tidligereOpphold","senereOpphold","UtenlandsoppholdOppsummering","utenlandsopphold","tidligereUtenlandsopphold","senereUtenlandsopphold","fullNameFormat","fornavn","etternavn","mellomnavn","OppsummeringSteg","person","sendS√∏knad","mellomlagreOgNaviger","stepConfig","useStepConfig","navigator","useEsNavigator","useContextGetData","ContextDataType","abortSignal","isChecked","setChecked","isSubmitting","setSubmitting","isError","setIsError","send","setButtonsDisabled","Step","ConfirmationPanel","state","StepButtons","OppsummeringSteg$1"],"mappings":"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","x_google_ignoreList":[2,3,4,5,6]}