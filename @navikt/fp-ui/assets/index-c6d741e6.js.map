{"version":3,"file":"index-c6d741e6.js","sources":["../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/error.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/utils.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/message.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/dateTime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/displayName.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/list.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/plural.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/relativeTime.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/number.js","../../../../node_modules/.pnpm/@formatjs+intl@2.9.0_typescript@5.2.2/node_modules/@formatjs/intl/lib/src/create-intl.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.2.2/node_modules/react-intl/lib/src/utils.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.2.2/node_modules/react-intl/lib/src/components/injectIntl.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.2.2/node_modules/react-intl/lib/src/components/useIntl.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.2.2/node_modules/react-intl/lib/src/components/createFormattedComponent.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.2.2/node_modules/react-intl/lib/src/components/provider.js","../../../../node_modules/.pnpm/react-intl@6.4.4_react@18.2.0_typescript@5.2.2/node_modules/react-intl/lib/index.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { __extends } from \"tslib\";\nexport var IntlErrorCode;\n(function (IntlErrorCode) {\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(IntlErrorCode || (IntlErrorCode = {}));\nvar IntlError = /** @class */ (function (_super) {\n    __extends(IntlError, _super);\n    function IntlError(code, message, exception) {\n        var _this = this;\n        var err = exception\n            ? exception instanceof Error\n                ? exception\n                : new Error(String(exception))\n            : undefined;\n        _this = _super.call(this, \"[@formatjs/intl Error \".concat(code, \"] \").concat(message, \"\\n\").concat(err ? \"\\n\".concat(err.message, \"\\n\").concat(err.stack) : '')) || this;\n        _this.code = code;\n        // @ts-ignore just so we don't need to declare dep on @types/node\n        if (typeof Error.captureStackTrace === 'function') {\n            // @ts-ignore just so we don't need to declare dep on @types/node\n            Error.captureStackTrace(_this, IntlError);\n        }\n        return _this;\n    }\n    return IntlError;\n}(Error));\nexport { IntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(IntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(IntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;\n    }\n    return MissingDataError;\n}(IntlError));\nexport { MissingDataError };\nvar IntlFormatError = /** @class */ (function (_super) {\n    __extends(IntlFormatError, _super);\n    function IntlFormatError(message, locale, exception) {\n        var _this = _super.call(this, IntlErrorCode.FORMAT_ERROR, \"\".concat(message, \"\\nLocale: \").concat(locale, \"\\n\"), exception) || this;\n        _this.locale = locale;\n        return _this;\n    }\n    return IntlFormatError;\n}(IntlError));\nexport { IntlFormatError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"\".concat(message, \"\\nMessageID: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.id, \"\\nDefault Message: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage, \"\\nDescription: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.description, \"\\n\"), locale, exception) || this;\n        _this.descriptor = descriptor;\n        _this.locale = locale;\n        return _this;\n    }\n    return MessageFormatError;\n}(IntlFormatError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, \"Missing message: \\\"\".concat(descriptor.id, \"\\\" for locale \\\"\").concat(locale, \"\\\", using \").concat(descriptor.defaultMessage\n            ? \"default message (\".concat(typeof descriptor.defaultMessage === 'string'\n                ? descriptor.defaultMessage\n                : descriptor.defaultMessage\n                    .map(function (e) { var _a; return (_a = e.value) !== null && _a !== void 0 ? _a : JSON.stringify(e); })\n                    .join(), \")\")\n            : 'id', \" as fallback.\")) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(IntlError));\nexport { MissingTranslationError };\n","import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport { memoize, strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, allowlist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return allowlist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nvar defaultWarnHandler = function (warning) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn(warning);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    fallbackOnEmptyString: true,\n    onError: defaultErrorHandler,\n    onWarn: defaultWarnHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: strategies.variadic,\n    });\n    var getNumberFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: strategies.variadic,\n    });\n    var getPluralRules = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: strategies.variadic,\n        }),\n        getDisplayNames: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\n}\n","import { __assign } from \"tslib\";\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { IntlMessageFormat, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from './error';\nimport { TYPE } from '@formatjs/icu-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport var formatMessage = function (_a, state, messageDescriptor, values, opts) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, fallbackOnEmptyString = _a.fallbackOnEmptyString, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (fallbackOnEmptyString === false && message === '') {\n            return message;\n        }\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, (opts || {})));\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n};\n","import { __assign } from \"tslib\";\nimport { filterProps, getNamedFormat } from './utils';\nimport { IntlFormatError } from './error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n    'fractionalSecondDigits',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second &&\n        !filteredOptions.timeStyle &&\n        !filteredOptions.dateStyle) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatDateTimeRange(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\n    try {\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting date time range.', config.locale, e));\n    }\n    return String(from);\n}\nexport function formatDateToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return [];\n}\n","import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'style',\n    'type',\n    'fallback',\n    'languageDisplay',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting display name.', locale, e));\n    }\n}\n","import { __assign } from \"tslib\";\nimport { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar LIST_FORMAT_OPTIONS = [\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return \"\".concat(now, \"_\").concat(i, \"_\").concat(now);\n}\nexport function formatList(opts, getListFormat, values, options) {\n    if (options === void 0) { options = {}; }\n    var results = formatListToParts(opts, getListFormat, values, options).reduce(function (all, el) {\n        var val = el.value;\n        if (typeof val !== 'string') {\n            all.push(val);\n        }\n        else if (typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += val;\n        }\n        else {\n            all.push(val);\n        }\n        return all;\n    }, []);\n    return results.length === 1 ? results[0] : results.length === 0 ? '' : results;\n}\nexport function formatListToParts(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        return getListFormat(locale, filteredOptions)\n            .formatToParts(serializedValues)\n            .map(function (part) {\n            return part.type === 'literal'\n                ? part\n                : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });\n        });\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting list.', locale, e));\n    }\n    // @ts-ignore\n    return values;\n}\n","import { filterProps } from './utils';\nimport { IntlFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting plural.', locale, e));\n    }\n    return 'other';\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting relative time.', config.locale, e));\n    }\n    return String(value);\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { IntlFormatError } from './error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'numberingSystem',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return [];\n}\n","import { __assign } from \"tslib\";\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\nimport { InvalidConfigError, MissingDataError } from './error';\nimport { formatNumber, formatNumberToParts } from './number';\nimport { formatRelativeTime } from './relativeTime';\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, formatDateTimeRange, } from './dateTime';\nimport { formatPlural } from './plural';\nimport { formatMessage } from './message';\nimport { formatList, formatListToParts } from './list';\nimport { formatDisplayName } from './displayName';\nfunction messagesContainString(messages) {\n    var firstMessage = messages ? messages[Object.keys(messages)[0]] : undefined;\n    return typeof firstMessage === 'string';\n}\nfunction verifyConfigMessages(config) {\n    if (config.onWarn &&\n        config.defaultRichTextElements &&\n        messagesContainString(config.messages || {})) {\n        config.onWarn(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\n    }\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\".concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\")));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.NumberFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    verifyConfigMessages(resolvedConfig);\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), \n        // @ts-expect-error TODO: will get to this later\n        formatMessage: formatMessage.bind(null, resolvedConfig, formatters), \n        // @ts-expect-error TODO: will get to this later\n        $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\nexport function shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    var aKeys = Object.keys(objA);\n    var bKeys = Object.keys(objB);\n    var len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        var key = aKeys[i];\n        if (objA[key] !== objB[key] ||\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// This is primarily dealing with packaging systems where multiple copies of react-intl\n// might exist\nvar IntlContext = typeof window !== 'undefined' && !window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__\n    ? window.__REACT_INTL_CONTEXT__ ||\n        (window.__REACT_INTL_CONTEXT__ = React.createContext(null))\n    : React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) {\n    var intl = useIntl();\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport var FormattedListParts = function (props) {\n    var intl = useIntl();\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatListToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) {\n        var intl = useIntl();\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) {\n        var intl = useIntl();\n        var value = props.value, children = props.children, formatProps = __rest(props\n        // TODO: fix TS type definition for localeMatcher upstream\n        , [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var rest = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        rest[_i - 4] = arguments[_i];\n    }\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\n        formatters,\n        descriptor,\n        values], rest, false));\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\n    var resolvedConfig = {\n        locale: coreIntl.locale,\n        timeZone: coreIntl.timeZone,\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n        formats: coreIntl.formats,\n        defaultLocale: coreIntl.defaultLocale,\n        defaultFormats: coreIntl.defaultFormats,\n        messages: coreIntl.messages,\n        onError: coreIntl.onError,\n        defaultRichTextElements: defaultRichTextElements,\n    };\n    return __assign(__assign({}, coreIntl), { \n        // @ts-expect-error fix this\n        formatMessage: formatMessage.bind(null, resolvedConfig, coreIntl.formatters), \n        // @ts-expect-error fix this\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nimport injectIntl, { Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nimport useIntl from './src/components/useIntl';\nimport IntlProvider, { createIntl } from './src/components/provider';\nimport FormattedRelativeTime from './src/components/relative';\nimport FormattedPlural from './src/components/plural';\nimport FormattedMessage from './src/components/message';\nimport FormattedDateTimeRange from './src/components/dateTimeRange';\nexport { FormattedDateTimeRange, FormattedMessage, FormattedPlural, FormattedRelativeTime, IntlContext, IntlProvider, RawIntlProvider, createIntl, injectIntl, useIntl, };\nexport { createIntlCache, UnsupportedFormatterError, InvalidConfigError, MissingDataError, MessageFormatError, MissingTranslationError, IntlErrorCode as ReactIntlErrorCode, IntlError as ReactIntlError, } from '@formatjs/intl';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts, FormattedListParts, } from './src/components/createFormattedComponent';\n"],"names":["f","require$$0","k","l","m","n","p","q","c","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","IntlErrorCode","IntlError","_super","__extends","code","message","exception","_this","err","UnsupportedFormatterError","InvalidConfigError","MissingDataError","IntlFormatError","locale","MessageFormatError","descriptor","MissingTranslationError","_a","filterProps","props","allowlist","defaults","filtered","name","defaultErrorHandler","error","defaultWarnHandler","warning","DEFAULT_INTL_CONFIG","createIntlCache","createFastMemoizeCache","store","key","value","createFormatters","cache","RelativeTimeFormat","ListFormat","DisplayNames","getDateTimeFormat","memoize","args","_i","__spreadArray","strategies","getNumberFormat","getPluralRules","locales","overrideFormats","opts","IntlMessageFormat","__assign","getNamedFormat","formats","type","onError","formatType","format","setTimeZoneInOptions","timeZone","all","deepMergeOptions","opts1","opts2","keys","deepMergeFormatsAndSetTimeZone","f1","mfFormats","formatMessage","state","messageDescriptor","values","messages","defaultLocale","defaultFormats","fallbackOnEmptyString","defaultRichTextElements","msgId","defaultMessage","invariant","id","TYPE","formatter","DATE_TIME_FORMAT_OPTIONS","getFormatter","options","filteredOptions","formatDate","config","_b","date","formatTime","formatDateTimeRange","from","to","formatDateToParts","formatTimeToParts","DISPLAY_NAMES_OPTONS","formatDisplayName","getDisplayNames","FormatError","ErrorCode","LIST_FORMAT_OPTIONS","now","generateToken","i","formatList","getListFormat","results","formatListToParts","el","val","richValues_1","serializedValues","v","part","PLURAL_FORMAT_OPTIONS","formatPlural","RELATIVE_TIME_FORMAT_OPTIONS","getRelativeTimeFormat","formatRelativeTime","unit","NUMBER_FORMAT_OPTIONS","formatNumber","formatNumberToParts","messagesContainString","firstMessage","verifyConfigMessages","createIntl","formatters","resolvedConfig","invariantIntlContext","intl","CORE_DEFAULT_INTL_CONFIG","React.Fragment","assignUniqueKeysToParts","formatXMLElementFn","parts","React.Children","shallowEqual","objA","objB","aKeys","bKeys","len","IntlContext","React.createContext","IntlProvider","Provider","Context","useIntl","React.useContext","DisplayName","DisplayNameParts","createFormattedDateTimePartsComponent","ComponentParts","children","formatProps","__rest","formattedParts","createFormattedComponent","Component","formattedValue","Text","React.createElement","processIntlConfig","assignUniqueKeysToFormatXMLElementFnArgument","acc","isFormatXMLElementFn","rawValues","rest","chunks","coreFormatMessage","rawDefaultRichTextElements","coreIntl","coreCreateIntl","prevConfig","React.PureComponent"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}