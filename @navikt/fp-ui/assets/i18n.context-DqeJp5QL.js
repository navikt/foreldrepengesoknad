import{r as d,R as v}from"./index-CTjT7uj6.js";var y=function(e,o){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&o.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var t=0,r=Object.getOwnPropertySymbols(e);t<r.length;t++)o.indexOf(r[t])<0&&Object.prototype.propertyIsEnumerable.call(e,r[t])&&(n[r[t]]=e[r[t]]);return n};function x(e,o){return`${e} returned \`undefined\`. Seems you forgot to wrap component within ${o}`}function S(e={}){const{name:o,hookName:n="useContext",providerName:r="Provider",errorMessage:t,defaultValue:l}=e,a=d.createContext(l),s=d.forwardRef((c,u)=>{var{children:f}=c,p=y(c,["children"]);const g=v.useMemo(()=>p,Object.values(p));return v.createElement(a.Provider,{value:u?Object.assign(Object.assign({},g),{ref:u}):g},f)});function i(c=!0){var u;const f=d.useContext(a);if(!f&&c){const p=new Error(t??x(n,r));throw p.name="ContextError",(u=Error.captureStackTrace)===null||u===void 0||u.call(Error,p,i),p}return f}return a.displayName=o,[s,i]}const m=/(\w+)/g;function h(e,...o){const n=Array.isArray(e)?e:w(e);for(const r of o){if(!r)continue;let t=r;for(let l=0;l<n.length;l++){const a=t[n[l]];a!==void 0&&(t=a)}if(typeof t=="string")return t}throw new Error("Error translating key. The keypath does not resolve to a string.")}function w(e){const o=[];let n=m.exec(e);for(;n;){const[,r,t]=n;o.push(r||t),n=m.exec(e)}return o}const E={FileUpload:{dropzone:{button:"Velg fil",buttonMultiple:"Velg filer",dragAndDrop:"Dra og slipp filen her",dragAndDropMultiple:"Dra og slipp filer her",drop:"Slipp",or:"eller",disabled:"Filopplasting er deaktivert",disabledFilelimit:"Du kan ikke laste opp flere filer"},item:{retryButtonTitle:"Prøv å laste opp filen på nytt",deleteButtonTitle:"Slett filen",uploading:"Laster opp…",downloading:"Laster ned…"}},FormProgress:{step:"Steg {activeStep} av {totalSteps}",showAllSteps:"Vis alle steg",hideAllSteps:"Skjul alle steg"}},b=/{[^}]*}/g,O=d.createContext(E);function A(e,...o){const n=d.useContext(O);return(t,l)=>{const a=h(t,...o,...Array.isArray(n)?n.map(s=>s[e]):[n[e]]);return l!=null&&l.replacements?a.replace(b,s=>{const i=s.substring(1,s.length-1);if(l.replacements[i]===void 0){const c=JSON.stringify(l.replacements);throw new Error(`Error translating key '${t}'. No replacement syntax ({}) found for key '${i}'. The following replacements were passed: '${c}'`)}return l.replacements[i]}):a}}export{S as c,A as u};
