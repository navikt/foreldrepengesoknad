import{r as c}from"./index-CTjT7uj6.js";const p=/(\w+)/g;function d(r,...l){const e=Array.isArray(r)?r:f(r);for(const o of l){if(!o)continue;let n=o;for(let t=0;t<e.length;t++){const s=n[e[t]];s!==void 0&&(n=s)}if(typeof n=="string")return n}throw new Error("Error translating key. The keypath does not resolve to a string.")}function f(r){const l=[];let e=p.exec(r);for(;e;){const[,o,n]=e;l.push(o||n),e=p.exec(r)}return l}const g={FileUpload:{dropzone:{button:"Velg fil",buttonMultiple:"Velg filer",dragAndDrop:"Dra og slipp filen her",dragAndDropMultiple:"Dra og slipp filer her",drop:"Slipp",or:"eller",disabled:"Filopplasting er deaktivert",disabledFilelimit:"Du kan ikke laste opp flere filer"},item:{retryButtonTitle:"Prøv å laste opp filen på nytt",deleteButtonTitle:"Slett filen",uploading:"Laster opp…",downloading:"Laster ned…"}},FormProgress:{step:"Steg {activeStep} av {totalSteps}",showAllSteps:"Vis alle steg",hideAllSteps:"Skjul alle steg"}},y=/{[^}]*}/g,h=c.createContext(g);function A(r,...l){const e=c.useContext(h);return(n,t)=>{const s=d(n,...l,...Array.isArray(e)?e.map(i=>i[r]):[e[r]]);return t!=null&&t.replacements?s.replace(y,i=>{const a=i.substring(1,i.length-1);if(t.replacements[a]===void 0){const u=JSON.stringify(t.replacements);throw new Error(`Error translating key '${n}'. No replacement syntax ({}) found for key '${a}'. The following replacements were passed: '${u}'`)}return t.replacements[a]}):s}}export{A as u};
