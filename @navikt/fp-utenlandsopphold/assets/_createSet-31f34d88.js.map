{"version":3,"file":"_createSet-31f34d88.js","sources":["../../../../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../../../../node_modules/.pnpm/@floating-ui+core@1.5.2/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../../node_modules/.pnpm/@floating-ui+dom@1.5.3/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../../node_modules/.pnpm/@floating-ui+react-dom@2.0.4_react-dom@18.2.0_react@18.2.0/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/noop.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_createSet.js"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length, i, keys;\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node != referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, [_setReference]);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, [_setFloating]);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      } else {\n        update();\n      }\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\nexport { arrow, useFloating };\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n"],"names":["_assertThisInitialized","self","_setPrototypeOf","o","p","_getPrototypeOf","_isNativeReflectConstruct","sides","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","_ref","isElement","isHTMLElement","isShadowRoot","isOverflowElement","element","overflow","overflowX","overflowY","display","getComputedStyle","isTableElement","isContainingBlock","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","computeCoordsFromPlacement","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","x","y","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","isBasePlacement","fallbackPlacements","placements","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","d","a","b","_overflowsData$map$so","acc","getSideOffsets","isAnySideFullyClipped","hide","offsets","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","apply","width","height","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","left","top","convertOffsetParentRelativeRectToViewportRelativeRect","isOffsetParentAnElement","documentElement","scroll","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","getOffsetParentFn","getDimensionsFn","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","frameId","prevRefRect","frameLoop","nextRefRect","mergedOptions","platformWithCache","computePosition$1","isRef","arrow$1","index","useLayoutEffect","useEffect","deepEqual","keys","key","getDPR","roundByDPR","dpr","useLatestRef","ref","React.useRef","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","React.useState","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","React.useCallback","referenceRef","setFloating","floatingRef","floatingEl","dataRef","whileElementsMountedRef","platformRef","fullData","isMountedRef","ReactDOM.flushSync","refs","React.useMemo","floatingStyles","initialStyles","noop","noop_1","Set","require$$0","require$$1","setToArray","require$$2","INFINITY","createSet","values","_createSet"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}