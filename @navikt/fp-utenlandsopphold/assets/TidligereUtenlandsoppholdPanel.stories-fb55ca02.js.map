{"version":3,"file":"TidligereUtenlandsoppholdPanel.stories-fb55ca02.js","sources":["../../src/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPeriode.tsx","../../src/utenlandsoppholdTidligere/TidligereUtenlandsoppholdPanel.tsx"],"sourcesContent":["import { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { useFormContext } from 'react-hook-form';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate, isDateAAfterDateB } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { DATE_TODAY, DATE_1_YEAR_AGO } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdSiste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdSiste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdSiste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdSiste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateFom = tom ? dayjs(tom).subtract(1, 'days').toDate() : dayjs(DATE_TODAY).toDate();\n\n    const minDateTom =\n        fom && isDateAAfterDateB(fom, DATE_1_YEAR_AGO)\n            ? dayjs(fom).add(1, 'days').toDate()\n            : dayjs(DATE_1_YEAR_AGO).toDate();\n    const maxDateTom = dayjs(DATE_TODAY).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdSiste12Mnd.${index}.landkode`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Spørsmål.HvilketLandHarDuBoddI\" />}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuHarBoddIPåkrevd')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={minDateFom}\n                maxDate={maxDateFom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n                defaultMonth={tom ? dayjs(tom).toDate() : undefined}\n            />\n            <Datepicker\n                name={`utenlandsoppholdSiste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('TidligereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuHarBoddIPåkreved')),\n                    isValidDate(i18n('TidligereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('TidligereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('TidligereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('TidligereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('TidligereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { ErrorSummaryHookForm, StepButtonsHookForm, Form } from '@navikt/fp-form-hooks';\nimport { StepConfig, UtenlandsoppholdPeriode, UtenlandsoppholdTidligere } from '@navikt/fp-types';\n\nimport TidligereUtenlandsoppholdPeriode from './TidligereUtenlandsoppholdPeriode';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdSiste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdTidligere;\n\nexport interface Props {\n    tidligereUtenlandsopphold?: UtenlandsoppholdTidligere;\n    saveOnNext: (formValues: UtenlandsoppholdTidligere) => void;\n    saveOnPrevious: (data: UtenlandsoppholdTidligere | undefined) => void;\n    cancelApplication: () => void;\n    onContinueLater?: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    supportsTempSaving?: boolean;\n}\n\nconst TidligereUtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    tidligereUtenlandsopphold,\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    onContinueLater,\n    goToPreviousStep,\n    stepConfig,\n    supportsTempSaving = false,\n}) => {\n    const defaultValues = useMemo(() => tidligereUtenlandsopphold || DEFAULT_FORM_VALUES, [tidligereUtenlandsopphold]);\n    const formMethods = useForm<UtenlandsoppholdTidligere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdSiste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step\n                onCancel={cancelApplication}\n                onContinueLater={onContinueLater}\n                steps={stepConfig}\n                useNoTempSavingText={!supportsTempSaving}\n            >\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <VStack gap=\"10\" align=\"start\">\n                            {fields.map((field, index) => (\n                                <Fragment key={field.id}>\n                                    <TidligereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                    {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                                </Fragment>\n                            ))}\n                            <Button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                size=\"small\"\n                                icon={<PlusIcon aria-hidden />}\n                                onClick={leggTilOpphold}\n                            >\n                                <FormattedMessage id=\"TidligereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                            </Button>\n                        </VStack>\n                        <StepButtonsHookForm<UtenlandsoppholdTidligere>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default TidligereUtenlandsoppholdPanel;\n"],"names":["TidligereUtenlandsoppholdPanel","index","fjernOpphold","i18n","useUtenlandsoppholdIntl","watch","trigger","isSubmitted","useFormContext","alleAndreUtenlandsopphold","_u","i","fom","tom","minDateFom","dayjs","DATE_1_YEAR_AGO","maxDateFom","DATE_TODAY","minDateTom","isDateAAfterDateB","maxDateTom","jsxs","VStack","jsx","Select","FormattedMessage","isRequired","createCountryOptions","o","Datepicker","isValidDate","isDatesNotTheSame","isBeforeOrSame","isDateWithinRange","formatDate","isPeriodNotOverlappingOthers","isAfterOrSame","Button","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","tidligereUtenlandsopphold","saveOnNext","saveOnPrevious","cancelApplication","onContinueLater","goToPreviousStep","stepConfig","supportsTempSaving","defaultValues","useMemo","formMethods","useForm","fields","append","remove","useFieldArray","leggTilOpphold","useCallback","UtenlandsoppholdIntlProvider","Step","Form","ErrorSummaryHookForm","field","Fragment","TidligereUtenlandsoppholdPeriode","PlusIcon","StepButtonsHookForm","TidligereUtenlandsoppholdPanel$1"],"mappings":"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"}