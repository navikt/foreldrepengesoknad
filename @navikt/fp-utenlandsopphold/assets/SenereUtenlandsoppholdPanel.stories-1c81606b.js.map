{"version":3,"file":"SenereUtenlandsoppholdPanel.stories-1c81606b.js","sources":["../../src/utenlandsoppholdSenere/SenereUtenlandsoppholdPeriode.tsx","../../src/utenlandsoppholdSenere/SenereUtenlandsoppholdPanel.tsx"],"sourcesContent":["import { FormattedMessage } from 'react-intl';\nimport { useFormContext } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { TrashIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { createCountryOptions, formatDate } from '@navikt/fp-utils';\nimport { Datepicker, Select } from '@navikt/fp-form-hooks';\nimport { UtenlandsoppholdPeriode } from '@navikt/fp-types';\nimport { DATE_1_YEAR_FROM_NOW, DATE_TODAY } from '@navikt/fp-constants';\nimport {\n    isAfterOrSame,\n    isBeforeOrSame,\n    isDateWithinRange,\n    isDatesNotTheSame,\n    isPeriodNotOverlappingOthers,\n    isRequired,\n    isValidDate,\n} from '@navikt/fp-validation';\n\nimport useUtenlandsoppholdIntl from '../intl/useUtenlandsoppholdIntl';\n\ninterface OwnProps {\n    index: number;\n    fjernOpphold: (index: number) => void;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<OwnProps> = ({ index, fjernOpphold }) => {\n    const { i18n } = useUtenlandsoppholdIntl();\n\n    const {\n        watch,\n        trigger,\n        formState: { isSubmitted },\n    } = useFormContext<{ utenlandsoppholdNeste12Mnd: UtenlandsoppholdPeriode[] }>();\n\n    const alleAndreUtenlandsopphold = watch(`utenlandsoppholdNeste12Mnd`).filter((_u, i) => i !== index);\n    const fom = watch(`utenlandsoppholdNeste12Mnd.${index}.fom`);\n    const tom = watch(`utenlandsoppholdNeste12Mnd.${index}.tom`);\n\n    const minDateFom = dayjs(DATE_TODAY).toDate();\n    const maxDateFom = tom ? dayjs(tom).toDate() : dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    const minDateTom = dayjs(fom || DATE_TODAY).toDate();\n    const maxDateTom = dayjs(DATE_1_YEAR_FROM_NOW).toDate();\n\n    return (\n        <VStack gap=\"5\" align=\"start\">\n            <Select\n                name={`utenlandsoppholdNeste12Mnd.${index}.landkode`}\n                label={\n                    <FormattedMessage\n                        id={'SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Spørsmål.HvilketLandSkalDuBoI'}\n                    />\n                }\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandDuSkalBoIPåkreved')),\n                ]}\n            >\n                {createCountryOptions().map((o: Record<string, any>) => (\n                    <option key={o[0]} value={o[0]}>\n                        {o[1]}\n                    </option>\n                ))}\n            </Select>\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.fom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Fraogmed\" />}\n                minDate={dayjs(DATE_TODAY).toDate()}\n                maxDate={tom ? dayjs(tom).toDate() : dayjs(DATE_1_YEAR_FROM_NOW).toDate()}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandFomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.FraOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.FomErLikTom'), tom),\n                    isBeforeOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.FørTilDato'), tom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeFom', {\n                            min: formatDate(minDateFom),\n                            max: formatDate(maxDateFom),\n                        }),\n                        minDateFom,\n                        maxDateFom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: tom, isStartDate: false },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            <Datepicker\n                name={`utenlandsoppholdNeste12Mnd.${index}.tom`}\n                label={<FormattedMessage id=\"SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.Tilogmed\" />}\n                minDate={minDateTom}\n                maxDate={maxDateTom}\n                validate={[\n                    isRequired(i18n('SenereUtenlandsoppholdSteg.LeggTilUtenlandsopphold.LandTomDuSkalBoIPåkreved')),\n                    isValidDate(i18n('SenereUtenlandsoppholdSteg.TilOgMedDato.GyldigDato')),\n                    isDatesNotTheSame(i18n('SenereUtenlandsoppholdSteg.TomErLikFom'), fom),\n                    isAfterOrSame(i18n('SenereUtenlandsoppholdSteg.Utenlandsopphold.EtterFraDato'), fom),\n                    isDateWithinRange(\n                        i18n('SenereUtenlandsoppholdSteg.DateOutsideRangeTom', {\n                            min: formatDate(minDateTom),\n                            max: formatDate(maxDateTom),\n                        }),\n                        minDateTom,\n                        maxDateTom,\n                    ),\n                    isPeriodNotOverlappingOthers(\n                        i18n('SenereUtenlandsoppholdSteg.Valideringsfeil.Utenlandsopphold.Overlapp'),\n                        { date: fom, isStartDate: true },\n                        alleAndreUtenlandsopphold,\n                    ),\n                ]}\n                onChange={() => isSubmitted && trigger()}\n            />\n            {index > 0 && (\n                <Button\n                    type=\"button\"\n                    variant=\"tertiary\"\n                    size=\"small\"\n                    icon={<TrashIcon aria-hidden />}\n                    onClick={() => fjernOpphold(index)}\n                >\n                    <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.SlettOpphold\" />\n                </Button>\n            )}\n        </VStack>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n","import { Fragment, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PlusIcon } from '@navikt/aksel-icons';\nimport { Button, VStack } from '@navikt/ds-react';\nimport { Step } from '@navikt/fp-common';\nimport { Form, ErrorSummaryHookForm, StepButtonsHookForm } from '@navikt/fp-form-hooks';\nimport { StepConfig, UtenlandsoppholdPeriode, UtenlandsoppholdSenere } from '@navikt/fp-types';\n\nimport SenereUtenlandsoppholdPeriode from './SenereUtenlandsoppholdPeriode';\nimport UtenlandsoppholdIntlProvider from '../intl/UtenlandsoppholdIntlProvider';\n\nconst DEFAULT_PERIODE = {\n    fom: '',\n    tom: '',\n    landkode: '',\n} as UtenlandsoppholdPeriode;\n\nconst DEFAULT_FORM_VALUES = {\n    utenlandsoppholdNeste12Mnd: [DEFAULT_PERIODE],\n} as UtenlandsoppholdSenere;\n\nexport interface Props {\n    senereUtenlandsopphold?: UtenlandsoppholdSenere;\n    saveOnNext: (formValues: UtenlandsoppholdSenere) => void;\n    saveOnPrevious: (formValues: UtenlandsoppholdSenere | undefined) => void;\n    cancelApplication: () => void;\n    goToPreviousStep: () => void;\n    stepConfig: StepConfig[];\n    supportsTempSaving?: boolean;\n}\n\nconst SenereUtenlandsoppholdPanel: React.FunctionComponent<Props> = ({\n    saveOnNext,\n    saveOnPrevious,\n    cancelApplication,\n    goToPreviousStep,\n    senereUtenlandsopphold,\n    stepConfig,\n    supportsTempSaving = false,\n}) => {\n    const defaultValues = useMemo(() => senereUtenlandsopphold || DEFAULT_FORM_VALUES, [senereUtenlandsopphold]);\n    const formMethods = useForm<UtenlandsoppholdSenere>({\n        defaultValues,\n    });\n    const { fields, append, remove } = useFieldArray({\n        name: 'utenlandsoppholdNeste12Mnd',\n        control: formMethods.control,\n    });\n\n    const leggTilOpphold = useCallback(() => {\n        append(DEFAULT_PERIODE);\n    }, [append]);\n\n    const fjernOpphold = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove],\n    );\n\n    return (\n        <UtenlandsoppholdIntlProvider>\n            <Step onCancel={cancelApplication} steps={stepConfig} useNoTempSavingText={!supportsTempSaving}>\n                <Form formMethods={formMethods} onSubmit={saveOnNext}>\n                    <VStack gap=\"10\">\n                        <ErrorSummaryHookForm />\n                        <VStack gap=\"10\" align=\"start\">\n                            {fields.map((field, index) => (\n                                <Fragment key={field.id}>\n                                    <SenereUtenlandsoppholdPeriode index={index} fjernOpphold={fjernOpphold} />\n                                    {fields.length > 1 && <hr style={{ width: '100%' }} color=\"#99C4DD\" />}\n                                </Fragment>\n                            ))}\n                            <Button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                size=\"small\"\n                                icon={<PlusIcon aria-hidden />}\n                                onClick={leggTilOpphold}\n                            >\n                                <FormattedMessage id=\"SenereUtenlandsoppholdSteg.Knapp.LeggTilLand\" />\n                            </Button>\n                        </VStack>\n                        <StepButtonsHookForm<UtenlandsoppholdSenere>\n                            goToPreviousStep={goToPreviousStep}\n                            saveDataOnPreviousClick={saveOnPrevious}\n                        />\n                    </VStack>\n                </Form>\n            </Step>\n        </UtenlandsoppholdIntlProvider>\n    );\n};\n\nexport default SenereUtenlandsoppholdPanel;\n"],"names":["SenereUtenlandsoppholdPanel","index","fjernOpphold","i18n","useUtenlandsoppholdIntl","watch","trigger","isSubmitted","useFormContext","alleAndreUtenlandsopphold","_u","i","fom","tom","minDateFom","dayjs","DATE_TODAY","maxDateFom","DATE_1_YEAR_FROM_NOW","minDateTom","maxDateTom","jsxs","VStack","jsx","Select","FormattedMessage","isRequired","createCountryOptions","o","Datepicker","isValidDate","isDatesNotTheSame","isBeforeOrSame","isDateWithinRange","formatDate","isPeriodNotOverlappingOthers","isAfterOrSame","Button","TrashIcon","DEFAULT_PERIODE","DEFAULT_FORM_VALUES","saveOnNext","saveOnPrevious","cancelApplication","goToPreviousStep","senereUtenlandsopphold","stepConfig","supportsTempSaving","defaultValues","useMemo","formMethods","useForm","fields","append","remove","useFieldArray","leggTilOpphold","useCallback","UtenlandsoppholdIntlProvider","Step","Form","ErrorSummaryHookForm","field","Fragment","SenereUtenlandsoppholdPeriode","PlusIcon","StepButtonsHookForm","SenereUtenlandsoppholdPanel$1"],"mappings":"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"}