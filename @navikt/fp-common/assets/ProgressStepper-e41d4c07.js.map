{"version":3,"file":"ProgressStepper-e41d4c07.js","sources":["../../../../node_modules/.pnpm/@navikt+ds-icons@3.4.3_@types+react@18.2.20_react@18.2.0/node_modules/@navikt/ds-icons/esm/Collapse.js","../../src/common/components/progress-stepper/ProgressStepper.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgCollapse = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"m12 6.586 7.707 7.707-1.414 1.414L12 9.414l-6.293 6.293-1.414-1.414L12 6.586Z\", fill: \"currentColor\" })));\n});\nexport default SvgCollapse;\n//# sourceMappingURL=Collapse.js.map","import { BodyShort, Heading, Stepper } from '@navikt/ds-react';\nimport { StepperStepProps } from '@navikt/ds-react/esm/stepper/Step';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Back, Collapse, Expand } from '@navikt/ds-icons';\nimport { guid } from './../../utils/guid';\nimport './progress-stepper.css';\n\nexport interface ProgressStep extends Pick<StepperStepProps, 'completed'> {\n    id: string;\n    index: number;\n    label: string;\n    href?: string;\n}\n\ninterface Labels {\n    showAllStepsLabel?: string;\n    goToPreviousStepLabel: string;\n    allStepsSectionAriaLabel?: string;\n    navigasjonAriaLabel?: string;\n    stepProgressLabelFunc: (currentStep: number, totalSteps: number) => string;\n}\n\nconst defaultLabels: Labels = {\n    showAllStepsLabel: 'Vis alle steg',\n    goToPreviousStepLabel: 'Gå til forrige steg',\n    allStepsSectionAriaLabel: 'Alle steg',\n    navigasjonAriaLabel: 'Navigasjon i søknaden',\n    stepProgressLabelFunc: (currentStep, totalSteps) => `Steg ${currentStep} av ${totalSteps}`,\n};\n\nexport interface ProgressStepperProps {\n    steps: ProgressStep[];\n    currentStepIndex: number;\n    labels?: Labels;\n    titleHeadingLevel?: '1' | '2';\n    allStepsHeader?: React.ReactNode;\n    allStepsFooter?: React.ReactNode;\n    includeBackLink?: boolean;\n    setFocusOnHeadingOnMount?: boolean;\n    onStepSelect?: (step: ProgressStep) => void;\n}\n\nconst ProgressStepper: React.FunctionComponent<ProgressStepperProps> = ({\n    steps,\n    currentStepIndex,\n    allStepsHeader,\n    allStepsFooter,\n    labels = defaultLabels,\n    titleHeadingLevel = '1',\n    includeBackLink = false,\n    setFocusOnHeadingOnMount = true,\n    onStepSelect,\n}) => {\n    const [allStepsVisible, setAllStepsVisible] = useState(false);\n\n    const step = steps[currentStepIndex];\n    const currentStepNumber = currentStepIndex + 1;\n    const totalSteps = steps.length;\n    const progress = (100 / totalSteps) * currentStepNumber;\n    const contentContainerID = guid();\n\n    const handleStepChange = (idx: number) => {\n        if (onStepSelect) {\n            onStepSelect(steps[idx - 1]);\n        }\n    };\n\n    const handleBackClick = () => {\n        if (onStepSelect) {\n            onStepSelect(steps[currentStepIndex - 1]);\n        }\n    };\n\n    const currentStepInfo = (\n        <BodyShort as=\"div\">{labels.stepProgressLabelFunc(currentStepNumber, totalSteps)}</BodyShort>\n    );\n    const includeGotoPreviousStepLink = onStepSelect !== undefined && includeBackLink === true;\n    const currentStepInfoInHeader = includeGotoPreviousStepLink ? (\n        <div className=\"progressStepper__heading__stepInfo\">{currentStepInfo}</div>\n    ) : undefined;\n\n    const headingRef = useRef<HTMLHeadingElement>(null);\n    useEffect(() => {\n        if (setFocusOnHeadingOnMount && headingRef.current) {\n            headingRef.current.focus();\n        }\n    }, [setFocusOnHeadingOnMount]);\n\n    return (\n        <div className=\"progressStepper\">\n            <div className=\"progressStepper__heading\">\n                <Heading\n                    tabIndex={-1}\n                    size=\"medium\"\n                    level={titleHeadingLevel}\n                    className=\"progressStepper__heading__title\"\n                    ref={headingRef}\n                >\n                    {currentStepInfoInHeader}\n                    {step.label}\n                </Heading>\n            </div>\n            <div className=\"progressStepper__progressBarWrapper\" role=\"presentation\" aria-hidden={true}>\n                <div className=\"progressStepper__progressBar\">\n                    <div className=\"progressStepper__progressBar__progress\" style={{ width: `${progress}%` }} />\n                </div>\n            </div>\n            <nav aria-label={labels.navigasjonAriaLabel}>\n                <div className=\"progressStepper__stepsInfo\">\n                    {includeGotoPreviousStepLink ? (\n                        <BodyShort>\n                            {currentStepIndex > 0 && (\n                                <button\n                                    type=\"button\"\n                                    onClick={handleBackClick}\n                                    className=\"navds-read-more__button navds-body-short progressStepper__backLink\"\n                                >\n                                    <Back className=\"progressStepper__backLink__icon\" aria-hidden />\n                                    {labels.goToPreviousStepLabel}\n                                </button>\n                            )}\n                        </BodyShort>\n                    ) : (\n                        <>{currentStepInfo}</>\n                    )}\n                    <button\n                        type=\"button\"\n                        className=\"navds-read-more__button navds-body-short\"\n                        aria-controls={contentContainerID}\n                        aria-expanded={allStepsVisible}\n                        onClick={() => {\n                            setAllStepsVisible(!allStepsVisible);\n                        }}\n                    >\n                        {allStepsVisible === false && (\n                            <Expand className=\"progressStepper__toggleAllStepsIcon\" aria-hidden />\n                        )}\n                        {allStepsVisible && <Collapse className=\"progressStepper__toggleAllStepsIcon\" aria-hidden />}\n                    </button>\n                </div>\n                <div id={contentContainerID} aria-hidden={allStepsVisible === false} aria-live=\"polite\">\n                    {allStepsVisible && (\n                        <section className=\"progressStepper__allSteps\" aria-label={labels.allStepsSectionAriaLabel}>\n                            {allStepsHeader && (\n                                <BodyShort as=\"div\" className=\"progressStepper__allSteps__header\">\n                                    {allStepsHeader}\n                                </BodyShort>\n                            )}\n                            <Stepper\n                                activeStep={currentStepNumber}\n                                onStepChange={onStepSelect ? handleStepChange : undefined}\n                            >\n                                {steps.map((s) => (\n                                    <Stepper.Step\n                                        key={s.id}\n                                        completed={s.completed}\n                                        interactive={onStepSelect !== undefined && s.completed === true}\n                                    >\n                                        {s.label}\n                                    </Stepper.Step>\n                                ))}\n                            </Stepper>\n                            {allStepsFooter && (\n                                <BodyShort as=\"div\" className=\"progressStepper__allSteps__footer\">\n                                    {allStepsFooter}\n                                </BodyShort>\n                            )}\n                        </section>\n                    )}\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nexport default ProgressStepper;\n"],"names":["__rest","this","s","e","t","p","i","SvgCollapse","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","Collapse","defaultLabels","currentStep","totalSteps","ProgressStepper","steps","currentStepIndex","allStepsHeader","allStepsFooter","labels","titleHeadingLevel","includeBackLink","setFocusOnHeadingOnMount","onStepSelect","allStepsVisible","setAllStepsVisible","useState","step","currentStepNumber","progress","contentContainerID","guid","handleStepChange","idx","handleBackClick","currentStepInfo","jsx","BodyShort","includeGotoPreviousStepLink","currentStepInfoInHeader","headingRef","useRef","useEffect","jsxs","Heading","Back","Fragment","Expand","Stepper","ProgressStepper$1"],"mappings":"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","x_google_ignoreList":[0]}