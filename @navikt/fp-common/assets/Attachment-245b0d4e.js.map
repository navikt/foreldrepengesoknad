{"version":3,"file":"Attachment-245b0d4e.js","sources":["../../src/common/assets/vedlegg-ikon/VedleggIkon.tsx","../../../../node_modules/.pnpm/bytes@3.1.2/node_modules/bytes/index.js","../../src/common/utils/globalUtil.ts","../../src/common/components/attachment/Attachment.tsx"],"sourcesContent":["const VedleggIkon = (props: any) => (\n    <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={20} height={20} {...props}>\n        <path\n            d=\"M3.398 19.372c-.43 0-.843-.088-1.24-.264a3.57 3.57 0 0 1-1.084-.752C.358 17.64 0 16.771 0 15.75c0-1.022.358-1.891 1.074-2.607l11.23-11.915c.43-.442.915-.764 1.456-.966a4.034 4.034 0 0 1 1.66-.254c.566.032 1.13.182 1.69.449a5.93 5.93 0 0 1 1.581 1.123c.43.443.765.967 1.006 1.572.241.606.355 1.24.342 1.905a5.185 5.185 0 0 1-.39 1.894 4.908 4.908 0 0 1-1.016 1.563l-8.496 9.023a.614.614 0 0 1-.879.04.631.631 0 0 1-.186-.44.627.627 0 0 1 .166-.46l8.496-9.023a3.66 3.66 0 0 0 .762-1.191c.182-.456.28-.931.293-1.426 0-.495-.085-.967-.254-1.416-.17-.45-.417-.83-.742-1.143a4.283 4.283 0 0 0-2.207-1.2c-.872-.19-1.667.08-2.383.81L1.973 14a2.37 2.37 0 0 0-.723 1.738c0 .677.24 1.257.723 1.738.221.222.462.388.722.499.26.11.534.153.82.126.274-.013.55-.087.83-.224.28-.137.538-.329.772-.576l8.926-9.492c.17-.17.348-.427.537-.772.189-.345.114-.68-.225-1.006-.182-.195-.338-.303-.468-.322-.13-.02-.215-.03-.254-.03a1.005 1.005 0 0 0-.39.147 2.738 2.738 0 0 0-.45.342l-6.719 7.148a.556.556 0 0 1-.43.196.652.652 0 0 1-.449-.176.556.556 0 0 1-.195-.43c0-.17.059-.319.176-.449l6.719-7.168c.273-.26.543-.462.81-.605.267-.144.537-.228.81-.254.222-.013.482.02.782.097.3.078.612.28.937.606.495.482.713 1.048.655 1.699-.059.651-.375 1.263-.948 1.836L6.016 18.18a4.242 4.242 0 0 1-1.153.83 3.39 3.39 0 0 1-1.289.341.453.453 0 0 0-.088.01.453.453 0 0 1-.088.01z\"\n            fill=\"#0067C5\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\nexport default VedleggIkon;\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","import Bytes from 'bytes';\nimport { Attachment } from '../types';\n\nexport const assertUnreachable = (_x: never, message?: string): never => {\n    throw new Error(message === undefined ? 'This should never happen.' : message);\n};\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false,\n    });\n};\n\nexport const deleteAttachment = (attachments: Attachment[], deleted: Attachment): Attachment[] => {\n    return attachments.filter((att) => att !== deleted);\n};\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport { useIntl } from 'react-intl';\n\nimport { Link, Loader } from '@navikt/ds-react';\nimport SlettKnapp from '../slett-knapp/SlettKnapp';\nimport { Attachment as AttachmentType } from '../../types';\nimport bemUtils from '../../utils/bemUtils';\nimport VedleggIkon from '../../assets/vedlegg-ikon/VedleggIkon';\nimport { bytesString } from '../../utils/globalUtil';\nimport intlUtils from '../../utils/intlUtils';\n\nimport './attachment.less';\n\nexport interface Props {\n    attachment: AttachmentType;\n    showFileSize?: boolean;\n    onDelete?: (file: AttachmentType) => void;\n}\n\nconst Attachment: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const intl = useIntl();\n    const bem = bemUtils('attachment');\n    const cls = classnames(bem.block, {\n        [bem.modifier('pending')]: attachment.pending,\n    });\n\n    return (\n        <div className={cls}>\n            {attachment.pending && (\n                <div className={bem.element('spinner')}>\n                    <Loader size=\"small\" />\n                </div>\n            )}\n            <VedleggIkon className={bem.element('icon')} width={20} height={20} />\n            <div className={bem.element('filename')}>\n                {attachment.url ? (\n                    <Link href={attachment.url} target=\"_blank\">\n                        {attachment.filename}\n                    </Link>\n                ) : (\n                    <span>{attachment.filename}</span>\n                )}\n                {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n            </div>\n            {onDelete && (\n                <span className={bem.element('deleteButton')}>\n                    <SlettKnapp\n                        onClick={() => onDelete(attachment)}\n                        ariaLabel={intlUtils(intl, 'vedlegg.arialabel.slett', { navn: attachment.filename })}\n                    />\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default Attachment;\n"],"names":["VedleggIkon","props","jsx","bytesModule","bytes","format","parse","formatThousandsRegExp","formatDecimalsRegExp","map","parseRegExp","value","options","mag","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","val","str","s","i","results","floatValue","bytesString","Bytes","deleteAttachment","attachments","deleted","att","Attachment","attachment","showFileSize","onDelete","intl","useIntl","bem","bemUtils","cls","classnames","jsxs","Loader","Link","SlettKnapp","intlUtils","Attachment$1"],"mappings":"oWAAA,MAAAA,EAAAC,GAAAC,EAAA,IAAA,MAAA,CAAA,UAAA,QAAA,KAAA,MAAA,cAAA,OAAA,MAAA,GAAA,OAAA,GAAA,GAAAD,EAAA,SAAAC,EAAA,IAEQ,OAAC,CAAA,EAAA,g0CACK,KAAA,UACG,SAAA,SACI,CACb,CAAA,CAAA;;;;;GCQRC,EAAc,QAAGC,EACID,EAAA,QAAA,OAAGE,EACJF,EAAA,QAAA,MAAGG,EAOvB,IAAIC,EAAwB,wBAExBC,EAAuB,wBAEvBC,EAAM,CACR,EAAI,EACJ,GAAI,KACJ,GAAI,GAAK,GACT,GAAI,GAAK,GACT,GAAI,KAAK,IAAI,KAAM,CAAC,EACpB,GAAI,KAAK,IAAI,KAAM,CAAC,CACtB,EAEIC,EAAc,gDAiBlB,SAASN,EAAMO,EAAOC,EAAS,CAC7B,OAAI,OAAOD,GAAU,SACZL,EAAMK,CAAK,EAGhB,OAAOA,GAAU,SACZN,EAAOM,EAAOC,CAAO,EAGvB,IACT,CAoBA,SAASP,EAAOM,EAAOC,EAAS,CAC9B,GAAI,CAAC,OAAO,SAASD,CAAK,EACxB,OAAO,KAGT,IAAIE,EAAM,KAAK,IAAIF,CAAK,EACpBG,EAAsBF,GAAWA,EAAQ,oBAAuB,GAChEG,EAAiBH,GAAWA,EAAQ,eAAkB,GACtDI,EAAiBJ,GAAWA,EAAQ,gBAAkB,OAAaA,EAAQ,cAAgB,EAC3FK,EAAgB,GAAQL,GAAWA,EAAQ,eAC3CM,EAAQN,GAAWA,EAAQ,MAAS,IAEpC,CAACM,GAAQ,CAACT,EAAIS,EAAK,YAAa,CAAA,KAC9BL,GAAOJ,EAAI,GACbS,EAAO,KACEL,GAAOJ,EAAI,GACpBS,EAAO,KACEL,GAAOJ,EAAI,GACpBS,EAAO,KACEL,GAAOJ,EAAI,GACpBS,EAAO,KACEL,GAAOJ,EAAI,GACpBS,EAAO,KAEPA,EAAO,KAIX,IAAIC,EAAMR,EAAQF,EAAIS,EAAK,YAAa,CAAA,EACpCE,EAAMD,EAAI,QAAQH,CAAa,EAEnC,OAAKC,IACHG,EAAMA,EAAI,QAAQZ,EAAsB,IAAI,GAG1CM,IACFM,EAAMA,EAAI,MAAM,GAAG,EAAE,IAAI,SAAUC,EAAGC,EAAG,CACvC,OAAOA,IAAM,EACTD,EAAE,QAAQd,EAAuBO,CAAkB,EACnDO,CACV,CAAK,EAAE,KAAK,GAAG,GAGND,EAAML,EAAgBG,CAC/B,CAaA,SAASZ,EAAMa,EAAK,CAClB,GAAI,OAAOA,GAAQ,UAAY,CAAC,MAAMA,CAAG,EACvC,OAAOA,EAGT,GAAI,OAAOA,GAAQ,SACjB,OAAO,KAIT,IAAII,EAAUb,EAAY,KAAKS,CAAG,EAC9BK,EACAN,EAAO,IAYX,OAVKK,GAMHC,EAAa,WAAWD,EAAQ,CAAC,CAAC,EAClCL,EAAOK,EAAQ,CAAC,EAAE,YAAW,IAL7BC,EAAa,SAASL,EAAK,EAAE,EAC7BD,EAAO,KAOL,MAAMM,CAAU,EACX,KAGF,KAAK,MAAMf,EAAIS,CAAI,EAAIM,CAAU,CAC1C,8BClKaC,EAAerB,GACjBsB,EAAMtB,EAAO,CAChB,cAAe,IACf,mBAAoB,IACpB,cAAe,EACf,cAAe,EAAA,CAClB,EAGQuB,EAAmB,CAACC,EAA2BC,IACjDD,EAAY,OAAQE,GAAQA,IAAQD,CAAO,ECItD,MAAAE,EAAA,CAAA,CAAA,WAAAC,EAAA,aAAAC,EAAA,SAAAC,CAAA,IAAA,CACI,MAAAC,EAAAC,IACAC,EAAAC,EAAA,YAAA,EACAC,EAAAC,EAAAH,EAAA,MAAA,CAAkC,CAAAA,EAAA,SAAA,SAAA,CAAA,EAAAL,EAAA,OACQ,CAAA,EAG1C,OAAAS,EAAA,KAAA,MAAA,CAAA,UAAAF,EAAA,SAAA,CAESP,EAAA,SAAA9B,EAAA,IAAA,MAAA,CAAA,UAAAmC,EAAA,QAAA,SAAA,EAAA,SAAAnC,EAAAA,IAAAwC,EAAA,CAAA,KAAA,OAAA,CAAA,EAAA,EAGGxC,EAAAA,IAAAF,EAAA,CAAA,UAAAqC,EAAA,QAAA,MAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAEgEI,EAAA,KAAA,MAAA,CAAA,UAAAJ,EAAA,QAAA,UAAA,EAAA,SAAA,CAE/DL,EAAA,IAAA9B,EAAAA,IAAAyC,EAAA,CAAA,KAAAX,EAAA,IAAA,OAAA,SAAA,SAAAA,EAAA,QAAA,CAAA,EAAA9B,EAAA,IAAA,OAAA,CAAA,SAAA8B,EAAA,SAAA,EAK8BC,GAAA/B,EAAAA,IAAA,MAAA,CAAA,SAAAuB,EAAAO,EAAA,QAAA,EAAA,CAEyB,EAAA,EAC5DE,GAAAhC,EAAAA,IAAA,OAAA,CAAA,UAAAmC,EAAA,QAAA,cAAA,EAAA,SAAAnC,EAAA,IAGQ0C,EAAC,CAAA,QAAA,IAAAV,EAAAF,CAAA,EACqC,UAAAa,EAAAV,EAAA,0BAAA,CAAA,KAAAH,EAAA,SAAA,CACiD,CAAA,EAAA,CAE3F,CAAA,CAAA,CAIhB,EAEAc,EAAAf","x_google_ignoreList":[1]}