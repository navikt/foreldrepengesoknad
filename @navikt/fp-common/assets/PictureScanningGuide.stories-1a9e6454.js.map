{"version":3,"file":"PictureScanningGuide.stories-1a9e6454.js","sources":["../../src/common/assets/status-ikon/StatusIkon.tsx","../../src/common/components/picture-scanning-guide/PictureScanningExample.tsx","../../src/common/assets/scanning-ikon/ScanningIkon.tsx","../../src/common/components/picture-scanning-guide/PictureScanningGuide.tsx"],"sourcesContent":["import React from 'react';\n\nexport type StatusKey = 'suksess' | 'advarsel' | 'feil';\n\nexport interface OwnProps {\n    status: StatusKey;\n    title?: string;\n    size?: number;\n}\n\ntype Props = OwnProps;\n\nconst FeilSirkelFyll: React.FunctionComponent<Props> = (props) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 24 24\" width={props.size} height={props.size}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path\n                    d=\"M11.999 0C5.395 0 .013 5.372 0 11.976a11.923 11.923 0 0 0 3.498 8.493A11.925 11.925 0 0 0 11.977 24H12c6.603 0 11.986-5.373 12-11.978C24.013 5.406 18.64.012 11.999 0z\"\n                    fillRule=\"nonzero\"\n                    fill=\"#A13A28\"\n                />\n                <path\n                    d=\"M12 10.651l3.372-3.372a.954.954 0 1 1 1.349 1.35L13.349 12l3.372 3.372a.954.954 0 1 1-1.35 1.349L12 13.349 8.628 16.72a.954.954 0 1 1-1.349-1.35L10.651 12 7.28 8.628A.954.954 0 1 1 8.63 7.28L12 10.651z\"\n                    fill=\"#FFF\"\n                    fillRule=\"nonzero\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nconst InfoSirkelFyll: React.FunctionComponent<Props> = (props) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 24 24\" width={props.size} height={props.size}>\n            {props.title && <title>{props.title}</title>}\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path\n                    d=\"M12.205-.004l-.214.002a12.225 12.225 0 0 0-8.517 3.659C1.179 5.977-.053 9.013.002 12.208c.115 6.613 5.296 11.793 11.795 11.793l.212-.002c6.726-.116 12.105-5.595 11.99-12.21C23.883 5.178 18.702-.003 12.204-.003z\"\n                    fill=\"#FFA733\"\n                    fillRule=\"nonzero\"\n                />\n                <path d=\"M12.027 19H12A1.499 1.499 0 0 1 11.973 16L12 16a1.501 1.501 0 0 1 .027 3z\" fill=\"#3E3832\" />\n                <path d=\"M12 5a1 1 0 0 1 1 1v7a1 1 0 0 1-2 0V6a1 1 0 0 1 1-1z\" fill=\"#3E3832\" fillRule=\"nonzero\" />\n            </g>\n        </svg>\n    );\n};\n\nconst OkSirkelFyll: React.FunctionComponent<Props> = (props) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 24 24\" width={props.size} height={props.size}>\n            <g fillRule=\"nonzero\" fill=\"none\">\n                <path\n                    d=\"M12 0C5.383 0 0 5.384 0 12s5.383 12 12 12c6.616 0 12-5.384 12-12S18.616 0 12 0z\"\n                    fill=\"#1C6937\"\n                />\n                <path\n                    d=\"M9.64 14.441l6.46-5.839a.997.997 0 0 1 1.376.044.923.923 0 0 1-.046 1.334l-7.15 6.464a.993.993 0 0 1-.662.252.992.992 0 0 1-.69-.276l-2.382-2.308a.923.923 0 0 1 0-1.334.997.997 0 0 1 1.377 0l1.717 1.663z\"\n                    fill=\"#FFF\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nconst StatusIkon = (props: Props) => {\n    const { size = 24 } = props;\n    switch (props.status) {\n        case 'suksess':\n            return <OkSirkelFyll {...props} size={size} />;\n        case 'feil':\n            return <FeilSirkelFyll {...props} size={size} />;\n        case 'advarsel':\n            return <InfoSirkelFyll {...props} size={size} />;\n    }\n};\n\nexport default StatusIkon;\n","import React from 'react';\nimport bemUtils from './../../utils/bemUtils';\nimport StatusIkon, { StatusKey } from './../../assets/status-ikon/StatusIkon';\nimport { Heading } from '@navikt/ds-react';\n\ninterface Props {\n    image: React.ReactNode;\n    status: StatusKey;\n    statusText: string;\n    description: string;\n}\n\nconst bem = bemUtils('pictureScanningGuide').child('example');\n\nconst PictureScanningExample: React.FunctionComponent<Props> = ({ image, status, statusText, description }) => (\n    <div className={bem.block}>\n        <div className={bem.element('image')}>{image}</div>\n        <Heading size=\"small\" as=\"div\" className={bem.element('title')}>\n            <span className={bem.element('statusIcon')} role=\"presentation\">\n                <StatusIkon status={status} />\n            </span>\n            {statusText}\n        </Heading>\n        <div className={bem.element('description')}>{description}</div>\n    </div>\n);\n\nexport default PictureScanningExample;\n","import React from 'react';\n\ninterface ScanProps {\n    title?: string;\n    height?: number;\n}\n\ntype ScanIconStatus = 'good' | 'keystone' | 'horizontal' | 'shadow';\n\nexport interface Props extends ScanProps {\n    status: ScanIconStatus;\n}\n\nconst GoodScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\n            {title && <title>{title}</title>}\n            <defs>\n                <filter\n                    x=\"-10.6%\"\n                    y=\"-5.4%\"\n                    width=\"121.2%\"\n                    height=\"115.1%\"\n                    filterUnits=\"objectBoundingBox\"\n                    id=\"good_1__a\"\n                >\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\n                </filter>\n                <path id=\"good_1__b\" d=\"M8 11h66v93H8z\" />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M1 1h81v119H1z\" fill=\"#BABABA\" stroke=\"#000\" strokeOpacity={0.85} strokeWidth={2} />\n                <use fill=\"#000\" filter=\"url(#good_1__a)\" xlinkHref=\"#good_1__b\" />\n                <use fill=\"#FFF\" xlinkHref=\"#good_1__b\" />\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\n                    <path d=\"M15.5 30.5h53M15.5 44.5h50M15.5 23.5h45M15.5 37.5h43\" />\n                </g>\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\n                    <path d=\"M15.5 77.5h41M15.5 63.5h50M15.5 84.5h45M15.5 70.5h43\" />\n                </g>\n            </g>\n        </svg>\n    );\n};\nconst KeystoneScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\n            {title && <title>{title}</title>}\n            <desc>Bildet er ikke tatt ovenfra</desc>\n            <defs>\n                <filter\n                    x=\"-9.7%\"\n                    y=\"-7.2%\"\n                    width=\"119.4%\"\n                    height=\"120.3%\"\n                    filterUnits=\"objectBoundingBox\"\n                    id=\"keystone_2__a\"\n                >\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\n                </filter>\n                <path id=\"keystone_2__b\" d=\"M16.528 20h49.06L78 89H6z\" />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M1 1h81v119H1z\" fill=\"#BABABA\" stroke=\"#000\" strokeOpacity={0.85} strokeWidth={2} />\n                <use fill=\"#000\" filter=\"url(#keystone_2__a)\" xlinkHref=\"#keystone_2__b\" />\n                <use fill=\"#FFF\" xlinkHref=\"#keystone_2__b\" />\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\n                    <path d=\"M20 41.5h37M21 35.5h39M22 29.5h36M19 47.5h43\" />\n                </g>\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\n                    <path d=\"M15 70.5h48M16 64.5h45M17 58.5h38M14 76.5h45\" />\n                </g>\n            </g>\n        </svg>\n    );\n};\nconst HorizontalScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\n            {title && <title>{title}</title>}\n            <desc>Bildet har ikke riktig retning</desc>\n            <defs>\n                <filter\n                    x=\"-10.6%\"\n                    y=\"-11.1%\"\n                    width=\"121.2%\"\n                    height=\"131.1%\"\n                    filterUnits=\"objectBoundingBox\"\n                    id=\"horizontal_3__a\"\n                >\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\n                </filter>\n                <path id=\"horizontal_3__b\" d=\"M8 36h66v45H8z\" />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M1 1h81v119H1z\" fill=\"#BABABA\" stroke=\"#000\" strokeOpacity={0.85} strokeWidth={2} />\n                <use fill=\"#000\" filter=\"url(#horizontal_3__a)\" xlinkHref=\"#horizontal_3__b\" />\n                <use fill=\"#FFF\" xlinkHref=\"#horizontal_3__b\" />\n                <path\n                    stroke=\"#B7B4B4\"\n                    strokeWidth={2}\n                    strokeLinecap=\"square\"\n                    d=\"M35 44v28M30 44v22M25 44v19M20 44v24M52 44v24M57 44v30M47 44v27M62 44v26\"\n                />\n            </g>\n        </svg>\n    );\n};\nconst ShadowScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\n    return (\n        <svg role=\"img\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\n            {title && <title>{title}</title>}\n            <desc>Bildet har har skygge oppå legeerklæring</desc>\n            <defs>\n                <filter\n                    x=\"-10%\"\n                    y=\"-5.2%\"\n                    width=\"120%\"\n                    height=\"114.6%\"\n                    filterUnits=\"objectBoundingBox\"\n                    id=\"shadow_4__a\"\n                >\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\n                </filter>\n                <path id=\"shadow_4__b\" d=\"M6 12h70v96H6z\" />\n            </defs>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path strokeOpacity={0.85} stroke=\"#000\" strokeWidth={2} fill=\"#BABABA\" d=\"M1 1h81v119H1z\" />\n                <g transform=\"translate(1 1)\">\n                    <use fill=\"#000\" filter=\"url(#shadow_4__a)\" xlinkHref=\"#shadow_4__b\" />\n                    <use fill=\"#FFF\" xlinkHref=\"#shadow_4__b\" />\n                </g>\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\n                    <path d=\"M15.5 30.5h53M15.5 44.5h50M15.5 23.5h45M15.5 37.5h43\" />\n                </g>\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\n                    <path d=\"M15.5 77.5h41M15.5 63.5h50M15.5 84.5h45M15.5 70.5h43\" />\n                </g>\n                <path\n                    d=\"M53.57 120C65.186 86.185 63.996 65.163 50 56.935 29.004 44.593 1 69.565 1 90v30h52.57z\"\n                    fillOpacity={0.3}\n                    fill=\"#7C7C7C\"\n                />\n            </g>\n        </svg>\n    );\n};\nconst ScanningIkon = (props: Props) => {\n    const { height = 100, title } = props;\n    switch (props.status) {\n        case 'good':\n            return <GoodScanning title={title} height={height} />;\n        case 'keystone':\n            return <KeystoneScanning title={title} height={height} />;\n        case 'horizontal':\n            return <HorizontalScanning title={title} height={height} />;\n        case 'shadow':\n            return <ShadowScanning title={title} height={height} />;\n        default:\n            return <GoodScanning title={title} height={height} />;\n    }\n};\n\nexport default ScanningIkon;\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PictureScanningExample from './PictureScanningExample';\nimport bemUtils from './../../utils/bemUtils';\nimport intlHelper from './../../utils/intlUtils';\nimport ScanningIkon from './../../assets/scanning-ikon/ScanningIkon';\nimport { Heading, Link } from '@navikt/ds-react';\nimport classNames from 'classnames';\n\nimport './pictureScanningGuide.less';\n\nexport interface PictureScanningGuideProps {\n    backgroundColor: 'white' | 'blue';\n}\n\nconst PictureScanningGuide: React.FunctionComponent<PictureScanningGuideProps> = ({ backgroundColor = 'blue' }) => {\n    const intl = useIntl();\n    const svgIconHeight = 100;\n    const bem = bemUtils('pictureScanningGuide');\n\n    return (\n        <div\n            className={classNames(bem.block, backgroundColor === 'blue' ? bem.modifier('blue') : bem.modifier('white'))}\n        >\n            <Heading level=\"2\" size=\"medium\">\n                <FormattedMessage id=\"psg.innholdstittel\" />\n            </Heading>\n\n            <Heading size=\"small\" level=\"3\" className={bem.element('title')}>\n                <FormattedMessage id=\"psg.section1.tittel\" />\n            </Heading>\n            <ul>\n                <FormattedMessage tagName=\"li\" id=\"psg.section1.liste.punkt1\" />\n                <FormattedMessage\n                    tagName=\"li\"\n                    id=\"psg.section1.liste.punkt2\"\n                    values={{\n                        i: (msg: any) => <i>{msg}</i>,\n                    }}\n                />\n                <FormattedMessage tagName=\"li\" id=\"psg.section1.liste.punkt3\" />\n            </ul>\n            <Heading size=\"small\" level=\"3\" className={bem.element('title')}>\n                <FormattedMessage id=\"psg.section2.tittel\" />\n            </Heading>\n            <ul>\n                <FormattedMessage tagName=\"li\" id=\"psg.section2.liste.punkt1\" />\n                <FormattedMessage tagName=\"li\" id=\"psg.section2.liste.punkt2\" />\n                <FormattedMessage tagName=\"li\" id=\"psg.section2.liste.punkt3\" />\n            </ul>\n            <div className={bem.element('examples')}>\n                <Heading size=\"small\" level=\"3\" className={bem.element('title')}>\n                    <FormattedMessage id=\"psg.icon.heading\" />\n                </Heading>\n                <div className={bem.element('body')}>\n                    <div className={bem.element('cell')}>\n                        <PictureScanningExample\n                            image={<ScanningIkon status=\"good\" height={svgIconHeight} />}\n                            status=\"suksess\"\n                            statusText={intlHelper(intl, 'psg.good')}\n                            description={intlHelper(intl, 'psg.icon.label.good')}\n                        />\n                    </div>\n                    <div className={bem.element('cell')}>\n                        <PictureScanningExample\n                            image={<ScanningIkon status=\"keystone\" height={svgIconHeight} />}\n                            status=\"feil\"\n                            statusText={intlHelper(intl, 'psg.bad')}\n                            description={intlHelper(intl, 'psg.icon.label.keystone')}\n                        />\n                    </div>\n                    <div className={bem.element('cell')}>\n                        <PictureScanningExample\n                            image={<ScanningIkon status=\"horizontal\" height={svgIconHeight} />}\n                            status=\"feil\"\n                            statusText={intlHelper(intl, 'psg.bad')}\n                            description={intlHelper(intl, 'psg.icon.label.horizontal')}\n                        />\n                    </div>\n                    <div className={bem.element('cell')}>\n                        <PictureScanningExample\n                            image={<ScanningIkon status=\"shadow\" height={svgIconHeight} />}\n                            status=\"feil\"\n                            statusText={intlHelper(intl, 'psg.bad')}\n                            description={intlHelper(intl, 'psg.icon.label.shadow')}\n                        />\n                    </div>\n                </div>\n                <Link target=\"_blank\" href={intlHelper(intl, 'psg.lenkepanel.url')}>\n                    <FormattedMessage id=\"psg.lenkepanel.text\" />\n                </Link>\n            </div>\n        </div>\n    );\n};\nexport default PictureScanningGuide;\n"],"names":["FeilSirkelFyll","props","jsx","jsxs","InfoSirkelFyll","OkSirkelFyll","StatusIkon","size","bem","bemUtils","PictureScanningExample","image","status","statusText","description","Heading","GoodScanning","title","height","KeystoneScanning","HorizontalScanning","ShadowScanning","ScanningIkon","PictureScanningGuide","backgroundColor","intl","useIntl","svgIconHeight","classNames","FormattedMessage","msg","intlHelper","Link","PictureScanningGuide$1"],"mappings":"sZAYA,MAAAA,EAAAC,GACIC,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,YAAA,MAAAD,EAAA,KAAA,OAAAA,EAAA,KAAA,SAAAE,EAAA,IAAA,CAAA,KAAA,OAAA,SAAA,UAAA,SAAA,CAGYD,EAAA,OAAC,CAAA,EAAA,yKACK,SAAA,UACO,KAAA,SACJ,CAAA,EACTA,EACA,OAAC,CAAA,EAAA,4MACK,KAAA,OACG,SAAA,SACI,CAAA,CACb,CAAA,CAAA,CAAA,CAAA,EAMhBE,EAAAH,GACIE,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,YAAA,MAAAF,EAAA,KAAA,OAAAA,EAAA,KAAA,SAAA,CAESA,EAAA,OAAAC,EAAA,QAAA,CAAA,SAAAD,EAAA,MAAA,EAAmCE,EAAA,IAAA,CAAA,KAAA,OAAA,SAAA,UAAA,SAAA,CAEhCD,EAAA,OAAC,CAAA,EAAA,qNACK,KAAA,UACG,SAAA,SACI,CAAA,EACbA,EAAA,OAAA,CAAA,EAAA,4EAAA,KAAA,UAAA,EACmGA,EAAA,OAAA,CAAA,EAAA,uDAAA,KAAA,UAAA,SAAA,UAAA,CACF,EAAA,CACrG,CAAA,CAAA,EAKZG,EAAAJ,GACIC,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,YAAA,MAAAD,EAAA,KAAA,OAAAA,EAAA,KAAA,SAAAE,EAAA,IAAA,CAAA,SAAA,UAAA,KAAA,OAAA,SAAA,CAGYD,EAAA,OAAC,CAAA,EAAA,kFACK,KAAA,SACG,CAAA,EACTA,EACA,OAAC,CAAA,EAAA,8MACK,KAAA,MACG,CAAA,CACT,CAAA,CAAA,CAAA,CAAA,EAMhBI,EAAAL,GAAA,CACI,KAAA,CAAA,KAAAM,EAAA,EAAA,EAAAN,EACA,OAAAA,EAAA,OAAA,CAAsB,IAAA,UAEd,OAAAC,EAAAG,EAAA,CAAA,GAAAJ,EAAA,KAAAM,CAAA,CAAA,EAA4C,IAAA,OAE5C,OAAAL,EAAAF,EAAA,CAAA,GAAAC,EAAA,KAAAM,CAAA,CAAA,EAA8C,IAAA,WAE9C,OAAAL,EAAAE,EAAA,CAAA,GAAAH,EAAA,KAAAM,CAAA,CAAA,CAA8C,CAE1D,8aC/DA,MAAAC,EAAAC,EAAA,sBAAA,EAAA,MAAA,SAAA,EAEAC,EAAA,CAAA,CAAA,MAAAC,EAAA,OAAAC,EAAA,WAAAC,EAAA,YAAAC,CAAA,IAAAX,EAAA,MAAA,CAAA,UAAAK,EAAA,MAAA,SAAA,CAEQN,EAAA,MAAA,CAAA,UAAAM,EAAA,QAAA,OAAA,EAAA,SAAAG,EAAA,EAA6CR,EAAAY,EAAA,CAAA,KAAA,QAAA,GAAA,MAAA,UAAAP,EAAA,QAAA,OAAA,EAAA,SAAA,CAEzCN,EAAA,OAAA,CAAA,UAAAM,EAAA,QAAA,YAAA,EAAA,KAAA,eAAA,SAAAN,EAAAI,EAAA,CAAA,OAAAM,CAAA,CAAA,EAAA,EAEAC,CACC,EAAA,EACLX,EAAA,MAAA,CAAA,UAAAM,EAAA,QAAA,aAAA,EAAA,SAAAM,EAAA,CACyD,CAAA,CAAA,wjBCVjE,MAAAE,EAAA,CAAA,CAAA,MAAAC,EAAA,OAAAC,KACIf,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,aAAA,OAAAe,EAAA,SAAA,CAESD,GAAAf,EAAA,QAAA,CAAA,SAAAe,CAAA,CAAA,EAAuBd,EAAA,OAAA,CAAA,SAAA,CAEpBA,EAAA,SAAC,CAAA,EAAA,SACK,EAAA,QACA,MAAA,SACI,OAAA,SACC,YAAA,oBACK,GAAA,YACT,SAAA,CAEHD,EAAA,WAAA,CAAA,GAAA,EAAA,GAAA,cAAA,OAAA,qBAAA,EAA8DA,EAAA,iBAAA,CAAA,aAAA,EAAA,GAAA,qBAAA,OAAA,mBAAA,EACqBA,EAAA,gBAAA,CAAA,OAAA,4CAAA,GAAA,mBAAA,CACK,CAAA,CAAA,EAC5FA,EAAA,OAAA,CAAA,GAAA,YAAA,EAAA,iBAAA,CACwC,EAAA,EAC5CC,EAAA,IAAA,CAAA,KAAA,OAAA,SAAA,UAAA,SAAA,CAEID,EAAA,OAAA,CAAA,EAAA,iBAAA,KAAA,UAAA,OAAA,OAAA,cAAA,IAAA,YAAA,CAAA,CAAA,EAA2FA,EAAA,MAAA,CAAA,KAAA,OAAA,OAAA,kBAAA,UAAA,aAAA,EAC1BA,EAAA,MAAA,CAAA,KAAA,OAAA,UAAA,aAAA,EACzBA,EAAA,IAAA,CAAA,OAAA,UAAA,cAAA,SAAA,YAAA,EAAA,SAAAA,EAAA,OAAA,CAAA,EAAA,sDAAA,CAAA,EAAA,EAGxCA,EAAA,IAAA,CAAA,OAAA,UAAA,cAAA,SAAA,YAAA,EAAA,SAAAA,EAAA,OAAA,CAAA,EAAA,sDAAA,CAAA,EAAA,CAGA,EAAA,CACJ,CAAA,CAAA,EAIZiB,EAAA,CAAA,CAAA,MAAAF,EAAA,OAAAC,KACIf,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,aAAA,OAAAe,EAAA,SAAA,CAESD,GAAAf,EAAA,QAAA,CAAA,SAAAe,CAAA,CAAA,EAAuBf,EAAA,OAAA,CAAA,SAAA,6BAAA,CAAA,EACSC,EAAA,OAAA,CAAA,SAAA,CAE7BA,EAAA,SAAC,CAAA,EAAA,QACK,EAAA,QACA,MAAA,SACI,OAAA,SACC,YAAA,oBACK,GAAA,gBACT,SAAA,CAEHD,EAAA,WAAA,CAAA,GAAA,EAAA,GAAA,cAAA,OAAA,qBAAA,EAA8DA,EAAA,iBAAA,CAAA,aAAA,EAAA,GAAA,qBAAA,OAAA,mBAAA,EACqBA,EAAA,gBAAA,CAAA,OAAA,4CAAA,GAAA,mBAAA,CACK,CAAA,CAAA,EAC5FA,EAAA,OAAA,CAAA,GAAA,gBAAA,EAAA,4BAAA,CACuD,EAAA,EAC3DC,EAAA,IAAA,CAAA,KAAA,OAAA,SAAA,UAAA,SAAA,CAEID,EAAA,OAAA,CAAA,EAAA,iBAAA,KAAA,UAAA,OAAA,OAAA,cAAA,IAAA,YAAA,CAAA,CAAA,EAA2FA,EAAA,MAAA,CAAA,KAAA,OAAA,OAAA,sBAAA,UAAA,iBAAA,EAClBA,EAAA,MAAA,CAAA,KAAA,OAAA,UAAA,iBAAA,EAC7BA,EAAA,IAAA,CAAA,OAAA,UAAA,cAAA,SAAA,YAAA,EAAA,SAAAA,EAAA,OAAA,CAAA,EAAA,8CAAA,CAAA,EAAA,EAG5CA,EAAA,IAAA,CAAA,OAAA,UAAA,cAAA,SAAA,YAAA,EAAA,SAAAA,EAAA,OAAA,CAAA,EAAA,8CAAA,CAAA,EAAA,CAGA,EAAA,CACJ,CAAA,CAAA,EAIZkB,EAAA,CAAA,CAAA,MAAAH,EAAA,OAAAC,KACIf,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,aAAA,OAAAe,EAAA,SAAA,CAESD,GAAAf,EAAA,QAAA,CAAA,SAAAe,CAAA,CAAA,EAAuBf,EAAA,OAAA,CAAA,SAAA,gCAAA,CAAA,EACYC,EAAA,OAAA,CAAA,SAAA,CAEhCA,EAAA,SAAC,CAAA,EAAA,SACK,EAAA,SACA,MAAA,SACI,OAAA,SACC,YAAA,oBACK,GAAA,kBACT,SAAA,CAEHD,EAAA,WAAA,CAAA,GAAA,EAAA,GAAA,cAAA,OAAA,qBAAA,EAA8DA,EAAA,iBAAA,CAAA,aAAA,EAAA,GAAA,qBAAA,OAAA,mBAAA,EACqBA,EAAA,gBAAA,CAAA,OAAA,4CAAA,GAAA,mBAAA,CACK,CAAA,CAAA,EAC5FA,EAAA,OAAA,CAAA,GAAA,kBAAA,EAAA,iBAAA,CAC8C,EAAA,EAClDC,EAAA,IAAA,CAAA,KAAA,OAAA,SAAA,UAAA,SAAA,CAEID,EAAA,OAAA,CAAA,EAAA,iBAAA,KAAA,UAAA,OAAA,OAAA,cAAA,IAAA,YAAA,CAAA,CAAA,EAA2FA,EAAA,MAAA,CAAA,KAAA,OAAA,OAAA,wBAAA,UAAA,mBAAA,EACdA,EAAA,MAAA,CAAA,KAAA,OAAA,UAAA,mBAAA,EAC/BA,EAC9C,OAAC,CAAA,OAAA,UACU,YAAA,EACM,cAAA,SACC,EAAA,0EACZ,CAAA,CACN,EAAA,CACJ,CAAA,CAAA,EAIZmB,EAAA,CAAA,CAAA,MAAAJ,EAAA,OAAAC,KACIf,EAAA,MAAA,CAAA,KAAA,MAAA,cAAA,OAAA,UAAA,QAAA,QAAA,aAAA,OAAAe,EAAA,SAAA,CAESD,GAAAf,EAAA,QAAA,CAAA,SAAAe,CAAA,CAAA,EAAuBf,EAAA,OAAA,CAAA,SAAA,0CAAA,CAAA,EACsBC,EAAA,OAAA,CAAA,SAAA,CAE1CA,EAAA,SAAC,CAAA,EAAA,OACK,EAAA,QACA,MAAA,OACI,OAAA,SACC,YAAA,oBACK,GAAA,cACT,SAAA,CAEHD,EAAA,WAAA,CAAA,GAAA,EAAA,GAAA,cAAA,OAAA,qBAAA,EAA8DA,EAAA,iBAAA,CAAA,aAAA,EAAA,GAAA,qBAAA,OAAA,mBAAA,EACqBA,EAAA,gBAAA,CAAA,OAAA,4CAAA,GAAA,mBAAA,CACK,CAAA,CAAA,EAC5FA,EAAA,OAAA,CAAA,GAAA,cAAA,EAAA,iBAAA,CAC0C,EAAA,EAC9CC,EAAA,IAAA,CAAA,KAAA,OAAA,SAAA,UAAA,SAAA,CAEID,EAAA,OAAA,CAAA,cAAA,IAAA,OAAA,OAAA,YAAA,EAAA,KAAA,UAAA,EAAA,gBAAA,CAAA,EAA2FC,EAAA,IAAA,CAAA,UAAA,iBAAA,SAAA,CAEvFD,EAAA,MAAA,CAAA,KAAA,OAAA,OAAA,oBAAA,UAAA,eAAA,EAAqEA,EAAA,MAAA,CAAA,KAAA,OAAA,UAAA,eAAA,CAC3B,EAAA,EAC9CA,EAAA,IAAA,CAAA,OAAA,UAAA,cAAA,SAAA,YAAA,EAAA,SAAAA,EAAA,OAAA,CAAA,EAAA,sDAAA,CAAA,EAAA,EAGAA,EAAA,IAAA,CAAA,OAAA,UAAA,cAAA,SAAA,YAAA,EAAA,SAAAA,EAAA,OAAA,CAAA,EAAA,sDAAA,CAAA,EAAA,EAGAA,EACA,OAAC,CAAA,EAAA,yFACK,YAAA,GACW,KAAA,SACR,CAAA,CACT,EAAA,CACJ,CAAA,CAAA,EAIZoB,EAAArB,GAAA,CACI,KAAA,CAAA,OAAAiB,EAAA,IAAA,MAAAD,CAAA,EAAAhB,EACA,OAAAA,EAAA,OAAA,CAAsB,IAAA,OAEd,OAAAC,EAAAc,EAAA,CAAA,MAAAC,EAAA,OAAAC,CAAA,CAAA,EAAmD,IAAA,WAEnD,OAAAhB,EAAAiB,EAAA,CAAA,MAAAF,EAAA,OAAAC,CAAA,CAAA,EAAuD,IAAA,aAEvD,OAAAhB,EAAAkB,EAAA,CAAA,MAAAH,EAAA,OAAAC,CAAA,CAAA,EAAyD,IAAA,SAEzD,OAAAhB,EAAAmB,EAAA,CAAA,MAAAJ,EAAA,OAAAC,CAAA,CAAA,EAAqD,QAErD,OAAAhB,EAAAc,EAAA,CAAA,MAAAC,EAAA,OAAAC,CAAA,CAAA,CAAmD,CAE/D,4cC1JA,MAAAK,EAAA,CAAA,CAAA,gBAAAC,EAAA,UAAA,CACI,MAAAC,EAAAC,IACAC,EAAA,IACAnB,EAAAC,EAAA,sBAAA,EAEA,OAAAN,EACI,MAAC,CAAA,UAAAyB,EAAApB,EAAA,MAAAgB,IAAA,OAAAhB,EAAA,SAAA,MAAA,EAAAA,EAAA,SAAA,OAAA,CAAA,EAC6G,SAAA,CAE1GN,EAAAa,EAAA,CAAA,MAAA,IAAA,KAAA,SAAA,SAAAb,EAAA2B,EAAA,CAAA,GAAA,oBAAA,CAAA,CAAA,CAAA,EAEA3B,EAAAa,EAAA,CAAA,KAAA,QAAA,MAAA,IAAA,UAAAP,EAAA,QAAA,OAAA,EAAA,SAAAN,EAAA2B,EAAA,CAAA,GAAA,qBAAA,CAAA,EAAA,EAIA1B,EAAA,KAAA,CAAA,SAAA,CAEID,EAAA2B,EAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,EAA8D3B,EAC9D2B,EAAC,CAAA,QAAA,KACW,GAAA,4BACL,OAAA,CACK,EAAAC,GAAA5B,EAAA,IAAA,CAAA,SAAA4B,EAAA,CACqB,CAC7B,CAAA,EACJ5B,EAAA2B,EAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,CAC8D,EAAA,EAClE3B,EAAAa,EAAA,CAAA,KAAA,QAAA,MAAA,IAAA,UAAAP,EAAA,QAAA,OAAA,EAAA,SAAAN,EAAA2B,EAAA,CAAA,GAAA,qBAAA,CAAA,EAAA,EAGA1B,EAAA,KAAA,CAAA,SAAA,CAEID,EAAA2B,EAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,EAA8D3B,EAAA2B,EAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,EACA3B,EAAA2B,EAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,CACA,EAAA,EAClE1B,EAAA,MAAA,CAAA,UAAAK,EAAA,QAAA,UAAA,EAAA,SAAA,CAEIN,EAAAa,EAAA,CAAA,KAAA,QAAA,MAAA,IAAA,UAAAP,EAAA,QAAA,OAAA,EAAA,SAAAN,EAAA2B,EAAA,CAAA,GAAA,kBAAA,CAAA,EAAA,EAEA1B,EAAA,MAAA,CAAA,UAAAK,EAAA,QAAA,MAAA,EAAA,SAAA,CAEIN,EAAA,MAAA,CAAA,UAAAM,EAAA,QAAA,MAAA,EAAA,SAAAN,EACIQ,EAAC,CAAA,MAAAR,EAAAoB,EAAA,CAAA,OAAA,OAAA,OAAAK,EAAA,EAC6D,OAAA,UACnD,WAAAI,EAAAN,EAAA,UAAA,EACgC,YAAAM,EAAAN,EAAA,qBAAA,CACY,CAAA,EAAA,EAE3DvB,EAAA,MAAA,CAAA,UAAAM,EAAA,QAAA,MAAA,EAAA,SAAAN,EAEIQ,EAAC,CAAA,MAAAR,EAAAoB,EAAA,CAAA,OAAA,WAAA,OAAAK,EAAA,EACiE,OAAA,OACvD,WAAAI,EAAAN,EAAA,SAAA,EAC+B,YAAAM,EAAAN,EAAA,yBAAA,CACiB,CAAA,EAAA,EAE/DvB,EAAA,MAAA,CAAA,UAAAM,EAAA,QAAA,MAAA,EAAA,SAAAN,EAEIQ,EAAC,CAAA,MAAAR,EAAAoB,EAAA,CAAA,OAAA,aAAA,OAAAK,EAAA,EACmE,OAAA,OACzD,WAAAI,EAAAN,EAAA,SAAA,EAC+B,YAAAM,EAAAN,EAAA,2BAAA,CACmB,CAAA,EAAA,EAEjEvB,EAAA,MAAA,CAAA,UAAAM,EAAA,QAAA,MAAA,EAAA,SAAAN,EAEIQ,EAAC,CAAA,MAAAR,EAAAoB,EAAA,CAAA,OAAA,SAAA,OAAAK,EAAA,EAC+D,OAAA,OACrD,WAAAI,EAAAN,EAAA,SAAA,EAC+B,YAAAM,EAAAN,EAAA,uBAAA,CACe,CAAA,EAAA,CAE7D,EAAA,EACJvB,EAAA8B,EAAA,CAAA,OAAA,SAAA,KAAAD,EAAAN,EAAA,oBAAA,EAAA,SAAAvB,EAAA2B,EAAA,CAAA,GAAA,qBAAA,CAAA,EAAA,CAGA,EAAA,CACJ,CAAA,CAAA,CAGZ,EACAI,EAAAV"}