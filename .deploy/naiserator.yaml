apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: {{app}}
  namespace: teamforeldrepenger
  labels:
    team: teamforeldrepenger
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "16M"
spec:
  image: {{image}}
  port: 8080
  liveness:
      path: /internal/health/isAlive
      initialDelay: 10
  readiness:
      path: /internal/health/isReady
      initialDelay: 10
  prometheus:
      enabled: false
      path: /internal/actuator/prometheus
  observability:
    autoInstrumentation:
      enabled: true
      runtime: nodejs
  ingresses:
    - {{ingress}}
  replicas:
    min: {{minReplicas}}
    max: {{maxReplicas}}
    disableAutoScaling: true
  resources:
    limits:
      cpu: "{{limits.cpu}}"
      memory: "{{limits.mem}}"
    requests:
      cpu: "{{requests.cpu}}"
      memory: "{{requests.mem}}"
  {{#if autentisering}}
  tokenx:
    enabled: true
  idporten:
    enabled: true
    sidecar:
      enabled: true
      autoLogin: true
      autoLoginIgnorePaths:
        - {{env.PUBLIC_PATH}}/assets/*
  {{/if}}
  accessPolicy:
    outbound:
      rules:
        - application: foreldrepengesoknad-api
        - application: nav-dekoratoren
          namespace: personbruker
  env:
  {{#each env}}
   - name: {{@key}}
     value: "{{this}}"
  {{/each}}
   - name: FORELDREPENGER_API_URL
     value: "http://foreldrepengesoknad-api/rest"
   - name: FORELDREPENGER_API_SCOPE
     value: "{{env.ENV}}-gcp:teamforeldrepenger:foreldrepengesoknad-api"
   - name: APP_VERSION
     value: {{image}}
   - name: NODE_ENV
     value: 'production'

{{#with redirect}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{../app}}-redirect
  namespace: teamforeldrepenger
  labels:
    team: teamforeldrepenger
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: {{../ingress}}/$1
spec:
  ingressClassName: {{ingressClassName}}
  rules:
    - host: {{host}}
      http:
        paths:
          - path: "/(.*)"
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{app}}
                port:
                  number: 80
{{/with}}
