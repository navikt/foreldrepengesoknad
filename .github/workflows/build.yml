name: Deployment pipeline q1

on:
    push:
        branches:
            - master
env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    IMAGE_BASE: ghcr.io/${{ github.repository }}

jobs:
    kompiler:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Hent tag
              run: |
                  echo 'TAG<<EOF' >> $GITHUB_ENV
                  git log -1 --pretty=%ad --date=format:%Y%m%d%H%M%S-`echo $GITHUB_SHA | cut -c1-7`  >> $GITHUB_ENV
                  echo 'EOF' >> $GITHUB_ENV

            - name: Cache node modules
              uses: actions/cache@v2.1.6
              with:
                  path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - run: npm install --legacy-peer-deps
            - run: npm run jest
            - run: |
                  npm run build
                  echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

            - name: Login to GitHub Packages Docker Registry
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # Use commit-sha1 instead of tag for security concerns
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Bygg, tag og push Docker image
              run: |
                  docker build --pull --tag ${IMAGE_BASE}:${TAG} .
                  docker push ${IMAGE_BASE} --all-tags

            - name: Lukk gamle bygg-issues
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      github.rest.issues.listForRepo({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        labels: ['bygg']
                      }).then(response => {
                        response.data.forEach(issue => {
                          github.rest.issues.update({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: issue.number,
                            state: 'closed'
                          });
                        });
                      });

            - name: Opprett issue, trigg deploy til dev-gcp
              if: success()
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.NOTIFICATION }}
                  script: |
                      github.rest.issues.create( {
                        owner: context.issue.owner,
                        repo: context.issue.repo,
                        labels: ['bygg'],
                        title: 'Deploy av ${{ env.TAG }}',
                        body: '${{ github.sha }}'})
                      .then(response => {
                              const issue = { owner: context.issue.owner,
                              repo: context.issue.repo,
                              issue_number: response.data.number }
                              github.rest.issues.createComment({...issue,
                                    title: 'Deploy av ${{ env.TAG }}',
                                    body: '/promote dev-gcp'})
                       });
